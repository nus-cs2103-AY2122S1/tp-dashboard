[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103-F10-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103-F10-1/tp/actions)","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"* This is **a brown-field team project done by NUS students**.\u003cbr\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":"  * as an application management tool for HRs","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  * as a case study","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":"* The project simulates an ongoing software project for a desktop application (called _MrTechRecruiter_) used for managing job application.","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":"  * It is **written in OOP fashion**.","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":"* It is named `MrTechRecruiter` (`MTR` for short) because it is created for recruiters in tech companies to better manage job applications.","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":"* For the detailed documentation of this project, see the **[MrTechRecruiter Product Website](https://ay2122s1-cs2103-f10-1.github.io/tp/)**.","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"* This project is **based on [AddressBook Level 3](https://github.com/se-edu/addressbook-level3)** project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"Harry-Gao-H":10,"-":6}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"BenjaminTan99"},"content":"You can reach us at the email `e0518538@u.nus.edu`","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"BenjaminTan99"},"content":"### Lin Fangyuan","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"LMAOboxhack"},"content":"\u003cimg src\u003d\"images/lmaoboxhack.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"LMAOboxhack"},"content":"[[github](https://github.com/lmaoboxhack)]","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"LMAOboxhack"},"content":"[[portfolio](team/lmaoboxhack.md)]","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"LMAOboxhack"},"content":"* Responsibilities: Integration","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"BenjaminTan99"},"content":"### Tan Chin Han, Benjamin","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"BenjaminTan99"},"content":"\u003cimg src\u003d\"images/benjamintan99.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"BenjaminTan99"},"content":"[[github](http://github.com/BenjaminTan99)] [[portfolio](team/benjamintan99.md)]","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"BenjaminTan99"},"content":"* Responsibilities: Documentation, Deliverables \u0026 Deadlines","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"### Heng Chen Kai, Darren","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"\u003cimg src\u003d\"images/darren2pro.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"[[github](http://github.com/darren2pro)] [[portfolio](team/darren2pro.md)]","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"* Responsibilities: Testing","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"Harry-Gao-H"},"content":"### Gao Haochun","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"Harry-Gao-H"},"content":"\u003cimg src\u003d\"images/harry-gao-h.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"Harry-Gao-H"},"content":"[[github](http://github.com/harry-gao-h)]","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"Harry-Gao-H"},"content":"* Responsibilities: Code quality, Scheduling \u0026 Tracking","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"Harry-Gao-H":4,"LMAOboxhack":4,"darren2pro":4,"-":31,"BenjaminTan99":6}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"LMAOboxhack"},"content":"This product is for HR departments of tech companies that have a large number of applicants and complicated recruitment processes.","lastModifiedDate":"2021-09-30"},{"lineNumber":261,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":262,"author":{"gitId":"LMAOboxhack"},"content":"Additionally, the user:","lastModifiedDate":"2021-09-30"},{"lineNumber":263,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":268,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"LMAOboxhack"},"content":"**Value proposition**:","lastModifiedDate":"2021-09-30"},{"lineNumber":271,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":272,"author":{"gitId":"LMAOboxhack"},"content":"An efficient applicant management system for HR departments of technology companies to track application statuses and store applicant information.","lastModifiedDate":"2021-09-30"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"Harry-Gao-H"},"content":"| `* * *`  | general user                               | add new job positions | Add applicants to these positions.","lastModifiedDate":"2021-09-29"},{"lineNumber":282,"author":{"gitId":"Harry-Gao-H"},"content":"| `* * *`  | general user                               | delete existing job positions | Remove irrelevant, out-of-date jobs.","lastModifiedDate":"2021-09-29"},{"lineNumber":283,"author":{"gitId":"Harry-Gao-H"},"content":"| `* * *`  | general user                               | add a new applicant under a position      | Store his information within the system                                |","lastModifiedDate":"2021-09-29"},{"lineNumber":284,"author":{"gitId":"darren2pro"},"content":"| `* * *`  | general user                               | delete an applicant from under a position | Remove applicants that are no longer related to this position          |","lastModifiedDate":"2021-09-28"},{"lineNumber":285,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                   | see usage instructions         | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"LMAOboxhack"},"content":"| `* * *`  | user                                       | easily search all relevant applicants through keywords         | compare applicants\u0027 relevant information |","lastModifiedDate":"2021-10-01"},{"lineNumber":287,"author":{"gitId":"LMAOboxhack"},"content":"| `* *`    | user                                       | hide private applicant details   | ensure confidentiality of applicants\u0027 information. |","lastModifiedDate":"2021-10-01"},{"lineNumber":288,"author":{"gitId":"LMAOboxhack"},"content":"| `*`      | user with many applicants in the address book | sort applicants by name           | locate an applicant easily                                                 |","lastModifiedDate":"2021-10-01"},{"lineNumber":289,"author":{"gitId":"BenjaminTan99"},"content":"| `* * *`  | general user                               | view the average rejection rates of all job positions | gauge how competitive a job might be          |","lastModifiedDate":"2021-09-30"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":295,"author":{"gitId":"LMAOboxhack"},"content":"(For all use cases below, the **System** is `MrTechRecruiter` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-09-30"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":298,"author":{"gitId":"Harry-Gao-H"},"content":"**Use case: Add a new position**","lastModifiedDate":"2021-09-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":302,"author":{"gitId":"Harry-Gao-H"},"content":"1. User requests to add a new position, with necessary details","lastModifiedDate":"2021-09-29"},{"lineNumber":303,"author":{"gitId":"Harry-Gao-H"},"content":"2. MrTechRecruiter adds the new position and shows a success message","lastModifiedDate":"2021-09-29"},{"lineNumber":304,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":305,"author":{"gitId":"Harry-Gao-H"},"content":"   Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":306,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":307,"author":{"gitId":"Harry-Gao-H"},"content":"* 1a. The format is invalid.","lastModifiedDate":"2021-09-29"},{"lineNumber":308,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":309,"author":{"gitId":"Harry-Gao-H"},"content":"  * 1a1. MrTechRecruiter shows an error message.","lastModifiedDate":"2021-09-29"},{"lineNumber":310,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":311,"author":{"gitId":"Harry-Gao-H"},"content":"  Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":312,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":313,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":314,"author":{"gitId":"Harry-Gao-H"},"content":"**Use case: Delete a new position**","lastModifiedDate":"2021-09-29"},{"lineNumber":315,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":316,"author":{"gitId":"Harry-Gao-H"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":317,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":318,"author":{"gitId":"Harry-Gao-H"},"content":"1. User requests to list positions","lastModifiedDate":"2021-09-29"},{"lineNumber":319,"author":{"gitId":"Harry-Gao-H"},"content":"2. MrTechRecruiter shows a list of positions","lastModifiedDate":"2021-09-29"},{"lineNumber":320,"author":{"gitId":"Harry-Gao-H"},"content":"3. User requests to delete a specific position in the list","lastModifiedDate":"2021-09-29"},{"lineNumber":321,"author":{"gitId":"Harry-Gao-H"},"content":"4. MrTechRecruiter deletes the position","lastModifiedDate":"2021-09-29"},{"lineNumber":322,"author":{"gitId":"Harry-Gao-H"},"content":" ","lastModifiedDate":"2021-09-29"},{"lineNumber":323,"author":{"gitId":"Harry-Gao-H"},"content":"    Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":324,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":325,"author":{"gitId":"Harry-Gao-H"},"content":"**Extensions**","lastModifiedDate":"2021-09-29"},{"lineNumber":326,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":327,"author":{"gitId":"Harry-Gao-H"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-09-29"},{"lineNumber":328,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":329,"author":{"gitId":"Harry-Gao-H"},"content":"    * 2a1. MrTechRecruiter displays a message that no position is in the list.","lastModifiedDate":"2021-09-30"},{"lineNumber":330,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":331,"author":{"gitId":"Harry-Gao-H"},"content":"    Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":332,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":333,"author":{"gitId":"Harry-Gao-H"},"content":"* 3a The given name of the position is invalid.","lastModifiedDate":"2021-09-29"},{"lineNumber":334,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":335,"author":{"gitId":"Harry-Gao-H"},"content":"    * 3a1. MrTechRecruiter shows an error message.","lastModifiedDate":"2021-09-29"},{"lineNumber":336,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":337,"author":{"gitId":"Harry-Gao-H"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2021-09-30"},{"lineNumber":338,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"darren2pro"},"content":"**Use case: Add a new applicant**","lastModifiedDate":"2021-09-28"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"BenjaminTan99"},"content":"1.  User requests to add a new applicant, with all the necessary parameters/details.","lastModifiedDate":"2021-09-30"},{"lineNumber":345,"author":{"gitId":"BenjaminTan99"},"content":"2.  MrTechRecruiter adds the new applicant and shows a success message.","lastModifiedDate":"2021-09-30"},{"lineNumber":346,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":347,"author":{"gitId":"darren2pro"},"content":"    Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":348,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":349,"author":{"gitId":"darren2pro"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":350,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":351,"author":{"gitId":"darren2pro"},"content":"* 1a. The format is invalid.","lastModifiedDate":"2021-09-28"},{"lineNumber":352,"author":{"gitId":"BenjaminTan99"},"content":"    * 1a1. MrTechRecruiter shows an error message.","lastModifiedDate":"2021-09-30"},{"lineNumber":353,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":354,"author":{"gitId":"darren2pro"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-28"},{"lineNumber":355,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":356,"author":{"gitId":"darren2pro"},"content":"**Use case: Delete an applicant**","lastModifiedDate":"2021-09-28"},{"lineNumber":357,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":358,"author":{"gitId":"darren2pro"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":359,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":360,"author":{"gitId":"BenjaminTan99"},"content":"1.  User requests to list applicants.","lastModifiedDate":"2021-09-30"},{"lineNumber":361,"author":{"gitId":"BenjaminTan99"},"content":"2.  MrTechRecruiter shows a list of applicants.","lastModifiedDate":"2021-09-30"},{"lineNumber":362,"author":{"gitId":"BenjaminTan99"},"content":"3.  User requests to delete a specific applicant in the list using the exact name.","lastModifiedDate":"2021-10-01"},{"lineNumber":363,"author":{"gitId":"BenjaminTan99"},"content":"4.  MrTechRecruiter deletes the applicant.","lastModifiedDate":"2021-10-01"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"darren2pro"},"content":"* 3a. The given name is invalid.","lastModifiedDate":"2021-09-28"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"darren2pro"},"content":"    * 3a1. MrTechRecruiter shows an error message.","lastModifiedDate":"2021-09-28"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"BenjaminTan99"},"content":"**Use case: Viewing average rejection rates for all job positions.**","lastModifiedDate":"2021-09-30"},{"lineNumber":380,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":381,"author":{"gitId":"BenjaminTan99"},"content":"**MSS**","lastModifiedDate":"2021-09-30"},{"lineNumber":382,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":383,"author":{"gitId":"BenjaminTan99"},"content":"1. User requests to see a list of all job positions","lastModifiedDate":"2021-10-01"},{"lineNumber":384,"author":{"gitId":"BenjaminTan99"},"content":"2. MrTechRecruiter displays the list of job positions, and their respective rejection rates.","lastModifiedDate":"2021-09-30"},{"lineNumber":385,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":386,"author":{"gitId":"BenjaminTan99"},"content":"   Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":387,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":388,"author":{"gitId":"BenjaminTan99"},"content":"**Extensions**","lastModifiedDate":"2021-09-30"},{"lineNumber":389,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":390,"author":{"gitId":"BenjaminTan99"},"content":"* 1a. No current job positions.","lastModifiedDate":"2021-09-30"},{"lineNumber":391,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":392,"author":{"gitId":"BenjaminTan99"},"content":"    * 1a1. MrTechRecruiter shows an \u0027No job positions\u0027 message.","lastModifiedDate":"2021-09-30"},{"lineNumber":393,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":394,"author":{"gitId":"BenjaminTan99"},"content":"      Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":395,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":396,"author":{"gitId":"BenjaminTan99"},"content":"* 2b. Job positions with relatively high rejection rates.","lastModifiedDate":"2021-09-30"},{"lineNumber":397,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":398,"author":{"gitId":"BenjaminTan99"},"content":"    * 2b1. MrTechRecruiter highlights the job positions with high rejection rates.","lastModifiedDate":"2021-09-30"},{"lineNumber":399,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":400,"author":{"gitId":"BenjaminTan99"},"content":"      Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":401,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":402,"author":{"gitId":"BenjaminTan99"},"content":"**Use case: Viewing average rejection rates for a particular job position.**","lastModifiedDate":"2021-09-30"},{"lineNumber":403,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":404,"author":{"gitId":"BenjaminTan99"},"content":"**MSS**","lastModifiedDate":"2021-09-30"},{"lineNumber":405,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":406,"author":{"gitId":"BenjaminTan99"},"content":"1. User searches for a particular job position using the \u0027find\u0027 function.","lastModifiedDate":"2021-10-01"},{"lineNumber":407,"author":{"gitId":"BenjaminTan99"},"content":"2. MrTechRecruiter displays the job position and its corresponding rejection rate.","lastModifiedDate":"2021-10-01"},{"lineNumber":408,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":409,"author":{"gitId":"BenjaminTan99"},"content":"   Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":410,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":411,"author":{"gitId":"BenjaminTan99"},"content":"**Extensions**","lastModifiedDate":"2021-09-30"},{"lineNumber":412,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":413,"author":{"gitId":"BenjaminTan99"},"content":"* 1a. Job position does not exist.","lastModifiedDate":"2021-09-30"},{"lineNumber":414,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":415,"author":{"gitId":"BenjaminTan99"},"content":"    * 1a1. MrTechRecruiter shows an \u0027No such job position found\u0027 message.","lastModifiedDate":"2021-09-30"},{"lineNumber":416,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":417,"author":{"gitId":"BenjaminTan99"},"content":"      Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":418,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":419,"author":{"gitId":"BenjaminTan99"},"content":"* 2b. Job position has relatively high rejection rate.","lastModifiedDate":"2021-09-30"},{"lineNumber":420,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":421,"author":{"gitId":"BenjaminTan99"},"content":"    * 2b1. MrTechRecruiter highlights its high rejection rate.","lastModifiedDate":"2021-09-30"},{"lineNumber":422,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":423,"author":{"gitId":"BenjaminTan99"},"content":"      Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":424,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":425,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":426,"author":{"gitId":"LMAOboxhack"},"content":"**Use case: Search for applicants through keywords**","lastModifiedDate":"2021-09-30"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"LMAOboxhack"},"content":"1. User enters the keywords for MrTechRecruiter to search for.","lastModifiedDate":"2021-10-01"},{"lineNumber":431,"author":{"gitId":"LMAOboxhack"},"content":"2. MrTechRecruiter performs the search according to the keywords.","lastModifiedDate":"2021-10-01"},{"lineNumber":432,"author":{"gitId":"LMAOboxhack"},"content":"3. MrTechRecruiter displays the search results.","lastModifiedDate":"2021-10-01"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"LMAOboxhack"},"content":"* 1a. The list is empty.","lastModifiedDate":"2021-10-01"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"LMAOboxhack"},"content":"* 2a. An invalid flag is specified.","lastModifiedDate":"2021-10-01"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"LMAOboxhack"},"content":"    * 2a1. MrTechRecruiter shows an error message.","lastModifiedDate":"2021-10-01"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"LMAOboxhack"},"content":"      Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"BenjaminTan99"},"content":"4. A new user should be able to easily navigate through MrTechRecruiter and perform basic tasks (e.g. adding/deleting).","lastModifiedDate":"2021-09-30"},{"lineNumber":457,"author":{"gitId":"LMAOboxhack"},"content":"5. Should be portable (i.e. work without requiring an installer).","lastModifiedDate":"2021-10-01"},{"lineNumber":458,"author":{"gitId":"LMAOboxhack"},"content":"6. Should not depend on a remote server.","lastModifiedDate":"2021-10-01"},{"lineNumber":459,"author":{"gitId":"LMAOboxhack"},"content":"7. Should work for standard (i.e. industry-standard Full HD 1080p resolution) screen resolutions and higher.","lastModifiedDate":"2021-10-01"},{"lineNumber":460,"author":{"gitId":"LMAOboxhack"},"content":"8. Should be packaged into a single, compact (~100MB) file.","lastModifiedDate":"2021-10-01"},{"lineNumber":461,"author":{"gitId":"LMAOboxhack"},"content":"9. Developer \u0026 User guides should be PDF friendly.","lastModifiedDate":"2021-10-01"},{"lineNumber":462,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"darren2pro"},"content":"* **Job position**: A job opening within the user\u0027s company that is looking for potential hires","lastModifiedDate":"2021-09-28"},{"lineNumber":472,"author":{"gitId":"darren2pro"},"content":"* **Applicant**: A potential hire that is applying for a particular job position","lastModifiedDate":"2021-09-28"},{"lineNumber":473,"author":{"gitId":"LMAOboxhack"},"content":"* **CLI**: Command-line interface. CLI programs take in input in the form of text-based commands, usually input by the user, to execute the program\u0027s various functions.","lastModifiedDate":"2021-09-30"},{"lineNumber":474,"author":{"gitId":"LMAOboxhack"},"content":"* **CAP**: Cumulative average point. Similar to grade point average (GPA), it is a numerical measure of a student\u0027s average academic performance across their duration of study.","lastModifiedDate":"2021-09-30"},{"lineNumber":475,"author":{"gitId":"BenjaminTan99"},"content":"* **Rejection rate**: The percentage of jobs for a particular job position that was not accepted by the employee or employer.","lastModifiedDate":"2021-09-30"},{"lineNumber":476,"author":{"gitId":"darren2pro"},"content":"* **Calculation** \u003d `No. of rejected jobs` / `Total no. of jobs applied`.","lastModifiedDate":"2021-10-11"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":478,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"1.  _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"darren2pro"},"content":"### Deleting an applicant","lastModifiedDate":"2021-09-28"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"darren2pro"},"content":"1. Deleting an applicant from MrTechRecruiter","lastModifiedDate":"2021-09-28"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"darren2pro"},"content":"   1. Prerequisites: Multiple applicants in MrTechRecruiter. John Doe exists within MrTechRecruiter but Mary Jane does not.","lastModifiedDate":"2021-09-28"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"darren2pro"},"content":"   1. Test case: `delete applicant n/John Doe`\u003cbr\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":513,"author":{"gitId":"darren2pro"},"content":"      Expected: John Doe is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2021-09-28"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"darren2pro"},"content":"   1. Test case: `delete applicant n/Mary Jane`\u003cbr\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":516,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"darren2pro"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2021-09-28"},{"lineNumber":519,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":520,"author":{"gitId":"darren2pro"},"content":"### Adding a new applicant","lastModifiedDate":"2021-09-28"},{"lineNumber":521,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":522,"author":{"gitId":"darren2pro"},"content":"1. Adding an applicant to MrTechRecruiter","lastModifiedDate":"2021-09-28"},{"lineNumber":523,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":524,"author":{"gitId":"darren2pro"},"content":"    1. Prerequisites: -","lastModifiedDate":"2021-09-28"},{"lineNumber":525,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":526,"author":{"gitId":"darren2pro"},"content":"    1. Test case: `add applicant n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 pos/software engineer`\u003cbr\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":527,"author":{"gitId":"darren2pro"},"content":"         Expected: John Doe, with all the relevant details that were passed as parameters is added to MrTechRecruiter.","lastModifiedDate":"2021-09-28"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":532,"author":{"gitId":"BenjaminTan99"},"content":"### View average rate of a job","lastModifiedDate":"2021-09-30"},{"lineNumber":533,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":534,"author":{"gitId":"BenjaminTan99"},"content":"1. View average rate of a job in MrTechRecruiter","lastModifiedDate":"2021-09-30"},{"lineNumber":535,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":536,"author":{"gitId":"BenjaminTan99"},"content":"    1. Prerequisites: \u003cbr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":537,"author":{"gitId":"BenjaminTan99"},"content":"       a. Job must exist in address book. \u003cbr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":538,"author":{"gitId":"BenjaminTan99"},"content":"       b. Average rate already tabulated for the job.","lastModifiedDate":"2021-09-30"},{"lineNumber":539,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":540,"author":{"gitId":"BenjaminTan99"},"content":"    1. Test case: `find software engineer`\u003cbr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":541,"author":{"gitId":"BenjaminTan99"},"content":"       Expected: Software Engineer: [redacted], rejection rate: 10%","lastModifiedDate":"2021-09-30"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":543,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2021-09-30"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":545,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":546,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"BenjaminTan99"},"content":"1. _{ more test cases …​ }","lastModifiedDate":"2021-09-30"},{"lineNumber":553,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":554,"author":{"gitId":"BenjaminTan99"},"content":"### _","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"Harry-Gao-H":43,"LMAOboxhack":28,"darren2pro":36,"-":378,"BenjaminTan99":69}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"BenjaminTan99"},"content":"MrTechRecruiter (MTR) is a **desktop app for managing job applications, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, MTR can get your application management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"BenjaminTan99"},"content":"## Quick start (coming soon)","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"BenjaminTan99"},"content":"2. Download the latest `mrtechrecruiter.jar` from [here](https://github.com/AY2122S1-CS2103-F10-1/tp/releases).","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"BenjaminTan99"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for MrTechRecruiter.","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"BenjaminTan99"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"BenjaminTan99"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"BenjaminTan99"},"content":"   * **`list`** : Lists all applicants.","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"   * **`add-applicant`**`n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 pos/software engineer` : Adds an applicant named `John Doe` to the `software engineer` position.","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"   * **`delete-applicant`**`n/John Doe` : Deletes `John Doe` from the applicant list.","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"BenjaminTan99"},"content":"   * **`clear`** : Deletes all applicants.","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"BenjaminTan99"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"darren2pro"},"content":"### Viewing help : `help` `[coming soon]`","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"BenjaminTan99"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"darren2pro"},"content":"### Adding a position: `add-position`","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"darren2pro"},"content":"Adds a position to MrTechRecruiter.","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"darren2pro"},"content":"Format: `add-position tit/TITLE des/DESCRIPTION`","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"BenjaminTan99"},"content":"Examples:","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"darren2pro"},"content":"* `add-position tit/software engineer des/work in a team that builds a facial recognition application`","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"darren2pro"},"content":"### Deleting a position: `delete-position`","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"darren2pro"},"content":"Deletes the specified position from MrTechRecruiter.","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":87,"author":{"gitId":"darren2pro"},"content":"Format: `delete-position INDEX`","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":89,"author":{"gitId":"darren2pro"},"content":"* Deletes the position with the specified `INDEX`.","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":91,"author":{"gitId":"BenjaminTan99"},"content":"Examples:","lastModifiedDate":"2021-10-01"},{"lineNumber":92,"author":{"gitId":"darren2pro"},"content":"* `delete-position 1` deletes the position with index 1.","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"darren2pro"},"content":"### Adding an applicant: `add-applicant`","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"BenjaminTan99"},"content":"Adds an applicant to MrTechRecruiter.","lastModifiedDate":"2021-10-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"darren2pro"},"content":"Format: `add-applicant n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS pos/POSITION​`","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"darren2pro"},"content":"An applicant should only have 1 position. \u003cbr\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":103,"author":{"gitId":"darren2pro"},"content":"If the job position exists, its rejection rate should update accordingly.","lastModifiedDate":"2021-10-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"darren2pro"},"content":"* `add-applicant n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 pos/software engineer`","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"darren2pro"},"content":"* `add-applicant n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 pos/database administrator`","lastModifiedDate":"2021-10-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"darren2pro"},"content":"### Deleting an applicant: `delete-applicant`","lastModifiedDate":"2021-10-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":112,"author":{"gitId":"BenjaminTan99"},"content":"Deletes the specified applicant from MrTechRecruiter.","lastModifiedDate":"2021-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":114,"author":{"gitId":"darren2pro"},"content":"Format: `delete-applicant INDEX`","lastModifiedDate":"2021-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":116,"author":{"gitId":"darren2pro"},"content":"* Deletes the applicant with the specified `INDEX`.","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":118,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-09-28"},{"lineNumber":119,"author":{"gitId":"darren2pro"},"content":"* `delete-applicant 1` deletes the applicant with index 1.","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":122,"author":{"gitId":"BenjaminTan99"},"content":"### Listing all positions : `list position` [coming soon]","lastModifiedDate":"2021-10-01"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"BenjaminTan99"},"content":"Shows a list of all positions in MrTechRecruiter.","lastModifiedDate":"2021-10-01"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"BenjaminTan99"},"content":"Format: `list position`","lastModifiedDate":"2021-10-01"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"BenjaminTan99"},"content":"### Listing all applicants : `list applicant` [coming soon]","lastModifiedDate":"2021-10-01"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"BenjaminTan99"},"content":"Shows a list of all applicants in MrTechRecruiter.","lastModifiedDate":"2021-10-01"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"BenjaminTan99"},"content":"Format: `list applicant`","lastModifiedDate":"2021-10-01"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"BenjaminTan99"},"content":"### Searching for applicants using keywords: `find` [coming soon]","lastModifiedDate":"2021-10-01"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"BenjaminTan99"},"content":"Finds all applicants whose categorical information match the specified search terms.","lastModifiedDate":"2021-10-01"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"BenjaminTan99"},"content":"Format: `find [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2021-10-01"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"BenjaminTan99"},"content":"* Only applicants matching ALL specified search terms specified will be returned.","lastModifiedDate":"2021-10-01"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"BenjaminTan99"},"content":"* `find n/John` returns `john` and `John Doe`","lastModifiedDate":"2021-10-01"},{"lineNumber":145,"author":{"gitId":"BenjaminTan99"},"content":"* `find n/Mary p/12345678` returns applicants whose names contain `mary` AND whose numbers contain `12345678`","lastModifiedDate":"2021-10-01"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"darren2pro"},"content":"### Clearing all entries : `clear` `[coming soon]`","lastModifiedDate":"2021-09-28"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"BenjaminTan99"},"content":"Clears all entries from MrTechRecruiter.","lastModifiedDate":"2021-10-01"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"darren2pro"},"content":"### Exiting the program : `exit` `[coming soon]`","lastModifiedDate":"2021-09-28"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"BenjaminTan99"},"content":"All data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-10-01"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":165,"author":{"gitId":"BenjaminTan99"},"content":"Data is saved as a JSON file `[JAR file location]/data/POSITION-TITLE.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-10-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":168,"author":{"gitId":"BenjaminTan99"},"content":"If your changes to the data file makes its format invalid, MrTechRecruiter will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-10-01"},{"lineNumber":169,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":171,"author":{"gitId":"BenjaminTan99"},"content":"### Editing a person : `edit` `[coming soon]`","lastModifiedDate":"2021-10-01"},{"lineNumber":172,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":173,"author":{"gitId":"BenjaminTan99"},"content":"Edits an existing applicant in MrTechRecruiter.","lastModifiedDate":"2021-10-01"},{"lineNumber":174,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":175,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"BenjaminTan99"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous MrTechRecruiter home folder.","lastModifiedDate":"2021-10-01"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"darren2pro"},"content":"**Add Applicant** | `add-applicant n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS pos/POSITION` \u003cbr\u003e e.g., `add-applicant n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 pos/software engineer`","lastModifiedDate":"2021-10-09"},{"lineNumber":193,"author":{"gitId":"darren2pro"},"content":"**Delete Applicant** | `delete-applicant n/NAME`\u003cbr\u003e e.g., `delete-applicant John Doe`","lastModifiedDate":"2021-10-09"},{"lineNumber":194,"author":{"gitId":"darren2pro"},"content":"**Clear [coming soon]** | `clear`","lastModifiedDate":"2021-09-28"},{"lineNumber":195,"author":{"gitId":"darren2pro"},"content":"**Edit [coming soon]** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2021-09-28"},{"lineNumber":196,"author":{"gitId":"-"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"darren2pro"},"content":"**List [coming soon]** | `list`","lastModifiedDate":"2021-09-28"},{"lineNumber":198,"author":{"gitId":"darren2pro"},"content":"**Help [coming soon]** | `help`","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"darren2pro":30,"-":133,"BenjaminTan99":35}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"LMAOboxhack"},"content":"title: MrTechRecruiter","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"LMAOboxhack"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103-F10-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103-F10-1/tp/actions)","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103-F10-1/tp/branch/master/graph/badge.svg?token\u003dKWK2M8GPGF)](https://codecov.io/gh/AY2122S1-CS2103-F10-1/tp)","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"LMAOboxhack"},"content":"**MrTechRecruiter is a desktop application for HR recruiters in tech companies to manage their applicants.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"LMAOboxhack"},"content":"* If you are interested in using MrTechRecruiter, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"LMAOboxhack"},"content":"* If you are interested in developing MrTechRecruiter, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"LMAOboxhack":5,"-":14}},{"path":"docs/team/benjamintan99.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminTan99"},"content":"---","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"BenjaminTan99"},"content":"layout: page","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"BenjaminTan99"},"content":"title: Benjamin\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"BenjaminTan99"},"content":"---","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"BenjaminTan99"},"content":"### Project: MrTechRecruiter","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"BenjaminTan99"},"content":"MrTechRecruiter (MTR) is a desktop applicant management application designed for tech companies to keep track of job applicants. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about __ kLoC.","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"BenjaminTan99"},"content":"Given below are my contributions to the project [to be updated].","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"BenjaminTan99"},"content":"* **New Feature**:","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"BenjaminTan99"},"content":"* **Code contributed**:","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"BenjaminTan99"},"content":"* **Project management**:","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"BenjaminTan99"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"BenjaminTan99"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"BenjaminTan99"},"content":"* **Community**:","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"BenjaminTan99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"BenjaminTan99"},"content":"* **Tools**:","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"BenjaminTan99":23}},{"path":"docs/team/darren2pro.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"title: Darren Heng\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"### Project: MrTechRecruiter","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"MrTechRecruiter (MTR) is a desktop applicant management application designed for tech companies to keep track of job applicants. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"darren2pro":3,"-":43}},{"path":"docs/team/lmaoboxhack.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"LMAOboxhack"},"content":"title: Lin Fangyuan\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"LMAOboxhack"},"content":"### Project: MrTechRecruiter","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"LMAOboxhack"},"content":"MrTechRecruiter (MTR) is a desktop applicant management application designed for tech companies to keep track of job applicants. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about __ kLoC.","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"LMAOboxhack":3,"-":43}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"    public static final String MESSAGE_APPLICANTS_LISTED_OVERVIEW \u003d \"%1$d applicant listed!\";","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"    public static final String MESSAGE_INVALID_APPLICANT_DISPLAYED_INDEX \u003d \"The applicant index provided is invalid\";","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final String MESSAGE_INVALID_POSITION_DISPLAYED_INDEX \u003d \"The position index provided is invalid\";","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Harry-Gao-H":1,"darren2pro":2,"-":13}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":38,"author":{"gitId":"Harry-Gao-H"},"content":"    /** Returns an unmodifiable view of the filtered list of positions */","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Harry-Gao-H"},"content":"    ObservableList\u003cPosition\u003e getFilteredPositionList();","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"    /** Returns an unmodifiable view of the filtered list of applicants */","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"    ObservableList\u003cApplicant\u003e getFilteredApplicantList();","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"     * Returns the user prefs\u0027 applicant book file path.","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"    Path getApplicantBookFilePath();","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"Harry-Gao-H"},"content":"     * Returns the user prefs\u0027 position book file path.","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Harry-Gao-H"},"content":"    Path getPositionBookFilePath(); // this file paths might need to be combined.","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Harry-Gao-H":11,"darren2pro":9,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":69,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"darren2pro"},"content":"    public ObservableList\u003cApplicant\u003e getFilteredApplicantList() {","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"darren2pro"},"content":"        return model.getFilteredApplicantList();","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"Harry-Gao-H"},"content":"    public ObservableList\u003cPosition\u003e getFilteredPositionList() {","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"Harry-Gao-H"},"content":"        return model.getFilteredPositionList();","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"darren2pro"},"content":"    public Path getApplicantBookFilePath() {","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"darren2pro"},"content":"        return model.getApplicantBookFilePath();","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"Harry-Gao-H"},"content":"    public Path getPositionBookFilePath() {","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"Harry-Gao-H"},"content":"        return model.getPositionBookFilePath();","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Harry-Gao-H":10,"darren2pro":11,"-":81}},{"path":"src/main/java/seedu/address/logic/commands/AddApplicantCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":" * Adds an applicant to the address book.","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"public class AddApplicantCommand extends Command {","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"    public static final String COMMAND_WORD \u003d \"add-applicant\";","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an applicant to MrTechRecruiter. \"","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"            + PREFIX_POSITION + \"POSITION \"","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"            + PREFIX_POSITION + \"software engineer\";","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New applicant added: %1$s\";","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"    public static final String MESSAGE_DUPLICATE_APPLICANT \u003d \"This applicant already exists in MrTechRecruiter\";","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"    public static final String MESSAGE_NO_SUCH_POSITION \u003d \"There is no such position in MrTechRecruiter\";","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"    private final Applicant toAdd;","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"    private final Position dummyPosition;","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"     * Creates an AddApplicantCommand to add the specified {@code Applicant}","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"darren2pro"},"content":"    public AddApplicantCommand(Applicant applicant, Position dummyPosition) {","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"        requireNonNull(applicant);","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"LMAOboxhack"},"content":"        this.toAdd \u003d applicant;","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"darren2pro"},"content":"        this.dummyPosition \u003d dummyPosition;","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"darren2pro"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"darren2pro"},"content":"        if (model.hasApplicant(toAdd)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"darren2pro"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_APPLICANT);","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"darren2pro"},"content":"        if (!model.hasPosition(dummyPosition)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"darren2pro"},"content":"            throw new CommandException(MESSAGE_NO_SUCH_POSITION);","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"darren2pro"},"content":"        model.addApplicantToPosition(toAdd, dummyPosition);","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"darren2pro"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"darren2pro"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"darren2pro"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"darren2pro"},"content":"                || (other instanceof AddApplicantCommand // instanceof handles nulls","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"darren2pro"},"content":"                \u0026\u0026 toAdd.equals(((AddApplicantCommand) other).toAdd)","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"darren2pro"},"content":"                \u0026\u0026 dummyPosition.equals(((AddApplicantCommand) other).dummyPosition));","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"LMAOboxhack":1,"darren2pro":75}},{"path":"src/main/java/seedu/address/logic/commands/AddPositionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":"// Adds a position to MrTechRecruiter.","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"public class AddPositionCommand extends Command {","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final String COMMAND_WORD \u003d \"add-position\";","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"Harry-Gao-H"},"content":"            + \": Adds a position to the MTR system. \"","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"Harry-Gao-H"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":"            + PREFIX_TITLE + \"TITLE \"","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"Harry-Gao-H"},"content":"            + PREFIX_DESCRIPTION + \"DESCRIPTION \" + \"\\n\"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"Harry-Gao-H"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"Harry-Gao-H"},"content":"            + PREFIX_TITLE + \"software engineer \"","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"Harry-Gao-H"},"content":"            + PREFIX_DESCRIPTION + \"writes code everyday :/ \";","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New position added: %1$s\";","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final String MESSAGE_DUPLICATE_POSITION \u003d \"This position already exists in the MTR system\";","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"Harry-Gao-H"},"content":"    private final Position toAdd;","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"Harry-Gao-H"},"content":"     * Creates an AddPositionCommand to add the specified {@code Position}","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"Harry-Gao-H"},"content":"    public AddPositionCommand(Position position) {","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"Harry-Gao-H"},"content":"        requireNonNull(position);","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"Harry-Gao-H"},"content":"        toAdd \u003d position;","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"Harry-Gao-H"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"Harry-Gao-H"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"Harry-Gao-H"},"content":"        if (model.hasPosition(toAdd)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_POSITION);","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"Harry-Gao-H"},"content":"        model.addPosition(toAdd);","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"Harry-Gao-H"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"Harry-Gao-H"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"Harry-Gao-H"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"Harry-Gao-H"},"content":"                || (other instanceof AddPositionCommand // instanceof handles nulls","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"Harry-Gao-H"},"content":"                \u0026\u0026 toAdd.equals(((AddPositionCommand) other).toAdd));","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"Harry-Gao-H"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"Harry-Gao-H":58}},{"path":"src/main/java/seedu/address/logic/commands/DeleteApplicantCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":" * Deletes an applicant identified using the displayed index in MrTechRecruiter.","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"public class DeleteApplicantCommand extends Command {","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"    public static final String COMMAND_WORD \u003d \"delete-applicant\";","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"            + \": Deletes the applicant identified by the index number used in the displayed applicant list.\\n\"","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"    public static final String MESSAGE_DELETE_APPLICANT_SUCCESS \u003d \"Deleted applicant: %1$s\";","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"    public DeleteApplicantCommand(Index targetIndex) {","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"        List\u003cApplicant\u003e lastShownList \u003d model.getFilteredApplicantList();","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPLICANT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"        Applicant applicantToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"        model.deleteApplicant(applicantToDelete);","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_APPLICANT_SUCCESS, applicantToDelete));","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"darren2pro"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"                || (other instanceof DeleteApplicantCommand // instanceof handles nulls","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteApplicantCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"darren2pro":54}},{"path":"src/main/java/seedu/address/logic/commands/DeletePositionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":" * Deletes a position identified using it\u0027s displayed index from the position book.","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"public class DeletePositionCommand extends Command {","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final String COMMAND_WORD \u003d \"delete-position\";","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"Harry-Gao-H"},"content":"            + \": Deletes the position identified by the index number used in the displayed position list.\\n\"","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"Harry-Gao-H"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"Harry-Gao-H"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final String MESSAGE_DELETE_POSITION_SUCCESS \u003d \"Deleted Position: %1$s\";","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"Harry-Gao-H"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"Harry-Gao-H"},"content":"    public DeletePositionCommand(Index targetIndex) {","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"Harry-Gao-H"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"Harry-Gao-H"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"Harry-Gao-H"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"Harry-Gao-H"},"content":"        List\u003cPosition\u003e lastShownList \u003d model.getFilteredPositionList();","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"Harry-Gao-H"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_POSITION_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"Harry-Gao-H"},"content":"        Position positionToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"Harry-Gao-H"},"content":"        model.deletePosition(positionToDelete);","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"Harry-Gao-H"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_POSITION_SUCCESS, positionToDelete));","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"Harry-Gao-H"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"Harry-Gao-H"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"Harry-Gao-H"},"content":"                || (other instanceof DeletePositionCommand // instanceof handles nulls","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"Harry-Gao-H"},"content":"                \u0026\u0026 targetIndex.equals(((DeletePositionCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"Harry-Gao-H"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"Harry-Gao-H":53}},{"path":"src/main/java/seedu/address/logic/commands/ListApplicantCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_APPLICANTS;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"BenjaminTan99"},"content":"// This class lists all applicants currently found in MrTechRecruiter.","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"public class ListApplicantCommand extends Command {","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"    public static final String COMMAND_WORD \u003d \"list-applicant\";","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all applicants\";","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"        model.updateFilteredApplicantList(PREDICATE_SHOW_ALL_APPLICANTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"darren2pro":21,"BenjaminTan99":1}},{"path":"src/main/java/seedu/address/logic/commands/ListPositionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_POSITIONS;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":" * Lists all positions in the position book to the user.","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":"public class ListPositionCommand extends Command {","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final String COMMAND_WORD \u003d \"list-position\";","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all positions\";","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"Harry-Gao-H"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"Harry-Gao-H"},"content":"        model.updateFilteredPositionList(PREDICATE_SHOW_ALL_POSITIONS);","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"Harry-Gao-H"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"Harry-Gao-H"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"Harry-Gao-H":23}},{"path":"src/main/java/seedu/address/logic/parser/AddApplicantCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"import seedu.address.logic.commands.AddApplicantCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.Address;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.Email;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.Name;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.Phone;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":" * Parses input arguments and creates a new AddApplicantCommand object","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"LMAOboxhack"},"content":"public class AddApplicantCommandParser implements Parser\u003cAddApplicantCommand\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"     * Parses the given {@code String} of arguments in the context of the AddApplicantCommand","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"     * and returns an AddApplicantCommand object for execution.","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"    public AddApplicantCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"                        PREFIX_POSITION);","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_POSITION)","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddApplicantCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"LMAOboxhack"},"content":"        Name name \u003d ApplicantParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"LMAOboxhack"},"content":"        Phone phone \u003d ApplicantParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"LMAOboxhack"},"content":"        Email email \u003d ApplicantParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"LMAOboxhack"},"content":"        Address address \u003d ApplicantParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"LMAOboxhack"},"content":"        Position dummyPosition \u003d ApplicantParserUtil.parsePosition(argMultimap.getValue(PREFIX_POSITION).get());","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"        Applicant applicant \u003d new Applicant(name, phone, email, address, dummyPosition);","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"LMAOboxhack"},"content":"        return new AddApplicantCommand(applicant, dummyPosition);","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"darren2pro"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"darren2pro"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"darren2pro"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"LMAOboxhack":11,"darren2pro":49}},{"path":"src/main/java/seedu/address/logic/parser/AddPositionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.logic.commands.AddPositionCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.position.Description;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.position.Title;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"Harry-Gao-H"},"content":" * Parses input arguments and creates a new AddPositionCommand object","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"Harry-Gao-H"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":"public class AddPositionCommandParser implements Parser\u003cAddPositionCommand\u003e {","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"Harry-Gao-H"},"content":"     * Parses the given {@code String} of arguments in the context of the AddPositionCommand","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"Harry-Gao-H"},"content":"     * and returns an AddPositionCommand object for execution.","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"Harry-Gao-H"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"Harry-Gao-H"},"content":"    public AddPositionCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"Harry-Gao-H"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"Harry-Gao-H"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TITLE, PREFIX_DESCRIPTION);","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"Harry-Gao-H"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TITLE, PREFIX_DESCRIPTION)","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"Harry-Gao-H"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPositionCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"Harry-Gao-H"},"content":"        Title title \u003d ParserUtil.parseTitle(argMultimap.getValue(PREFIX_TITLE).get());","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"Harry-Gao-H"},"content":"        Description description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"Harry-Gao-H"},"content":"        Position position \u003d new Position(title, description);","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"Harry-Gao-H"},"content":"        return new AddPositionCommand(position);","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"Harry-Gao-H"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"Harry-Gao-H"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"Harry-Gao-H"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"Harry-Gao-H"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"Harry-Gao-H"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"Harry-Gao-H":51}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"import seedu.address.logic.commands.AddApplicantCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.logic.commands.AddPositionCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"import seedu.address.logic.commands.DeleteApplicantCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.logic.commands.DeletePositionCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"import seedu.address.logic.commands.ListApplicantCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.logic.commands.ListPositionCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":77,"author":{"gitId":"darren2pro"},"content":"        case AddApplicantCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"LMAOboxhack"},"content":"            return new AddApplicantCommandParser().parse(arguments);","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"darren2pro"},"content":"        case DeleteApplicantCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"darren2pro"},"content":"            return new DeleteApplicantParser().parse(arguments);","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"darren2pro"},"content":"        case ListApplicantCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"darren2pro"},"content":"            return new ListApplicantCommand();","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"Harry-Gao-H"},"content":"        case AddPositionCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"Harry-Gao-H"},"content":"            return new AddPositionCommandParser().parse(arguments);","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"Harry-Gao-H"},"content":"        case ListPositionCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"Harry-Gao-H"},"content":"            return new ListPositionCommand();","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"Harry-Gao-H"},"content":"        case DeletePositionCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"Harry-Gao-H"},"content":"            return new DeletePositionCommandParser().parse(arguments);","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Harry-Gao-H":11,"LMAOboxhack":1,"darren2pro":11,"-":77}},{"path":"src/main/java/seedu/address/logic/parser/ApplicantParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LMAOboxhack"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"LMAOboxhack"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"LMAOboxhack"},"content":"import java.util.Collection;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"LMAOboxhack"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"LMAOboxhack"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.Address;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.Email;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.Name;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.Phone;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.position.Description;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.position.Title;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"LMAOboxhack"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"LMAOboxhack"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"LMAOboxhack"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"LMAOboxhack"},"content":"public class ApplicantParserUtil {","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"LMAOboxhack"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"LMAOboxhack"},"content":"    public static final String PLACEHOLDER_DESCRIPTION \u003d \"This is a placeholder description\";","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"LMAOboxhack"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"LMAOboxhack"},"content":"     * trimmed.","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"LMAOboxhack"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"LMAOboxhack"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"LMAOboxhack"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"LMAOboxhack"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"LMAOboxhack"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"LMAOboxhack"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"LMAOboxhack"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"LMAOboxhack"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"LMAOboxhack"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"LMAOboxhack"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"LMAOboxhack"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"LMAOboxhack"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"LMAOboxhack"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"LMAOboxhack"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"LMAOboxhack"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"LMAOboxhack"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"LMAOboxhack"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"LMAOboxhack"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"LMAOboxhack"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"LMAOboxhack"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"LMAOboxhack"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"LMAOboxhack"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"LMAOboxhack"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"LMAOboxhack"},"content":"        requireNonNull(phone);","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"LMAOboxhack"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"LMAOboxhack"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"LMAOboxhack"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"LMAOboxhack"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"LMAOboxhack"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"LMAOboxhack"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"LMAOboxhack"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"LMAOboxhack"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"LMAOboxhack"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"LMAOboxhack"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"LMAOboxhack"},"content":"        requireNonNull(address);","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"LMAOboxhack"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"LMAOboxhack"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"LMAOboxhack"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"LMAOboxhack"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"LMAOboxhack"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"LMAOboxhack"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"LMAOboxhack"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"LMAOboxhack"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"LMAOboxhack"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"LMAOboxhack"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"LMAOboxhack"},"content":"        requireNonNull(email);","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"LMAOboxhack"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"LMAOboxhack"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"LMAOboxhack"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"LMAOboxhack"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"LMAOboxhack"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"LMAOboxhack"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"LMAOboxhack"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"LMAOboxhack"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"LMAOboxhack"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"LMAOboxhack"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"LMAOboxhack"},"content":"        requireNonNull(tag);","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"LMAOboxhack"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"LMAOboxhack"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"LMAOboxhack"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"LMAOboxhack"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"LMAOboxhack"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"LMAOboxhack"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"LMAOboxhack"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"LMAOboxhack"},"content":"        requireNonNull(tags);","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"LMAOboxhack"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"LMAOboxhack"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"LMAOboxhack"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"LMAOboxhack"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"LMAOboxhack"},"content":"        return tagSet;","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"LMAOboxhack"},"content":"     * Parses a {@code String position} into a {@code Position} with a placeholder description.","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"LMAOboxhack"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"LMAOboxhack"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"LMAOboxhack"},"content":"     * @param position the string title of the related position.","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"LMAOboxhack"},"content":"     * @return the Position object of this corresponding position.","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"LMAOboxhack"},"content":"    public static Position parsePosition(String position) {","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"LMAOboxhack"},"content":"        requireNonNull(position);","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"LMAOboxhack"},"content":"        String trimmedPosition \u003d position.trim();","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"LMAOboxhack"},"content":"        return new Position(new Title(position), new Description(PLACEHOLDER_DESCRIPTION));","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"LMAOboxhack"},"content":"    // All position related methods","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"LMAOboxhack"},"content":"     * Parses a {@code String title} into a {@code Title}.","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"LMAOboxhack"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"LMAOboxhack"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"LMAOboxhack"},"content":"     * @throws ParseException if the given {@code title} is invalid.","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"LMAOboxhack"},"content":"    public static Title parseTitle(String title) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"LMAOboxhack"},"content":"        requireNonNull(title);","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"LMAOboxhack"},"content":"        String trimmedTitle \u003d title.trim();","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"LMAOboxhack"},"content":"        if (!Title.isValidTitle(trimmedTitle)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"LMAOboxhack"},"content":"            throw new ParseException(Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"LMAOboxhack"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"LMAOboxhack"},"content":"        return new Title(trimmedTitle);","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"LMAOboxhack"},"content":"     * Parses a {@code String description} into a {@code Description}.","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"LMAOboxhack"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"LMAOboxhack"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"LMAOboxhack"},"content":"     * @throws ParseException if the given {@code description} is invalid.","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"LMAOboxhack"},"content":"    public static Description parseDescription(String description) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"LMAOboxhack"},"content":"        requireNonNull(description);","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"LMAOboxhack"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"LMAOboxhack"},"content":"        if (!Description.isValidDescription(trimmedDescription)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"LMAOboxhack"},"content":"            throw new ParseException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"LMAOboxhack"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"LMAOboxhack"},"content":"        return new Description(trimmedDescription);","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"LMAOboxhack"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"LMAOboxhack":173}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"    public static final Prefix PREFIX_POSITION \u003d new Prefix(\"pos/\");","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final Prefix PREFIX_TITLE \u003d new Prefix(\"tit/\");","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"des/\");","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Harry-Gao-H":2,"darren2pro":1,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/DeleteApplicantParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"import seedu.address.logic.commands.DeleteApplicantCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":" * Parses input arguments and creates a new DeleteApplicantCommand object","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"public class DeleteApplicantParser implements Parser\u003cDeleteApplicantCommand\u003e {","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteApplicantCommand","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"     * and returns a DeleteApplicantCommand object for execution.","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"    public DeleteApplicantCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"        try {","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"            return new DeleteApplicantCommand(index);","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteApplicantCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"darren2pro":29}},{"path":"src/main/java/seedu/address/logic/parser/DeletePositionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.logic.commands.DeletePositionCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":" * Parses input arguments and creates a new DeletePositionCommand object","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"public class DeletePositionCommandParser implements Parser\u003cDeletePositionCommand\u003e {","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":"     * Parses the given {@code String} of arguments in the context of the DeletePositionCommand","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"     * and returns a DeletePositionCommand object for execution.","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"Harry-Gao-H"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":"    public DeletePositionCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"Harry-Gao-H"},"content":"        try {","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"Harry-Gao-H"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"Harry-Gao-H"},"content":"            return new DeletePositionCommand(index);","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"Harry-Gao-H"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"Harry-Gao-H"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeletePositionCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"Harry-Gao-H"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"Harry-Gao-H":28}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.position.Description;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.position.Title;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":126,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":127,"author":{"gitId":"Harry-Gao-H"},"content":"    // All position related methods","lastModifiedDate":"2021-10-09"},{"lineNumber":128,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":129,"author":{"gitId":"Harry-Gao-H"},"content":"     * Parses a {@code String title} into a {@code Title}.","lastModifiedDate":"2021-10-09"},{"lineNumber":130,"author":{"gitId":"Harry-Gao-H"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-09"},{"lineNumber":131,"author":{"gitId":"Harry-Gao-H"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":132,"author":{"gitId":"Harry-Gao-H"},"content":"     * @throws ParseException if the given {@code title} is invalid.","lastModifiedDate":"2021-10-09"},{"lineNumber":133,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":134,"author":{"gitId":"Harry-Gao-H"},"content":"    public static Title parseTitle(String title) throws ParseException {","lastModifiedDate":"2021-10-09"},{"lineNumber":135,"author":{"gitId":"Harry-Gao-H"},"content":"        requireNonNull(title);","lastModifiedDate":"2021-10-09"},{"lineNumber":136,"author":{"gitId":"Harry-Gao-H"},"content":"        String trimmedTitle \u003d title.trim();","lastModifiedDate":"2021-10-09"},{"lineNumber":137,"author":{"gitId":"Harry-Gao-H"},"content":"        if (!Title.isValidTitle(trimmedTitle)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":138,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new ParseException(Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":139,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":140,"author":{"gitId":"Harry-Gao-H"},"content":"        return new Title(trimmedTitle);","lastModifiedDate":"2021-10-09"},{"lineNumber":141,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":142,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":143,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":144,"author":{"gitId":"Harry-Gao-H"},"content":"     * Parses a {@code String description} into a {@code Description}.","lastModifiedDate":"2021-10-09"},{"lineNumber":145,"author":{"gitId":"Harry-Gao-H"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-09"},{"lineNumber":146,"author":{"gitId":"Harry-Gao-H"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":147,"author":{"gitId":"Harry-Gao-H"},"content":"     * @throws ParseException if the given {@code description} is invalid.","lastModifiedDate":"2021-10-09"},{"lineNumber":148,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":149,"author":{"gitId":"Harry-Gao-H"},"content":"    public static Description parseDescription(String description) throws ParseException {","lastModifiedDate":"2021-10-09"},{"lineNumber":150,"author":{"gitId":"Harry-Gao-H"},"content":"        requireNonNull(description);","lastModifiedDate":"2021-10-09"},{"lineNumber":151,"author":{"gitId":"Harry-Gao-H"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2021-10-09"},{"lineNumber":152,"author":{"gitId":"Harry-Gao-H"},"content":"        if (!Description.isValidDescription(trimmedDescription)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":153,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new ParseException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":154,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":155,"author":{"gitId":"Harry-Gao-H"},"content":"        return new Description(trimmedDescription);","lastModifiedDate":"2021-10-09"},{"lineNumber":156,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":157,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Harry-Gao-H":31,"darren2pro":3,"-":124}},{"path":"src/main/java/seedu/address/model/ApplicantBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LMAOboxhack"},"content":"package seedu.address.model;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import java.util.List;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"LMAOboxhack"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.UniqueApplicantList;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":" * Wraps all applicant data at ApplicantBook level","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":" * Duplicates are not allowed (by .isSameApplicant comparison)","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"LMAOboxhack"},"content":"public class ApplicantBook implements ReadOnlyApplicantBook {","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"    private final UniqueApplicantList applicants;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"    /*","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"     *   among constructors.","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"    {","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"        applicants \u003d new UniqueApplicantList();","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"LMAOboxhack"},"content":"    public ApplicantBook() {}","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"     * Creates an ApplicantBook using the Applicants in the {@code toBeCopied}","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"    public ApplicantBook(ReadOnlyApplicantBook toBeCopied) {","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"        this();","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"    //// list overwrite operations","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"     * Replaces the contents of the applicant list with {@code applicants}.","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"     * {@code applicants} must not contain duplicate applicants.","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"darren2pro"},"content":"    public void setApplicants(List\u003cApplicant\u003e applicants) {","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"        this.applicants.setApplicants(applicants);","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"     * Resets the existing data of this {@code ApplicantBook} with {@code newData}.","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"    public void resetData(ReadOnlyApplicantBook newData) {","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"darren2pro"},"content":"        requireNonNull(newData);","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"darren2pro"},"content":"        setApplicants(newData.getApplicantList());","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"darren2pro"},"content":"    //// position-level operations","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"darren2pro"},"content":"     * Returns true if an applicant with the same identity as {@code applicant} exists in the applicant book.","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"darren2pro"},"content":"    public boolean hasApplicant(Applicant applicant) {","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"darren2pro"},"content":"        requireNonNull(applicant);","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"darren2pro"},"content":"        return applicants.contains(applicant);","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"darren2pro"},"content":"     * Adds an applicant to the applicant book.","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"darren2pro"},"content":"     * The applicant must not already exist in the applicant book.","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"darren2pro"},"content":"    public void addApplicant(Applicant a) {","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"darren2pro"},"content":"        applicants.add(a);","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"darren2pro"},"content":"     * Replaces the given applicant {@code target} in the list with {@code editedApplicant}.","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"darren2pro"},"content":"     * {@code target} must exist in the applicant book.","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"darren2pro"},"content":"     * The applicant identity of {@code editedApplicant} must not be the same as","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"darren2pro"},"content":"     * another existing applicant in the applicant book.","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"darren2pro"},"content":"    public void setApplicant(Applicant target, Applicant editedApplicant) {","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"darren2pro"},"content":"        requireNonNull(editedApplicant);","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"darren2pro"},"content":"        applicants.setApplicant(target, editedApplicant);","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"darren2pro"},"content":"     * Removes {@code key} from this {@code ApplicantBook}.","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"darren2pro"},"content":"     * {@code key} must exist in the applicant book.","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"darren2pro"},"content":"    public void removeApplicant(Applicant key) {","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"darren2pro"},"content":"        applicants.remove(key);","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"darren2pro"},"content":"    public String toString() {","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"darren2pro"},"content":"        return applicants.asUnmodifiableObservableList().size() + \" applicants\";","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"darren2pro"},"content":"        // TODO: refine later","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"LMAOboxhack"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"LMAOboxhack"},"content":"    public ObservableList\u003cApplicant\u003e getApplicantList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"darren2pro"},"content":"        return applicants.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"darren2pro"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"darren2pro"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"darren2pro"},"content":"                || (other instanceof ApplicantBook // instanceof handles nulls","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"darren2pro"},"content":"                \u0026\u0026 applicants.equals(((ApplicantBook) other).applicants));","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"LMAOboxhack"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"LMAOboxhack":16,"darren2pro":96}},{"path":"src/main/java/seedu/address/model/ApplicationBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LMAOboxhack"},"content":"package seedu.address.model;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"LMAOboxhack"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"LMAOboxhack"},"content":"import java.util.List;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"LMAOboxhack"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.application.Application;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.application.UniqueApplicationList;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"LMAOboxhack"},"content":"public class ApplicationBook implements ReadOnlyApplicationBook {","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"LMAOboxhack"},"content":"    private final UniqueApplicationList applications \u003d new UniqueApplicationList();","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"LMAOboxhack"},"content":"    public ApplicationBook() {}","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"LMAOboxhack"},"content":"     * Creates an ApplicationBook using the Applications in the {@code toBeCopied}","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"LMAOboxhack"},"content":"    public ApplicationBook(ReadOnlyApplicationBook toBeCopied) {","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"LMAOboxhack"},"content":"        this();","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"LMAOboxhack"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"LMAOboxhack"},"content":"    //// list overwrite operations","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"LMAOboxhack"},"content":"     * Replaces the contents of the application list with {@code applications}.","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"LMAOboxhack"},"content":"     * {@code applications} must not contain duplicate applications.","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"LMAOboxhack"},"content":"    public void setApplications(List\u003cApplication\u003e applications) {","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"LMAOboxhack"},"content":"        this.applications.setApplications(applications);","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"LMAOboxhack"},"content":"     * Resets the existing data of this {@code ApplicationList} with {@code newData}.","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"LMAOboxhack"},"content":"    public void resetData(ReadOnlyApplicationBook newData) {","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"LMAOboxhack"},"content":"        requireNonNull(newData);","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"LMAOboxhack"},"content":"        setApplications(newData.getApplicationList());","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"LMAOboxhack"},"content":"    //// application-level operations","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"LMAOboxhack"},"content":"     * Adds an application to the application book.","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"LMAOboxhack"},"content":"     * The application must not already exist in the application book.","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"LMAOboxhack"},"content":"    public void addApplication(Application a) {","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"LMAOboxhack"},"content":"        applications.add(a);","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"LMAOboxhack"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"LMAOboxhack"},"content":"    public ObservableList\u003cApplication\u003e getApplicationList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"LMAOboxhack"},"content":"        return applications.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"LMAOboxhack"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"LMAOboxhack":58}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"Harry-Gao-H"},"content":"    Predicate\u003cPosition\u003e PREDICATE_SHOW_ALL_POSITIONS \u003d unused -\u003e true;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"    Predicate\u003cApplicant\u003e PREDICATE_SHOW_ALL_APPLICANTS \u003d unused -\u003e true;","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"Harry-Gao-H"},"content":"     * Returns the user prefs\u0027 position book file path.","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"Harry-Gao-H"},"content":"    Path getPositionBookFilePath();","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"darren2pro"},"content":"     * Deletes the given applicant.","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"darren2pro"},"content":"     * The applicant must exist in the address book.","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"darren2pro"},"content":"    void deleteApplicant(Applicant target);","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"LMAOboxhack"},"content":"     * Adds the given applicant to the given position.","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"LMAOboxhack"},"content":"     * {@code applicant} must not already exist in the applicant book.","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"LMAOboxhack"},"content":"    void addApplicantToPosition(Applicant applicant, Position position);","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"darren2pro"},"content":"     * Returns true if an applicant with the same identity as {@code applicant} exists MrTechRecruiter.","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"darren2pro"},"content":"    boolean hasApplicant(Applicant applicant);","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":105,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"darren2pro"},"content":"     * Replaces the given applicant {@code target} with {@code editedApplicant}.","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"darren2pro"},"content":"     * {@code target} must exist in MrTechRecruiter.","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"darren2pro"},"content":"     * The applicant identity of {@code editedApplicant} must not be the same as another existing person in","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"darren2pro"},"content":"     * MrTechRecruiter.","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"darren2pro"},"content":"    public void setApplicant(Applicant target, Applicant editedApplicant);","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":116,"author":{"gitId":"darren2pro"},"content":"    /** Returns an unmodifiable view of the filtered applicant list */","lastModifiedDate":"2021-10-09"},{"lineNumber":117,"author":{"gitId":"darren2pro"},"content":"    ObservableList\u003cApplicant\u003e getFilteredApplicantList();","lastModifiedDate":"2021-10-09"},{"lineNumber":118,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":125,"author":{"gitId":"darren2pro"},"content":"    void updateFilteredApplicantList(Predicate\u003cApplicant\u003e predicateShowAllApplicants);","lastModifiedDate":"2021-10-09"},{"lineNumber":126,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":127,"author":{"gitId":"Harry-Gao-H"},"content":"    // Position related methods","lastModifiedDate":"2021-10-09"},{"lineNumber":128,"author":{"gitId":"Harry-Gao-H"},"content":"    boolean hasPosition(Position toAdd);","lastModifiedDate":"2021-10-09"},{"lineNumber":129,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":130,"author":{"gitId":"Harry-Gao-H"},"content":"    void addPosition(Position toAdd);","lastModifiedDate":"2021-10-09"},{"lineNumber":131,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":132,"author":{"gitId":"Harry-Gao-H"},"content":"    void deletePosition(Position positionToDelete);","lastModifiedDate":"2021-10-09"},{"lineNumber":133,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":134,"author":{"gitId":"Harry-Gao-H"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Position List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":135,"author":{"gitId":"Harry-Gao-H"},"content":"    ObservableList\u003cPosition\u003e getFilteredPositionList();","lastModifiedDate":"2021-10-09"},{"lineNumber":136,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":137,"author":{"gitId":"Harry-Gao-H"},"content":"    void updateFilteredPositionList(Predicate\u003cPosition\u003e predicate);","lastModifiedDate":"2021-10-09"},{"lineNumber":138,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":139,"author":{"gitId":"darren2pro"},"content":"    // Applicant related methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":140,"author":{"gitId":"darren2pro"},"content":"    Path getApplicantBookFilePath();","lastModifiedDate":"2021-10-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Harry-Gao-H":18,"LMAOboxhack":8,"darren2pro":28,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.application.Application;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":26,"author":{"gitId":"LMAOboxhack"},"content":"    private final PositionBook positionBook;","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"LMAOboxhack"},"content":"    private final ApplicantBook applicantBook;","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"LMAOboxhack"},"content":"    private final ApplicationBook applicationBook;","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"    private final FilteredList\u003cApplicant\u003e filteredApplicants;","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"Harry-Gao-H"},"content":"    private final FilteredList\u003cPosition\u003e filteredPositions;","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"LMAOboxhack"},"content":"     * Initializes a ModelManager with the given positionBook, applicantBook, applicationBook and userPrefs.","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyApplicantBook applicantBook,","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"                        ReadOnlyPositionBook positionBook, ApplicationBook applicationBook,","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"                        ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"        requireAllNonNull(addressBook, applicantBook, positionBook, applicationBook, userPrefs);","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"LMAOboxhack"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"LMAOboxhack"},"content":"                + \", applicant book: \" + applicantBook","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"                + \", position book: \" + positionBook","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"LMAOboxhack"},"content":"                + \", application book: \" + applicationBook","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"LMAOboxhack"},"content":"                + \", userPrefs: \" + userPrefs);","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"LMAOboxhack"},"content":"        this.positionBook \u003d new PositionBook(positionBook);","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"LMAOboxhack"},"content":"        this.applicantBook \u003d new ApplicantBook(applicantBook);","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"LMAOboxhack"},"content":"        this.applicationBook \u003d new ApplicationBook(applicationBook);","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":55,"author":{"gitId":"darren2pro"},"content":"        filteredApplicants \u003d new FilteredList\u003c\u003e(this.applicantBook.getApplicantList());","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"Harry-Gao-H"},"content":"        filteredPositions \u003d new FilteredList\u003c\u003e(this.positionBook.getPositionList());","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"LMAOboxhack"},"content":"     * Old constructor - left temporarily to pass unit tests","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"LMAOboxhack"},"content":"        this.positionBook \u003d new PositionBook();","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"LMAOboxhack"},"content":"        this.applicantBook \u003d new ApplicantBook();","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"LMAOboxhack"},"content":"        this.applicationBook \u003d new ApplicationBook();","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"darren2pro"},"content":"        filteredApplicants \u003d new FilteredList\u003c\u003e(this.applicantBook.getApplicantList());","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"Harry-Gao-H"},"content":"        filteredPositions \u003d new FilteredList\u003c\u003e(this.positionBook.getPositionList());","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":80,"author":{"gitId":"darren2pro"},"content":"        this(new AddressBook(), new ApplicantBook(), new PositionBook(), new ApplicationBook(), new UserPrefs());","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"Harry-Gao-H"},"content":"    public Path getPositionBookFilePath() {","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"Harry-Gao-H"},"content":"        return userPrefs.getPositionBookFilePath();","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":147,"author":{"gitId":"darren2pro"},"content":"    public void deleteApplicant(Applicant target) {","lastModifiedDate":"2021-10-09"},{"lineNumber":148,"author":{"gitId":"darren2pro"},"content":"        applicantBook.removeApplicant(target);","lastModifiedDate":"2021-10-11"},{"lineNumber":149,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":150,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":157,"author":{"gitId":"LMAOboxhack"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":158,"author":{"gitId":"LMAOboxhack"},"content":"    public void addApplicantToPosition(Applicant applicant, Position dummyPosition) {","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"LMAOboxhack"},"content":"        Position position \u003d positionBook.getPosition(dummyPosition);","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"LMAOboxhack"},"content":"        Application application \u003d new Application(applicant, position);","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":162,"author":{"gitId":"darren2pro"},"content":"        // Sets the application of the applicant to the application with original position object","lastModifiedDate":"2021-10-13"},{"lineNumber":163,"author":{"gitId":"darren2pro"},"content":"        applicant.setApplication(application);","lastModifiedDate":"2021-10-13"},{"lineNumber":164,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":165,"author":{"gitId":"LMAOboxhack"},"content":"        applicantBook.addApplicant(applicant);","lastModifiedDate":"2021-10-07"},{"lineNumber":166,"author":{"gitId":"LMAOboxhack"},"content":"        applicationBook.addApplication(application);","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"darren2pro"},"content":"        updateFilteredApplicantList(PREDICATE_SHOW_ALL_APPLICANTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":168,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":169,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":170,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":171,"author":{"gitId":"darren2pro"},"content":"    public boolean hasApplicant(Applicant applicant) {","lastModifiedDate":"2021-10-09"},{"lineNumber":172,"author":{"gitId":"darren2pro"},"content":"        requireNonNull(applicant);","lastModifiedDate":"2021-10-11"},{"lineNumber":173,"author":{"gitId":"darren2pro"},"content":"        return applicantBook.hasApplicant(applicant);","lastModifiedDate":"2021-10-11"},{"lineNumber":174,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":175,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":182,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":183,"author":{"gitId":"darren2pro"},"content":"    public void setApplicant(Applicant target, Applicant editedApplicant) {","lastModifiedDate":"2021-10-11"},{"lineNumber":184,"author":{"gitId":"darren2pro"},"content":"        requireAllNonNull(target, editedApplicant);","lastModifiedDate":"2021-10-11"},{"lineNumber":185,"author":{"gitId":"darren2pro"},"content":"        applicantBook.setApplicant(target, editedApplicant);","lastModifiedDate":"2021-10-11"},{"lineNumber":186,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":187,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":199,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":200,"author":{"gitId":"darren2pro"},"content":"    public ObservableList\u003cApplicant\u003e getFilteredApplicantList() {","lastModifiedDate":"2021-10-09"},{"lineNumber":201,"author":{"gitId":"darren2pro"},"content":"        return filteredApplicants;","lastModifiedDate":"2021-10-11"},{"lineNumber":202,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":203,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":210,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":211,"author":{"gitId":"darren2pro"},"content":"    public void updateFilteredApplicantList(Predicate\u003cApplicant\u003e predicateShowAllApplicants) {","lastModifiedDate":"2021-10-09"},{"lineNumber":212,"author":{"gitId":"darren2pro"},"content":"        requireNonNull(predicateShowAllApplicants);","lastModifiedDate":"2021-10-11"},{"lineNumber":213,"author":{"gitId":"darren2pro"},"content":"        filteredApplicants.setPredicate(predicateShowAllApplicants);","lastModifiedDate":"2021-10-11"},{"lineNumber":214,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":215,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":235,"author":{"gitId":"Harry-Gao-H"},"content":"    // Position related methods","lastModifiedDate":"2021-10-09"},{"lineNumber":236,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":237,"author":{"gitId":"Harry-Gao-H"},"content":"    public boolean hasPosition(Position position) {","lastModifiedDate":"2021-10-09"},{"lineNumber":238,"author":{"gitId":"Harry-Gao-H"},"content":"        requireNonNull(position);","lastModifiedDate":"2021-10-09"},{"lineNumber":239,"author":{"gitId":"Harry-Gao-H"},"content":"        return positionBook.hasPosition(position);","lastModifiedDate":"2021-10-09"},{"lineNumber":240,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":241,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":242,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":243,"author":{"gitId":"Harry-Gao-H"},"content":"    public void addPosition(Position position) {","lastModifiedDate":"2021-10-09"},{"lineNumber":244,"author":{"gitId":"Harry-Gao-H"},"content":"        positionBook.addPosition(position);","lastModifiedDate":"2021-10-09"},{"lineNumber":245,"author":{"gitId":"Harry-Gao-H"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-09"},{"lineNumber":246,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":247,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":248,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":249,"author":{"gitId":"Harry-Gao-H"},"content":"    public void deletePosition(Position positionToDelete) {","lastModifiedDate":"2021-10-09"},{"lineNumber":250,"author":{"gitId":"Harry-Gao-H"},"content":"        positionBook.removePosition(positionToDelete);","lastModifiedDate":"2021-10-09"},{"lineNumber":251,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":252,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":253,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":254,"author":{"gitId":"Harry-Gao-H"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Position List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":255,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":256,"author":{"gitId":"Harry-Gao-H"},"content":"    public ObservableList\u003cPosition\u003e getFilteredPositionList() {","lastModifiedDate":"2021-10-09"},{"lineNumber":257,"author":{"gitId":"Harry-Gao-H"},"content":"        return filteredPositions;","lastModifiedDate":"2021-10-09"},{"lineNumber":258,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":259,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":260,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":261,"author":{"gitId":"Harry-Gao-H"},"content":"    public void updateFilteredPositionList(Predicate\u003cPosition\u003e predicate) {","lastModifiedDate":"2021-10-09"},{"lineNumber":262,"author":{"gitId":"Harry-Gao-H"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-09"},{"lineNumber":263,"author":{"gitId":"Harry-Gao-H"},"content":"        filteredPositions.setPredicate(predicate);","lastModifiedDate":"2021-10-09"},{"lineNumber":264,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":265,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":266,"author":{"gitId":"darren2pro"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Applicant List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":267,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":268,"author":{"gitId":"darren2pro"},"content":"    public Path getApplicantBookFilePath() {","lastModifiedDate":"2021-10-13"},{"lineNumber":269,"author":{"gitId":"darren2pro"},"content":"        return userPrefs.getApplicantBookFilePath();","lastModifiedDate":"2021-10-13"},{"lineNumber":270,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":271,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Harry-Gao-H":39,"LMAOboxhack":27,"darren2pro":48,"-":158}},{"path":"src/main/java/seedu/address/model/PositionBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LMAOboxhack"},"content":"package seedu.address.model;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.position.UniquePositionList;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":" * Wraps all position data at the position-book level","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":" * Duplicates are not allowed (by .isSamePosition comparison)","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"LMAOboxhack"},"content":"public class PositionBook implements ReadOnlyPositionBook {","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"Harry-Gao-H"},"content":"    private final UniquePositionList positions;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":"    {","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"Harry-Gao-H"},"content":"        positions \u003d new UniquePositionList();","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"LMAOboxhack"},"content":"    public PositionBook() {}","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"Harry-Gao-H"},"content":"     * Creates an PositionBook using the Positions in the {@code toBeCopied}","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"Harry-Gao-H"},"content":"    public PositionBook(ReadOnlyPositionBook toBeCopied) {","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"Harry-Gao-H"},"content":"        this();","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"Harry-Gao-H"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"Harry-Gao-H"},"content":"    //// list overwrite operations","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"Harry-Gao-H"},"content":"     * Replaces the contents of the position list with {@code positions}.","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"Harry-Gao-H"},"content":"     * {@code positions} must not contain duplicate positions.","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"Harry-Gao-H"},"content":"    public void setPositions(List\u003cPosition\u003e positions) {","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"Harry-Gao-H"},"content":"        this.positions.setPositions(positions);","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"Harry-Gao-H"},"content":"     * Resets the existing data of this {@code PositionBook} with {@code newData}.","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"Harry-Gao-H"},"content":"    public void resetData(ReadOnlyPositionBook newData) {","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"Harry-Gao-H"},"content":"        requireNonNull(newData);","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"Harry-Gao-H"},"content":"        setPositions(newData.getPositionList());","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"Harry-Gao-H"},"content":"    //// position-level operations","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"Harry-Gao-H"},"content":"     * Returns true if a position with the same identity as {@code position} exists in the position book.","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"Harry-Gao-H"},"content":"    public boolean hasPosition(Position position) {","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"Harry-Gao-H"},"content":"        requireNonNull(position);","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"Harry-Gao-H"},"content":"        return positions.contains(position);","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"Harry-Gao-H"},"content":"     * Adds a position to the position book.","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"Harry-Gao-H"},"content":"     * The position must not already exist in the position book.","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"Harry-Gao-H"},"content":"    public void addPosition(Position p) {","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"Harry-Gao-H"},"content":"        positions.add(p);","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"LMAOboxhack"},"content":"     * Searches for a position with the same identity as {@code dummyPosition}.","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"LMAOboxhack"},"content":"    public Position getPosition(Position dummyPosition) {","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"LMAOboxhack"},"content":"        requireNonNull(dummyPosition);","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"LMAOboxhack"},"content":"        return positions.getPosition(dummyPosition);","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"Harry-Gao-H"},"content":"     * Replaces the given position {@code target} in the list with {@code editedPosition}.","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"Harry-Gao-H"},"content":"     * {@code target} must exist in the position book.","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"Harry-Gao-H"},"content":"     * The position identity of {@code editedPosition} must not be the same as","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"Harry-Gao-H"},"content":"     * another existing position in the position book.","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"Harry-Gao-H"},"content":"    public void setPosition(Position target, Position editedPosition) {","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"Harry-Gao-H"},"content":"        requireNonNull(editedPosition);","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"Harry-Gao-H"},"content":"        positions.setPosition(target, editedPosition);","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"Harry-Gao-H"},"content":"     * Removes {@code key} from this {@code PositionBook}.","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"Harry-Gao-H"},"content":"     * {@code key} must exist in the position book.","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"Harry-Gao-H"},"content":"    public void removePosition(Position key) {","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"Harry-Gao-H"},"content":"        positions.remove(key);","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"Harry-Gao-H"},"content":"    //// util methods","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"Harry-Gao-H"},"content":"    public String toString() {","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"Harry-Gao-H"},"content":"        return positions.asUnmodifiableObservableList().size() + \" positions\";","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"Harry-Gao-H"},"content":"        // TODO: refine later","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":103,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":104,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":105,"author":{"gitId":"Harry-Gao-H"},"content":"    public ObservableList\u003cPosition\u003e getPositionList() {","lastModifiedDate":"2021-10-09"},{"lineNumber":106,"author":{"gitId":"Harry-Gao-H"},"content":"        return positions.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":109,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":110,"author":{"gitId":"Harry-Gao-H"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-09"},{"lineNumber":111,"author":{"gitId":"Harry-Gao-H"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-09"},{"lineNumber":112,"author":{"gitId":"Harry-Gao-H"},"content":"                || (other instanceof PositionBook // instanceof handles nulls","lastModifiedDate":"2021-10-09"},{"lineNumber":113,"author":{"gitId":"Harry-Gao-H"},"content":"                \u0026\u0026 positions.equals(((PositionBook) other).positions));","lastModifiedDate":"2021-10-09"},{"lineNumber":114,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":115,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"LMAOboxhack"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"Harry-Gao-H"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-09"},{"lineNumber":118,"author":{"gitId":"Harry-Gao-H"},"content":"        return positions.hashCode();","lastModifiedDate":"2021-10-09"},{"lineNumber":119,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"LMAOboxhack"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"Harry-Gao-H":101,"LMAOboxhack":20}},{"path":"src/main/java/seedu/address/model/ReadOnlyApplicantBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LMAOboxhack"},"content":"package seedu.address.model;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"LMAOboxhack"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"LMAOboxhack"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"LMAOboxhack"},"content":" * Unmodifiable view of an applicant book","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"LMAOboxhack"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"LMAOboxhack"},"content":"public interface ReadOnlyApplicantBook {","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"LMAOboxhack"},"content":"     * Returns an unmodifiable view of the applicant list.","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"LMAOboxhack"},"content":"     * This list will not contain any duplicate applicants.","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"LMAOboxhack"},"content":"    ObservableList\u003cApplicant\u003e getApplicantList();","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"LMAOboxhack"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"LMAOboxhack":17}},{"path":"src/main/java/seedu/address/model/ReadOnlyApplicationBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LMAOboxhack"},"content":"package seedu.address.model;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"LMAOboxhack"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.application.Application;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"LMAOboxhack"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"LMAOboxhack"},"content":" * An unmodifiable application list.","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"LMAOboxhack"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"LMAOboxhack"},"content":"public interface ReadOnlyApplicationBook {","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"LMAOboxhack"},"content":"     * Returns an unmodifiable application list.","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"LMAOboxhack"},"content":"     * This list will not contain any duplicate applications.","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"LMAOboxhack"},"content":"    ObservableList\u003cApplication\u003e getApplicationList();","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"LMAOboxhack"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"LMAOboxhack":17}},{"path":"src/main/java/seedu/address/model/ReadOnlyPositionBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LMAOboxhack"},"content":"package seedu.address.model;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"LMAOboxhack"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"LMAOboxhack"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"LMAOboxhack"},"content":" * Unmodifiable view of a position book","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"LMAOboxhack"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"LMAOboxhack"},"content":"public interface ReadOnlyPositionBook {","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"LMAOboxhack"},"content":"     * Returns an unmodifiable view of the position list.","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"LMAOboxhack"},"content":"     * This list will not contain any duplicate positions.","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":"    ObservableList\u003cPosition\u003e getPositionList();","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"LMAOboxhack"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"Harry-Gao-H":2,"LMAOboxhack":15}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"    Path getApplicantBookFilePath();","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"darren2pro":2,"-":16}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"    private Path applicantBookFilePath \u003d Paths.get(\"data\" , \"applicantbook.json\");","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":"    private Path positionBookFilePath \u003d Paths.get(\"data\", \"positionbook.json\");","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"Harry-Gao-H"},"content":"    public Path getPositionBookFilePath() {","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"Harry-Gao-H"},"content":"        return positionBookFilePath;","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"darren2pro"},"content":"    public Path getApplicantBookFilePath() {","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"darren2pro"},"content":"        return applicantBookFilePath;","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Harry-Gao-H":5,"darren2pro":4,"-":87}},{"path":"src/main/java/seedu/address/model/applicant/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"BenjaminTan99"},"content":" * Represents an Applicant\u0027s address in the MTR system.","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"public class Address {","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"    /*","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"    public final String value;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"     * @param address A valid address.","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"    public Address(String address) {","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"        requireNonNull(address);","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"        value \u003d address;","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"    public String toString() {","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"        return value;","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"darren2pro"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"darren2pro":54,"BenjaminTan99":1}},{"path":"src/main/java/seedu/address/model/applicant/Applicant.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LMAOboxhack"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.application.Application;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":" * Represents an Applicant in the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"public class Applicant {","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"    // Identity fields","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"    private final Name name;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"    private final Phone phone;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"    private final Email email;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"    // Data fields","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"    private final Address address;","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"    private Application application;","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"     * Every field must be present and not null","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"    public Applicant(Name name, Phone phone, Email email, Address address, Position dummyPosition) {","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"LMAOboxhack"},"content":"        requireAllNonNull(name, phone, email, address);","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"        this.email \u003d email;","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"        this.application \u003d new Application(this, dummyPosition);","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"    public Name getName() {","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"        return name;","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"    public Phone getPhone() {","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"        return phone;","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"    public Email getEmail() {","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"darren2pro"},"content":"        return email;","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"darren2pro"},"content":"    public Address getAddress() {","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"        return address;","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"    public Application getApplication() {","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"darren2pro"},"content":"        return application;","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"darren2pro"},"content":"    public void setApplication(Application application) {","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"darren2pro"},"content":"        this.application \u003d application;","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"darren2pro"},"content":"     * Returns true if both applicants have the same name.","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"darren2pro"},"content":"     * This defines a weaker notion of equality between two applicants.","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"darren2pro"},"content":"    public boolean isSameApplicant(Applicant otherApplicant) {","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"darren2pro"},"content":"        if (otherApplicant \u003d\u003d this) {","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"darren2pro"},"content":"            return true;","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"darren2pro"},"content":"        return otherApplicant !\u003d null","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"LMAOboxhack"},"content":"                \u0026\u0026 name.equals(otherApplicant.name);","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"darren2pro"},"content":"     * Returns true if both applicants have the same identity and data fields.","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"darren2pro"},"content":"     * This defines a stronger notion of equality between two applicants.","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"darren2pro"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"darren2pro"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"darren2pro"},"content":"            return true;","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"darren2pro"},"content":"        if (!(other instanceof Applicant)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"darren2pro"},"content":"            return false;","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"darren2pro"},"content":"        Applicant otherApplicant \u003d (Applicant) other;","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"LMAOboxhack"},"content":"        return name.equals(otherApplicant.name)","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"LMAOboxhack"},"content":"                \u0026\u0026 phone.equals(otherApplicant.phone)","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"LMAOboxhack"},"content":"                \u0026\u0026 email.equals(otherApplicant.email)","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"LMAOboxhack"},"content":"                \u0026\u0026 address.equals(otherApplicant.address);","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"darren2pro"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"darren2pro"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"LMAOboxhack"},"content":"        return Objects.hash(name, phone, email, address);","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"darren2pro"},"content":"    public String toString() {","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"LMAOboxhack"},"content":"        return name","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"LMAOboxhack"},"content":"                + \"; Phone: \"","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"LMAOboxhack"},"content":"                + phone","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"LMAOboxhack"},"content":"                + \"; Email: \"","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"LMAOboxhack"},"content":"                + email","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"LMAOboxhack"},"content":"                + \"; Address: \"","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"darren2pro"},"content":"                + address","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"darren2pro"},"content":"                + \"; Application: \"","lastModifiedDate":"2021-10-13"},{"lineNumber":111,"author":{"gitId":"darren2pro"},"content":"                + application;","lastModifiedDate":"2021-10-13"},{"lineNumber":112,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":113,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":114,"author":{"gitId":"darren2pro"},"content":"    public String getApplicationSummary() {","lastModifiedDate":"2021-10-13"},{"lineNumber":115,"author":{"gitId":"darren2pro"},"content":"        return \"Applied for: \" + application.getPosition().getTitle() + \"; Status: \" + application.getStatus();","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":118,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"LMAOboxhack":15,"darren2pro":103}},{"path":"src/main/java/seedu/address/model/applicant/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":" * Represents an Applicant\u0027s email in the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"public class Email {","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"    public final String value;","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"     * @param email A valid email address.","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"    public Email(String email) {","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"        requireNonNull(email);","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"        value \u003d email;","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"darren2pro"},"content":"    public String toString() {","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"darren2pro"},"content":"        return value;","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"darren2pro"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"darren2pro"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"darren2pro"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"darren2pro"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"darren2pro"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"darren2pro"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"darren2pro":70}},{"path":"src/main/java/seedu/address/model/applicant/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":" * Represents an Applicant\u0027s name in MrTechRecruiter.","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"public class Name {","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"    /*","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"    public final String fullName;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"     * @param name A valid name.","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"    public Name(String name) {","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"        fullName \u003d name;","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"    public String toString() {","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"        return fullName;","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"darren2pro"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"darren2pro"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"darren2pro"},"content":"        return fullName.hashCode();","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"darren2pro":57}},{"path":"src/main/java/seedu/address/model/applicant/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":" * Represents an Applicant\u0027s phone number in the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"public class Phone {","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"    public final String value;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"    public Phone(String phone) {","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"        requireNonNull(phone);","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"        value \u003d phone;","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"    public String toString() {","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"        return value;","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"darren2pro"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"darren2pro":51}},{"path":"src/main/java/seedu/address/model/applicant/UniqueApplicantList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.exceptions.ApplicantNotFoundException;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.exceptions.DuplicateApplicantException;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":" * A list of applicants that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":" * An applicant is considered unique by comparing using {@code Applicant#isSameApplicant(Applicant)}. As such, adding","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":" * and updating of applicants uses Applicant#isSameApplicant(Applicant) for equality so as to ensure that the applicant","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":" * being added or updated is unique in terms of identity in the UniqueApplicantList. However, the removal of an","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":" * applicant uses Applicant#equals(Object) so as to ensure that the applicant with exactly the same fields will","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":" * be removed.","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":" *","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":" *","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":" * @see Applicant#isSameApplicant(Applicant)","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"public class UniqueApplicantList implements Iterable\u003cApplicant\u003e {","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"    private final ObservableList\u003cApplicant\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"    private final ObservableList\u003cApplicant\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"     * Returns true if the list contains an equivalent applicant as the given argument.","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"    public boolean contains(Applicant toCheck) {","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"        return internalList.stream().anyMatch(toCheck::isSameApplicant);","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"     * Adds an applicant to the list.","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"     * The applicant must not already exist in the list.","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"    public void add(Applicant toAdd) {","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"darren2pro"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"            throw new DuplicateApplicantException();","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"darren2pro"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"     * Replaces the applicant {@code target} in the list with {@code editedApplicant}.","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"darren2pro"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"darren2pro"},"content":"     * The applicant identity of {@code editedApplicant} must not be the same as another existing applicant in the list.","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"darren2pro"},"content":"    public void setApplicant(Applicant target, Applicant editedApplicant) {","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"darren2pro"},"content":"        requireAllNonNull(target, editedApplicant);","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"darren2pro"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"darren2pro"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"darren2pro"},"content":"            throw new ApplicantNotFoundException();","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"darren2pro"},"content":"        if (!target.isSameApplicant(editedApplicant) \u0026\u0026 contains(editedApplicant)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"darren2pro"},"content":"            throw new DuplicateApplicantException();","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"darren2pro"},"content":"        internalList.set(index, editedApplicant);","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"darren2pro"},"content":"     * Removes the equivalent applicant from the list.","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"darren2pro"},"content":"     * The applicant must exist in the list.","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"darren2pro"},"content":"    public void remove(Applicant toRemove) {","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"darren2pro"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"darren2pro"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"darren2pro"},"content":"            throw new ApplicantNotFoundException();","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"darren2pro"},"content":"    public void setApplicants(UniqueApplicantList replacement) {","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"darren2pro"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"darren2pro"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"darren2pro"},"content":"     * Replaces the contents of this list with {@code applicants}.","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"darren2pro"},"content":"     * {@code applicants} must not contain duplicate applicants.","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"darren2pro"},"content":"    public void setApplicants(List\u003cApplicant\u003e applicants) {","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"darren2pro"},"content":"        requireAllNonNull(applicants);","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"darren2pro"},"content":"        if (!applicantsAreUnique(applicants)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"darren2pro"},"content":"            throw new DuplicateApplicantException();","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"darren2pro"},"content":"        internalList.setAll(applicants);","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"darren2pro"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-09"},{"lineNumber":103,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":104,"author":{"gitId":"darren2pro"},"content":"    public ObservableList\u003cApplicant\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-09"},{"lineNumber":105,"author":{"gitId":"darren2pro"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-09"},{"lineNumber":106,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":109,"author":{"gitId":"darren2pro"},"content":"    public Iterator\u003cApplicant\u003e iterator() {","lastModifiedDate":"2021-10-09"},{"lineNumber":110,"author":{"gitId":"darren2pro"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-09"},{"lineNumber":111,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":112,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":113,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":114,"author":{"gitId":"darren2pro"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-09"},{"lineNumber":115,"author":{"gitId":"darren2pro"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-09"},{"lineNumber":116,"author":{"gitId":"darren2pro"},"content":"                || (other instanceof UniqueApplicantList // instanceof handles nulls","lastModifiedDate":"2021-10-09"},{"lineNumber":117,"author":{"gitId":"darren2pro"},"content":"                \u0026\u0026 internalList.equals(((UniqueApplicantList) other).internalList));","lastModifiedDate":"2021-10-09"},{"lineNumber":118,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":119,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":120,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":121,"author":{"gitId":"darren2pro"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-09"},{"lineNumber":122,"author":{"gitId":"darren2pro"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-10-09"},{"lineNumber":123,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":124,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":125,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":126,"author":{"gitId":"darren2pro"},"content":"     * Returns true if {@code applicants} contains only unique applicants.","lastModifiedDate":"2021-10-09"},{"lineNumber":127,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":128,"author":{"gitId":"darren2pro"},"content":"    private boolean applicantsAreUnique(List\u003cApplicant\u003e applicants) {","lastModifiedDate":"2021-10-09"},{"lineNumber":129,"author":{"gitId":"darren2pro"},"content":"        for (int i \u003d 0; i \u003c applicants.size() - 1; i++) {","lastModifiedDate":"2021-10-09"},{"lineNumber":130,"author":{"gitId":"darren2pro"},"content":"            for (int j \u003d i + 1; j \u003c applicants.size(); j++) {","lastModifiedDate":"2021-10-09"},{"lineNumber":131,"author":{"gitId":"darren2pro"},"content":"                if (applicants.get(i).isSameApplicant(applicants.get(j))) {","lastModifiedDate":"2021-10-09"},{"lineNumber":132,"author":{"gitId":"darren2pro"},"content":"                    return false;","lastModifiedDate":"2021-10-09"},{"lineNumber":133,"author":{"gitId":"darren2pro"},"content":"                }","lastModifiedDate":"2021-10-09"},{"lineNumber":134,"author":{"gitId":"darren2pro"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":135,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":136,"author":{"gitId":"darren2pro"},"content":"        return true;","lastModifiedDate":"2021-10-09"},{"lineNumber":137,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":138,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":139,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"darren2pro":139}},{"path":"src/main/java/seedu/address/model/applicant/exceptions/ApplicantNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.model.applicant.exceptions;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":" * Signals that the operation is unable to find the specified applicant.","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"public class ApplicantNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"darren2pro":6}},{"path":"src/main/java/seedu/address/model/applicant/exceptions/DuplicateApplicantException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.model.applicant.exceptions;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":" * Signals that the operation will result in duplicate Applicants (Applicants are considered duplicates if they have","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":" * the same name).","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"public class DuplicateApplicantException extends RuntimeException {","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"    public DuplicateApplicantException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"        super(\"Operation would result in duplicate applicants\");","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"darren2pro":13}},{"path":"src/main/java/seedu/address/model/application/Application.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LMAOboxhack"},"content":"package seedu.address.model.application;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"LMAOboxhack"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"LMAOboxhack"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"LMAOboxhack"},"content":" * An association class representing a job application.","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"LMAOboxhack"},"content":" *","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"LMAOboxhack"},"content":" * References both the job applicant and the applied position.","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"LMAOboxhack"},"content":" * Contains relevant information on the application.","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"LMAOboxhack"},"content":" *","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"LMAOboxhack"},"content":" * If either the Applicant or Position is deleted, the Application should also be deleted.","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"LMAOboxhack"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"LMAOboxhack"},"content":"public class Application {","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"LMAOboxhack"},"content":"    private final Applicant applicant;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"LMAOboxhack"},"content":"    private final Position position;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"LMAOboxhack"},"content":"    private ApplicationStatus status;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"LMAOboxhack"},"content":"     * Constructor for a job application.","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"LMAOboxhack"},"content":"     * Invoked whenever the add-applicant command is called.","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"LMAOboxhack"},"content":"      */","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"LMAOboxhack"},"content":"    public Application(Applicant applicant, Position position) {","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"LMAOboxhack"},"content":"        this.applicant \u003d applicant;","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"LMAOboxhack"},"content":"        this.position \u003d position;","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"LMAOboxhack"},"content":"        this.status \u003d ApplicationStatus.PENDING;","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"LMAOboxhack"},"content":"     * Marks the application as pending.","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"LMAOboxhack"},"content":"    public void markAsPending() {","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"LMAOboxhack"},"content":"        this.status \u003d ApplicationStatus.PENDING;","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"LMAOboxhack"},"content":"     * Marks the application as accepted.","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"LMAOboxhack"},"content":"    public void markAsAccepted() {","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"LMAOboxhack"},"content":"        this.status \u003d ApplicationStatus.ACCEPTED;","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"LMAOboxhack"},"content":"     * Marks the application as rejected.","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"LMAOboxhack"},"content":"    public void markAsRejected() {","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"LMAOboxhack"},"content":"        this.status \u003d ApplicationStatus.REJECTED;","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"LMAOboxhack"},"content":"     * Returns the status of the /application.","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"LMAOboxhack"},"content":"    public ApplicationStatus getStatus() {","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"LMAOboxhack"},"content":"        return status;","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"darren2pro"},"content":"    public Position getPosition() {","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"darren2pro"},"content":"        return position;","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"LMAOboxhack"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"LMAOboxhack"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"LMAOboxhack"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"LMAOboxhack"},"content":"            return true;","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"LMAOboxhack"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"LMAOboxhack"},"content":"        if (!(other instanceof Application)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"LMAOboxhack"},"content":"            return false;","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"LMAOboxhack"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"LMAOboxhack"},"content":"        Application otherApplication \u003d (Application) other;","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"LMAOboxhack"},"content":"        return applicant.equals(otherApplication.applicant)","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"LMAOboxhack"},"content":"                \u0026\u0026 position.equals(otherApplication.position)","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"LMAOboxhack"},"content":"                \u0026\u0026 status.equals(otherApplication.status);","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"LMAOboxhack"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"LMAOboxhack"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"LMAOboxhack"},"content":"        return Objects.hash(applicant, position, status);","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"LMAOboxhack"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"LMAOboxhack"},"content":"    public String toString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"LMAOboxhack"},"content":"        return \"Application: {\"","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"darren2pro"},"content":"                + \"Applicant: \" + applicant.getName()","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"darren2pro"},"content":"                + \", Position: \" + position.getTitle()","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"LMAOboxhack"},"content":"                + \", Status: \" + status","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"LMAOboxhack"},"content":"                + \"}\";","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"LMAOboxhack"},"content":"     * The status of a job application.","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"LMAOboxhack"},"content":"    public enum ApplicationStatus { PENDING, ACCEPTED, REJECTED }","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"LMAOboxhack"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"LMAOboxhack":91,"darren2pro":6}},{"path":"src/main/java/seedu/address/model/application/UniqueApplicationList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LMAOboxhack"},"content":"package seedu.address.model.application;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"LMAOboxhack"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"LMAOboxhack"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"LMAOboxhack"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"LMAOboxhack"},"content":"import java.util.List;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"LMAOboxhack"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"LMAOboxhack"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.application.exceptions.ApplicationNotFoundException;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.application.exceptions.DuplicateApplicationException;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"LMAOboxhack"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"LMAOboxhack"},"content":" * A list of applications that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"LMAOboxhack"},"content":" * Applications are considered unique using {@code Application#equals(Object)}.","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"LMAOboxhack"},"content":" *","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"LMAOboxhack"},"content":" * Supports a minimal set of list operations","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"LMAOboxhack"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"LMAOboxhack"},"content":"public class UniqueApplicationList implements Iterable\u003cApplication\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"LMAOboxhack"},"content":"    private final ObservableList\u003cApplication\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"LMAOboxhack"},"content":"    private final ObservableList\u003cApplication\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"LMAOboxhack"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"LMAOboxhack"},"content":"     * Returns true if the list contains an equivalent application as the given argument.","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"LMAOboxhack"},"content":"    public boolean contains(Application toCheck) {","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"LMAOboxhack"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"LMAOboxhack"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"LMAOboxhack"},"content":"     * Adds an application to the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"LMAOboxhack"},"content":"     * The application must not already exist in the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"LMAOboxhack"},"content":"    public void add(Application toAdd) {","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"LMAOboxhack"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"LMAOboxhack"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"LMAOboxhack"},"content":"            throw new DuplicateApplicationException();","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"LMAOboxhack"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"LMAOboxhack"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"LMAOboxhack"},"content":"     * Removes the equivalent application from the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"LMAOboxhack"},"content":"     * The application must exist in the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"LMAOboxhack"},"content":"    public void remove(Application toRemove) {","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"LMAOboxhack"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"LMAOboxhack"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"LMAOboxhack"},"content":"            throw new ApplicationNotFoundException();","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"LMAOboxhack"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"LMAOboxhack"},"content":"    public void setApplications(UniqueApplicationList replacement) {","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"LMAOboxhack"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"LMAOboxhack"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"LMAOboxhack"},"content":"     * Replaces the contents of this list with {@code applications}.","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"LMAOboxhack"},"content":"     * {@code applications} must not contain duplicate applications.","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"LMAOboxhack"},"content":"    public void setApplications(List\u003cApplication\u003e applications) {","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"LMAOboxhack"},"content":"        requireAllNonNull(applications);","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"LMAOboxhack"},"content":"        if (!applicationsAreUnique(applications)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"LMAOboxhack"},"content":"            throw new DuplicateApplicationException();","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"LMAOboxhack"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"LMAOboxhack"},"content":"        internalList.setAll(applications);","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"LMAOboxhack"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"LMAOboxhack"},"content":"    public ObservableList\u003cApplication\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"LMAOboxhack"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"LMAOboxhack"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"LMAOboxhack"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"LMAOboxhack"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"LMAOboxhack"},"content":"                || (other instanceof UniqueApplicationList // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"LMAOboxhack"},"content":"                \u0026\u0026 internalList.equals(((UniqueApplicationList) other).internalList));","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"LMAOboxhack"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"LMAOboxhack"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"LMAOboxhack"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"LMAOboxhack"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"LMAOboxhack"},"content":"    public Iterator\u003cApplication\u003e iterator() {","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"LMAOboxhack"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"LMAOboxhack"},"content":"     * Returns true if {@code applications} contains only unique applications.","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"LMAOboxhack"},"content":"    private boolean applicationsAreUnique(List\u003cApplication\u003e applications) {","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"LMAOboxhack"},"content":"        for (int i \u003d 0; i \u003c applications.size() - 1; i++) {","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"LMAOboxhack"},"content":"            for (int j \u003d i + 1; j \u003c applications.size(); j++) {","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"LMAOboxhack"},"content":"                if (applications.get(i).equals(applications.get(j))) {","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"LMAOboxhack"},"content":"                    return false;","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"LMAOboxhack"},"content":"                }","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"LMAOboxhack"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"LMAOboxhack"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"LMAOboxhack"},"content":"        return true;","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"LMAOboxhack"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"LMAOboxhack":111}},{"path":"src/main/java/seedu/address/model/application/exceptions/ApplicationNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LMAOboxhack"},"content":"package seedu.address.model.application.exceptions;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"LMAOboxhack"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"LMAOboxhack"},"content":" * Signals that the operation is unable to find the specified application.","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"LMAOboxhack"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"LMAOboxhack"},"content":"public class ApplicationNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"LMAOboxhack":6}},{"path":"src/main/java/seedu/address/model/application/exceptions/DuplicateApplicationException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LMAOboxhack"},"content":"package seedu.address.model.application.exceptions;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"LMAOboxhack"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"LMAOboxhack"},"content":" * Signals that the operation will result in duplicate Applications (Applications are considered duplicates","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"LMAOboxhack"},"content":" * if they have the same applicant, position and application status).","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"LMAOboxhack"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"LMAOboxhack"},"content":"public class DuplicateApplicationException extends RuntimeException {","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"LMAOboxhack"},"content":"    public DuplicateApplicationException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"LMAOboxhack"},"content":"        super(\"Operation would result in duplicate applications\");","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"LMAOboxhack"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"LMAOboxhack":11}},{"path":"src/main/java/seedu/address/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":" * Signals that the operation will result in duplicate Persons","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":" * (Persons are considered duplicates if they have the same identity).","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"Harry-Gao-H":2,"-":9}},{"path":"src/main/java/seedu/address/model/position/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"package seedu.address.model.position;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":" * Represents a Position\u0027s description in the position book.","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDescription(String)}","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":"public class Description {","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"            \"Descriptions should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":"    /*","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"     * The first character of the description must not be a whitespace,","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"Harry-Gao-H"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"Harry-Gao-H"},"content":"    public final String description;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"Harry-Gao-H"},"content":"     * Constructs a {@code description}.","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"Harry-Gao-H"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"Harry-Gao-H"},"content":"     * @param description A valid description.","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"Harry-Gao-H"},"content":"    public Description(String description) {","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"Harry-Gao-H"},"content":"        requireNonNull(description);","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"Harry-Gao-H"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"Harry-Gao-H"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"Harry-Gao-H"},"content":"     * Returns true if a given string is a valid description.","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"Harry-Gao-H"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"Harry-Gao-H"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"Harry-Gao-H"},"content":"    public String toString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"Harry-Gao-H"},"content":"        return description;","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"Harry-Gao-H"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"Harry-Gao-H"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"Harry-Gao-H"},"content":"                || (other instanceof Description // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"Harry-Gao-H"},"content":"                \u0026\u0026 description.equals(((Description) other).description)); // state check","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"Harry-Gao-H"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"Harry-Gao-H":52}},{"path":"src/main/java/seedu/address/model/position/Position.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LMAOboxhack"},"content":"package seedu.address.model.position;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":" * Represents a Position in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":"public class Position {","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"    // Identity fields","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":"    private final Title title;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"    private final Description description;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"Harry-Gao-H"},"content":"    // Data field is empty","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"Harry-Gao-H"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"Harry-Gao-H"},"content":"    public Position(Title title, Description description) {","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"Harry-Gao-H"},"content":"        requireAllNonNull(title);","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"Harry-Gao-H"},"content":"        this.title \u003d title;","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"Harry-Gao-H"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"Harry-Gao-H"},"content":"    public Title getTitle() {","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"Harry-Gao-H"},"content":"        return title;","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"Harry-Gao-H"},"content":"    public Description getDescription() {","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"Harry-Gao-H"},"content":"        return description;","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"Harry-Gao-H"},"content":"     * Returns true if both positions have the same title.","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"Harry-Gao-H"},"content":"     * This defines a weaker notion of equality between two positions.","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"Harry-Gao-H"},"content":"    public boolean isSamePosition(Position otherPosition) {","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"Harry-Gao-H"},"content":"        if (otherPosition \u003d\u003d this) {","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"Harry-Gao-H"},"content":"            return true;","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"Harry-Gao-H"},"content":"        return otherPosition !\u003d null","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"Harry-Gao-H"},"content":"                \u0026\u0026 otherPosition.getTitle().equals(getTitle());","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"Harry-Gao-H"},"content":"     * Returns true if both positions have the same identity and data fields.","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"Harry-Gao-H"},"content":"     * This defines a stronger notion of equality between two positions.","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"Harry-Gao-H"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"Harry-Gao-H"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"Harry-Gao-H"},"content":"            return true;","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"Harry-Gao-H"},"content":"        if (!(other instanceof Position)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"Harry-Gao-H"},"content":"            return false;","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"Harry-Gao-H"},"content":"        Position otherPosition \u003d (Position) other;","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"Harry-Gao-H"},"content":"        return otherPosition.getTitle().equals(getTitle())","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"Harry-Gao-H"},"content":"                \u0026\u0026 otherPosition.getDescription().equals(getDescription());","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"Harry-Gao-H"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"Harry-Gao-H"},"content":"        // use this method for custom fields hashing","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"Harry-Gao-H"},"content":"        return Objects.hash(title, description);","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"Harry-Gao-H"},"content":"    public String toString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"Harry-Gao-H"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"Harry-Gao-H"},"content":"        builder.append(getTitle())","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"Harry-Gao-H"},"content":"                .append(\"; Description: \")","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"Harry-Gao-H"},"content":"                .append(getDescription());","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"Harry-Gao-H"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"Harry-Gao-H"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"Harry-Gao-H":82,"LMAOboxhack":2}},{"path":"src/main/java/seedu/address/model/position/Title.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"package seedu.address.model.position;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":" * Represents a Position\u0027s title in the position book.","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTitle(String)}","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":"public class Title {","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"            \"Titles should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":"    /*","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"     * The first character of the Title must not be a whitespace,","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"Harry-Gao-H"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"Harry-Gao-H"},"content":"    public final String fullTitle;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"Harry-Gao-H"},"content":"     * Constructs a {@code title}.","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"Harry-Gao-H"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"Harry-Gao-H"},"content":"     * @param title A valid title.","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"Harry-Gao-H"},"content":"    public Title(String title) {","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"Harry-Gao-H"},"content":"        requireNonNull(title);","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"Harry-Gao-H"},"content":"        checkArgument(isValidTitle(title), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"Harry-Gao-H"},"content":"        fullTitle \u003d title;","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"Harry-Gao-H"},"content":"     * Returns true if a given string is a valid title.","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"Harry-Gao-H"},"content":"    public static boolean isValidTitle(String test) {","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"Harry-Gao-H"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"Harry-Gao-H"},"content":"    public String toString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"Harry-Gao-H"},"content":"        return fullTitle;","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"Harry-Gao-H"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"Harry-Gao-H"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"Harry-Gao-H"},"content":"                || (other instanceof Title // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"Harry-Gao-H"},"content":"                \u0026\u0026 fullTitle.equals(((Title) other).fullTitle)); // state check","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"Harry-Gao-H"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"Harry-Gao-H"},"content":"        return fullTitle.hashCode();","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"Harry-Gao-H"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"Harry-Gao-H":58}},{"path":"src/main/java/seedu/address/model/position/UniquePositionList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"package seedu.address.model.position;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":"import java.util.List;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.position.exceptions.DuplicatePositionException;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.position.exceptions.PositionNotFoundException;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":" * A list of positions that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"Harry-Gao-H"},"content":" * A position is considered unique by comparing using {@code Position#isSamePosition(Position)}.","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"Harry-Gao-H"},"content":" * As such, adding and updating of positions uses Position#isSamePosition(Position) for equality","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":" * so as to ensure that the position being added or updated is","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"Harry-Gao-H"},"content":" * unique in terms of identity in the UniquePositionList.","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"Harry-Gao-H"},"content":" * However, the removal of a position uses Position#equals(Object) so","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"Harry-Gao-H"},"content":" * as to ensure that the position with exactly the same fields will be removed.","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"Harry-Gao-H"},"content":" *","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"Harry-Gao-H"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"Harry-Gao-H"},"content":" *","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"Harry-Gao-H"},"content":" * @see Position#isSamePosition(Position)","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"Harry-Gao-H"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"Harry-Gao-H"},"content":"public class UniquePositionList implements Iterable\u003cPosition\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"Harry-Gao-H"},"content":"    private final ObservableList\u003cPosition\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"Harry-Gao-H"},"content":"    private final ObservableList\u003cPosition\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"Harry-Gao-H"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"Harry-Gao-H"},"content":"     * Returns true if the list contains an equivalent position as the given argument.","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"Harry-Gao-H"},"content":"    public boolean contains(Position toCheck) {","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"Harry-Gao-H"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"Harry-Gao-H"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePosition);","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"Harry-Gao-H"},"content":"     * Adds a position to the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"Harry-Gao-H"},"content":"     * The position must not already exist in the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"Harry-Gao-H"},"content":"    public void add(Position toAdd) {","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"Harry-Gao-H"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"Harry-Gao-H"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new DuplicatePositionException();","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"Harry-Gao-H"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"LMAOboxhack"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"LMAOboxhack"},"content":"     * Searches for a position matching the given {@code dummyPosition}.","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"LMAOboxhack"},"content":"     * Positions are compared with {@code Position::isSamePosition}.","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"LMAOboxhack"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"LMAOboxhack"},"content":"    public Position getPosition(Position dummyPosition) {","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"LMAOboxhack"},"content":"        requireNonNull(dummyPosition);","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"LMAOboxhack"},"content":"        return internalList.stream()","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"LMAOboxhack"},"content":"                .filter(position -\u003e position.isSamePosition(dummyPosition))","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"LMAOboxhack"},"content":"                .findFirst()","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"LMAOboxhack"},"content":"                .orElseThrow(PositionNotFoundException::new);","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"LMAOboxhack"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"Harry-Gao-H"},"content":"     * Replaces the position {@code target} in the list with {@code editedPosition}.","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"Harry-Gao-H"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"Harry-Gao-H"},"content":"     * The position identity of {@code editedPosition} must not be the same as another existing position in the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"Harry-Gao-H"},"content":"    public void setPosition(Position target, Position editedPosition) {","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"Harry-Gao-H"},"content":"        requireAllNonNull(target, editedPosition);","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"Harry-Gao-H"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"Harry-Gao-H"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new PositionNotFoundException();","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"Harry-Gao-H"},"content":"        if (!target.isSamePosition(editedPosition) \u0026\u0026 contains(editedPosition)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new DuplicatePositionException();","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"Harry-Gao-H"},"content":"        internalList.set(index, editedPosition);","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"Harry-Gao-H"},"content":"     * Removes the equivalent position from the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"Harry-Gao-H"},"content":"     * The position must exist in the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"Harry-Gao-H"},"content":"    public void remove(Position toRemove) {","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"Harry-Gao-H"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"Harry-Gao-H"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new PositionNotFoundException();","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"Harry-Gao-H"},"content":"    public void setPositions(UniquePositionList replacement) {","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"Harry-Gao-H"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"Harry-Gao-H"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"Harry-Gao-H"},"content":"     * Replaces the contents of this list with {@code positions}.","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"Harry-Gao-H"},"content":"     * {@code positions} must not contain duplicate positions.","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"Harry-Gao-H"},"content":"    public void setPositions(List\u003cPosition\u003e positions) {","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"Harry-Gao-H"},"content":"        requireAllNonNull(positions);","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"Harry-Gao-H"},"content":"        if (!positionsAreUnique(positions)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new DuplicatePositionException();","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"Harry-Gao-H"},"content":"        internalList.setAll(positions);","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"Harry-Gao-H"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"Harry-Gao-H"},"content":"    public ObservableList\u003cPosition\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"Harry-Gao-H"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"Harry-Gao-H"},"content":"    public Iterator\u003cPosition\u003e iterator() {","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"Harry-Gao-H"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"Harry-Gao-H"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"Harry-Gao-H"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"Harry-Gao-H"},"content":"                || (other instanceof UniquePositionList // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"Harry-Gao-H"},"content":"                \u0026\u0026 internalList.equals(((UniquePositionList) other).internalList));","lastModifiedDate":"2021-10-07"},{"lineNumber":131,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":133,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"Harry-Gao-H"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-07"},{"lineNumber":135,"author":{"gitId":"Harry-Gao-H"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-10-07"},{"lineNumber":136,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":137,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":138,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":139,"author":{"gitId":"Harry-Gao-H"},"content":"     * Returns true if {@code positions} contains only unique positions.","lastModifiedDate":"2021-10-08"},{"lineNumber":140,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":141,"author":{"gitId":"Harry-Gao-H"},"content":"    private boolean positionsAreUnique(List\u003cPosition\u003e positions) {","lastModifiedDate":"2021-10-07"},{"lineNumber":142,"author":{"gitId":"Harry-Gao-H"},"content":"        for (int i \u003d 0; i \u003c positions.size() - 1; i++) {","lastModifiedDate":"2021-10-07"},{"lineNumber":143,"author":{"gitId":"Harry-Gao-H"},"content":"            for (int j \u003d i + 1; j \u003c positions.size(); j++) {","lastModifiedDate":"2021-10-07"},{"lineNumber":144,"author":{"gitId":"Harry-Gao-H"},"content":"                if (positions.get(i).isSamePosition(positions.get(j))) {","lastModifiedDate":"2021-10-07"},{"lineNumber":145,"author":{"gitId":"Harry-Gao-H"},"content":"                    return false;","lastModifiedDate":"2021-10-07"},{"lineNumber":146,"author":{"gitId":"Harry-Gao-H"},"content":"                }","lastModifiedDate":"2021-10-07"},{"lineNumber":147,"author":{"gitId":"Harry-Gao-H"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":148,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":149,"author":{"gitId":"Harry-Gao-H"},"content":"        return true;","lastModifiedDate":"2021-10-07"},{"lineNumber":150,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":151,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":152,"author":{"gitId":"Harry-Gao-H"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"Harry-Gao-H":140,"LMAOboxhack":12}},{"path":"src/main/java/seedu/address/model/position/exceptions/DuplicatePositionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"package seedu.address.model.position.exceptions;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":" * Signals that the operation will result in duplicate Positions","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":" * (Positions are considered duplicates if they have the same identity).","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":"public class DuplicatePositionException extends RuntimeException {","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":"    public DuplicatePositionException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":"        super(\"Operation would result in duplicate positions\");","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"Harry-Gao-H":11}},{"path":"src/main/java/seedu/address/model/position/exceptions/PositionNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"package seedu.address.model.position.exceptions;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":" * Signals that the operation is unable to find the specified position.","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"public class PositionNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"Harry-Gao-H":6}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"BenjaminTan99"},"content":"                    new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"BenjaminTan99"},"content":"                    new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"BenjaminTan99"},"content":"                    new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"BenjaminTan99"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"BenjaminTan99"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"BenjaminTan99"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"-":55,"BenjaminTan99":6}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"BenjaminTan99"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"BenjaminTan99"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags);","lastModifiedDate":"2021-09-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":107,"BenjaminTan99":2}},{"path":"src/main/java/seedu/address/ui/ApplicantCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":" * A UI component that displays information of a {@code Applicant}.","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"public class ApplicantCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"    private static final String FXML \u003d \"ApplicantListCard.fxml\";","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"    public final Applicant applicant;","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"    @FXML","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"    @FXML","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"    private Label name;","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"    @FXML","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"    private Label id;","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"    @FXML","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"    private Label phone;","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"    @FXML","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"    private Label address;","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"    @FXML","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"    private Label email;","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"    @FXML","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"    private Label application;","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"     * Creates a {@code ApplicantCard} with the given {@code Applicant} and index to display.","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"    public ApplicantCard(Applicant applicant, int displayedIndex) {","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"        super(FXML);","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"        this.applicant \u003d applicant;","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"darren2pro"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"        name.setText(applicant.getName().fullName);","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"        phone.setText(applicant.getPhone().value);","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"darren2pro"},"content":"        address.setText(applicant.getAddress().value);","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"        email.setText(applicant.getEmail().value);","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"        application.setText(applicant.getApplicationSummary());","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"darren2pro"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"darren2pro"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"darren2pro"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"darren2pro"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"darren2pro"},"content":"            return true;","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"darren2pro"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"darren2pro"},"content":"        if (!(other instanceof ApplicantCard)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"darren2pro"},"content":"            return false;","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"darren2pro"},"content":"        // state check","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"darren2pro"},"content":"        ApplicantCard card \u003d (ApplicantCard) other;","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"darren2pro"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"darren2pro"},"content":"                \u0026\u0026 applicant.equals(card.applicant);","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"darren2pro":72}},{"path":"src/main/java/seedu/address/ui/ApplicantListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":" * Panel containing the list of applicants.","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"public class ApplicantListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"    private static final String FXML \u003d \"ApplicantListPanel.fxml\";","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ApplicantListPanel.class);","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"    @FXML","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"    private ListView\u003cApplicant\u003e applicantListView;","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"     * Creates a {@code ApplicantListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"    public ApplicantListPanel(ObservableList\u003cApplicant\u003e applicantList) {","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"        super(FXML);","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"        applicantListView.setItems(applicantList);","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"        applicantListView.setCellFactory(listView -\u003e new ApplicantListViewCell());","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Applicant} using a {@code ApplicantCard}.","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"    class ApplicantListViewCell extends ListCell\u003cApplicant\u003e {","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"        protected void updateItem(Applicant applicant, boolean empty) {","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"            super.updateItem(applicant, empty);","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"            if (empty || applicant \u003d\u003d null) {","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"                setText(null);","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"            } else {","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"                setGraphic(new ApplicantCard(applicant, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"darren2pro"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"darren2pro":50}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"    private ApplicantListPanel applicantListPanel;","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"Harry-Gao-H"},"content":"    private PositionListPanel positionListPanel;","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"darren2pro"},"content":"    @FXML","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"    private StackPane applicantListPanelPlaceholder;","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"Harry-Gao-H"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"Harry-Gao-H"},"content":"    private StackPane positionListPanelPlaceholder;","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":135,"author":{"gitId":"darren2pro"},"content":"     * Fills up all the placeholders of this window with applicants.","lastModifiedDate":"2021-10-13"},{"lineNumber":136,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":137,"author":{"gitId":"darren2pro"},"content":"    void fillInnerPartsWithApplicants() {","lastModifiedDate":"2021-10-13"},{"lineNumber":138,"author":{"gitId":"darren2pro"},"content":"        applicantListPanel \u003d new ApplicantListPanel(logic.getFilteredApplicantList());","lastModifiedDate":"2021-10-13"},{"lineNumber":139,"author":{"gitId":"darren2pro"},"content":"        applicantListPanelPlaceholder.getChildren().add(applicantListPanel.getRoot());","lastModifiedDate":"2021-10-13"},{"lineNumber":140,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":141,"author":{"gitId":"darren2pro"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2021-10-13"},{"lineNumber":142,"author":{"gitId":"darren2pro"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2021-10-13"},{"lineNumber":143,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":144,"author":{"gitId":"darren2pro"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getApplicantBookFilePath());","lastModifiedDate":"2021-10-13"},{"lineNumber":145,"author":{"gitId":"darren2pro"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2021-10-13"},{"lineNumber":146,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":147,"author":{"gitId":"darren2pro"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2021-10-13"},{"lineNumber":148,"author":{"gitId":"darren2pro"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2021-10-13"},{"lineNumber":149,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":150,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":151,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"Harry-Gao-H"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"Harry-Gao-H"},"content":"    void fillInnerPartsWithPosition() {","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"Harry-Gao-H"},"content":"        positionListPanel \u003d new PositionListPanel(logic.getFilteredPositionList());","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"Harry-Gao-H"},"content":"        positionListPanelPlaceholder.getChildren().add(positionListPanel.getRoot());","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"Harry-Gao-H"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"Harry-Gao-H"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"Harry-Gao-H"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getPositionBookFilePath());","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"Harry-Gao-H"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"Harry-Gao-H"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"Harry-Gao-H"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Harry-Gao-H":21,"darren2pro":21,"-":196}},{"path":"src/main/java/seedu/address/ui/PositionCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":" * An UI component that displays information of a {@code Position}.","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"public class PositionCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":"    private static final String FXML \u003d \"PositionListCard.fxml\";","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Harry-Gao-H"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Harry-Gao-H"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Harry-Gao-H"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Harry-Gao-H"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Harry-Gao-H"},"content":"    public final Position position;","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"Harry-Gao-H"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Harry-Gao-H"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Harry-Gao-H"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Harry-Gao-H"},"content":"    private Label title;","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Harry-Gao-H"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Harry-Gao-H"},"content":"    private Label id;","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Harry-Gao-H"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Harry-Gao-H"},"content":"    private Label description;","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Harry-Gao-H"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"Harry-Gao-H"},"content":"    public PositionCard(Position position, int displayedIndex) {","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Harry-Gao-H"},"content":"        super(FXML);","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"Harry-Gao-H"},"content":"        this.position \u003d position;","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"Harry-Gao-H"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"Harry-Gao-H"},"content":"        title.setText(position.getTitle().fullTitle);","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"Harry-Gao-H"},"content":"        description.setText(position.getDescription().description);","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"Harry-Gao-H"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"Harry-Gao-H"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"Harry-Gao-H"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"Harry-Gao-H"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"Harry-Gao-H"},"content":"            return true;","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"Harry-Gao-H"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"Harry-Gao-H"},"content":"        if (!(other instanceof PositionCard)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"Harry-Gao-H"},"content":"            return false;","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Harry-Gao-H"},"content":"        // state check","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"Harry-Gao-H"},"content":"        PositionCard card \u003d (PositionCard) other;","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"Harry-Gao-H"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"Harry-Gao-H"},"content":"                \u0026\u0026 position.equals(card.position);","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"Harry-Gao-H"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Harry-Gao-H":64}},{"path":"src/main/java/seedu/address/ui/PositionListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":" * Panel containing the list of positions.","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"public class PositionListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Harry-Gao-H"},"content":"    private static final String FXML \u003d \"PositionListPanel.fxml\";","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Harry-Gao-H"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PositionListPanel.class);","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Harry-Gao-H"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Harry-Gao-H"},"content":"    private ListView\u003cPosition\u003e positionListView;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Harry-Gao-H"},"content":"     * Creates a {@code PositionListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"Harry-Gao-H"},"content":"    public PositionListPanel(ObservableList\u003cPosition\u003e positionList) {","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Harry-Gao-H"},"content":"        super(FXML);","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Harry-Gao-H"},"content":"        positionListView.setItems(positionList);","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Harry-Gao-H"},"content":"        positionListView.setCellFactory(listView -\u003e new PositionListViewCell());","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Harry-Gao-H"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Harry-Gao-H"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Position} using a {@code PositionCard}.","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"Harry-Gao-H"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Harry-Gao-H"},"content":"    class PositionListViewCell extends ListCell\u003cPosition\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Harry-Gao-H"},"content":"        protected void updateItem(Position position, boolean empty) {","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"Harry-Gao-H"},"content":"            super.updateItem(position, empty);","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"Harry-Gao-H"},"content":"            if (empty || position \u003d\u003d null) {","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"Harry-Gao-H"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"Harry-Gao-H"},"content":"                setText(null);","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"Harry-Gao-H"},"content":"            } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Harry-Gao-H"},"content":"                setGraphic(new PositionCard(position, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Harry-Gao-H"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"Harry-Gao-H"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"Harry-Gao-H"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Harry-Gao-H":49}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"            mainWindow.fillInnerPartsWithApplicants();","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"Harry-Gao-H"},"content":"            mainWindow.fillInnerPartsWithPosition();","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Harry-Gao-H":1,"darren2pro":1,"-":89}},{"path":"src/main/resources/view/ApplicantListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"            \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"            \u003cLabel fx:id\u003d\"application\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$application\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"darren2pro":36}},{"path":"src/main/resources/view/ApplicantListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"    \u003cListView fx:id\u003d\"applicantListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"darren2pro":8}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"         title\u003d\"Address App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"        \u003cVBox fx:id\u003d\"applicantList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"darren2pro"},"content":"          \u003cStackPane fx:id\u003d\"applicantListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"darren2pro"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Harry-Gao-H"},"content":"        \u003cVBox fx:id\u003d\"positionList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"Harry-Gao-H"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"Harry-Gao-H"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"Harry-Gao-H"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"Harry-Gao-H"},"content":"          \u003cStackPane fx:id\u003d\"positionListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"Harry-Gao-H"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Harry-Gao-H":8,"darren2pro":7,"-":61}},{"path":"src/main/resources/view/PositionListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Harry-Gao-H"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Harry-Gao-H"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Harry-Gao-H"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Harry-Gao-H"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Harry-Gao-H"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Harry-Gao-H"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Harry-Gao-H"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Harry-Gao-H"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Harry-Gao-H"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Harry-Gao-H"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Harry-Gao-H"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Harry-Gao-H"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Harry-Gao-H"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Harry-Gao-H"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Harry-Gao-H"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Harry-Gao-H"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"Harry-Gao-H"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Harry-Gao-H"},"content":"        \u003cLabel fx:id\u003d\"title\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Harry-Gao-H"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Harry-Gao-H"},"content":"      \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$description\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Harry-Gao-H"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Harry-Gao-H"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Harry-Gao-H"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Harry-Gao-H":32}},{"path":"src/main/resources/view/PositionListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Harry-Gao-H"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Harry-Gao-H"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Harry-Gao-H"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Harry-Gao-H"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Harry-Gao-H"},"content":"  \u003cListView fx:id\u003d\"positionListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Harry-Gao-H"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Harry-Gao-H":8}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"LMAOboxhack"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"Harry-Gao-H"},"content":"        public Path getPositionBookFilePath() {","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"darren2pro"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":114,"author":{"gitId":"darren2pro"},"content":"        public Path getApplicantBookFilePath() {","lastModifiedDate":"2021-10-13"},{"lineNumber":115,"author":{"gitId":"darren2pro"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"LMAOboxhack"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"LMAOboxhack"},"content":"        public void addApplicantToPosition(Applicant applicant, Position position) {","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"LMAOboxhack"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":131,"author":{"gitId":"LMAOboxhack"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"LMAOboxhack"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":133,"author":{"gitId":"darren2pro"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":134,"author":{"gitId":"darren2pro"},"content":"        public boolean hasApplicant(Applicant applicant) {","lastModifiedDate":"2021-10-11"},{"lineNumber":135,"author":{"gitId":"darren2pro"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-11"},{"lineNumber":136,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":137,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"darren2pro"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":159,"author":{"gitId":"darren2pro"},"content":"        public void deleteApplicant(Applicant target) {","lastModifiedDate":"2021-10-11"},{"lineNumber":160,"author":{"gitId":"darren2pro"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-11"},{"lineNumber":161,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":162,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"darren2pro"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":169,"author":{"gitId":"darren2pro"},"content":"        public void setApplicant(Applicant target, Applicant editedApplicant) {","lastModifiedDate":"2021-10-11"},{"lineNumber":170,"author":{"gitId":"darren2pro"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-11"},{"lineNumber":171,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":172,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"darren2pro"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":179,"author":{"gitId":"darren2pro"},"content":"        public ObservableList\u003cApplicant\u003e getFilteredApplicantList() {","lastModifiedDate":"2021-10-11"},{"lineNumber":180,"author":{"gitId":"darren2pro"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-11"},{"lineNumber":181,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":182,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":188,"author":{"gitId":"darren2pro"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":189,"author":{"gitId":"darren2pro"},"content":"        public void updateFilteredApplicantList(Predicate\u003cApplicant\u003e predicate) {","lastModifiedDate":"2021-10-11"},{"lineNumber":190,"author":{"gitId":"darren2pro"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-11"},{"lineNumber":191,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":192,"author":{"gitId":"Harry-Gao-H"},"content":"        public boolean hasPosition(Position toAdd) {","lastModifiedDate":"2021-10-09"},{"lineNumber":193,"author":{"gitId":"Harry-Gao-H"},"content":"            return false;","lastModifiedDate":"2021-10-09"},{"lineNumber":194,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":195,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":196,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":197,"author":{"gitId":"Harry-Gao-H"},"content":"        public void addPosition(Position toAdd) {","lastModifiedDate":"2021-10-09"},{"lineNumber":198,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":199,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":200,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":201,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":202,"author":{"gitId":"Harry-Gao-H"},"content":"        public void deletePosition(Position positionToDelete) {","lastModifiedDate":"2021-10-09"},{"lineNumber":203,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":204,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":205,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":206,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":207,"author":{"gitId":"Harry-Gao-H"},"content":"        public ObservableList\u003cPosition\u003e getFilteredPositionList() {","lastModifiedDate":"2021-10-09"},{"lineNumber":208,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":209,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":210,"author":{"gitId":"Harry-Gao-H"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":211,"author":{"gitId":"Harry-Gao-H"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":212,"author":{"gitId":"Harry-Gao-H"},"content":"        public void updateFilteredPositionList(Predicate\u003cPosition\u003e predicate) {","lastModifiedDate":"2021-10-09"},{"lineNumber":213,"author":{"gitId":"Harry-Gao-H"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":214,"author":{"gitId":"Harry-Gao-H"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":236,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":237,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":259,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"Harry-Gao-H":28,"LMAOboxhack":7,"darren2pro":30,"-":194}},{"path":"src/test/java/seedu/address/model/applicant/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"public class AddressTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"        assertThrows(NullPointerException.class, () -\u003e new seedu.address.model.applicant.Address(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new seedu.address.model.applicant.Address(invalidAddress));","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"    public void isValidAddress() {","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"        // null address","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"        assertThrows(NullPointerException.class, () -\u003e seedu.address.model.applicant.Address.isValidAddress(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"        // invalid addresses","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"        // valid addresses","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"        assertTrue(seedu.address.model.applicant.Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"        assertTrue(seedu.address.model.applicant.Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San \"","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"                + \"Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"darren2pro":37}},{"path":"src/test/java/seedu/address/model/applicant/ApplicantTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.testutil.TypicalApplicants.ALICE;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.testutil.TypicalApplicants.BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"import seedu.address.testutil.ApplicantBuilder;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"public class ApplicantTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"    public void isSameApplicant() {","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"        assertTrue(ALICE.isSameApplicant(ALICE));","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"        assertFalse(ALICE.isSameApplicant(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"        Applicant editedAlice \u003d new ApplicantBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"        assertTrue(ALICE.isSameApplicant(editedAlice));","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"        editedAlice \u003d new ApplicantBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"        assertFalse(ALICE.isSameApplicant(editedAlice));","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"        Applicant editedBob \u003d new ApplicantBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"        assertFalse(BOB.isSameApplicant(editedBob));","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"        editedBob \u003d new ApplicantBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"        assertFalse(BOB.isSameApplicant(editedBob));","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"darren2pro"},"content":"    public void equals() {","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"        Applicant aliceCopy \u003d new ApplicantBuilder(ALICE).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"darren2pro"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"darren2pro"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"darren2pro"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"darren2pro"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"darren2pro"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"darren2pro"},"content":"        // different applicant -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"darren2pro"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"darren2pro"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"darren2pro"},"content":"        Applicant editedAlice \u003d new ApplicantBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"darren2pro"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"darren2pro"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"darren2pro"},"content":"        editedAlice \u003d new ApplicantBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"darren2pro"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"darren2pro"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"darren2pro"},"content":"        editedAlice \u003d new ApplicantBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"darren2pro"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"darren2pro"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"darren2pro"},"content":"        editedAlice \u003d new ApplicantBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"darren2pro"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"darren2pro":81}},{"path":"src/test/java/seedu/address/model/applicant/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"public class EmailTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"        assertThrows(NullPointerException.class, () -\u003e new seedu.address.model.applicant.Email(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new seedu.address.model.applicant.Email(invalidEmail));","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"    public void isValidEmail() {","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"        // null email","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"        assertThrows(NullPointerException.class, () -\u003e seedu.address.model.applicant.Email.isValidEmail(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"        // blank email","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"        // missing parts","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"                \"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"        // invalid parts","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"                \"peterjack@-\")); // invalid domain name","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"                \"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"                \"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"                \"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"                \" peterjack@example.com\")); // leading space","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"darren2pro"},"content":"                \"peterjack@example.com \")); // trailing space","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"                \"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"                \"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"darren2pro"},"content":"                \"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"darren2pro"},"content":"                \"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"darren2pro"},"content":"                \"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"darren2pro"},"content":"                \"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"darren2pro"},"content":"                \"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"darren2pro"},"content":"                \"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"darren2pro"},"content":"                \"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"darren2pro"},"content":"                \"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"darren2pro"},"content":"                \"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"darren2pro"},"content":"        // valid email","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"darren2pro"},"content":"        assertTrue(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"darren2pro"},"content":"                \"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"darren2pro"},"content":"        assertTrue(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"darren2pro"},"content":"                \"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"darren2pro"},"content":"        assertTrue(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"darren2pro"},"content":"                \"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"darren2pro"},"content":"        assertTrue(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"darren2pro"},"content":"                \"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"darren2pro"},"content":"        assertTrue(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"darren2pro"},"content":"                \"a@bc\")); // minimal","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"darren2pro"},"content":"        assertTrue(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"darren2pro"},"content":"                \"test@localhost\")); // alphabets only","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"darren2pro"},"content":"        assertTrue(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"darren2pro"},"content":"                \"123@145\")); // numeric local part and domain name","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"darren2pro"},"content":"        assertTrue(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"darren2pro"},"content":"                \"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"darren2pro"},"content":"        assertTrue(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"darren2pro"},"content":"                \"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"darren2pro"},"content":"        assertTrue(seedu.address.model.applicant.Email.isValidEmail(","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"darren2pro"},"content":"                \"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"darren2pro"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"darren2pro":97}},{"path":"src/test/java/seedu/address/model/applicant/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"public class NameTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"    public void isValidName() {","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"        // null name","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"        // invalid name","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"        // valid name","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"darren2pro":40}},{"path":"src/test/java/seedu/address/model/applicant/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"public class PhoneTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"        assertThrows(NullPointerException.class, () -\u003e new seedu.address.model.applicant.Phone(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new seedu.address.model.applicant.Phone(invalidPhone));","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"    public void isValidPhone() {","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"        // null phone number","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"        assertThrows(NullPointerException.class, () -\u003e seedu.address.model.applicant.Phone.isValidPhone(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"        // invalid phone numbers","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"        assertFalse(seedu.address.model.applicant.Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"        // valid phone numbers","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"        assertTrue(seedu.address.model.applicant.Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"        assertTrue(seedu.address.model.applicant.Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"darren2pro":41}},{"path":"src/test/java/seedu/address/model/applicant/UniqueApplicantListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.testutil.TypicalApplicants.ALICE;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.testutil.TypicalApplicants.BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"import java.util.List;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.exceptions.ApplicantNotFoundException;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.exceptions.DuplicateApplicantException;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"import seedu.address.testutil.ApplicantBuilder;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"public class UniqueApplicantListTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"    private final UniqueApplicantList uniqueApplicantList \u003d new UniqueApplicantList();","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"    public void contains_nullApplicant_throwsNullPointerException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueApplicantList.contains(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"    public void contains_applicantNotInList_returnsFalse() {","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"        assertFalse(uniqueApplicantList.contains(ALICE));","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"    public void contains_applicantInList_returnsTrue() {","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"        uniqueApplicantList.add(ALICE);","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"        assertTrue(uniqueApplicantList.contains(ALICE));","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"    public void contains_applicantWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"        uniqueApplicantList.add(ALICE);","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"        Applicant editedAlice \u003d new ApplicantBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"        assertTrue(uniqueApplicantList.contains(editedAlice));","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"darren2pro"},"content":"    public void add_nullApplicant_throwsNullPointerException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueApplicantList.add(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"darren2pro"},"content":"    public void add_duplicateApplicant_throwsDuplicateApplicantException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"darren2pro"},"content":"        uniqueApplicantList.add(ALICE);","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"darren2pro"},"content":"        assertThrows(DuplicateApplicantException.class, () -\u003e uniqueApplicantList.add(ALICE));","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"darren2pro"},"content":"    public void setApplicant_nullTargetApplicant_throwsNullPointerException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"darren2pro"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueApplicantList.setApplicant(null, ALICE));","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"darren2pro"},"content":"    public void setApplicant_nullEditedApplicant_throwsNullPointerException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"darren2pro"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueApplicantList.setApplicant(ALICE, null));","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"darren2pro"},"content":"    public void setApplicant_targetApplicantNotInList_throwsApplicantNotFoundException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"darren2pro"},"content":"        assertThrows(ApplicantNotFoundException.class, () -\u003e uniqueApplicantList.setApplicant(ALICE, ALICE));","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"darren2pro"},"content":"    public void setApplicant_editedApplicantIsSameApplicant_success() {","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"darren2pro"},"content":"        uniqueApplicantList.add(ALICE);","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"darren2pro"},"content":"        uniqueApplicantList.setApplicant(ALICE, ALICE);","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"darren2pro"},"content":"        UniqueApplicantList expectedUniqueApplicantList \u003d new UniqueApplicantList();","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"darren2pro"},"content":"        expectedUniqueApplicantList.add(ALICE);","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"darren2pro"},"content":"        assertEquals(expectedUniqueApplicantList, uniqueApplicantList);","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"darren2pro"},"content":"    public void setApplicant_editedApplicantHasSameIdentity_success() {","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"darren2pro"},"content":"        uniqueApplicantList.add(ALICE);","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"darren2pro"},"content":"        Applicant editedAlice \u003d new ApplicantBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"darren2pro"},"content":"        uniqueApplicantList.setApplicant(ALICE, editedAlice);","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"darren2pro"},"content":"        UniqueApplicantList expectedUniqueApplicantList \u003d new UniqueApplicantList();","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"darren2pro"},"content":"        expectedUniqueApplicantList.add(editedAlice);","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"darren2pro"},"content":"        assertEquals(expectedUniqueApplicantList, uniqueApplicantList);","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"darren2pro"},"content":"    public void setApplicant_editedApplicantHasDifferentIdentity_success() {","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"darren2pro"},"content":"        uniqueApplicantList.add(ALICE);","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"darren2pro"},"content":"        uniqueApplicantList.setApplicant(ALICE, BOB);","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"darren2pro"},"content":"        UniqueApplicantList expectedUniqueApplicantList \u003d new UniqueApplicantList();","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"darren2pro"},"content":"        expectedUniqueApplicantList.add(BOB);","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"darren2pro"},"content":"        assertEquals(expectedUniqueApplicantList, uniqueApplicantList);","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":103,"author":{"gitId":"darren2pro"},"content":"    public void setApplicant_editedApplicantHasNonUniqueIdentity_throwsDuplicateApplicantException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":104,"author":{"gitId":"darren2pro"},"content":"        uniqueApplicantList.add(ALICE);","lastModifiedDate":"2021-10-13"},{"lineNumber":105,"author":{"gitId":"darren2pro"},"content":"        uniqueApplicantList.add(BOB);","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"darren2pro"},"content":"        assertThrows(DuplicateApplicantException.class, () -\u003e uniqueApplicantList.setApplicant(ALICE, BOB));","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":109,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"darren2pro"},"content":"    public void remove_nullApplicant_throwsNullPointerException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":111,"author":{"gitId":"darren2pro"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueApplicantList.remove(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":112,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":114,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":115,"author":{"gitId":"darren2pro"},"content":"    public void remove_applicantDoesNotExist_throwsApplicantNotFoundException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"darren2pro"},"content":"        assertThrows(ApplicantNotFoundException.class, () -\u003e uniqueApplicantList.remove(ALICE));","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":118,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":119,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"darren2pro"},"content":"    public void remove_existingApplicant_removesApplicant() {","lastModifiedDate":"2021-10-13"},{"lineNumber":121,"author":{"gitId":"darren2pro"},"content":"        uniqueApplicantList.add(ALICE);","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"darren2pro"},"content":"        uniqueApplicantList.remove(ALICE);","lastModifiedDate":"2021-10-13"},{"lineNumber":123,"author":{"gitId":"darren2pro"},"content":"        UniqueApplicantList expectedUniqueApplicantList \u003d new UniqueApplicantList();","lastModifiedDate":"2021-10-13"},{"lineNumber":124,"author":{"gitId":"darren2pro"},"content":"        assertEquals(expectedUniqueApplicantList, uniqueApplicantList);","lastModifiedDate":"2021-10-13"},{"lineNumber":125,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":127,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":128,"author":{"gitId":"darren2pro"},"content":"    public void setApplicants_nullUniqueApplicantList_throwsNullPointerException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":129,"author":{"gitId":"darren2pro"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueApplicantList.setApplicants((UniqueApplicantList) null));","lastModifiedDate":"2021-10-13"},{"lineNumber":130,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":131,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":132,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":133,"author":{"gitId":"darren2pro"},"content":"    public void setApplicants_uniqueApplicantList_replacesOwnListWithProvidedUniqueApplicantList() {","lastModifiedDate":"2021-10-13"},{"lineNumber":134,"author":{"gitId":"darren2pro"},"content":"        uniqueApplicantList.add(ALICE);","lastModifiedDate":"2021-10-13"},{"lineNumber":135,"author":{"gitId":"darren2pro"},"content":"        UniqueApplicantList expectedUniqueApplicantList \u003d new UniqueApplicantList();","lastModifiedDate":"2021-10-13"},{"lineNumber":136,"author":{"gitId":"darren2pro"},"content":"        expectedUniqueApplicantList.add(BOB);","lastModifiedDate":"2021-10-13"},{"lineNumber":137,"author":{"gitId":"darren2pro"},"content":"        uniqueApplicantList.setApplicants(expectedUniqueApplicantList);","lastModifiedDate":"2021-10-13"},{"lineNumber":138,"author":{"gitId":"darren2pro"},"content":"        assertEquals(expectedUniqueApplicantList, uniqueApplicantList);","lastModifiedDate":"2021-10-13"},{"lineNumber":139,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":140,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":141,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":142,"author":{"gitId":"darren2pro"},"content":"    public void setApplicants_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":143,"author":{"gitId":"darren2pro"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueApplicantList.setApplicants((List\u003cApplicant\u003e) null));","lastModifiedDate":"2021-10-13"},{"lineNumber":144,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":145,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":146,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":147,"author":{"gitId":"darren2pro"},"content":"    public void setApplicants_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-10-13"},{"lineNumber":148,"author":{"gitId":"darren2pro"},"content":"        uniqueApplicantList.add(ALICE);","lastModifiedDate":"2021-10-13"},{"lineNumber":149,"author":{"gitId":"darren2pro"},"content":"        List\u003cApplicant\u003e applicantList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2021-10-13"},{"lineNumber":150,"author":{"gitId":"darren2pro"},"content":"        uniqueApplicantList.setApplicants(applicantList);","lastModifiedDate":"2021-10-13"},{"lineNumber":151,"author":{"gitId":"darren2pro"},"content":"        UniqueApplicantList expectedUniqueApplicantList \u003d new UniqueApplicantList();","lastModifiedDate":"2021-10-13"},{"lineNumber":152,"author":{"gitId":"darren2pro"},"content":"        expectedUniqueApplicantList.add(BOB);","lastModifiedDate":"2021-10-13"},{"lineNumber":153,"author":{"gitId":"darren2pro"},"content":"        assertEquals(expectedUniqueApplicantList, uniqueApplicantList);","lastModifiedDate":"2021-10-13"},{"lineNumber":154,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":155,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":156,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":157,"author":{"gitId":"darren2pro"},"content":"    public void setApplicants_listWithDuplicateApplicants_throwsDuplicateApplicantException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":158,"author":{"gitId":"darren2pro"},"content":"        List\u003cApplicant\u003e listWithDuplicateApplicants \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2021-10-13"},{"lineNumber":159,"author":{"gitId":"darren2pro"},"content":"        assertThrows(DuplicateApplicantException.class, () -\u003e uniqueApplicantList","lastModifiedDate":"2021-10-13"},{"lineNumber":160,"author":{"gitId":"darren2pro"},"content":"                .setApplicants(listWithDuplicateApplicants));","lastModifiedDate":"2021-10-13"},{"lineNumber":161,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":162,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":163,"author":{"gitId":"darren2pro"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":164,"author":{"gitId":"darren2pro"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":165,"author":{"gitId":"darren2pro"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-10-13"},{"lineNumber":166,"author":{"gitId":"darren2pro"},"content":"            -\u003e uniqueApplicantList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-10-13"},{"lineNumber":167,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":168,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":169,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"darren2pro":169}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"BenjaminTan99"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"BenjaminTan99"},"content":"                new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"BenjaminTan99"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-09-16"},{"lineNumber":68,"author":{"gitId":"BenjaminTan99"},"content":"                new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"BenjaminTan99"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-09-16"},{"lineNumber":84,"author":{"gitId":"BenjaminTan99"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"BenjaminTan99"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2021-09-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-09-16"},{"lineNumber":100,"author":{"gitId":"BenjaminTan99"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS);","lastModifiedDate":"2021-09-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"BenjaminTan99"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags);","lastModifiedDate":"2021-09-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":105,"BenjaminTan99":9}},{"path":"src/test/java/seedu/address/testutil/ApplicantBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.Address;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.Email;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.Name;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.Phone;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.position.Description;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.position.Position;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.position.Title;","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"public class ApplicantBuilder {","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"    private Name name;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"    private Phone phone;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"    private Email email;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"    private Address address;","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"    private Position position \u003d new Position(new Title(\"software engineer\"), new Description(\"This is a \"","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"            + \"placeholder description\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"     * Creates a {@code ApplicantBuilder} with the default details.","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"    public ApplicantBuilder() {","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"     * Initializes the ApplicantBuilder with the data of {@code applicantToCopy}.","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"    public ApplicantBuilder(Applicant applicantToCopy) {","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"        name \u003d applicantToCopy.getName();","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"        phone \u003d applicantToCopy.getPhone();","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"        email \u003d applicantToCopy.getEmail();","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"        address \u003d applicantToCopy.getAddress();","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"darren2pro"},"content":"     * Sets the {@code Name} of the {@code Applicant} that we are building.","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"    public ApplicantBuilder withName(String name) {","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"darren2pro"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"        return this;","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"darren2pro"},"content":"     * Sets the {@code Address} of the {@code Applicant} that we are building.","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"darren2pro"},"content":"    public ApplicantBuilder withAddress(String address) {","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"darren2pro"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"darren2pro"},"content":"        return this;","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"darren2pro"},"content":"     * Sets the {@code Phone} of the {@code Applicant} that we are building.","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"darren2pro"},"content":"    public ApplicantBuilder withPhone(String phone) {","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"darren2pro"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"darren2pro"},"content":"        return this;","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"darren2pro"},"content":"     * Sets the {@code Email} of the {@code Applicant} that we are building.","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"darren2pro"},"content":"    public ApplicantBuilder withEmail(String email) {","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"darren2pro"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"darren2pro"},"content":"        return this;","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"darren2pro"},"content":"    public Applicant build() {","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"darren2pro"},"content":"        return new Applicant(name, phone, email, address, position);","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"darren2pro":81}},{"path":"src/test/java/seedu/address/testutil/TypicalApplicants.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"darren2pro"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"darren2pro"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"darren2pro"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"darren2pro"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"darren2pro"},"content":"import java.util.List;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.ApplicantBook;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"darren2pro"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"darren2pro"},"content":"public class TypicalApplicants {","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"darren2pro"},"content":"    public static final Applicant ALICE \u003d new ApplicantBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"darren2pro"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"darren2pro"},"content":"            .withPhone(\"94351253\").build();","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"darren2pro"},"content":"    public static final Applicant BENSON \u003d new ApplicantBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"darren2pro"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"darren2pro"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"darren2pro"},"content":"            .build();","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"darren2pro"},"content":"    public static final Applicant CARL \u003d new ApplicantBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"darren2pro"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"darren2pro"},"content":"    public static final Applicant DANIEL \u003d new ApplicantBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"darren2pro"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").build();","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"darren2pro"},"content":"    public static final Applicant ELLE \u003d new ApplicantBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"darren2pro"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"darren2pro"},"content":"    public static final Applicant FIONA \u003d new ApplicantBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"darren2pro"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"darren2pro"},"content":"    public static final Applicant GEORGE \u003d new ApplicantBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"darren2pro"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"darren2pro"},"content":"    // Manually added","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"darren2pro"},"content":"    public static final Applicant HOON \u003d new ApplicantBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"darren2pro"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"darren2pro"},"content":"    public static final Applicant IDA \u003d new ApplicantBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"darren2pro"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"darren2pro"},"content":"    // Manually added - Applicant\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"darren2pro"},"content":"    public static final Applicant AMY \u003d new ApplicantBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"darren2pro"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"darren2pro"},"content":"    public static final Applicant BOB \u003d new ApplicantBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"darren2pro"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"darren2pro"},"content":"            .build();","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"darren2pro"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"darren2pro"},"content":"    private TypicalApplicants() {} // prevents instantiation","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"darren2pro"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"darren2pro"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"darren2pro"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"darren2pro"},"content":"    public static ApplicantBook getTypicalApplicantBook() {","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"darren2pro"},"content":"        ApplicantBook ab \u003d new ApplicantBook();","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"darren2pro"},"content":"        for (Applicant applicant : getTypicalApplicants()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"darren2pro"},"content":"            ab.addApplicant(applicant);","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"darren2pro"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"darren2pro"},"content":"        return ab;","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"darren2pro"},"content":"    public static List\u003cApplicant\u003e getTypicalApplicants() {","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"darren2pro"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"darren2pro"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"darren2pro"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"darren2pro"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"darren2pro":71}}]
