[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103-T14-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103-T14-4/tp/actions)","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"whoisjustinngo"},"content":"![Ui](docs/images/dashboard-tab-v1.3.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"# Advyze","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"whoisjustinngo"},"content":"This is **a project by Software Engineering (SE) students** which is designed for tech-savvy student or financial advisors who prefer CLI over GUI, and have a lot of clients and a busy school schedule to keep track of.\u003cbr\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"## Example usages:","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"whoisjustinngo"},"content":"  * Keep track and manage client details","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"whoisjustinngo"},"content":"  * Keep track of all their tasks in a Todo List","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"whoisjustinngo"},"content":"  * Keep track of Scheduled Events like meetings and lessons","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"whoisjustinngo"},"content":"  * Manage priorities","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"whoisjustinngo"},"content":"  * Monitor individual goals and KPIs","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"## About","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"The project simulates an ongoing software project for a desktop application (called _Advyze_) used for managing contact details.","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"  * Do take a look at [this](docs/AboutUs.md) if you want to know more about us individually.","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"## Project page site","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"For the detailed documentation of this project, please visit **[here](https://ay2122s1-cs2103-t14-4.github.io/tp/)**.","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"## Acknowledgement","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"This project is a **part of the se-education.org** initiative. Please do look at thee code in [se-education.org](https://se-education.org#https://se-education.org/#contributing) for more info.","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"whoisjustinngo":7,"kslui99":1,"rickyaandrew":13,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"mokdarren"},"content":"run {","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"mokdarren"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"mokdarren"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"SpdPnd98"},"content":"    implementation \u0027org.jetbrains:annotations:20.1.0\u0027","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":68,"author":{"gitId":"SpdPnd98"},"content":"    implementation \u0027org.mnode.ical4j:ical4j:1.0.5\u0027","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"SpdPnd98"},"content":"    implementation \u0027backport-util-concurrent:backport-util-concurrent:3.1\u0027","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"SpdPnd98"},"content":"    implementation \u0027commons-codec:commons-codec:1.8\u0027","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"SpdPnd98"},"content":"    implementation \u0027commons-lang:commons-lang:2.6\u0027","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":79,"author":{"gitId":"whoisjustinngo"},"content":"    archiveName \u003d \u0027advyze.jar\u0027","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"whoisjustinngo":1,"-":71,"SpdPnd98":6,"mokdarren":4}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"### Ricky Andrew","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"\u003cimg src\u003d\"images/rickyaandrew.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"[[github](https://github.com/rickyaandrew)]","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"[[portfolio](team/ricky.md)]","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"* Role: Developer","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"* Responsibilities: Debugging and Testing of Code","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"mokdarren"},"content":"### Darren Mok","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"\u003cimg src\u003d\"images/mokdarren.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"mokdarren"},"content":"[[github](https://github.com/mokdarren)]","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"mokdarren"},"content":"[[portfolio](team/mokdarren.md)]","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"mokdarren"},"content":"* Role: Developer","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"mokdarren"},"content":"* Responsibilities: Task scheduling, Contacts feature","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"whoisjustinngo"},"content":"### Justin Ngo","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"whoisjustinngo"},"content":"\u003cimg src\u003d\"images/whoisjustinngo.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"whoisjustinngo"},"content":"[[github](http://github.com/whoisjustinngo)]","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"whoisjustinngo"},"content":"[[portfolio](team/justin.md)]","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"whoisjustinngo"},"content":"* Responsibilities: UI, Documentation","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"rickyaandrew"},"content":"### Kai Siang","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"rickyaandrew"},"content":"\u003cimg src\u003d\"images/kslui99.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"rickyaandrew"},"content":"[[github](https://github.com/kslui99)]","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"rickyaandrew"},"content":"[[portfolio](team/kaisiang.md)]","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"rickyaandrew"},"content":"* Responsibilities: Logic, Code Quality","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"SpdPnd98"},"content":"### Bryan Tee Pak Hong","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"rickyaandrew"},"content":"\u003cimg src\u003d\"images/spdpnd98.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"SpdPnd98"},"content":"[[github](https://github.com/SpdPnd98)]","lastModifiedDate":"2021-09-29"},{"lineNumber":57,"author":{"gitId":"SpdPnd98"},"content":"[[portfolio](team/bryantee.md)]","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"SpdPnd98"},"content":"* Responsibilities: Merge PRs","lastModifiedDate":"2021-09-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"whoisjustinngo":5,"kslui99":1,"rickyaandrew":12,"-":34,"SpdPnd98":4,"mokdarren":5}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"mokdarren"},"content":"### Filter `Persons`","lastModifiedDate":"2021-10-22"},{"lineNumber":238,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":239,"author":{"gitId":"mokdarren"},"content":"#### Implementation","lastModifiedDate":"2021-10-22"},{"lineNumber":240,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":241,"author":{"gitId":"mokdarren"},"content":"The `ModelManager` manages all in-memory data which allows us to easily parse in a `Predicate` to filter Persons based on a `Person\u0027s` atrribute. To allow the user to filter for any attribute of a `Person`, a `Predicate` class is created for each attribute.  ","lastModifiedDate":"2021-10-22"},{"lineNumber":242,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":243,"author":{"gitId":"mokdarren"},"content":"A `Predicate` takes in a keyword which applies a filter onto the model.      ","lastModifiedDate":"2021-10-22"},{"lineNumber":244,"author":{"gitId":"mokdarren"},"content":"#### Design considerations","lastModifiedDate":"2021-10-22"},{"lineNumber":245,"author":{"gitId":"mokdarren"},"content":"`FilteredList\u003cPerson\u003e` is used to keep store in-memory data which wraps an `ObservableList\u003cPerson\u003e` which is fed to the Ui for display of the filtered persons to the user. This design provides a clean way for us to filter data using `Predicate`. ","lastModifiedDate":"2021-10-22"},{"lineNumber":246,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":247,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"rickyaandrew"},"content":"### \\[Proposed for v1.2\\] Scheduling an Event","lastModifiedDate":"2021-10-21"},{"lineNumber":251,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":252,"author":{"gitId":"rickyaandrew"},"content":"#### Proposed implementation","lastModifiedDate":"2021-10-21"},{"lineNumber":253,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":254,"author":{"gitId":"rickyaandrew"},"content":"The proposed feature of scheduling is parsed by `AddScheduleCommandParser`, and implemented by the `AddScheduleCommand`, where it will add the given Event into the list of Events that the user have. While adding a new `Event` into the `Schedule`, it will help to check if the given `Event` clashes with the Events which are already added into the `Schedule`. ","lastModifiedDate":"2021-10-21"},{"lineNumber":255,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":256,"author":{"gitId":"rickyaandrew"},"content":"On top of that, `Schedule` will all be arranged in the order starting from the earliest `Event` to the latest available `Event` with the aid of the `Comparator\u003cSchedule\u003e` which is declared in `UniqueScheduleList`.","lastModifiedDate":"2021-10-21"},{"lineNumber":257,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":258,"author":{"gitId":"rickyaandrew"},"content":"#### Design considerations:","lastModifiedDate":"2021-10-21"},{"lineNumber":259,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":260,"author":{"gitId":"rickyaandrew"},"content":"**Aspect: How mark as done executes:**","lastModifiedDate":"2021-10-21"},{"lineNumber":261,"author":{"gitId":"rickyaandrew"},"content":"* **Alternative 1 (current choice) Add Schedule into one UnqiueScheduleList**","lastModifiedDate":"2021-10-21"},{"lineNumber":262,"author":{"gitId":"rickyaandrew"},"content":"    * Pros: All the schedules are added into a list, and it is easier to navigate. It also makes the code looks cleaner and easier to understand as well.","lastModifiedDate":"2021-10-21"},{"lineNumber":263,"author":{"gitId":"rickyaandrew"},"content":"    * Cons: Iteration will always be O(n) since sorting and checking if there are clashes in `Schedule` happens in this `UniqueScheduleList`","lastModifiedDate":"2021-10-21"},{"lineNumber":264,"author":{"gitId":"rickyaandrew"},"content":"* **Alternative 2 use HashMap\u003cDate, ScheduleList\u003e**","lastModifiedDate":"2021-10-21"},{"lineNumber":265,"author":{"gitId":"rickyaandrew"},"content":"    * Pros: Operation does not need to take O(n) time when it comes to checking if the `Event` clashes, since we only check if there are clashes on that particular given date.","lastModifiedDate":"2021-10-21"},{"lineNumber":266,"author":{"gitId":"rickyaandrew"},"content":"    * Cons: Decreases overall code consistency.","lastModifiedDate":"2021-10-21"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"whoisjustinngo"},"content":"### \\[Proposed for v1.3\\] Display analytics on the Dashboard tab to facilitate goal setting","lastModifiedDate":"2021-10-20"},{"lineNumber":269,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":270,"author":{"gitId":"whoisjustinngo"},"content":"A large portion of the income of financial advisors is from the commissions they earn from closing sales. This makes having","lastModifiedDate":"2021-10-20"},{"lineNumber":271,"author":{"gitId":"whoisjustinngo"},"content":"personal goals an integral part of their workflow, as they need to know what they are working towards at the end of the day, ","lastModifiedDate":"2021-10-20"},{"lineNumber":272,"author":{"gitId":"whoisjustinngo"},"content":"and how far they have left to go. Apart from being able to set their own ad hoc goals (feature coming soon), the dashboard","lastModifiedDate":"2021-10-20"},{"lineNumber":273,"author":{"gitId":"whoisjustinngo"},"content":"will display general analytics so that the user can monitor their progress. Some fields that will be (tentatively) tracked are:","lastModifiedDate":"2021-10-20"},{"lineNumber":274,"author":{"gitId":"whoisjustinngo"},"content":"* Total Commission Earned This Month","lastModifiedDate":"2021-10-20"},{"lineNumber":275,"author":{"gitId":"whoisjustinngo"},"content":"* Total Number of Fresh Contacts this month","lastModifiedDate":"2021-10-20"},{"lineNumber":276,"author":{"gitId":"whoisjustinngo"},"content":"* Total Number of Closing Contacts","lastModifiedDate":"2021-10-20"},{"lineNumber":277,"author":{"gitId":"whoisjustinngo"},"content":"* Total Number of Closed Contacts This Month","lastModifiedDate":"2021-10-20"},{"lineNumber":278,"author":{"gitId":"whoisjustinngo"},"content":"* Pending Claims","lastModifiedDate":"2021-10-20"},{"lineNumber":279,"author":{"gitId":"whoisjustinngo"},"content":"* Contacts moved from fresh to closing to closed","lastModifiedDate":"2021-10-20"},{"lineNumber":280,"author":{"gitId":"whoisjustinngo"},"content":"Note that there is no goal setting here, just monitoring of various statistics.","lastModifiedDate":"2021-10-20"},{"lineNumber":281,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":282,"author":{"gitId":"whoisjustinngo"},"content":"#### Proposed Implementation","lastModifiedDate":"2021-10-20"},{"lineNumber":283,"author":{"gitId":"whoisjustinngo"},"content":"The fields related to status of contacts will track changes in the contacts tab. For example for the number of fresh contacts","lastModifiedDate":"2021-10-20"},{"lineNumber":284,"author":{"gitId":"whoisjustinngo"},"content":"this month, whenever the user adds a new contact with the `client` tag, the relevant section on the dashboard notices this ","lastModifiedDate":"2021-10-20"},{"lineNumber":285,"author":{"gitId":"whoisjustinngo"},"content":"and increments the count by 1. When it is detected that a new month has begun (from reading system time), the count ","lastModifiedDate":"2021-10-20"},{"lineNumber":286,"author":{"gitId":"whoisjustinngo"},"content":"would be reset.","lastModifiedDate":"2021-10-20"},{"lineNumber":287,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":288,"author":{"gitId":"whoisjustinngo"},"content":"Integrating contacts and dashboard this way would reduce the amount of work the user needs to do.","lastModifiedDate":"2021-10-20"},{"lineNumber":289,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":290,"author":{"gitId":"whoisjustinngo"},"content":"That being said, some fields like the total commission earned this month will have to be input manually.","lastModifiedDate":"2021-10-20"},{"lineNumber":291,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":292,"author":{"gitId":"SpdPnd98"},"content":"### \\[Proposed for v1.3\\] Import .ics Schedules","lastModifiedDate":"2021-10-28"},{"lineNumber":293,"author":{"gitId":"SpdPnd98"},"content":"For student financial advisors, they might have a portal that can generate calendar files that can be imported into google calendar,","lastModifiedDate":"2021-10-28"},{"lineNumber":294,"author":{"gitId":"SpdPnd98"},"content":"such as NUSMods. NUSMods has a download `.ics` button that generates a `.ics` file for the users. These fields can be programmatically ","lastModifiedDate":"2021-10-28"},{"lineNumber":295,"author":{"gitId":"SpdPnd98"},"content":"added into Advyze.","lastModifiedDate":"2021-10-28"},{"lineNumber":296,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":297,"author":{"gitId":"SpdPnd98"},"content":"The basic structure of an `.ics` file is as follows","lastModifiedDate":"2021-10-28"},{"lineNumber":298,"author":{"gitId":"SpdPnd98"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":299,"author":{"gitId":"SpdPnd98"},"content":"BEGIN VCALENDAR","lastModifiedDate":"2021-10-28"},{"lineNumber":300,"author":{"gitId":"SpdPnd98"},"content":"VERSION:2.0","lastModifiedDate":"2021-10-28"},{"lineNumber":301,"author":{"gitId":"SpdPnd98"},"content":"PRODID:-//NUSMods//NUSMods//EN","lastModifiedDate":"2021-10-28"},{"lineNumber":302,"author":{"gitId":"SpdPnd98"},"content":"BEGIN VEVENT","lastModifiedDate":"2021-10-28"},{"lineNumber":303,"author":{"gitId":"SpdPnd98"},"content":"DTSTAMP:20211027T064817Z","lastModifiedDate":"2021-10-28"},{"lineNumber":304,"author":{"gitId":"SpdPnd98"},"content":"DTSTART:20211123T090000Z","lastModifiedDate":"2021-10-28"},{"lineNumber":305,"author":{"gitId":"SpdPnd98"},"content":"DTEND:20211123T110000Z","lastModifiedDate":"2021-10-28"},{"lineNumber":306,"author":{"gitId":"SpdPnd98"},"content":"SUMMARY:CS2103 Exam","lastModifiedDate":"2021-10-28"},{"lineNumber":307,"author":{"gitId":"SpdPnd98"},"content":"...","lastModifiedDate":"2021-10-28"},{"lineNumber":308,"author":{"gitId":"SpdPnd98"},"content":"END VEVENT","lastModifiedDate":"2021-10-28"},{"lineNumber":309,"author":{"gitId":"SpdPnd98"},"content":"BEGIN VEVENT","lastModifiedDate":"2021-10-28"},{"lineNumber":310,"author":{"gitId":"SpdPnd98"},"content":"...","lastModifiedDate":"2021-10-28"},{"lineNumber":311,"author":{"gitId":"SpdPnd98"},"content":"END VEVENT","lastModifiedDate":"2021-10-28"},{"lineNumber":312,"author":{"gitId":"SpdPnd98"},"content":"END VCALENDAR","lastModifiedDate":"2021-10-28"},{"lineNumber":313,"author":{"gitId":"SpdPnd98"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":314,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":315,"author":{"gitId":"SpdPnd98"},"content":"For more details, look up the definition of fields of `.ics` files at [RFC2445](http://www.faqs.org/rfcs/rfc2445.html).","lastModifiedDate":"2021-10-28"},{"lineNumber":316,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":317,"author":{"gitId":"SpdPnd98"},"content":"#### Proposed Implementation","lastModifiedDate":"2021-10-28"},{"lineNumber":318,"author":{"gitId":"SpdPnd98"},"content":"As a start, implement a minimal version that includes the above visible fields.","lastModifiedDate":"2021-10-28"},{"lineNumber":319,"author":{"gitId":"SpdPnd98"},"content":"- `VEVENT`","lastModifiedDate":"2021-10-28"},{"lineNumber":320,"author":{"gitId":"SpdPnd98"},"content":"  - `DTSTART`","lastModifiedDate":"2021-10-28"},{"lineNumber":321,"author":{"gitId":"SpdPnd98"},"content":"  - `DTEND`","lastModifiedDate":"2021-10-28"},{"lineNumber":322,"author":{"gitId":"SpdPnd98"},"content":"  - `SUMMARY`","lastModifiedDate":"2021-10-28"},{"lineNumber":323,"author":{"gitId":"SpdPnd98"},"content":"  - `RRULE`","lastModifiedDate":"2021-10-28"},{"lineNumber":324,"author":{"gitId":"SpdPnd98"},"content":"- `VCALENDAR`","lastModifiedDate":"2021-10-28"},{"lineNumber":325,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":326,"author":{"gitId":"SpdPnd98"},"content":"Each `VEVENT` will be represented as a `Schedule`, and each recurrence specified (if applicable) in `RRULE` are independent ","lastModifiedDate":"2021-10-28"},{"lineNumber":327,"author":{"gitId":"SpdPnd98"},"content":"`Schedules` with different start and end times. The import will not be made if there are exceptions thrown in the process of ","lastModifiedDate":"2021-10-28"},{"lineNumber":328,"author":{"gitId":"SpdPnd98"},"content":"parsing errors or fails during verification of whether the schedule has conflicts. If clashes exist, users will be prompted","lastModifiedDate":"2021-10-28"},{"lineNumber":329,"author":{"gitId":"SpdPnd98"},"content":"the message when they add one single schedule, and no imports will be made. This is to facilitate manual conflict resolution","lastModifiedDate":"2021-10-28"},{"lineNumber":330,"author":{"gitId":"SpdPnd98"},"content":"by the user, where the user will attempt to find which event has error on their own and keep tying to import until it is successful.","lastModifiedDate":"2021-10-28"},{"lineNumber":331,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":332,"author":{"gitId":"whoisjustinngo"},"content":"\u0026nbsp;","lastModifiedDate":"2021-10-20"},{"lineNumber":333,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":334,"author":{"gitId":"kslui99"},"content":"### \\[Proposed for v1.3\\] Mark `Todo` as done","lastModifiedDate":"2021-10-20"},{"lineNumber":335,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":336,"author":{"gitId":"kslui99"},"content":"#### Proposed Implementation","lastModifiedDate":"2021-10-20"},{"lineNumber":337,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":338,"author":{"gitId":"kslui99"},"content":"The proposed feature of marking a `Todo` as done will be implemented as a `DoneTodoCommand`, which will be similar in many ways with an `EditTodoCommand`. This similarity lies in the fact that both commands alter an attribute of the `Todo` model: the `EditTodoCommand` alters the description attribute of the `Todo`, while the `DoneTodoCommand` alters the `isDone` attribute of the `Todo`.","lastModifiedDate":"2021-10-20"},{"lineNumber":339,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":340,"author":{"gitId":"kslui99"},"content":"Since `Todos` are guaranteed to be immutable in the current implementation of the `Todo` model, the `DoneTodoCommand` applied to a `Todo` will not edit the `Todo`. Instead, a new `Todo` will be created with the same `description` but with the `isDone` attribute toggled to `true`.","lastModifiedDate":"2021-10-20"},{"lineNumber":341,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":342,"author":{"gitId":"kslui99"},"content":"#### Design considerations:","lastModifiedDate":"2021-10-20"},{"lineNumber":343,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":344,"author":{"gitId":"kslui99"},"content":"**Aspect: How mark as done executes:**","lastModifiedDate":"2021-10-20"},{"lineNumber":345,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":346,"author":{"gitId":"kslui99"},"content":"* **Alternative 1 (current choice):** Replaces the current `Todo` with a new instance of `Todo`.","lastModifiedDate":"2021-10-20"},{"lineNumber":347,"author":{"gitId":"kslui99"},"content":"    * Pros: Consistent with the current implementation of the commands for editing a model, and thus increases consistency across the entire codebase.","lastModifiedDate":"2021-10-20"},{"lineNumber":348,"author":{"gitId":"kslui99"},"content":"    * Cons: May have performance issues since a new `Todo` is created every time it is marked as done. Nevertheless, the impact of this implementation on performance is expected to be negligible.","lastModifiedDate":"2021-10-20"},{"lineNumber":349,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":350,"author":{"gitId":"kslui99"},"content":"* **Alternative 2:** Edits the current instance of `Todo`.","lastModifiedDate":"2021-10-20"},{"lineNumber":351,"author":{"gitId":"kslui99"},"content":"    * Pros: Might be faster, since there is no need to create a new `Todo` instance.","lastModifiedDate":"2021-10-20"},{"lineNumber":352,"author":{"gitId":"kslui99"},"content":"    * Cons: Decreased consistency across the codebase, and no longer guarantees that `Todo`s are immutable.","lastModifiedDate":"2021-10-20"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"rickyaandrew"},"content":"### \\[Proposed for v1.3\\] Finding and Editing exisiting Events","lastModifiedDate":"2021-10-28"},{"lineNumber":355,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":356,"author":{"gitId":"rickyaandrew"},"content":"#### Proposed implementation","lastModifiedDate":"2021-10-28"},{"lineNumber":357,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":358,"author":{"gitId":"rickyaandrew"},"content":"The proposed feature of finding and editing the existing `Events` is being parsed by `FindScheduleCommandParser` and `EditScheduleCommandParser` respectively. Once parsed, those command will be implemented by the `FindScheduleCommand` and `EditScheduleCommand` respectively. ","lastModifiedDate":"2021-10-28"},{"lineNumber":359,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":360,"author":{"gitId":"rickyaandrew"},"content":"For `FindScheduleCommand` a `Predicate` will takes in the keywords that is given by the user, then it will search through the `UniqueScheduleList`, checking if there are any `Events` which have the same keywords in description. Once done, it will return a `List` of all the `Events` which have the same keywords as the one given by the user, listing on the user interface.","lastModifiedDate":"2021-10-28"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":362,"author":{"gitId":"rickyaandrew"},"content":"For `EditScheduleCommand` user will need to input the index of the `Event` which will be editted, then key in only the interested field which the user would like to edit. Once completed, the old `Event` will be replaced with the new `Event` with the updated information.  ","lastModifiedDate":"2021-10-28"},{"lineNumber":363,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":364,"author":{"gitId":"rickyaandrew"},"content":"**Aspect on how finding an event is done**","lastModifiedDate":"2021-10-28"},{"lineNumber":365,"author":{"gitId":"rickyaandrew"},"content":"  * Using a `Predicate` to get a `true false` return to check if the keywords are present in the description. If it is present, then it will be displayed. Otherwise, it will not be displayed. ","lastModifiedDate":"2021-10-28"},{"lineNumber":366,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":367,"author":{"gitId":"rickyaandrew"},"content":"### \\[Proposed for v1.3\\] Including Tags in Events","lastModifiedDate":"2021-10-28"},{"lineNumber":368,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":369,"author":{"gitId":"rickyaandrew"},"content":"The proposed feature is to add tags in the `Events` which is going to be added or `Events` which are already existed in the `UniqueScheduleList`. Tags are added so as to categorise different `Events` and also allows user to easily `Fitler` out `Events` that carries the same tags.","lastModifiedDate":"2021-10-28"},{"lineNumber":370,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":371,"author":{"gitId":"rickyaandrew"},"content":"**Aspect on how tagging is done**","lastModifiedDate":"2021-10-28"},{"lineNumber":372,"author":{"gitId":"rickyaandrew"},"content":" * In each `Event`, there is a `List\u003cTag\u003e` which carries all the `Tag` which the user have the `Event` tied to. All the `Tags` which are present in this `List\u003cTag\u003e` will be displayed in the user interface as well. ","lastModifiedDate":"2021-10-28"},{"lineNumber":373,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":374,"author":{"gitId":"rickyaandrew"},"content":"### \\[Proposed for v1.3\\] Filtering Events","lastModifiedDate":"2021-10-28"},{"lineNumber":375,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":376,"author":{"gitId":"rickyaandrew"},"content":"Filtering an `Event` is similar to finding an `Event`. It is being parsed by the `FilterScheduleCommandParser` and filtering is being implemented by the `FilterScheduleCommand`. The parser will utilise a `Predicate` to filter the `UniqueScheduleList` based on any attribute which the user would like to filter on the `Event`. The `Predicate` takes in keyword of the respective attribute, and applied a filter onto the `UniqueScheduleList`. Only the `Event` which satisfies the `Predicate` will be displayed in the user interface.","lastModifiedDate":"2021-10-28"},{"lineNumber":377,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":378,"author":{"gitId":"rickyaandrew"},"content":"**Aspect on how filtering is done**","lastModifiedDate":"2021-10-28"},{"lineNumber":379,"author":{"gitId":"rickyaandrew"},"content":"`UniqueScheduleList` is used to keep store in-memory data which wraps an `ObservableList\u003cSchedule\u003e`. It is then fed to the Ui to display the filtered `Event` to the user. This design provides a clean way for us to filter data using Predicate.","lastModifiedDate":"2021-10-28"},{"lineNumber":380,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":381,"author":{"gitId":"rickyaandrew"},"content":"### \\[Proposed for v1.3\\] Adding Recurring Events","lastModifiedDate":"2021-10-28"},{"lineNumber":382,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":383,"author":{"gitId":"rickyaandrew"},"content":"Adding recurring `Event` is an enhancement in adding an `Event` into the `Schedule`. It allows user to add daily, weekly or yearly `Event` in a command line. ","lastModifiedDate":"2021-10-28"},{"lineNumber":384,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":385,"author":{"gitId":"rickyaandrew"},"content":"Once a date is given to recur daily, weekly or yearly, it will first check for any clashes found if all the `Event` is added into the `Schedule`. If there are no clashes, all the `Events`, till the recur date, will be added, otherwise none will be added.","lastModifiedDate":"2021-10-28"},{"lineNumber":386,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":387,"author":{"gitId":"rickyaandrew"},"content":"**Aspect on how recurring of Event is done**","lastModifiedDate":"2021-10-28"},{"lineNumber":388,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":389,"author":{"gitId":"rickyaandrew"},"content":" * This is done implementing another attribute for the `Event`, which is the recurring date. If the recurring date is present, then `Event` is a recurring `Event` otherwise it need not recur. Another attribute called `recurrType` will determine if it recurs daily (D), weekly (W) or yearly (Y). `Event` will recur until it reaches the recur date.","lastModifiedDate":"2021-10-28"},{"lineNumber":390,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":391,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":392,"author":{"gitId":"SpdPnd98"},"content":"### \\[Proposed for v1.3\\] Convenience Commands","lastModifiedDate":"2021-10-29"},{"lineNumber":393,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":394,"author":{"gitId":"SpdPnd98"},"content":"For v1.2, users have to go to a specific tab in order to run commands from said tab. To allow quality of life upgrades, users can add","lastModifiedDate":"2021-10-29"},{"lineNumber":395,"author":{"gitId":"SpdPnd98"},"content":"a tab name to indicate which tab it runs in. However, to give the users visual feedback, we need to switch to the tab the command was intended for.","lastModifiedDate":"2021-10-29"},{"lineNumber":396,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":397,"author":{"gitId":"SpdPnd98"},"content":"### Proposed Implementation","lastModifiedDate":"2021-10-29"},{"lineNumber":398,"author":{"gitId":"SpdPnd98"},"content":"To reasonably realise this, the original AB3 needs to be reconfigured to EITHER:","lastModifiedDate":"2021-10-29"},{"lineNumber":399,"author":{"gitId":"SpdPnd98"},"content":"1. recognize it is running at a different tab, and set `tabswitch` to be true in `CommandResult`, alongside the actual `TAB_NAME` OR","lastModifiedDate":"2021-10-29"},{"lineNumber":400,"author":{"gitId":"SpdPnd98"},"content":"2. always run `tab [TAB NAME]` as the first command, and then runs the user\u0027s command","lastModifiedDate":"2021-10-29"},{"lineNumber":401,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":402,"author":{"gitId":"SpdPnd98"},"content":"Both of these implementations require major overhauls, but the latter requires a much smaller one, namely modifying","lastModifiedDate":"2021-10-29"},{"lineNumber":403,"author":{"gitId":"SpdPnd98"},"content":"how to `execute` 2 commands. To achieve this, instead of returning a `Command`, return a `List\u003cCommand\u003e` and execute all of the Commands.","lastModifiedDate":"2021-10-29"},{"lineNumber":404,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":405,"author":{"gitId":"SpdPnd98"},"content":"However, we only need to return the last `CommandResult` as that is what the user entered. Therefore, we always assign the last `CommandResult` to ","lastModifiedDate":"2021-10-29"},{"lineNumber":406,"author":{"gitId":"SpdPnd98"},"content":"show feedback to user.","lastModifiedDate":"2021-10-29"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":408,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":413,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":414,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":415,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":416,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"whoisjustinngo"},"content":"* Students working part-time as financial advisors","lastModifiedDate":"2021-09-28"},{"lineNumber":427,"author":{"gitId":"whoisjustinngo"},"content":"  * Have a need to manage a significant number of contacts","lastModifiedDate":"2021-09-28"},{"lineNumber":428,"author":{"gitId":"whoisjustinngo"},"content":"  * Have a need to manage a busy schedule (both school and work)","lastModifiedDate":"2021-09-28"},{"lineNumber":429,"author":{"gitId":"whoisjustinngo"},"content":"  * Have a need to segregate work contacts and tasks from that of school when necessary","lastModifiedDate":"2021-09-28"},{"lineNumber":430,"author":{"gitId":"whoisjustinngo"},"content":"* Prefer desktop apps over other types and is reasonably comfortable using CLI apps","lastModifiedDate":"2021-09-28"},{"lineNumber":431,"author":{"gitId":"whoisjustinngo"},"content":"* Can type fast and prefers typing to mouse interactions","lastModifiedDate":"2021-09-28"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"whoisjustinngo"},"content":"**Value proposition**:","lastModifiedDate":"2021-09-28"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":435,"author":{"gitId":"whoisjustinngo"},"content":"* Helps target user keep track of their contacts","lastModifiedDate":"2021-09-28"},{"lineNumber":436,"author":{"gitId":"whoisjustinngo"},"content":"  * Includes contact\u0027s profile in addition to basic contact information – useful for managing client relationships","lastModifiedDate":"2021-09-28"},{"lineNumber":437,"author":{"gitId":"whoisjustinngo"},"content":"* Helps target user keep track of their schedule","lastModifiedDate":"2021-09-28"},{"lineNumber":438,"author":{"gitId":"whoisjustinngo"},"content":"  * Facilitates target user in de-conflicting potential client meetings with school timetable ","lastModifiedDate":"2021-09-28"},{"lineNumber":439,"author":{"gitId":"whoisjustinngo"},"content":"* Helps target user keep track of any ad-hoc tasks that can be completed anytime (ToDos) ","lastModifiedDate":"2021-09-28"},{"lineNumber":440,"author":{"gitId":"whoisjustinngo"},"content":"* Enables target user to rank and hence prioritise clients based on potential commissions","lastModifiedDate":"2021-09-28"},{"lineNumber":441,"author":{"gitId":"whoisjustinngo"},"content":"* Allows target user to set their personal KPI and subsequently monitor their progress","lastModifiedDate":"2021-09-28"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"whoisjustinngo"},"content":"| Priority | As a …​                                 | I want to …​                                       | So that …​                                                          |","lastModifiedDate":"2021-09-28"},{"lineNumber":449,"author":{"gitId":"whoisjustinngo"},"content":"| -------- | ------------------------------------------ | ----------------------------------------------------- | ---------------------------------------------------------------------- |","lastModifiedDate":"2021-09-28"},{"lineNumber":450,"author":{"gitId":"whoisjustinngo"},"content":"| `* * *`  | student working as a financial advisor      | add new event to schedule                             | I can keep track of my client meetings, school commitments and other time-sensitive activities |","lastModifiedDate":"2021-09-28"},{"lineNumber":451,"author":{"gitId":"whoisjustinngo"},"content":"| `* * *`  | student working as a financial advisor      | view events in schedule                               | I can have a better understanding of my schedule |","lastModifiedDate":"2021-09-28"},{"lineNumber":452,"author":{"gitId":"whoisjustinngo"},"content":"| `* *`    | student working as a financial advisor      | edit an event in schedule                             | I can edit details of a previously added event |","lastModifiedDate":"2021-09-28"},{"lineNumber":453,"author":{"gitId":"whoisjustinngo"},"content":"| `* * *`  | student working as a financial advisor      | delete an event in schedule                           | I can delete a previously added event |","lastModifiedDate":"2021-09-28"},{"lineNumber":454,"author":{"gitId":"whoisjustinngo"},"content":"| `* * *`  | student working as a financial advisor      | add a new ToDo                                        | I can keep track of my things to do (i.e. tasks that can be completed any time) |","lastModifiedDate":"2021-09-28"},{"lineNumber":455,"author":{"gitId":"whoisjustinngo"},"content":"| `* * *`  | student working as a financial advisor      | view current ToDos                                    | I can see what I have left to do |","lastModifiedDate":"2021-09-28"},{"lineNumber":456,"author":{"gitId":"whoisjustinngo"},"content":"| `* *`    | student working as a financial advisor      | edit a previously added ToDo                          | I can edit details of a previously added todo |","lastModifiedDate":"2021-09-28"},{"lineNumber":457,"author":{"gitId":"whoisjustinngo"},"content":"| `* * *`  | student working as a financial advisor      | delete a previously added ToDo                        |  |","lastModifiedDate":"2021-09-28"},{"lineNumber":458,"author":{"gitId":"whoisjustinngo"},"content":"| `* * *`  | person juggling multiple responsibilities\t| be able to sort my tasks based on how soon they are due | I know how I should assign my time |","lastModifiedDate":"2021-09-28"},{"lineNumber":459,"author":{"gitId":"whoisjustinngo"},"content":"| `*`      | student working as a financial advisor\t    | toggle the schedule to show only either school or work related events | I can see how events in each category |","lastModifiedDate":"2021-09-28"},{"lineNumber":460,"author":{"gitId":"whoisjustinngo"},"content":"| `* *`    | user with a busy schedule\t                | be able to set recurring tasks                        | I do not need to explicitly enter the same tasks one by one |","lastModifiedDate":"2021-09-28"},{"lineNumber":461,"author":{"gitId":"whoisjustinngo"},"content":"| `* *`    | user\t                                    | easily re-add previously completed tasks\t            | I do not need to type out all the details again | ","lastModifiedDate":"2021-09-28"},{"lineNumber":462,"author":{"gitId":"whoisjustinngo"},"content":"| `*`      | financial Advisor\t                        | keep track of state of claims of clients and relevant tasks | I can manage claims of all clients effectively|","lastModifiedDate":"2021-09-28"},{"lineNumber":463,"author":{"gitId":"whoisjustinngo"},"content":"| `*`      | financial Advisor who wants to build a personal connection with my clients | I can see all upcoming important client-related events (such as birthdays) | remember to send greetings and congratulations to them |","lastModifiedDate":"2021-09-28"},{"lineNumber":464,"author":{"gitId":"whoisjustinngo"},"content":"| `*`      | user\t                                    | set reminders for myself\t                            | whenever I use the application I will be reminded on the important things which I need to do today |","lastModifiedDate":"2021-09-28"},{"lineNumber":465,"author":{"gitId":"whoisjustinngo"},"content":"| `* *`    | user who needs to schedule events          | view public holidays\t                                | I am aware when I can/can\u0027t schedule a time to meet clients, as well as know when are the relevant school off-days |","lastModifiedDate":"2021-09-28"},{"lineNumber":466,"author":{"gitId":"whoisjustinngo"},"content":"| `*`      | expert user\t                            | import school calendar automatically\t                | I can schedule my school timetable automatically |","lastModifiedDate":"2021-09-28"},{"lineNumber":467,"author":{"gitId":"whoisjustinngo"},"content":"| `* * *`  | person juggling multiple responsibilities  | view dashboard to see events occurring today          | I have an idea of what my day would be like |","lastModifiedDate":"2021-09-28"},{"lineNumber":468,"author":{"gitId":"whoisjustinngo"},"content":"| `* * *`  | student working as a financial advisor      | add a new contact                                     | I can keep track of all my contacts |","lastModifiedDate":"2021-09-28"},{"lineNumber":469,"author":{"gitId":"whoisjustinngo"},"content":"| `* * *`  | student working as a financial advisor      | view all contacts                                     |  |","lastModifiedDate":"2021-09-28"},{"lineNumber":470,"author":{"gitId":"whoisjustinngo"},"content":"| `* *`    | student working as a financial advisor      | update details of a previously added contact          |  | ","lastModifiedDate":"2021-09-28"},{"lineNumber":471,"author":{"gitId":"whoisjustinngo"},"content":"| `* * *`  | student working as a financial advisor      | delete an existing contact                            |  |","lastModifiedDate":"2021-09-28"},{"lineNumber":472,"author":{"gitId":"whoisjustinngo"},"content":"| `* * *`  | financial Advisor who wants to build a personal connection with my clients | maintain a detailed profile of the client which includes their birthday, email, current financial plans, job, age, monthly income etc. | I can understand my clients on a more personal level |","lastModifiedDate":"2021-09-28"},{"lineNumber":473,"author":{"gitId":"whoisjustinngo"},"content":"| `* * *`  | financial Advisor who wants to decide which client to meet next | be able to tag clients based on their status (fresh, closing, closed)\t| I can make informed decisions about when prioritising clients in order to maximize my earnings |","lastModifiedDate":"2021-09-28"},{"lineNumber":474,"author":{"gitId":"whoisjustinngo"},"content":"| `* *`    | financial advisor\t                        | delete multiple clients from my contact book in a single command | it is more convenient |","lastModifiedDate":"2021-09-28"},{"lineNumber":475,"author":{"gitId":"whoisjustinngo"},"content":"| `* *`    | user                                       | filter based on attributes of each contact\t            | I can view different groups of contacts separately |","lastModifiedDate":"2021-09-28"},{"lineNumber":476,"author":{"gitId":"whoisjustinngo"},"content":"| `* *`    | financial advisor\t                        | keep track of the minutes of the meetings with each client | I have a record of what was discussed |","lastModifiedDate":"2021-09-28"},{"lineNumber":477,"author":{"gitId":"whoisjustinngo"},"content":"| `* *`    | financial advisor\t                        | sort potential leads by probability of conversion\t    | I can prioritise which clients to meet |","lastModifiedDate":"2021-09-28"},{"lineNumber":478,"author":{"gitId":"whoisjustinngo"},"content":"| `* *`    | expert user\t                            | sort clients based on value of lead or urgency\t    | I can effectively prioritise work schedule to maximise performance |","lastModifiedDate":"2021-09-28"},{"lineNumber":479,"author":{"gitId":"whoisjustinngo"},"content":"| `*`      | user \t                                    | be able to see how much time I have spent in each category of my responsibilities (e.g. work, school, personal) | I can try to have a better work-school-life balance |","lastModifiedDate":"2021-09-28"},{"lineNumber":480,"author":{"gitId":"whoisjustinngo"},"content":"| `* *`    | user                                       | set my targets and goals                              | I know what I am working towards |","lastModifiedDate":"2021-09-28"},{"lineNumber":481,"author":{"gitId":"whoisjustinngo"},"content":"| `* *`    | user                                       | view my targets and goals                             | | ","lastModifiedDate":"2021-09-28"},{"lineNumber":482,"author":{"gitId":"whoisjustinngo"},"content":"| `* *`    | user                                       | edit my current targets and goals                     | I can update my progress or change my previously set goals / targets |","lastModifiedDate":"2021-09-28"},{"lineNumber":483,"author":{"gitId":"whoisjustinngo"},"content":"| `* *`    | user                                       | delete a previously set target                        | |","lastModifiedDate":"2021-09-28"},{"lineNumber":484,"author":{"gitId":"whoisjustinngo"},"content":"| `* * *`  | user\t                                    | import / export all of my data\t                    | I am able to transfer my data to another device / back up my data |","lastModifiedDate":"2021-09-28"},{"lineNumber":485,"author":{"gitId":"whoisjustinngo"},"content":"| `* * *`  | financial advisor getting ready to add new client data from an Excel file to what I currently have | import data from an Excel spreadsheet | I can add all current clients I have without spending time to input the data row-by-row |","lastModifiedDate":"2021-09-28"},{"lineNumber":486,"author":{"gitId":"whoisjustinngo"},"content":"| `* * *`  | careful user who is afraid of all my data being locked in the app | export all data onto an Excel spreadsheet or pdf | I can have access to my data in a familiar format that I can read and edit |","lastModifiedDate":"2021-09-28"},{"lineNumber":487,"author":{"gitId":"whoisjustinngo"},"content":"| `*`      | potential user exploring Advyze\t        | link Advyze to third party email applications interfaces | I can seamlessly send and/or receive emails through Advyze |","lastModifiedDate":"2021-09-28"},{"lineNumber":488,"author":{"gitId":"whoisjustinngo"},"content":"| `*`      | financial advisor\t                        | hide student features                                 | I will not mixed up between features for students and financial advisor when I do not need them |","lastModifiedDate":"2021-09-28"},{"lineNumber":489,"author":{"gitId":"whoisjustinngo"},"content":"| `* * *`  | student working as a financial advisor      | add tags to data                                      | I can see which contacts / tasks are school related and which are work related |","lastModifiedDate":"2021-09-28"},{"lineNumber":490,"author":{"gitId":"whoisjustinngo"},"content":"| `* *`    | user                                       | delete data according to tags\t                        | I can clear all data in a category easily |","lastModifiedDate":"2021-09-28"},{"lineNumber":491,"author":{"gitId":"whoisjustinngo"},"content":"| `*`      | user\t                                    | have a quick reference available on my mobile phone\t| I do not need to keep referring to my computer or carry my computer everywhere |","lastModifiedDate":"2021-09-28"},{"lineNumber":492,"author":{"gitId":"whoisjustinngo"},"content":"| `* *`    | user                                       | set item priority\t                                    | I will know which actions, tasks, or clients I need to prioritise |","lastModifiedDate":"2021-09-28"},{"lineNumber":493,"author":{"gitId":"whoisjustinngo"},"content":"| `* *`    | potential user exploring Advyze            | see the app populated with sample data\t            | I can see how the app will look like when it is in use |","lastModifiedDate":"2021-09-28"},{"lineNumber":494,"author":{"gitId":"whoisjustinngo"},"content":"| `* *`    | beginner user\t                            | be introduced to key features of Advyze\t            | I can start to maximise the potential of Advyze |","lastModifiedDate":"2021-09-28"},{"lineNumber":495,"author":{"gitId":"whoisjustinngo"},"content":"| `* * *`  | user\t                                    | have keyboard commands to switch tabs\t                | I can see different tabs |","lastModifiedDate":"2021-09-28"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"whoisjustinngo"},"content":"\u003e **Use case 01: Adding a new contact**","lastModifiedDate":"2021-09-28"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"whoisjustinngo"},"content":"**Actor**: User","lastModifiedDate":"2021-09-28"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"whoisjustinngo"},"content":"1. User specifies details of the contact to add","lastModifiedDate":"2021-09-28"},{"lineNumber":506,"author":{"gitId":"whoisjustinngo"},"content":"2. Advyze adds the contact  ","lastModifiedDate":"2021-09-28"},{"lineNumber":507,"author":{"gitId":"whoisjustinngo"},"content":"Use case ends","lastModifiedDate":"2021-09-28"},{"lineNumber":508,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":509,"author":{"gitId":"whoisjustinngo"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":511,"author":{"gitId":"whoisjustinngo"},"content":"* 2a. The given details of the contact is a duplicate (same name and phone number)","lastModifiedDate":"2021-09-28"},{"lineNumber":512,"author":{"gitId":"whoisjustinngo"},"content":"  * 2a1. Advyze prompts the user for a confirmation to overwrite the existing contact","lastModifiedDate":"2021-09-28"},{"lineNumber":513,"author":{"gitId":"whoisjustinngo"},"content":"    * 2a1a. User accepts confirmation to overwrite","lastModifiedDate":"2021-09-28"},{"lineNumber":514,"author":{"gitId":"whoisjustinngo"},"content":"    * 2a1b. User declines confirmation to overwrite","lastModifiedDate":"2021-09-28"},{"lineNumber":515,"author":{"gitId":"whoisjustinngo"},"content":"  * Use case ends","lastModifiedDate":"2021-09-28"},{"lineNumber":516,"author":{"gitId":"whoisjustinngo"},"content":"* 3a. The given details are invalid (e.g. missing details, invalid format)","lastModifiedDate":"2021-09-28"},{"lineNumber":517,"author":{"gitId":"whoisjustinngo"},"content":"  * 3a1. Advyze shows an error message","lastModifiedDate":"2021-09-28"},{"lineNumber":518,"author":{"gitId":"whoisjustinngo"},"content":"  * Use case ends","lastModifiedDate":"2021-09-28"},{"lineNumber":519,"author":{"gitId":"whoisjustinngo"},"content":" ","lastModifiedDate":"2021-09-28"},{"lineNumber":520,"author":{"gitId":"whoisjustinngo"},"content":"\u003e **Use case 02: Deleting an event**","lastModifiedDate":"2021-09-28"},{"lineNumber":521,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":522,"author":{"gitId":"whoisjustinngo"},"content":"**Actor**: User","lastModifiedDate":"2021-09-28"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":524,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":526,"author":{"gitId":"whoisjustinngo"},"content":"1. User requests to list all events","lastModifiedDate":"2021-09-28"},{"lineNumber":527,"author":{"gitId":"whoisjustinngo"},"content":"2. Advyze shows a list of events","lastModifiedDate":"2021-09-28"},{"lineNumber":528,"author":{"gitId":"whoisjustinngo"},"content":"3. User requests to delete a specific event in the list","lastModifiedDate":"2021-09-28"},{"lineNumber":529,"author":{"gitId":"whoisjustinngo"},"content":"4. Advyze deletes the event  ","lastModifiedDate":"2021-09-28"},{"lineNumber":530,"author":{"gitId":"whoisjustinngo"},"content":"   Use case ends","lastModifiedDate":"2021-09-28"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"whoisjustinngo"},"content":"* 2a. The list of events is empty","lastModifiedDate":"2021-09-28"},{"lineNumber":536,"author":{"gitId":"whoisjustinngo"},"content":"    * Use case ends","lastModifiedDate":"2021-09-28"},{"lineNumber":537,"author":{"gitId":"whoisjustinngo"},"content":"* 3a. The given index of the event to delete is invalid (e.g. index specified doesn\u0027t exist or no index specified)","lastModifiedDate":"2021-09-28"},{"lineNumber":538,"author":{"gitId":"whoisjustinngo"},"content":"    * 3a1. Advyze shows an error message","lastModifiedDate":"2021-09-28"},{"lineNumber":539,"author":{"gitId":"whoisjustinngo"},"content":"    * Use case ends","lastModifiedDate":"2021-09-28"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"whoisjustinngo"},"content":"\u003e **Use case 03: Switching between tabs**","lastModifiedDate":"2021-09-28"},{"lineNumber":542,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"whoisjustinngo"},"content":"**Actor**: User","lastModifiedDate":"2021-09-28"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"whoisjustinngo"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":547,"author":{"gitId":"whoisjustinngo"},"content":"1. User specifies tab to switch to","lastModifiedDate":"2021-09-28"},{"lineNumber":548,"author":{"gitId":"whoisjustinngo"},"content":"2. Advyze switches to the specified tab  ","lastModifiedDate":"2021-09-28"},{"lineNumber":549,"author":{"gitId":"whoisjustinngo"},"content":"   Use case ends","lastModifiedDate":"2021-09-28"},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"whoisjustinngo"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"whoisjustinngo"},"content":"* 1a. Tab specified by the user does not exist","lastModifiedDate":"2021-09-28"},{"lineNumber":554,"author":{"gitId":"whoisjustinngo"},"content":"  * Advyze displays an error message","lastModifiedDate":"2021-09-28"},{"lineNumber":555,"author":{"gitId":"whoisjustinngo"},"content":"  * Use case ends","lastModifiedDate":"2021-09-28"},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"whoisjustinngo"},"content":"1. Should work on any mainstream OS that has Java 11 or above installed.","lastModifiedDate":"2021-09-28"},{"lineNumber":560,"author":{"gitId":"whoisjustinngo"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance with typical usage.","lastModifiedDate":"2021-09-28"},{"lineNumber":561,"author":{"gitId":"whoisjustinngo"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to make use of the app faster by typing the commands than using the mouse.","lastModifiedDate":"2021-09-28"},{"lineNumber":562,"author":{"gitId":"whoisjustinngo"},"content":"4. Should work without internet connection.","lastModifiedDate":"2021-09-28"},{"lineNumber":563,"author":{"gitId":"whoisjustinngo"},"content":"5. The application should not take more than 200 man-hours to develop.","lastModifiedDate":"2021-09-28"},{"lineNumber":564,"author":{"gitId":"whoisjustinngo"},"content":"6. Should be usable by a novice without any programming experience after they read the User Guide.","lastModifiedDate":"2021-09-28"},{"lineNumber":565,"author":{"gitId":"whoisjustinngo"},"content":"7. The project is expected to adhere to a schedule that delivers feature sets in two iterations.","lastModifiedDate":"2021-09-28"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"whoisjustinngo"},"content":"* **Tab:** Refers to a logical section of the app which provides certain functionalities. For example, the Dashboard tab contains all functionalities for the dashboard.","lastModifiedDate":"2021-09-28"},{"lineNumber":571,"author":{"gitId":"whoisjustinngo"},"content":"* **Dashboard:** a tab that aggregates relevant information for convenient and quick viewing","lastModifiedDate":"2021-09-28"},{"lineNumber":572,"author":{"gitId":"whoisjustinngo"},"content":"* **Contacts:** a tab where information on the user’s contacts are displayed","lastModifiedDate":"2021-09-28"},{"lineNumber":573,"author":{"gitId":"whoisjustinngo"},"content":"* **Schedule:** a tab where the user’s events are displayed","lastModifiedDate":"2021-09-28"},{"lineNumber":574,"author":{"gitId":"whoisjustinngo"},"content":"  * **Event:** a task that is tied to a timeline, for example Lessons, Deadlines or Meetings.","lastModifiedDate":"2021-09-28"},{"lineNumber":575,"author":{"gitId":"whoisjustinngo"},"content":"* **Todos (tab):** a tab where the user’s todos are displayed","lastModifiedDate":"2021-09-28"},{"lineNumber":576,"author":{"gitId":"whoisjustinngo"},"content":"  * **Todo (task):** a task that does not have a time","lastModifiedDate":"2021-09-28"},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":611,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":615,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":616,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":618,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":621,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":622,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":623,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":624,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":625,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":626,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"whoisjustinngo":141,"kslui99":19,"rickyaandrew":53,"-":350,"SpdPnd98":56,"mokdarren":10}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"whoisjustinngo"},"content":"Advyze is a desktop app for tech-savvy student financial advisors to keep track of their clients and their busy school schedule, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"-   Table of Contents","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"---","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"whoisjustinngo"},"content":"2. Download the latest `advyze.jar` release from [this link](https://github.com/AY2122S1-CS2103-T14-4/tp/releases).","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"whoisjustinngo"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for Advyze.","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"whoisjustinngo"},"content":"4. Double-click the file to start the app. You should see the `dashboard` tab displayed (refer to the [Dashboard](#dashboard) to see how it is supposed to look like)","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"whoisjustinngo"},"content":"**More details coming soon**","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"whoisjustinngo"},"content":"Refer to the [Features](#Features) below for more details on what Advyze can do.","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"---","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"-   Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"-   Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"rickyaandrew"},"content":"-   Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"rickyaandrew"},"content":"    e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"rickyaandrew"},"content":"-   Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"whoisjustinngo"},"content":"-   If a parameter is expected only once in the command, but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":50,"author":{"gitId":"rickyaandrew"},"content":"-   Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"whoisjustinngo"},"content":"## Dashboard","lastModifiedDate":"2021-09-29"},{"lineNumber":56,"author":{"gitId":"whoisjustinngo"},"content":"The dashboard is the default landing page of the app and displays a summary of relevant information from the other sections of the app.","lastModifiedDate":"2021-09-29"},{"lineNumber":57,"author":{"gitId":"whoisjustinngo"},"content":"* The dashboard by default shows:","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"whoisjustinngo"},"content":"  * A section that displays analytics for contacts which is updated as the user populates it with data ","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"whoisjustinngo"},"content":"  * Custom goals that can be set by the user","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"whoisjustinngo"},"content":"  * The user\u0027s schedule in chronological order","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"whoisjustinngo"},"content":"  * The user\u0027s todos, with the earliest added at the top","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"whoisjustinngo"},"content":"* These sections are automatically updated as the data in the respective tabs are changed.","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"whoisjustinngo"},"content":"* The user can adjust how much of each section is to be displayed by sliding the black bars as required.","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"whoisjustinngo"},"content":"* In future versions, the user will be able to customise what they wish to see on the dashboard.","lastModifiedDate":"2021-09-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"whoisjustinngo"},"content":"This is how the dashboard looks like as of v1.3: ","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"whoisjustinngo"},"content":"![dashboard_tab](images/dashboard-tab-v1.3.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"whoisjustinngo"},"content":"### Adding a Custom Goal: `add`","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"whoisjustinngo"},"content":"Adds a new custom goal.  ","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"whoisjustinngo"},"content":"Format: `add d/DESCRIPTION goal/GOAL [bydate/END_DATE] [bytime/END_TIME]`  ","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"whoisjustinngo"},"content":"Note: `GOAL` has to be a number, `END_DATE` has to be in the format dd-mm-yyyy and `END_TIME` has to have the format","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"whoisjustinngo"},"content":"hhmm in 24-hour format. If `END_TIME` is specified, `END_DATE` has to be specified as well.  ","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"whoisjustinngo"},"content":"Example:","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"whoisjustinngo"},"content":"* Goal with a date but no time: `add d/call 20 clients goal/20 bydate/16-05-2021`","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"whoisjustinngo"},"content":"* Goal with both a date and time: `add d/earn $1000 in commissions goal/1000 bydate/23-07-2021 bytime/1200`","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"whoisjustinngo"},"content":"### Updating a Custom Goal: `update`","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"whoisjustinngo"},"content":"Format: `update INDEX_OF_CUSTOM_GOAL val/AMOUNT_TO_INCREMENT_GOAL_BY`","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"whoisjustinngo"},"content":"Note: `AMOUNT_TO_INCREMENT_GOAL_BY` has to be a number (can be positive or negative).  ","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"whoisjustinngo"},"content":"Updates *the progress* of a particular custom goal by the specified value, i.e. updated progress \u003d old progress + ","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"whoisjustinngo"},"content":"`AMOUNT_TO_INCREMENT_GOAL_BY`","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"whoisjustinngo"},"content":"Example: ","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"whoisjustinngo"},"content":"* To update progress of custom goal 1 by 123.4: `update 1 val/123.4`","lastModifiedDate":"2021-11-01"},{"lineNumber":92,"author":{"gitId":"whoisjustinngo"},"content":"  ","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"whoisjustinngo"},"content":"### Deleting a Custom Goal: `delete`","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"whoisjustinngo"},"content":"Deletes the specified Custom Goal from the dashboard.  ","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"whoisjustinngo"},"content":"Format: `delete INDEX_OF_GOAL_TO_DELETE`","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"mokdarren"},"content":"## Contacts","lastModifiedDate":"2021-09-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":102,"author":{"gitId":"mokdarren"},"content":"### Viewing all contacts: `list`  ","lastModifiedDate":"2021-09-29"},{"lineNumber":103,"author":{"gitId":"mokdarren"},"content":"Format: `list`  ","lastModifiedDate":"2021-09-29"},{"lineNumber":104,"author":{"gitId":"mokdarren"},"content":"* Restores the contacts tab to its default view","lastModifiedDate":"2021-09-29"},{"lineNumber":105,"author":{"gitId":"mokdarren"},"content":"* Contacts are listed in alphabetical order of their names","lastModifiedDate":"2021-09-29"},{"lineNumber":106,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":107,"author":{"gitId":"mokdarren"},"content":"### Adding a contact: `add`","lastModifiedDate":"2021-09-29"},{"lineNumber":108,"author":{"gitId":"mokdarren"},"content":"Format: `add n/NAME r/RELATIONSHIP p/PHONE e/EMAIL a/ADDRESS [t/TAG]`","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"mokdarren"},"content":"Note:  ","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"mokdarren"},"content":"Only supports adding relationships \"friend\" and \"client\" in v1.3","lastModifiedDate":"2021-10-29"},{"lineNumber":112,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"mokdarren"},"content":"Examples:  ","lastModifiedDate":"2021-09-29"},{"lineNumber":114,"author":{"gitId":"mokdarren"},"content":"* Adding a friend: `add n/bobby r/friend p/12345678 e/example@gmail.com a/NUS`","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"mokdarren"},"content":"* Adding a client: `add n/bob r/client p/12345678 e/example@gmail.com a/Heng Mui Kiat Street 32`","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"mokdarren"},"content":"* Adding a friend with 2 tags: `add n/darren r/friend p/12345678 e/example@gmail.com a/Heng Mui Kiat Street 32 t/classmate t/SOC`  ","lastModifiedDate":"2021-10-29"},{"lineNumber":117,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":118,"author":{"gitId":"mokdarren"},"content":"### Editing a contact: `edit`","lastModifiedDate":"2021-10-29"},{"lineNumber":119,"author":{"gitId":"mokdarren"},"content":"Format: `edit INDEX [n/NAME] [r/RELATIONSHIP] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]`  ","lastModifiedDate":"2021-10-29"},{"lineNumber":120,"author":{"gitId":"mokdarren"},"content":"Edits the contact at the specified INDEX.","lastModifiedDate":"2021-10-29"},{"lineNumber":121,"author":{"gitId":"mokdarren"},"content":"* The index refers to the index number shown in the Contact list.","lastModifiedDate":"2021-10-29"},{"lineNumber":122,"author":{"gitId":"mokdarren"},"content":"* The index must be a positive integer 1, 2, 3, … and a valid index in the contact list","lastModifiedDate":"2021-10-29"},{"lineNumber":123,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":124,"author":{"gitId":"mokdarren"},"content":"Examples:  ","lastModifiedDate":"2021-10-29"},{"lineNumber":125,"author":{"gitId":"mokdarren"},"content":"Changing a friend to a client: `edit 1 r/client`  ","lastModifiedDate":"2021-10-29"},{"lineNumber":126,"author":{"gitId":"mokdarren"},"content":"Changing a contact\u0027s phone and email: `edit 1 p/12345678 e/newEmail@gmail.com`  ","lastModifiedDate":"2021-10-29"},{"lineNumber":127,"author":{"gitId":"mokdarren"},"content":"Changing a contact\u0027s tags: `edit 2 t/nus t/dancer`","lastModifiedDate":"2021-10-29"},{"lineNumber":128,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":129,"author":{"gitId":"mokdarren"},"content":"### Deleting a contact: `delete`","lastModifiedDate":"2021-09-29"},{"lineNumber":130,"author":{"gitId":"mokdarren"},"content":"Format: `delete INDEX`  ","lastModifiedDate":"2021-09-29"},{"lineNumber":131,"author":{"gitId":"mokdarren"},"content":"Deletes the contact at the specified INDEX.  ","lastModifiedDate":"2021-09-29"},{"lineNumber":132,"author":{"gitId":"mokdarren"},"content":"* The index refers to the index number shown in the Contact list.","lastModifiedDate":"2021-09-29"},{"lineNumber":133,"author":{"gitId":"mokdarren"},"content":"* The index must be a positive integer 1, 2, 3, … and a valid index in the contact list","lastModifiedDate":"2021-09-29"},{"lineNumber":134,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":135,"author":{"gitId":"mokdarren"},"content":"Example:  ","lastModifiedDate":"2021-09-29"},{"lineNumber":136,"author":{"gitId":"mokdarren"},"content":"`delete 2`","lastModifiedDate":"2021-09-29"},{"lineNumber":137,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":138,"author":{"gitId":"mokdarren"},"content":"### Filtering contact according to attributes: `filter`","lastModifiedDate":"2021-10-29"},{"lineNumber":139,"author":{"gitId":"mokdarren"},"content":"Format: `filter [n/NAME] [r/RELATIONSHIP] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]`  ","lastModifiedDate":"2021-10-29"},{"lineNumber":140,"author":{"gitId":"mokdarren"},"content":"Filter all persons according to their attributes (case-insensitive) and displays them as a list with index numbers.","lastModifiedDate":"2021-10-29"},{"lineNumber":141,"author":{"gitId":"mokdarren"},"content":"* Multiple filters are supported","lastModifiedDate":"2021-10-29"},{"lineNumber":142,"author":{"gitId":"mokdarren"},"content":"  * Example: `filter r/client e/@gmail` ","lastModifiedDate":"2021-10-29"},{"lineNumber":143,"author":{"gitId":"mokdarren"},"content":"    * Filters for all clients that has the keyword: \"gmail\" in their email","lastModifiedDate":"2021-10-29"},{"lineNumber":144,"author":{"gitId":"mokdarren"},"content":"* Multiple keywords are supported","lastModifiedDate":"2021-10-29"},{"lineNumber":145,"author":{"gitId":"mokdarren"},"content":"  * Example: `filter n/Alex Charlotte`","lastModifiedDate":"2021-10-29"},{"lineNumber":146,"author":{"gitId":"mokdarren"},"content":"    * Filters all clients with names Alex OR Charlotte","lastModifiedDate":"2021-10-29"},{"lineNumber":147,"author":{"gitId":"mokdarren"},"content":"* Filter for attribute: name must match whole word","lastModifiedDate":"2021-10-29"},{"lineNumber":148,"author":{"gitId":"mokdarren"},"content":"  * All other attributes are simple keyword matches","lastModifiedDate":"2021-10-29"},{"lineNumber":149,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":150,"author":{"gitId":"mokdarren"},"content":"![contacts_tab](images/contacts-tab-v1.3.png)  ","lastModifiedDate":"2021-10-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"mokdarren"},"content":"## Details  ","lastModifiedDate":"2021-10-29"},{"lineNumber":153,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":154,"author":{"gitId":"whoisjustinngo"},"content":"### Viewing a contact\u0027s policies and notes","lastModifiedDate":"2021-11-01"},{"lineNumber":155,"author":{"gitId":"mokdarren"},"content":"You can view a contact\u0027s policies and notes by using the details tab: `tab details`","lastModifiedDate":"2021-10-29"},{"lineNumber":156,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":157,"author":{"gitId":"whoisjustinngo"},"content":"### Selecting a contact to view details: `select`  ","lastModifiedDate":"2021-11-01"},{"lineNumber":158,"author":{"gitId":"mokdarren"},"content":"Format: `select INDEX`  ","lastModifiedDate":"2021-10-29"},{"lineNumber":159,"author":{"gitId":"mokdarren"},"content":"Selects a contact at the specified INDEX to view policies and notes","lastModifiedDate":"2021-10-29"},{"lineNumber":160,"author":{"gitId":"mokdarren"},"content":"* The index refers to the index number shown in the Contact list.","lastModifiedDate":"2021-10-29"},{"lineNumber":161,"author":{"gitId":"mokdarren"},"content":"* The index must be a positive integer 1, 2, 3, … and a valid index in the contact list","lastModifiedDate":"2021-10-29"},{"lineNumber":162,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":163,"author":{"gitId":"mokdarren"},"content":"Example: `select 2`","lastModifiedDate":"2021-10-29"},{"lineNumber":164,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":165,"author":{"gitId":"mokdarren"},"content":"### Adding a policy to a contact: `policy`","lastModifiedDate":"2021-10-29"},{"lineNumber":166,"author":{"gitId":"mokdarren"},"content":"Format: `policy INDEX insurer/INSURER num/POLICY_NUMBER n/POLICY_NAME comm/COMMISSION`  ","lastModifiedDate":"2021-10-29"},{"lineNumber":167,"author":{"gitId":"mokdarren"},"content":"Add a policy to a contact at the specified INDEX  show in the Contact list  ","lastModifiedDate":"2021-10-29"},{"lineNumber":168,"author":{"gitId":"mokdarren"},"content":"Example:  ","lastModifiedDate":"2021-10-29"},{"lineNumber":169,"author":{"gitId":"mokdarren"},"content":"`policy 1 insurer/AIG num/1231 n/Critical illness comm/100`","lastModifiedDate":"2021-10-29"},{"lineNumber":170,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":171,"author":{"gitId":"mokdarren"},"content":"### Adding a note to a contact: `note`","lastModifiedDate":"2021-10-29"},{"lineNumber":172,"author":{"gitId":"mokdarren"},"content":"Format: `note INDEX MESSAGE`","lastModifiedDate":"2021-10-29"},{"lineNumber":173,"author":{"gitId":"mokdarren"},"content":"Add a note to a contact at the specified INDEX show in the Contact list  ","lastModifiedDate":"2021-10-29"},{"lineNumber":174,"author":{"gitId":"mokdarren"},"content":"Example:  ","lastModifiedDate":"2021-10-29"},{"lineNumber":175,"author":{"gitId":"mokdarren"},"content":"`note 1 Income 100k, Coverage insufficent`","lastModifiedDate":"2021-10-29"},{"lineNumber":176,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":177,"author":{"gitId":"mokdarren"},"content":"![details_tab](images/details-tab-v1.3.png)","lastModifiedDate":"2021-10-29"},{"lineNumber":178,"author":{"gitId":"mokdarren"},"content":"### Deleting a note from a contact: `Coming Soon`","lastModifiedDate":"2021-10-29"},{"lineNumber":179,"author":{"gitId":"mokdarren"},"content":"### Deleting a policy from a contact: `Coming Soon`","lastModifiedDate":"2021-10-29"},{"lineNumber":180,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":181,"author":{"gitId":"rickyaandrew"},"content":"## Scheduling an Event","lastModifiedDate":"2021-09-29"},{"lineNumber":182,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":183,"author":{"gitId":"rickyaandrew"},"content":"### View all events: `list`","lastModifiedDate":"2021-09-29"},{"lineNumber":184,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":185,"author":{"gitId":"rickyaandrew"},"content":"Shows all the added Events","lastModifiedDate":"2021-09-29"},{"lineNumber":186,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":187,"author":{"gitId":"rickyaandrew"},"content":"-   Events are first ordered by date, then the order of time on that day itself","lastModifiedDate":"2021-09-29"},{"lineNumber":188,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":189,"author":{"gitId":"rickyaandrew"},"content":"### Add Event command: `add`","lastModifiedDate":"2021-09-29"},{"lineNumber":190,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":191,"author":{"gitId":"whoisjustinngo"},"content":"Format: `add [type] [d/TASK DESCRIPTION] [from/TIME FROM] [to/TIME TO] [t/TAGS] ([recurd/DATE] or [recurw/DATE] or [recury/DATE])`","lastModifiedDate":"2021-11-01"},{"lineNumber":192,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":193,"author":{"gitId":"rickyaandrew"},"content":" * recurd/DATE Event recurring daily till the given date","lastModifiedDate":"2021-10-28"},{"lineNumber":194,"author":{"gitId":"rickyaandrew"},"content":" * recurw/DATE Event recurring weekly till the given date","lastModifiedDate":"2021-10-28"},{"lineNumber":195,"author":{"gitId":"rickyaandrew"},"content":" * recury/DATE Event recurring yearly till the given date","lastModifiedDate":"2021-10-28"},{"lineNumber":196,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":197,"author":{"gitId":"rickyaandrew"},"content":"Here are some of the examples to use the command lines.","lastModifiedDate":"2021-10-28"},{"lineNumber":198,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":199,"author":{"gitId":"whoisjustinngo"},"content":" * Adding a schedule which recur daily: `add d/lesson date/16-05-2021 fr/1400 to/1600 t/important recurd/18-05-2021`","lastModifiedDate":"2021-11-01"},{"lineNumber":200,"author":{"gitId":"whoisjustinngo"},"content":" * Adding a schedule which recur weekly: `add d/meeting date/18-05-2021 fr/1600 to/1800 t/priority recurw/15-08-2021`","lastModifiedDate":"2021-11-01"},{"lineNumber":201,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":202,"author":{"gitId":"rickyaandrew"},"content":"**Note:** While adding an Event, it will check if the Event given has any clashes with other Events which have already been added. The Event will be added only if there is no clash in timing with other Events which are already in the list. This applies to the recurring Event as well, if there are clashes in any of the given recurring Events, it will consider the Event as a clash, and will not proceed to adding any Events.","lastModifiedDate":"2021-10-28"},{"lineNumber":203,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":204,"author":{"gitId":"rickyaandrew"},"content":"Next, only upcoming Events will be shown. Events which happened in the past will be stored in the database, but will not be shown in the user interface.","lastModifiedDate":"2021-10-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":206,"author":{"gitId":"rickyaandrew"},"content":"### Edit Event command: `edit`","lastModifiedDate":"2021-10-28"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":208,"author":{"gitId":"rickyaandrew"},"content":"Edits the Event which has the respective INDEX given by the user.","lastModifiedDate":"2021-10-28"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":210,"author":{"gitId":"rickyaandrew"},"content":"Format: `edit [INDEX] [d/TASK DESCRIPTION] [from/TIME FROM] [to/TIME TO] [t/TAGS]`  ","lastModifiedDate":"2021-10-28"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":212,"author":{"gitId":"rickyaandrew"},"content":"Here are some of the examples to use the command lines.","lastModifiedDate":"2021-09-29"},{"lineNumber":213,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":214,"author":{"gitId":"rickyaandrew"},"content":" * `Editing a tag in schedule: edit 1 t/important`","lastModifiedDate":"2021-10-28"},{"lineNumber":215,"author":{"gitId":"rickyaandrew"},"content":" * `Editing a description and date in a schedule: edit 2 d/meeting date/18-05-2021`","lastModifiedDate":"2021-10-28"},{"lineNumber":216,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":217,"author":{"gitId":"rickyaandrew"},"content":"**Note:** It is not compulsory to include all fields. Only include those fields which you would like to edit.","lastModifiedDate":"2021-10-28"},{"lineNumber":218,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":219,"author":{"gitId":"rickyaandrew"},"content":"### Delete Event command: `delete`","lastModifiedDate":"2021-09-29"},{"lineNumber":220,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":221,"author":{"gitId":"rickyaandrew"},"content":"Deletes the Event which has the respective INDEX given by the user.","lastModifiedDate":"2021-09-29"},{"lineNumber":222,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":223,"author":{"gitId":"rickyaandrew"},"content":"Format: `delete [INDEX]`","lastModifiedDate":"2021-09-29"},{"lineNumber":224,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":225,"author":{"gitId":"rickyaandrew"},"content":"* Deletes an event at the specified INDEX.","lastModifiedDate":"2021-10-28"},{"lineNumber":226,"author":{"gitId":"rickyaandrew"},"content":"* The index refers to the index number shown in the Event list.","lastModifiedDate":"2021-10-28"},{"lineNumber":227,"author":{"gitId":"rickyaandrew"},"content":"* The index must be a positive integer 1, 2, 3, ...","lastModifiedDate":"2021-10-28"},{"lineNumber":228,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":229,"author":{"gitId":"rickyaandrew"},"content":"### Find Event command: `find`","lastModifiedDate":"2021-10-28"},{"lineNumber":230,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":231,"author":{"gitId":"whoisjustinngo"},"content":"Find the Event which has the specified keyword in the description","lastModifiedDate":"2021-11-01"},{"lineNumber":232,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":233,"author":{"gitId":"whoisjustinngo"},"content":"Format: `find [keyword]`","lastModifiedDate":"2021-11-01"},{"lineNumber":234,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":235,"author":{"gitId":"rickyaandrew"},"content":" * Finds Events that carries the given keyword in the description","lastModifiedDate":"2021-10-28"},{"lineNumber":236,"author":{"gitId":"rickyaandrew"},"content":" * Events that have the keyword will be displayed in the user interface","lastModifiedDate":"2021-10-28"},{"lineNumber":237,"author":{"gitId":"rickyaandrew"},"content":" * Events that does not have the keyword will not be displayed","lastModifiedDate":"2021-10-28"},{"lineNumber":238,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":239,"author":{"gitId":"rickyaandrew"},"content":"### Filter Event command: `filter`","lastModifiedDate":"2021-10-28"},{"lineNumber":240,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":241,"author":{"gitId":"rickyaandrew"},"content":"Filters the Event according to the keywords in any of the attributes.","lastModifiedDate":"2021-10-28"},{"lineNumber":242,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":243,"author":{"gitId":"whoisjustinngo"},"content":"Format: `filter [d/TASK DESCRIPTION] [fr/TIME FROM] [to/TIME TO] [date/DATE] [t/TAGS]`","lastModifiedDate":"2021-11-01"},{"lineNumber":244,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":245,"author":{"gitId":"rickyaandrew"},"content":"Here are some of the examples to use the command lines.","lastModifiedDate":"2021-10-28"},{"lineNumber":246,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":247,"author":{"gitId":"whoisjustinngo"},"content":" * Filtering a tag in schedule: `filter t/important`","lastModifiedDate":"2021-11-01"},{"lineNumber":248,"author":{"gitId":"whoisjustinngo"},"content":" * Filter based on a description and date in a schedule: `filter d/meeting date/18-05-2021`","lastModifiedDate":"2021-11-01"},{"lineNumber":249,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":250,"author":{"gitId":"rickyaandrew"},"content":"**Note:** It is not compulsory to include all fields. Only include those fields which you would like to filter.","lastModifiedDate":"2021-10-28"},{"lineNumber":251,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":252,"author":{"gitId":"whoisjustinngo"},"content":"![schedule_tab](images/schedule-tab-v1.3.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":253,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":254,"author":{"gitId":"kslui99"},"content":"## Todos","lastModifiedDate":"2021-09-27"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":256,"author":{"gitId":"kslui99"},"content":"### Adding a Todo while on the Todos tab : `add`","lastModifiedDate":"2021-10-26"},{"lineNumber":257,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":258,"author":{"gitId":"kslui99"},"content":"Adds a Todo that will be displayed on the Dashboard and the Todos tabs.","lastModifiedDate":"2021-10-26"},{"lineNumber":259,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":260,"author":{"gitId":"kslui99"},"content":"Format: `add d/DESCRIPTION [t/TAG]...`","lastModifiedDate":"2021-10-26"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2021-10-26"},{"lineNumber":263,"author":{"gitId":"kslui99"},"content":"A Todo can have any number of tags (including 0)","lastModifiedDate":"2021-10-26"},{"lineNumber":264,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":266,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-26"},{"lineNumber":267,"author":{"gitId":"kslui99"},"content":"* `add d/read book`","lastModifiedDate":"2021-10-26"},{"lineNumber":268,"author":{"gitId":"kslui99"},"content":"* `add d/buy new jeans t/urgent t/shopping`","lastModifiedDate":"2021-10-26"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":270,"author":{"gitId":"kslui99"},"content":"### Listing all Todos while on the Todos tab : `list`","lastModifiedDate":"2021-10-26"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":272,"author":{"gitId":"kslui99"},"content":"Shows a list of all Todos.","lastModifiedDate":"2021-09-27"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":274,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2021-09-27"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"kslui99"},"content":"* The list is sorted in chronological order, according to the time at which the Todo was created.","lastModifiedDate":"2021-09-27"},{"lineNumber":277,"author":{"gitId":"kslui99"},"content":"* By default, the list of all Todos will be shown upon navigating to the Todos tab.","lastModifiedDate":"2021-09-27"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"kslui99"},"content":"### Editing a Todo while on the Todos tab : `edit`","lastModifiedDate":"2021-10-26"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"kslui99"},"content":"Edits an existing Todo.","lastModifiedDate":"2021-10-26"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":283,"author":{"gitId":"kslui99"},"content":"Format: `edit INDEX [d/DESCRIPTION] [t/TAG]…​`","lastModifiedDate":"2021-10-26"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"kslui99"},"content":"* Edits the Todo at the specified `INDEX`. The index refers to the index number shown in the displayed Todos list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-26"},{"lineNumber":286,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2021-10-26"},{"lineNumber":287,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2021-10-26"},{"lineNumber":288,"author":{"gitId":"kslui99"},"content":"* When editing tags, the existing tags of the Todo will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2021-10-26"},{"lineNumber":289,"author":{"gitId":"kslui99"},"content":"* You can remove all the Todo’s tags by typing `t/` without","lastModifiedDate":"2021-10-26"},{"lineNumber":290,"author":{"gitId":"kslui99"},"content":"  specifying any tags after it.","lastModifiedDate":"2021-10-26"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"kslui99"},"content":"Examples:","lastModifiedDate":"2021-09-27"},{"lineNumber":293,"author":{"gitId":"kslui99"},"content":"*  `edit 1 d/Read The Intelligent Investor` Edits the description of the 1st Todo to be `Read The Intelligent Investor`.","lastModifiedDate":"2021-10-26"},{"lineNumber":294,"author":{"gitId":"kslui99"},"content":"*  `edit 2 d/Travel to Germany t/` Edits the description of the 2nd Todo to be `Travel to Germany` and clears all existing tags.","lastModifiedDate":"2021-10-26"},{"lineNumber":295,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":296,"author":{"gitId":"kslui99"},"content":"### Marking a Todo as done while on the Todos tab : `done`","lastModifiedDate":"2021-10-26"},{"lineNumber":297,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":298,"author":{"gitId":"kslui99"},"content":"Marks the specified Todo as done.","lastModifiedDate":"2021-10-26"},{"lineNumber":299,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":300,"author":{"gitId":"kslui99"},"content":"* Marks the Todo at the specified `INDEX` as done.","lastModifiedDate":"2021-10-26"},{"lineNumber":301,"author":{"gitId":"kslui99"},"content":"* The index refers to the index number shown in the displayed Todos list.","lastModifiedDate":"2021-10-26"},{"lineNumber":302,"author":{"gitId":"kslui99"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-26"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":304,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-26"},{"lineNumber":305,"author":{"gitId":"kslui99"},"content":"* `list` followed by `done 3` marks the 3rd Todo in the displayed Todos list as done.","lastModifiedDate":"2021-10-26"},{"lineNumber":306,"author":{"gitId":"kslui99"},"content":"* `filter d/book` followed by `done 1` marks the 1st Todo in the results of the `filter` command as done.","lastModifiedDate":"2021-10-26"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":308,"author":{"gitId":"kslui99"},"content":"### Searching Todos by description while on the Todos tab : `find`","lastModifiedDate":"2021-10-26"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":310,"author":{"gitId":"kslui99"},"content":"Finds Todos whose descriptions contain any of the given keywords.","lastModifiedDate":"2021-10-26"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":312,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-10-26"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":314,"author":{"gitId":"kslui99"},"content":"* The search is case-insensitive. e.g `read book` will match `Read Book`","lastModifiedDate":"2021-10-26"},{"lineNumber":315,"author":{"gitId":"kslui99"},"content":"* The order of the keywords does not matter. e.g. `Book Read` will match `Read Book`","lastModifiedDate":"2021-10-26"},{"lineNumber":316,"author":{"gitId":"kslui99"},"content":"* Only the description is searched.","lastModifiedDate":"2021-10-26"},{"lineNumber":317,"author":{"gitId":"kslui99"},"content":"* Only full words will be matched e.g. `rea` will not match `read`","lastModifiedDate":"2021-10-26"},{"lineNumber":318,"author":{"gitId":"kslui99"},"content":"* Todos matching at least one keyword will be returned (i.e. `OR` search). e.g. `Read Buy` will return `Read Book`, `Buy Jeans`","lastModifiedDate":"2021-10-26"},{"lineNumber":319,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":320,"author":{"gitId":"kslui99"},"content":"Examples:","lastModifiedDate":"2021-10-26"},{"lineNumber":321,"author":{"gitId":"kslui99"},"content":"* `find book` returns all Todos with `book` in its description, i.e. `read book` and `return book`","lastModifiedDate":"2021-10-26"},{"lineNumber":322,"author":{"gitId":"kslui99"},"content":"* `find book buy` returns all Todos with `book`, `buy`, or `book buy` in its description, i.e. `read book` and `buy jeans`","lastModifiedDate":"2021-10-26"},{"lineNumber":323,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":324,"author":{"gitId":"kslui99"},"content":"### Filtering Todos by attributes while on the Todos tab : `filter`","lastModifiedDate":"2021-10-26"},{"lineNumber":325,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":326,"author":{"gitId":"kslui99"},"content":"Filters Todos according to any of its attributes (description, tags, and whether it is marked as done).","lastModifiedDate":"2021-10-26"},{"lineNumber":327,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":328,"author":{"gitId":"kslui99"},"content":"Format: `filter [d/DESCRIPTION KEYWORDS]... [t/TAG KEYWORDS]... [done/yes OR done/no]`","lastModifiedDate":"2021-10-26"},{"lineNumber":329,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":330,"author":{"gitId":"kslui99"},"content":"* The keywords are case-insensitive. e.g `read book` will match `Read Book`","lastModifiedDate":"2021-10-26"},{"lineNumber":331,"author":{"gitId":"kslui99"},"content":"* The order of the keywords does not matter. e.g. `Book Read` will match `Read Book`","lastModifiedDate":"2021-10-26"},{"lineNumber":332,"author":{"gitId":"kslui99"},"content":"* Only full words will be matched e.g. `rea` will not match `read`","lastModifiedDate":"2021-10-26"},{"lineNumber":333,"author":{"gitId":"kslui99"},"content":"* At least one of the optional fields must be provided, i.e. you must filter by 1 or more attributes.","lastModifiedDate":"2021-10-26"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":335,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-26"},{"lineNumber":336,"author":{"gitId":"kslui99"},"content":"* `filter d/book` returns all Todos with `book` in its description, i.e. `read book` and `return book`","lastModifiedDate":"2021-10-26"},{"lineNumber":337,"author":{"gitId":"kslui99"},"content":"* `filter d/book done/yes` returns all Todos with `book` in its description and are marked as done, i.e. `read book`","lastModifiedDate":"2021-10-26"},{"lineNumber":338,"author":{"gitId":"kslui99"},"content":"* `filter t/learning d/read book` returns all Todos with `learning` as a tag and `read book` in its description, i.e. `read book`","lastModifiedDate":"2021-10-26"},{"lineNumber":339,"author":{"gitId":"kslui99"},"content":"* `filter done/no` returns all Todos which are not marked as done.","lastModifiedDate":"2021-10-26"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":341,"author":{"gitId":"kslui99"},"content":"### Deleting a Todo while on the Todos tab : `delete`","lastModifiedDate":"2021-10-26"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":343,"author":{"gitId":"kslui99"},"content":"Deletes a specified Todo.","lastModifiedDate":"2021-09-27"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":345,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2021-09-27"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":347,"author":{"gitId":"kslui99"},"content":"* Deletes the Todo at the specified `INDEX`.","lastModifiedDate":"2021-09-27"},{"lineNumber":348,"author":{"gitId":"kslui99"},"content":"* The index refers to the index number shown in the displayed Todos list.","lastModifiedDate":"2021-09-27"},{"lineNumber":349,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-09-27"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":351,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-09-27"},{"lineNumber":352,"author":{"gitId":"kslui99"},"content":"* `list` followed by `delete 3` deletes the 3rd Todo in the displayed Todos list.","lastModifiedDate":"2021-09-27"},{"lineNumber":353,"author":{"gitId":"kslui99"},"content":"* `filter d/book` followed by `delete 1` deletes the 1st Todo in the results of the `filter` command","lastModifiedDate":"2021-10-26"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"SpdPnd98"},"content":"## General","lastModifiedDate":"2021-09-30"},{"lineNumber":356,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":357,"author":{"gitId":"kslui99"},"content":"### Viewing help : `help`","lastModifiedDate":"2021-10-26"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":359,"author":{"gitId":"kslui99"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2021-10-26"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":361,"author":{"gitId":"kslui99"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":363,"author":{"gitId":"kslui99"},"content":"Format: `help`","lastModifiedDate":"2021-10-26"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":365,"author":{"gitId":"SpdPnd98"},"content":"### Switching between Tabs: `tab`","lastModifiedDate":"2021-09-30"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":367,"author":{"gitId":"whoisjustinngo"},"content":"Format: `tab TAB_NAME`","lastModifiedDate":"2021-11-01"},{"lineNumber":368,"author":{"gitId":"SpdPnd98"},"content":"* Switches between different tabs. Tab names are as follows:","lastModifiedDate":"2021-09-30"},{"lineNumber":369,"author":{"gitId":"SpdPnd98"},"content":"    * dashboard","lastModifiedDate":"2021-09-30"},{"lineNumber":370,"author":{"gitId":"SpdPnd98"},"content":"    * contacts","lastModifiedDate":"2021-09-30"},{"lineNumber":371,"author":{"gitId":"SpdPnd98"},"content":"    * schedule","lastModifiedDate":"2021-09-30"},{"lineNumber":372,"author":{"gitId":"SpdPnd98"},"content":"    * todos","lastModifiedDate":"2021-09-30"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":374,"author":{"gitId":"SpdPnd98"},"content":"Examples:","lastModifiedDate":"2021-09-30"},{"lineNumber":375,"author":{"gitId":"SpdPnd98"},"content":"* `tab dashboard` while in the Contacts tab changes to the Dashboard tab","lastModifiedDate":"2021-09-30"},{"lineNumber":376,"author":{"gitId":"SpdPnd98"},"content":"* `tab contacts` in the Contacts tab just jumps to the top of the page (returns the tab to the original landing page view)","lastModifiedDate":"2021-09-30"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":378,"author":{"gitId":"SpdPnd98"},"content":"### Convenience Commands","lastModifiedDate":"2021-10-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":380,"author":{"gitId":"SpdPnd98"},"content":"Allows users to input commands meant for a specific tab regardless of which tab they are currently viewing.","lastModifiedDate":"2021-09-30"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":382,"author":{"gitId":"SpdPnd98"},"content":"Format: `/TAB NAME` [command meant to run on specified TAB_NAME]","lastModifiedDate":"2021-10-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":384,"author":{"gitId":"SpdPnd98"},"content":"Examples:","lastModifiedDate":"2021-09-30"},{"lineNumber":385,"author":{"gitId":"SpdPnd98"},"content":"* When in Todos tab, input `/schedule add event d/CS2103 meeting fr/1300 to/1500` will add an event in Schedule tab instead of adding it in Todos tab.","lastModifiedDate":"2021-10-29"},{"lineNumber":386,"author":{"gitId":"SpdPnd98"},"content":"* When in Dashboard tab, input `/schedule delete 2` will remove the event at index `2` under the Schedule tab.","lastModifiedDate":"2021-09-30"},{"lineNumber":387,"author":{"gitId":"SpdPnd98"},"content":"* When in Schedule tab, input `/schedule delete 2` and `delete 2` produces the same effect, removing the event at index `2` under the Schedule tab.","lastModifiedDate":"2021-09-30"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":389,"author":{"gitId":"SpdPnd98"},"content":"### Importing Schedule","lastModifiedDate":"2021-10-28"},{"lineNumber":390,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":391,"author":{"gitId":"SpdPnd98"},"content":"Allows users to import `.ics` files, similar to importing timetable from NUSMods into Google Calendars.","lastModifiedDate":"2021-10-28"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":393,"author":{"gitId":"SpdPnd98"},"content":"Example:","lastModifiedDate":"2021-10-28"},{"lineNumber":394,"author":{"gitId":"SpdPnd98"},"content":"* In any tab, input `import` will open file browser to prompt the user for a `.ics` file.","lastModifiedDate":"2021-10-28"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":396,"author":{"gitId":"SpdPnd98"},"content":"### Exiting Application: `exit`","lastModifiedDate":"2021-09-30"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":398,"author":{"gitId":"SpdPnd98"},"content":"Terminates the application","lastModifiedDate":"2021-09-30"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":400,"author":{"gitId":"SpdPnd98"},"content":"Format: `exit`","lastModifiedDate":"2021-09-30"},{"lineNumber":401,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":402,"author":{"gitId":"SpdPnd98"},"content":"Example:","lastModifiedDate":"2021-09-30"},{"lineNumber":403,"author":{"gitId":"SpdPnd98"},"content":"* exit in any tabs terminates the application.","lastModifiedDate":"2021-09-30"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":405,"author":{"gitId":"SpdPnd98"},"content":"### Handling invalid commands","lastModifiedDate":"2021-09-30"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":407,"author":{"gitId":"SpdPnd98"},"content":"Handles error messages thrown by tabs (in the case of invalid commands passed to said pages control), and displays a user friendly message.","lastModifiedDate":"2021-09-30"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":409,"author":{"gitId":"SpdPnd98"},"content":"Examples:","lastModifiedDate":"2021-09-30"},{"lineNumber":410,"author":{"gitId":"SpdPnd98"},"content":"* `/schedule create` will print the error message as such:","lastModifiedDate":"2021-09-30"},{"lineNumber":411,"author":{"gitId":"SpdPnd98"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":412,"author":{"gitId":"SpdPnd98"},"content":"“Looks like ‘Schedule’ does not have any commands called ‘create’. Below are the available commands:","lastModifiedDate":"2021-09-30"},{"lineNumber":413,"author":{"gitId":"SpdPnd98"},"content":"\u003c!--error message that schedule returns--\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":414,"author":{"gitId":"SpdPnd98"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"whoisjustinngo":53,"kslui99":69,"rickyaandrew":69,"-":109,"SpdPnd98":37,"mokdarren":78}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"mokdarren"},"content":"    content: \"Advyze\";","lastModifiedDate":"2021-09-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"-":294,"mokdarren":1}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"title: Advyze","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103-T14-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103-T14-4/tp/actions)","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103-T14-4/tp/branch/master/graph/badge.svg?token\u003dDJSQXHA68C)](https://codecov.io/gh/AY2122S1-CS2103-T14-4/tp)","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"whoisjustinngo"},"content":"![Ui](images/dashboard-tab-v1.3.png)","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"whoisjustinngo"},"content":"Advyze is a desktop application for managing your contact details as well as your daily tasks and schedules. ","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"whoisjustinngo"},"content":"Although it has a GUI, it is designed such that the user is able to primarily interact with the app using a CLI ","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"whoisjustinngo"},"content":"(Command Line Interface). ","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"* If you are interested in using Advyze, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"* If you are interested in developing Advyze, the [**Developer Guide**](DeveloperGuide.html) will be a good place to start.","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"whoisjustinngo":4,"rickyaandrew":5,"-":12}},{"path":"docs/team/bryantee.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SpdPnd98"},"content":"---","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"SpdPnd98"},"content":"layout: page","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"SpdPnd98"},"content":"title: Bryan Tee\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"SpdPnd98"},"content":"---","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"SpdPnd98"},"content":"### Project: Advyze","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"SpdPnd98"},"content":"Advyze is a desktop app for tech savvy student financial advisors to keep track of their clients and their busy school schedule. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"SpdPnd98"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"SpdPnd98":10}},{"path":"docs/team/justin.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"whoisjustinngo"},"content":"---","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"whoisjustinngo"},"content":"layout: page","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"whoisjustinngo"},"content":"title: Justin\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"whoisjustinngo"},"content":"---","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"whoisjustinngo"},"content":"### Project: Advyze","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"whoisjustinngo"},"content":"Advyze is a desktop app for tech savvy student financial advisors to keep track of their clients and their busy school schedule. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"whoisjustinngo"},"content":"Given below are my contributions to the project:","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"whoisjustinngo":10}},{"path":"docs/team/kaisiang.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"---","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"layout: page","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"title: Kai Siang\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"---","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"### Project: Advyze","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"Advyze is a desktop app for tech savvy student financial advisors to keep track of their clients and their busy school schedule. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"kslui99":10}},{"path":"docs/team/mokdarren.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mokdarren"},"content":"---","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"mokdarren"},"content":"layout: page","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"mokdarren"},"content":"title: Darren\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"mokdarren"},"content":"---","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"mokdarren"},"content":"### Project: Advyze","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"mokdarren"},"content":"Advyze is a desktop app for tech savvy student financial advisors to keep track of their clients and their busy school schedule. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"mokdarren"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"mokdarren":11}},{"path":"docs/team/ricky.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"title: Ricky\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"# Project: Advyze","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"Advyze is a desktop address book application is designed for tech savvy student or financial advisors who prefer CLI over GUI, and have a lot of clients and a busy school schedule to keep track of.","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"* **New Feature**: ","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"\u003c!-- * **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys. --\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"  \u003c!-- * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub --\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"  \u003c!-- * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]()) --\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"  \u003c!-- * User Guide:","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"    * Added implementation details of the `delete` feature. --\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"  \u003c!-- * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]()) --\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"  \u003c!-- * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"rickyaandrew"},"content":"* _{you can add/remove categories in the list above}_ --\u003e","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"rickyaandrew":14,"-":28}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"whoisjustinngo"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 0, true);","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"whoisjustinngo":1,"-":182}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"mokdarren"},"content":"    public static final String MESSAGE_INVALID_STATUS \u003d \"The status you provided is invalid! \\n%1$s\";","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"mokdarren"},"content":"    public static final String MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX \u003d \"The person index provided is not a client\";","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"    public static final String MESSAGE_INVALID_SCHEDULE_DISPLAYED_INDEX \u003d \"The schedule index provided is invalid\";","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"SpdPnd98"},"content":"    public static final String MESSAGE_INVALID_TAB_NAME \u003d \"Invalid tab name:%s\";","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"mokdarren"},"content":"    public static final String MESSAGE_PERSONS_SELECTED_OVERVIEW \u003d \"%s is selected, here are the details!\";","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"    public static final String MESSAGE_TODOS_LISTED_OVERVIEW \u003d \"%1$d todos listed!\";","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"    public static final String MESSAGE_SCHEDULE_LISTED_OVERVIEW \u003d \"%1$d schedules listed!\";","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"    public static final String MESSAGE_ERROR_PARSING_TAB \u003d \"There was an error parsing your command: error parsing tab\";","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"    public static final String MESSAGE_INVALID_TAB \u003d \"Command entered from an invalid tab. Switch tabs and try again.\";","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"    public static final String MESSAGE_INVALID_TODO_DISPLAYED_INDEX \u003d \"The todo index provided is invalid\";","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kslui99":4,"rickyaandrew":2,"-":13,"SpdPnd98":1,"mokdarren":3}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"SpdPnd98"},"content":"import java.io.File;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"SpdPnd98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"SpdPnd98"},"content":"import java.util.List;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"SpdPnd98"},"content":"import net.fortuna.ical4j.data.ParserException;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":15,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.model.analytics.ClientAnalytics;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.model.customGoal.CustomGoal;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.event.Schedule;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.Todo;","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"SpdPnd98"},"content":"    List\u003cCommandResult\u003e execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":44,"author":{"gitId":"kslui99"},"content":"    /** Returns an unmodifiable view of the filtered list of todos */","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"kslui99"},"content":"    ObservableList\u003cTodo\u003e getFilteredTodoList();","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"rickyaandrew"},"content":"    /** Returns an unmodifiable view of the filtered list of schedule */","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"rickyaandrew"},"content":"    ObservableList\u003cSchedule\u003e getFilteredScheduleList();","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"whoisjustinngo"},"content":"    /** Returns an unmodifiable view of the filtered list of custom goal */","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"whoisjustinngo"},"content":"    ObservableList\u003cCustomGoal\u003e getFilteredCustomGoalList();","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"mokdarren"},"content":"    /** Returns an unmodifiable view of a selected person */","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"mokdarren"},"content":"    ObservableList\u003cPerson\u003e getSelectedPersonList();","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"SpdPnd98"},"content":"    /** Generates schedules */","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"SpdPnd98"},"content":"    void importSchedule(File file) throws IOException, ParserException,","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"SpdPnd98"},"content":"            CommandException, ParseException, java.text.ParseException;","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"whoisjustinngo"},"content":"    ClientAnalytics getAnalytics();","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"whoisjustinngo":7,"kslui99":4,"rickyaandrew":4,"-":49,"SpdPnd98":9,"mokdarren":3}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"SpdPnd98"},"content":"import java.io.File;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"SpdPnd98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"SpdPnd98"},"content":"import java.util.List;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"SpdPnd98"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.model.analytics.ClientAnalytics;","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.model.customGoal.CustomGoal;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.event.Schedule;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.Todo;","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"SpdPnd98"},"content":"    public static final String FAILED_SCHEDULES_MESSAGE \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"SpdPnd98"},"content":"            \"There are {%d} timeslots that do not fit in your current schedule!\";","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"SpdPnd98"},"content":"    public List\u003cCommandResult\u003e execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"SpdPnd98"},"content":"        // user input command","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"SpdPnd98"},"content":"        // go to where the context is run","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"SpdPnd98"},"content":"        CommandResult goToContextCommandResult;","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"SpdPnd98"},"content":"        Command contextCommand \u003d addressBookParser.goToContextTab();","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"SpdPnd98"},"content":"        // executing go to context, then user input","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"SpdPnd98"},"content":"        goToContextCommandResult \u003d contextCommand.execute(model);","lastModifiedDate":"2021-10-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"SpdPnd98"},"content":"        List\u003cCommandResult\u003e commandResults \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-29"},{"lineNumber":73,"author":{"gitId":"SpdPnd98"},"content":"        commandResults.add(goToContextCommandResult); // run tabswitch first, so that the last command run can be safe","lastModifiedDate":"2021-10-29"},{"lineNumber":74,"author":{"gitId":"SpdPnd98"},"content":"        commandResults.add(commandResult);","lastModifiedDate":"2021-10-29"},{"lineNumber":75,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":76,"author":{"gitId":"SpdPnd98"},"content":"        return commandResults;","lastModifiedDate":"2021-10-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":89,"author":{"gitId":"mokdarren"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":90,"author":{"gitId":"mokdarren"},"content":"    public ObservableList\u003cPerson\u003e getSelectedPersonList() {","lastModifiedDate":"2021-10-28"},{"lineNumber":91,"author":{"gitId":"mokdarren"},"content":"        return model.getSelectedPersonList();","lastModifiedDate":"2021-10-28"},{"lineNumber":92,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":93,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"kslui99"},"content":"    public ObservableList\u003cTodo\u003e getFilteredTodoList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"kslui99"},"content":"        return model.getFilteredTodoList();","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"rickyaandrew"},"content":"    public ObservableList\u003cSchedule\u003e getFilteredScheduleList() {","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"rickyaandrew"},"content":"        return model.getFilteredScheduleList();","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"whoisjustinngo"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"whoisjustinngo"},"content":"    public ObservableList\u003cCustomGoal\u003e getFilteredCustomGoalList() {","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"whoisjustinngo"},"content":"        return model.getFilteredCustomGoalList();","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"SpdPnd98"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":109,"author":{"gitId":"SpdPnd98"},"content":"     * Generates schedules","lastModifiedDate":"2021-10-28"},{"lineNumber":110,"author":{"gitId":"SpdPnd98"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":111,"author":{"gitId":"SpdPnd98"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":112,"author":{"gitId":"SpdPnd98"},"content":"    public void importSchedule(File openedFile)","lastModifiedDate":"2021-10-28"},{"lineNumber":113,"author":{"gitId":"SpdPnd98"},"content":"            throws IOException, ParseException, CommandException {","lastModifiedDate":"2021-10-28"},{"lineNumber":114,"author":{"gitId":"SpdPnd98"},"content":"        List\u003cSchedule\u003e scheduleList \u003d model.importSchedule(openedFile);","lastModifiedDate":"2021-10-28"},{"lineNumber":115,"author":{"gitId":"SpdPnd98"},"content":"        List\u003cSchedule\u003e getValidSchedules \u003d scheduleList.stream()","lastModifiedDate":"2021-10-28"},{"lineNumber":116,"author":{"gitId":"SpdPnd98"},"content":"                .filter(schedule -\u003e !(model.hasScheduleClash(schedule) \u0026\u0026 model.hasSchedule(schedule)))","lastModifiedDate":"2021-10-28"},{"lineNumber":117,"author":{"gitId":"SpdPnd98"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-28"},{"lineNumber":118,"author":{"gitId":"SpdPnd98"},"content":"        if (getValidSchedules.size() !\u003d scheduleList.size()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":119,"author":{"gitId":"SpdPnd98"},"content":"            throw new CommandException(String.format(FAILED_SCHEDULES_MESSAGE,","lastModifiedDate":"2021-10-28"},{"lineNumber":120,"author":{"gitId":"SpdPnd98"},"content":"                    scheduleList.size() - getValidSchedules.size()));","lastModifiedDate":"2021-10-28"},{"lineNumber":121,"author":{"gitId":"SpdPnd98"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":122,"author":{"gitId":"SpdPnd98"},"content":"        getValidSchedules.forEach(schedule -\u003e model.addSchedule(schedule));","lastModifiedDate":"2021-10-28"},{"lineNumber":123,"author":{"gitId":"SpdPnd98"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":124,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":140,"author":{"gitId":"whoisjustinngo"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":141,"author":{"gitId":"whoisjustinngo"},"content":"    public ClientAnalytics getAnalytics() {","lastModifiedDate":"2021-10-25"},{"lineNumber":142,"author":{"gitId":"whoisjustinngo"},"content":"        return model.getAnalytics();","lastModifiedDate":"2021-10-25"},{"lineNumber":143,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"whoisjustinngo":12,"kslui99":6,"rickyaandrew":6,"-":80,"SpdPnd98":36,"mokdarren":4}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"mokdarren"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RELATIONSHIP;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"mokdarren"},"content":"            + PREFIX_RELATIONSHIP + \"RELATIONSHIP \"","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"mokdarren"},"content":"            + PREFIX_RELATIONSHIP + \"client \"","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":67,"mokdarren":3}},{"path":"src/main/java/seedu/address/logic/commands/AddCustomGoalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"whoisjustinngo"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"whoisjustinngo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"whoisjustinngo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"whoisjustinngo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_DATE;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"whoisjustinngo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_TIME;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"whoisjustinngo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GOAL;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.model.customGoal.CustomGoal;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"whoisjustinngo"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"whoisjustinngo"},"content":" * Command to add a custom goal to the dashboard.","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"whoisjustinngo"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"whoisjustinngo"},"content":"public class AddCustomGoalCommand extends Command {","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"whoisjustinngo"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"whoisjustinngo"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a new custom goal to the dashboard. \"","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"whoisjustinngo"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"whoisjustinngo"},"content":"            + PREFIX_DESCRIPTION + \"DESCRIPTION \"","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"whoisjustinngo"},"content":"            + PREFIX_GOAL + \"GOAL \"","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"whoisjustinngo"},"content":"            + \"[\" + PREFIX_END_DATE + \"END_DATE\" + \"] \"","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"whoisjustinngo"},"content":"            + \"[\" + PREFIX_END_TIME + \"END_TIME\" + \"]\\n\"","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"whoisjustinngo"},"content":"            + \"Note: 1. if you specify an end time, you have to specify an end date as well\\n\"","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"whoisjustinngo"},"content":"            + \"2. GOAL has to be a non-negative number\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"whoisjustinngo"},"content":"            + \"Example 1: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"whoisjustinngo"},"content":"            + PREFIX_DESCRIPTION + \"call 20 clients \"","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"whoisjustinngo"},"content":"            + PREFIX_GOAL + \"20 \"","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"whoisjustinngo"},"content":"            + PREFIX_END_DATE + \"16-05-2021 \"","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"whoisjustinngo"},"content":"            + PREFIX_END_TIME + \"1600\\n\"","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"whoisjustinngo"},"content":"            + \"Example 2: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"whoisjustinngo"},"content":"            + PREFIX_DESCRIPTION + \"earn $1000 in commissions \"","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"whoisjustinngo"},"content":"            + PREFIX_GOAL + \"1000 \"","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"whoisjustinngo"},"content":"            + PREFIX_END_DATE + \"23-07-2021\";","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"whoisjustinngo"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New custom goal created added: %1$s\";","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"whoisjustinngo"},"content":"    public static final String MESSAGE_DUPLICATE_CUSTOM_GOAL \u003d \"This custom goal already exists\";","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"whoisjustinngo"},"content":"    private final CustomGoal toAdd;","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"whoisjustinngo"},"content":"     * Creates an AddCustomGoalCommand to add the specified CustomGoal.","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"whoisjustinngo"},"content":"    public AddCustomGoalCommand(CustomGoal goal) {","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"whoisjustinngo"},"content":"        requireNonNull(goal);","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"whoisjustinngo"},"content":"        toAdd \u003d goal;","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"whoisjustinngo"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"whoisjustinngo"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"whoisjustinngo"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"whoisjustinngo"},"content":"        if (model.hasCustomGoal(toAdd)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"whoisjustinngo"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CUSTOM_GOAL);","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"whoisjustinngo"},"content":"        model.addCustomGoal(toAdd);","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"whoisjustinngo"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"whoisjustinngo"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"whoisjustinngo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"whoisjustinngo"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"whoisjustinngo"},"content":"                || (other instanceof AddCustomGoalCommand // instanceof handles nulls","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"whoisjustinngo"},"content":"                \u0026\u0026 toAdd.equals(((AddCustomGoalCommand) other).toAdd));","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"whoisjustinngo":68}},{"path":"src/main/java/seedu/address/logic/commands/AddNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mokdarren"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"mokdarren"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"mokdarren"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"mokdarren"},"content":"import java.util.List;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"mokdarren"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"mokdarren"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"mokdarren"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"mokdarren"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Policy;","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Relationship;","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"mokdarren"},"content":"/**","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"mokdarren"},"content":" * Adds a person to the address book.","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"mokdarren"},"content":" */","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"mokdarren"},"content":"public class AddNoteCommand extends Command {","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"mokdarren"},"content":"    public static final String COMMAND_WORD \u003d \"note\";","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"mokdarren"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a note for a client. \"","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"mokdarren"},"content":"            + \"Example: `note 1 Call her back`\";","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"mokdarren"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Note added: %1$s\";","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"mokdarren"},"content":"    private final String newNote;","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"mokdarren"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"mokdarren"},"content":"     * Creates an AddNoteCommand to add the specified {@code Person}","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"mokdarren"},"content":"    public AddNoteCommand(Index targetIndex, String newNote) {","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"mokdarren"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"mokdarren"},"content":"        requireNonNull(newNote);","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"mokdarren"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"mokdarren"},"content":"        this.newNote \u003d newNote;","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"mokdarren"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"mokdarren"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"mokdarren"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"mokdarren"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"mokdarren"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"mokdarren"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"mokdarren"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"mokdarren"},"content":"        Person personToAddNote \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"mokdarren"},"content":"        Person personWithNewNote \u003d createClientWithNewNote(personToAddNote, newNote);","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"mokdarren"},"content":"        model.setPerson(personToAddNote, personWithNewNote);","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"mokdarren"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-29"},{"lineNumber":64,"author":{"gitId":"mokdarren"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, personWithNewNote.getNotes()));","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"mokdarren"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"mokdarren"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-29"},{"lineNumber":69,"author":{"gitId":"mokdarren"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"mokdarren"},"content":"                || (other instanceof AddNoteCommand // instanceof handles nulls","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"mokdarren"},"content":"                \u0026\u0026 newNote.equals(((AddNoteCommand) other).newNote)","lastModifiedDate":"2021-10-29"},{"lineNumber":72,"author":{"gitId":"mokdarren"},"content":"                \u0026\u0026 targetIndex.equals(((AddNoteCommand) other).targetIndex));","lastModifiedDate":"2021-10-29"},{"lineNumber":73,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":74,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":75,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":76,"author":{"gitId":"mokdarren"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2021-10-29"},{"lineNumber":77,"author":{"gitId":"mokdarren"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2021-10-29"},{"lineNumber":78,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":79,"author":{"gitId":"mokdarren"},"content":"    private static Person createClientWithNewNote(Person personToEdit, String newNote) throws CommandException {","lastModifiedDate":"2021-10-29"},{"lineNumber":80,"author":{"gitId":"mokdarren"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2021-10-29"},{"lineNumber":81,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":82,"author":{"gitId":"mokdarren"},"content":"        Name name \u003d personToEdit.getName();","lastModifiedDate":"2021-10-29"},{"lineNumber":83,"author":{"gitId":"mokdarren"},"content":"        Relationship relationship \u003d personToEdit.getRelationship();","lastModifiedDate":"2021-10-29"},{"lineNumber":84,"author":{"gitId":"mokdarren"},"content":"        Phone phone \u003d personToEdit.getPhone();","lastModifiedDate":"2021-10-29"},{"lineNumber":85,"author":{"gitId":"mokdarren"},"content":"        Email email \u003d personToEdit.getEmail();","lastModifiedDate":"2021-10-29"},{"lineNumber":86,"author":{"gitId":"mokdarren"},"content":"        Address address \u003d personToEdit.getAddress();","lastModifiedDate":"2021-10-29"},{"lineNumber":87,"author":{"gitId":"mokdarren"},"content":"        Set\u003cTag\u003e tags \u003d personToEdit.getTags();","lastModifiedDate":"2021-10-29"},{"lineNumber":88,"author":{"gitId":"mokdarren"},"content":"        Set\u003cPolicy\u003e policies \u003d personToEdit.getPolicies();","lastModifiedDate":"2021-10-29"},{"lineNumber":89,"author":{"gitId":"mokdarren"},"content":"        Status status \u003d personToEdit.getStatus();","lastModifiedDate":"2021-10-29"},{"lineNumber":90,"author":{"gitId":"mokdarren"},"content":"        String notes \u003d personToEdit.getNotes();","lastModifiedDate":"2021-10-29"},{"lineNumber":91,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":92,"author":{"gitId":"mokdarren"},"content":"        notes \u003d addNote(notes, newNote);","lastModifiedDate":"2021-10-29"},{"lineNumber":93,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":94,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":95,"author":{"gitId":"mokdarren"},"content":"        return new Person(name, relationship, phone, email, address, tags,","lastModifiedDate":"2021-10-29"},{"lineNumber":96,"author":{"gitId":"mokdarren"},"content":"                policies, status, notes);","lastModifiedDate":"2021-10-29"},{"lineNumber":97,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":98,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":99,"author":{"gitId":"mokdarren"},"content":"    private static String addNote(String notes, String newNote) {","lastModifiedDate":"2021-10-29"},{"lineNumber":100,"author":{"gitId":"mokdarren"},"content":"        assert notes !\u003d null;","lastModifiedDate":"2021-10-29"},{"lineNumber":101,"author":{"gitId":"mokdarren"},"content":"        return notes + \"\\n\" + newNote;","lastModifiedDate":"2021-10-29"},{"lineNumber":102,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":103,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":104,"author":{"gitId":"mokdarren"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"mokdarren":104}},{"path":"src/main/java/seedu/address/logic/commands/AddPolicyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mokdarren"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"mokdarren"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"mokdarren"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"mokdarren"},"content":"import java.util.Collection;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"mokdarren"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"mokdarren"},"content":"import java.util.List;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"mokdarren"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"mokdarren"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"mokdarren"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"mokdarren"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Policy;","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Relationship;","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"mokdarren"},"content":"/**","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"mokdarren"},"content":" * Adds a policy to a client in the address book.","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"mokdarren"},"content":" */","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"mokdarren"},"content":"public class AddPolicyCommand extends Command {","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"mokdarren"},"content":"    public static final String COMMAND_WORD \u003d \"policy\";","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"mokdarren"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a policy to portfolio of client. \"","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"mokdarren"},"content":"            + \"Example: `policy 1 insurer/AIG num/1231 n/Critical illness comm/100`\";","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"mokdarren"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Policy added: %1$s\";","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"mokdarren"},"content":"    public static final String MESSAGE_DUPLICATE_POLICY \u003d \"This policy number already and insurer already exists\";","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"mokdarren"},"content":"    private final Policy newPolicy;","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"mokdarren"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"mokdarren"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"mokdarren"},"content":"    public AddPolicyCommand(Index targetIndex, Policy newPolicy) {","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"mokdarren"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"mokdarren"},"content":"        requireNonNull(newPolicy);","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"mokdarren"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"mokdarren"},"content":"        this.newPolicy \u003d newPolicy;","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"mokdarren"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"mokdarren"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"mokdarren"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"mokdarren"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"mokdarren"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"mokdarren"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"mokdarren"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"mokdarren"},"content":"        Person personToAddPolicy \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"mokdarren"},"content":"        if (!personToAddPolicy.getRelationship().value.equals(\"client\")) {","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"mokdarren"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"mokdarren"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"mokdarren"},"content":"        Person personWithNewPolicy \u003d createClientWithNewPolicy(personToAddPolicy, newPolicy);","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"mokdarren"},"content":"        model.setPerson(personToAddPolicy, personWithNewPolicy);","lastModifiedDate":"2021-10-29"},{"lineNumber":69,"author":{"gitId":"mokdarren"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"mokdarren"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, newPolicy));","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"mokdarren"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"mokdarren"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"mokdarren"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"mokdarren"},"content":"                || (other instanceof AddPolicyCommand // instanceof handles nulls","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"mokdarren"},"content":"                \u0026\u0026 newPolicy.equals(((AddPolicyCommand) other).newPolicy)","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"mokdarren"},"content":"                \u0026\u0026 targetIndex.equals(((AddPolicyCommand) other).targetIndex));","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":81,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":82,"author":{"gitId":"mokdarren"},"content":"     * Creates and returns a {@code Person} with the details of {@code clientToEdit}","lastModifiedDate":"2021-10-29"},{"lineNumber":83,"author":{"gitId":"mokdarren"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"mokdarren"},"content":"    private static Person createClientWithNewPolicy(Person clientToEdit, Policy newPolicy) throws CommandException {","lastModifiedDate":"2021-10-28"},{"lineNumber":86,"author":{"gitId":"mokdarren"},"content":"        assert clientToEdit !\u003d null;","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":88,"author":{"gitId":"mokdarren"},"content":"        Name name \u003d clientToEdit.getName();","lastModifiedDate":"2021-10-28"},{"lineNumber":89,"author":{"gitId":"mokdarren"},"content":"        Relationship relationship \u003d clientToEdit.getRelationship();","lastModifiedDate":"2021-10-28"},{"lineNumber":90,"author":{"gitId":"mokdarren"},"content":"        Phone phone \u003d clientToEdit.getPhone();","lastModifiedDate":"2021-10-28"},{"lineNumber":91,"author":{"gitId":"mokdarren"},"content":"        Email email \u003d clientToEdit.getEmail();","lastModifiedDate":"2021-10-28"},{"lineNumber":92,"author":{"gitId":"mokdarren"},"content":"        Address address \u003d clientToEdit.getAddress();","lastModifiedDate":"2021-10-28"},{"lineNumber":93,"author":{"gitId":"mokdarren"},"content":"        Set\u003cTag\u003e tags \u003d clientToEdit.getTags();","lastModifiedDate":"2021-10-28"},{"lineNumber":94,"author":{"gitId":"mokdarren"},"content":"        Set\u003cPolicy\u003e policies \u003d clientToEdit.getPolicies();","lastModifiedDate":"2021-10-28"},{"lineNumber":95,"author":{"gitId":"mokdarren"},"content":"        Status status \u003d clientToEdit.getStatus();","lastModifiedDate":"2021-10-28"},{"lineNumber":96,"author":{"gitId":"mokdarren"},"content":"        String notes \u003d clientToEdit.getNotes();","lastModifiedDate":"2021-10-28"},{"lineNumber":97,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":98,"author":{"gitId":"mokdarren"},"content":"        if (policies.contains(newPolicy)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":99,"author":{"gitId":"mokdarren"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_POLICY);","lastModifiedDate":"2021-10-28"},{"lineNumber":100,"author":{"gitId":"mokdarren"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":101,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":102,"author":{"gitId":"mokdarren"},"content":"        policies \u003d addPolicy(policies, newPolicy);","lastModifiedDate":"2021-10-28"},{"lineNumber":103,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":104,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":105,"author":{"gitId":"mokdarren"},"content":"        return new Person(name, relationship, phone, email, address, tags,","lastModifiedDate":"2021-10-28"},{"lineNumber":106,"author":{"gitId":"mokdarren"},"content":"                policies, status, notes);","lastModifiedDate":"2021-10-28"},{"lineNumber":107,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":108,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":109,"author":{"gitId":"mokdarren"},"content":"    private static Set\u003cPolicy\u003e addPolicy(Collection\u003cPolicy\u003e policies, Policy policyToAdd) {","lastModifiedDate":"2021-10-28"},{"lineNumber":110,"author":{"gitId":"mokdarren"},"content":"        assert policies !\u003d null;","lastModifiedDate":"2021-10-28"},{"lineNumber":111,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":112,"author":{"gitId":"mokdarren"},"content":"        final Set\u003cPolicy\u003e policySet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-28"},{"lineNumber":113,"author":{"gitId":"mokdarren"},"content":"        for (Policy policy : policies) {","lastModifiedDate":"2021-10-28"},{"lineNumber":114,"author":{"gitId":"mokdarren"},"content":"            policySet.add(policy);","lastModifiedDate":"2021-10-28"},{"lineNumber":115,"author":{"gitId":"mokdarren"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":116,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":117,"author":{"gitId":"mokdarren"},"content":"        policySet.add(policyToAdd);","lastModifiedDate":"2021-10-28"},{"lineNumber":118,"author":{"gitId":"mokdarren"},"content":"        return policySet;","lastModifiedDate":"2021-10-28"},{"lineNumber":119,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":120,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":121,"author":{"gitId":"mokdarren"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"mokdarren":121}},{"path":"src/main/java/seedu/address/logic/commands/AddScheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FROM;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RECURR_DAILY;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RECURR_WEEKLY;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RECURR_YEARLY;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TO;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.event.Schedule;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":" * Adds a Schedule.","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"public class AddScheduleCommand extends Command {","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a Schedule to your list of Events. \"","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"            + \"Parameters: \" + PREFIX_DESCRIPTION + \"DESCRIPTION \" + PREFIX_DATE + \"DATE \" + PREFIX_FROM + \"FROM \"","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"            + PREFIX_TO + \"TO \" + PREFIX_TAG + \"TAG (\" + PREFIX_RECURR_DAILY + \" or \" + PREFIX_RECURR_WEEKLY + \" or \"","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"            + PREFIX_RECURR_YEARLY + \"RECURR TILL)\\n\" + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_DESCRIPTION","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"            + \"lesson \" + PREFIX_DATE + \"16-05-2021 \" + PREFIX_FROM + \"1400 \" + PREFIX_TO + \"1600 \" + PREFIX_TAG","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"            + \"important \" + PREFIX_RECURR_DAILY + \"18-05-2021\";","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New Schedule added: %1$s\";","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"    public static final String MESSAGE_DUPLICATE_SCHEDULE \u003d \"This schedule clashes with\"","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"            + \" your existing list of Schedules\";","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"    private final Schedule schedule;","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"     * Creates an AddScheduleCommand to add the specified {@code Schedule}","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"rickyaandrew"},"content":"    public AddScheduleCommand(Schedule schedule) {","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"rickyaandrew"},"content":"        this.schedule \u003d schedule;","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"rickyaandrew"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"rickyaandrew"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"rickyaandrew"},"content":"        switch (this.schedule.getRecurrType()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"rickyaandrew"},"content":"        case \"N\":","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"rickyaandrew"},"content":"            if (model.hasScheduleClash(this.schedule)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"rickyaandrew"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_SCHEDULE);","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"rickyaandrew"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"rickyaandrew"},"content":"            if (model.hasSchedule(this.schedule)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"rickyaandrew"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_SCHEDULE);","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"rickyaandrew"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"rickyaandrew"},"content":"            model.addSchedule(this.schedule);","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"rickyaandrew"},"content":"            break;","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"rickyaandrew"},"content":"        case \"D\":","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"rickyaandrew"},"content":"            LocalDateTime recurrToD \u003d schedule.getRecurrDateTo();","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"rickyaandrew"},"content":"            Schedule scheduleCheckClashD \u003d new Schedule(this.schedule);","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"rickyaandrew"},"content":"            while (recurrToD.compareTo(scheduleCheckClashD.getTaskDateTimeFrom()) \u003e 0) {","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"rickyaandrew"},"content":"                if (model.hasScheduleClash(scheduleCheckClashD)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"rickyaandrew"},"content":"                    throw new CommandException(MESSAGE_DUPLICATE_SCHEDULE);","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"rickyaandrew"},"content":"                }","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"rickyaandrew"},"content":"                if (model.hasSchedule(scheduleCheckClashD)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"rickyaandrew"},"content":"                    throw new CommandException(MESSAGE_DUPLICATE_SCHEDULE);","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"rickyaandrew"},"content":"                }","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"rickyaandrew"},"content":"                scheduleCheckClashD \u003d scheduleCheckClashD.addOneDay();","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"rickyaandrew"},"content":"            }","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"rickyaandrew"},"content":"            Schedule scheduleToAddD \u003d new Schedule(this.schedule);","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"rickyaandrew"},"content":"            while (recurrToD.compareTo(scheduleToAddD.getTaskDateTimeFrom()) \u003e 0) {","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"rickyaandrew"},"content":"                model.addSchedule(scheduleToAddD);","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"rickyaandrew"},"content":"                scheduleToAddD \u003d scheduleToAddD.addOneDay();","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"rickyaandrew"},"content":"            }","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"rickyaandrew"},"content":"            break;","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"rickyaandrew"},"content":"        case \"W\":","lastModifiedDate":"2021-10-28"},{"lineNumber":81,"author":{"gitId":"rickyaandrew"},"content":"            LocalDateTime recurrToW \u003d schedule.getRecurrDateTo();","lastModifiedDate":"2021-10-28"},{"lineNumber":82,"author":{"gitId":"rickyaandrew"},"content":"            Schedule scheduleCheckClashW \u003d new Schedule(this.schedule);","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"rickyaandrew"},"content":"            while (recurrToW.compareTo(scheduleCheckClashW.getTaskDateTimeFrom()) \u003e 0) {","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"rickyaandrew"},"content":"                if (model.hasScheduleClash(scheduleCheckClashW)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"rickyaandrew"},"content":"                    throw new CommandException(MESSAGE_DUPLICATE_SCHEDULE);","lastModifiedDate":"2021-10-28"},{"lineNumber":86,"author":{"gitId":"rickyaandrew"},"content":"                }","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"rickyaandrew"},"content":"                if (model.hasSchedule(scheduleCheckClashW)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":88,"author":{"gitId":"rickyaandrew"},"content":"                    throw new CommandException(MESSAGE_DUPLICATE_SCHEDULE);","lastModifiedDate":"2021-10-28"},{"lineNumber":89,"author":{"gitId":"rickyaandrew"},"content":"                }","lastModifiedDate":"2021-10-28"},{"lineNumber":90,"author":{"gitId":"rickyaandrew"},"content":"                scheduleCheckClashW \u003d scheduleCheckClashW.addOneWeek();","lastModifiedDate":"2021-10-28"},{"lineNumber":91,"author":{"gitId":"rickyaandrew"},"content":"            }","lastModifiedDate":"2021-10-28"},{"lineNumber":92,"author":{"gitId":"rickyaandrew"},"content":"            Schedule scheduleToAddW \u003d new Schedule(this.schedule);","lastModifiedDate":"2021-10-28"},{"lineNumber":93,"author":{"gitId":"rickyaandrew"},"content":"            while (recurrToW.compareTo(scheduleToAddW.getTaskDateTimeFrom()) \u003e 0) {","lastModifiedDate":"2021-10-28"},{"lineNumber":94,"author":{"gitId":"rickyaandrew"},"content":"                model.addSchedule(scheduleToAddW);","lastModifiedDate":"2021-10-28"},{"lineNumber":95,"author":{"gitId":"rickyaandrew"},"content":"                scheduleToAddW \u003d scheduleToAddW.addOneWeek();","lastModifiedDate":"2021-10-28"},{"lineNumber":96,"author":{"gitId":"rickyaandrew"},"content":"            }","lastModifiedDate":"2021-10-28"},{"lineNumber":97,"author":{"gitId":"rickyaandrew"},"content":"            break;","lastModifiedDate":"2021-10-28"},{"lineNumber":98,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":99,"author":{"gitId":"rickyaandrew"},"content":"        case \"Y\":","lastModifiedDate":"2021-10-28"},{"lineNumber":100,"author":{"gitId":"rickyaandrew"},"content":"            LocalDateTime recurrToY \u003d schedule.getRecurrDateTo();","lastModifiedDate":"2021-10-28"},{"lineNumber":101,"author":{"gitId":"rickyaandrew"},"content":"            Schedule scheduleCheckClashY \u003d new Schedule(this.schedule);","lastModifiedDate":"2021-10-28"},{"lineNumber":102,"author":{"gitId":"rickyaandrew"},"content":"            while (recurrToY.compareTo(scheduleCheckClashY.getTaskDateTimeFrom()) \u003e 0) {","lastModifiedDate":"2021-10-28"},{"lineNumber":103,"author":{"gitId":"rickyaandrew"},"content":"                if (model.hasScheduleClash(scheduleCheckClashY)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":104,"author":{"gitId":"rickyaandrew"},"content":"                    throw new CommandException(MESSAGE_DUPLICATE_SCHEDULE);","lastModifiedDate":"2021-10-28"},{"lineNumber":105,"author":{"gitId":"rickyaandrew"},"content":"                }","lastModifiedDate":"2021-10-28"},{"lineNumber":106,"author":{"gitId":"rickyaandrew"},"content":"                if (model.hasSchedule(scheduleCheckClashY)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":107,"author":{"gitId":"rickyaandrew"},"content":"                    throw new CommandException(MESSAGE_DUPLICATE_SCHEDULE);","lastModifiedDate":"2021-10-28"},{"lineNumber":108,"author":{"gitId":"rickyaandrew"},"content":"                }","lastModifiedDate":"2021-10-28"},{"lineNumber":109,"author":{"gitId":"rickyaandrew"},"content":"                scheduleCheckClashY.addOneYear();","lastModifiedDate":"2021-10-28"},{"lineNumber":110,"author":{"gitId":"rickyaandrew"},"content":"            }","lastModifiedDate":"2021-10-28"},{"lineNumber":111,"author":{"gitId":"rickyaandrew"},"content":"            Schedule scheduleToAddY \u003d new Schedule(this.schedule);","lastModifiedDate":"2021-10-28"},{"lineNumber":112,"author":{"gitId":"rickyaandrew"},"content":"            while (recurrToY.compareTo(scheduleToAddY.getTaskDateTimeFrom()) \u003e 0) {","lastModifiedDate":"2021-10-28"},{"lineNumber":113,"author":{"gitId":"rickyaandrew"},"content":"                model.addSchedule(scheduleToAddY);","lastModifiedDate":"2021-10-28"},{"lineNumber":114,"author":{"gitId":"rickyaandrew"},"content":"                scheduleToAddY \u003d scheduleToAddY.addOneYear();","lastModifiedDate":"2021-10-28"},{"lineNumber":115,"author":{"gitId":"rickyaandrew"},"content":"            }","lastModifiedDate":"2021-10-28"},{"lineNumber":116,"author":{"gitId":"rickyaandrew"},"content":"            break;","lastModifiedDate":"2021-10-28"},{"lineNumber":117,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":118,"author":{"gitId":"rickyaandrew"},"content":"        default:","lastModifiedDate":"2021-10-28"},{"lineNumber":119,"author":{"gitId":"rickyaandrew"},"content":"            break;","lastModifiedDate":"2021-10-28"},{"lineNumber":120,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":121,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"rickyaandrew"},"content":"        // make a for loop here checking for clashes and continuous adding of the","lastModifiedDate":"2021-10-28"},{"lineNumber":123,"author":{"gitId":"rickyaandrew"},"content":"        // schedule","lastModifiedDate":"2021-10-28"},{"lineNumber":124,"author":{"gitId":"rickyaandrew"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, schedule));","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":126,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"rickyaandrew"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"rickyaandrew"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-11"},{"lineNumber":130,"author":{"gitId":"rickyaandrew"},"content":"                || (other instanceof AddScheduleCommand // instanceof handles nulls","lastModifiedDate":"2021-10-11"},{"lineNumber":131,"author":{"gitId":"rickyaandrew"},"content":"                        \u0026\u0026 schedule.equals(((AddScheduleCommand) other).schedule));","lastModifiedDate":"2021-10-11"},{"lineNumber":132,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":133,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"rickyaandrew":133}},{"path":"src/main/java/seedu/address/logic/commands/AddTodoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.Todo;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":" * Adds a Todo.","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a Todo to your list of Todos. \"","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"            + PREFIX_DESCRIPTION + \"DESCRIPTION \"","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"            + PREFIX_DESCRIPTION + \"read book \"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"            + PREFIX_TAG + \"personalDevelopment \"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"            + PREFIX_TAG + \"nonUrgent\";","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New Todo added: %1$s\";","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"    public static final String MESSAGE_DUPLICATE_TODO \u003d \"This Todo already exists in your list of Todos\";","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"    private final Todo toAdd;","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"     * Creates an AddTodoCommand to add the specified {@code Todo}","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"    public AddTodoCommand(Todo todo) {","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"        requireNonNull(todo);","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"kslui99"},"content":"        toAdd \u003d todo;","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"kslui99"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"kslui99"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"kslui99"},"content":"        if (model.hasTodo(toAdd)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"kslui99"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TODO);","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"kslui99"},"content":"        model.addTodo(toAdd);","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"kslui99"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"kslui99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"kslui99"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"kslui99"},"content":"                || (other instanceof AddTodoCommand // instanceof handles nulls","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"kslui99"},"content":"                \u0026\u0026 toAdd.equals(((AddTodoCommand) other).toAdd));","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"kslui99":58}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"SpdPnd98"},"content":"import seedu.address.model.TabSwitch;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"SpdPnd98"},"content":"    /** The application should switch to a new tab */","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"SpdPnd98"},"content":"    private final boolean switchTab;","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"SpdPnd98"},"content":"    private final TabSwitch.Tab tabId;","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"SpdPnd98"},"content":"    /** A new window should be shown to the user. */","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"SpdPnd98"},"content":"    private final boolean showImport;","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"SpdPnd98"},"content":"        this.switchTab \u003d false;","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"SpdPnd98"},"content":"        this.tabId \u003d null;","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"SpdPnd98"},"content":"        this.showImport \u003d false;","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"SpdPnd98"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"SpdPnd98"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"SpdPnd98"},"content":"     * {@code switchTab}, and {@code tabId}, and other fields set to their default","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"SpdPnd98"},"content":"     * value.","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"SpdPnd98"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"SpdPnd98"},"content":"    public CommandResult(String feedbackToUser, boolean switchTab, TabSwitch.Tab tabId) {","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"SpdPnd98"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"SpdPnd98"},"content":"        this.showHelp \u003d false;","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"SpdPnd98"},"content":"        this.exit \u003d false;","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"SpdPnd98"},"content":"        this.switchTab \u003d switchTab;","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"SpdPnd98"},"content":"        this.tabId \u003d tabId;","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"SpdPnd98"},"content":"        this.showImport \u003d false;","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"SpdPnd98"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"SpdPnd98"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"SpdPnd98"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"SpdPnd98"},"content":"     * and {@code showImport}, and other fields set to their default value.","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"SpdPnd98"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"SpdPnd98"},"content":"    public CommandResult(String feedbackToUser, boolean showImport) {","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"SpdPnd98"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"SpdPnd98"},"content":"        this.showHelp \u003d false;","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"SpdPnd98"},"content":"        this.exit \u003d false;","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"SpdPnd98"},"content":"        this.switchTab \u003d false;","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"SpdPnd98"},"content":"        this.tabId \u003d null;","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"SpdPnd98"},"content":"        this.showImport \u003d showImport;","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"SpdPnd98"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"SpdPnd98"},"content":"    public TabSwitch.Tab getTabId() {","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"SpdPnd98"},"content":"        return tabId;","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"SpdPnd98"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"SpdPnd98"},"content":"    public boolean isSwitchTab() {","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"SpdPnd98"},"content":"        return switchTab;","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"SpdPnd98"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"SpdPnd98"},"content":"    public boolean isShowImport() {","lastModifiedDate":"2021-10-28"},{"lineNumber":98,"author":{"gitId":"SpdPnd98"},"content":"        return showImport;","lastModifiedDate":"2021-10-28"},{"lineNumber":99,"author":{"gitId":"SpdPnd98"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":100,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":71,"SpdPnd98":52}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCustomGoalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"whoisjustinngo"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"whoisjustinngo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"whoisjustinngo"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"whoisjustinngo"},"content":" * Deletes a specified CustomGoal from the list of CustomGoals.","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"whoisjustinngo"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"whoisjustinngo"},"content":"public class DeleteCustomGoalCommand extends Command {","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"whoisjustinngo"},"content":"    public static final String COMMAND_WORD \u003d \"update\";","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"whoisjustinngo"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": deletes the custom goal corresponding to the \"","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"whoisjustinngo"},"content":"            + \"specified index\"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"whoisjustinngo"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"whoisjustinngo"},"content":"            + \"INDEX_OF_GOAL_TO_UPDATE\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"whoisjustinngo"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"whoisjustinngo"},"content":"            + \"- deletes custom goal 1\";","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"whoisjustinngo"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Successfully deleted custom goal %s\";","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"whoisjustinngo"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"The specified index is invalid\";","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"whoisjustinngo"},"content":"    private final Index goalToDelete;","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"whoisjustinngo"},"content":"     * Creates a command to delete the custom goal corresponding to the specified index.","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"whoisjustinngo"},"content":"     * @param goalToDelete The (1-based) index of the CustomGoal to delete in the list of CustomGoals.","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"whoisjustinngo"},"content":"    public DeleteCustomGoalCommand(Index goalToDelete) {","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"whoisjustinngo"},"content":"        requireNonNull(goalToDelete);","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"whoisjustinngo"},"content":"        this.goalToDelete \u003d goalToDelete;","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"whoisjustinngo"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"whoisjustinngo"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"whoisjustinngo"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"whoisjustinngo"},"content":"        if (this.goalToDelete.getOneBased() \u003e model.getNumOfCustomGoals()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"whoisjustinngo"},"content":"            throw new CommandException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"whoisjustinngo"},"content":"        model.deleteCustomGoal(this.goalToDelete);","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"whoisjustinngo"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, this.goalToDelete.getOneBased()));","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"whoisjustinngo"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"whoisjustinngo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"whoisjustinngo"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"whoisjustinngo"},"content":"                || (other instanceof DeleteCustomGoalCommand // instanceof handles nulls","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"whoisjustinngo"},"content":"                \u0026\u0026 this.equals(((DeleteCustomGoalCommand) other)));","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"whoisjustinngo":55}},{"path":"src/main/java/seedu/address/logic/commands/DeleteScheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"import java.util.List;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.event.Schedule;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"public class DeleteScheduleCommand extends Command {","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"            + \": Deletes the schedule identified by the index number used in the displayed schedule list.\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\" + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"    public static final String MESSAGE_DELETE_SCHEDULE_SUCCESS \u003d \"Deleted Schedule: %1$s\";","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"    public DeleteScheduleCommand(Index targetIndex) {","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"        List\u003cSchedule\u003e lastShownList \u003d model.getFilteredScheduleList();","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TODO_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"        Schedule scheduleToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"        model.deleteSchedule(scheduleToDelete);","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_SCHEDULE_SUCCESS, scheduleToDelete));","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"rickyaandrew"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"rickyaandrew"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"rickyaandrew"},"content":"                || (other instanceof DeleteScheduleCommand // instanceof handles nulls","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"rickyaandrew"},"content":"                        \u0026\u0026 targetIndex.equals(((DeleteScheduleCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"rickyaandrew":48}},{"path":"src/main/java/seedu/address/logic/commands/DeleteTodoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.Todo;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":" * Deletes a todo identified using its displayed index from the todos list.","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"public class DeleteTodoCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"            + \": Deletes the todo identified by the index number used in the displayed todos list.\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"    public static final String MESSAGE_DELETE_TODO_SUCCESS \u003d \"Deleted Todo: %1$s\";","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"    public DeleteTodoCommand(Index targetIndex) {","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"        List\u003cTodo\u003e lastShownList \u003d model.getFilteredTodoList();","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TODO_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"kslui99"},"content":"        Todo todoToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"kslui99"},"content":"        model.deleteTodo(todoToDelete);","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"kslui99"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TODO_SUCCESS, todoToDelete));","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"kslui99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"kslui99"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"kslui99"},"content":"                || (other instanceof DeleteTodoCommand // instanceof handles nulls","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"kslui99"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteTodoCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"kslui99":53}},{"path":"src/main/java/seedu/address/logic/commands/DoneTodoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TODOS;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.Todo;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":" * Marks an existing Todo as done.","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"public class DoneTodoCommand extends Command {","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"    public static final String COMMAND_WORD \u003d \"done\";","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Marks the todo, identified \"","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"            + \"by the index number used in the displayed todo list, as done.\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"    public static final String MESSAGE_DONE_TODO_SUCCESS \u003d \"Marked this Todo as done: %1$s\";","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"    private final Index index;","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"     * @param index of the todo in the filtered todo list to mark as done","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"    public DoneTodoCommand(Index index) {","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"kslui99"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"kslui99"},"content":"        List\u003cTodo\u003e lastShownList \u003d model.getFilteredTodoList();","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"kslui99"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"kslui99"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TODO_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"kslui99"},"content":"        Todo todoToMark \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"kslui99"},"content":"        assert todoToMark !\u003d null;","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"kslui99"},"content":"        Todo markedTodo \u003d todoToMark.getDoneVersion();","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"kslui99"},"content":"        model.setTodo(todoToMark, markedTodo);","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"kslui99"},"content":"        model.updateFilteredTodoList(PREDICATE_SHOW_ALL_TODOS);","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"kslui99"},"content":"        return new CommandResult(String.format(MESSAGE_DONE_TODO_SUCCESS, markedTodo));","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"kslui99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"kslui99"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"kslui99"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"kslui99"},"content":"            return true;","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"kslui99"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"kslui99"},"content":"        if (!(other instanceof DoneTodoCommand)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"kslui99"},"content":"            return false;","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"kslui99"},"content":"        // state check","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"kslui99"},"content":"        DoneTodoCommand e \u003d (DoneTodoCommand) other;","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"kslui99"},"content":"        return index.equals(e.index);","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"kslui99":72}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"mokdarren"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RELATIONSHIP;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Relationship;","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"mokdarren"},"content":"    //todo change message usage after completion of contact relationship","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"mokdarren"},"content":"            + \"[\" + PREFIX_RELATIONSHIP + \"RELATIONSHIP] \"","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":100,"author":{"gitId":"mokdarren"},"content":"        Relationship updatedRelationship \u003d editPersonDescriptor.getRelationship()","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"mokdarren"},"content":"                .orElse(personToEdit.getRelationship());","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"mokdarren"},"content":"        return new Person(updatedName, updatedRelationship, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"mokdarren"},"content":"        protected Name name;","lastModifiedDate":"2021-10-28"},{"lineNumber":134,"author":{"gitId":"mokdarren"},"content":"        protected Relationship relationship;","lastModifiedDate":"2021-10-28"},{"lineNumber":135,"author":{"gitId":"mokdarren"},"content":"        protected Phone phone;","lastModifiedDate":"2021-10-28"},{"lineNumber":136,"author":{"gitId":"mokdarren"},"content":"        protected Email email;","lastModifiedDate":"2021-10-28"},{"lineNumber":137,"author":{"gitId":"mokdarren"},"content":"        protected Address address;","lastModifiedDate":"2021-10-28"},{"lineNumber":138,"author":{"gitId":"mokdarren"},"content":"        protected Set\u003cTag\u003e tags;","lastModifiedDate":"2021-10-28"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":143,"author":{"gitId":"mokdarren"},"content":"         * Creates editPersonDescriptor to recreate immutable Persons","lastModifiedDate":"2021-10-28"},{"lineNumber":144,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":147,"author":{"gitId":"mokdarren"},"content":"            setRelationship(toCopy.relationship);","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"mokdarren"},"content":"            return CollectionUtil.isAnyNonNull(name, relationship, phone, email, address, tags);","lastModifiedDate":"2021-10-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"mokdarren"},"content":"        public void setRelationship(Relationship relationship) {","lastModifiedDate":"2021-10-10"},{"lineNumber":170,"author":{"gitId":"mokdarren"},"content":"            this.relationship \u003d relationship;","lastModifiedDate":"2021-10-10"},{"lineNumber":171,"author":{"gitId":"mokdarren"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":172,"author":{"gitId":"mokdarren"},"content":"        public Optional\u003cRelationship\u003e getRelationship() {","lastModifiedDate":"2021-10-10"},{"lineNumber":173,"author":{"gitId":"mokdarren"},"content":"            return Optional.ofNullable(relationship);","lastModifiedDate":"2021-10-10"},{"lineNumber":174,"author":{"gitId":"mokdarren"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":175,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":233,"author":{"gitId":"mokdarren"},"content":"                    \u0026\u0026 getRelationship().equals(e.getRelationship())","lastModifiedDate":"2021-10-10"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"-":216,"mokdarren":24}},{"path":"src/main/java/seedu/address/logic/commands/EditScheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FROM;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TO;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_SCHEDULE;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.event.Schedule;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"public class EditScheduleCommand extends Command {","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"    // todo change message usage after completion of contact relationship","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of a schedule identified \"","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"            + \"by the index number used in the displayed schedule list. \"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"            + \"Parameters: INDEX (must be a positive integer) \" + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION] \" + \"[\"","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"            + PREFIX_DATE + \" DATE] \" + \"[\" + PREFIX_FROM + \" FROM] \" + \"[\" + PREFIX_TO + \" TO]\\n \" + \"Example: \"","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"            + COMMAND_WORD + \" 1 \" + PREFIX_DESCRIPTION + \" lecture \" + PREFIX_DATE + \" 12/01/2021 \" + PREFIX_TAG","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"            + \" chill\";","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"    public static final String MESSAGE_EDIT_SCHEDULE_SUCCESS \u003d \"Edited Schedule: %1$s\";","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"    public static final String MESSAGE_DUPLICATE_SCHEDULE \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"    private final Index index;","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"rickyaandrew"},"content":"    private final EditScheduleDescriptor editScheduleDescriptor;","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"rickyaandrew"},"content":"     * @param index                  of the schedule in the filtered schedule list","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"rickyaandrew"},"content":"     *                               to edit","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"rickyaandrew"},"content":"     * @param editScheduleDescriptor details to edit the schedule with","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"rickyaandrew"},"content":"    public EditScheduleCommand(Index index, EditScheduleDescriptor editScheduleDescriptor) {","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"rickyaandrew"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"rickyaandrew"},"content":"        requireNonNull(editScheduleDescriptor);","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"rickyaandrew"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"rickyaandrew"},"content":"        this.editScheduleDescriptor \u003d new EditScheduleDescriptor(editScheduleDescriptor);","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"rickyaandrew"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"rickyaandrew"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"rickyaandrew"},"content":"        List\u003cSchedule\u003e lastShownList \u003d model.getFilteredScheduleList();","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"rickyaandrew"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"rickyaandrew"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_SCHEDULE_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"rickyaandrew"},"content":"        Schedule scheduleToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"rickyaandrew"},"content":"        Schedule editedSchedule \u003d createEditedSchedule(scheduleToEdit, editScheduleDescriptor);","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"rickyaandrew"},"content":"        if (!scheduleToEdit.isSameSchedule(editedSchedule) \u0026\u0026 model.hasSchedule(editedSchedule)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"rickyaandrew"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_SCHEDULE);","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"rickyaandrew"},"content":"        model.setSchedule(scheduleToEdit, editedSchedule);","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"rickyaandrew"},"content":"        model.updateFilteredScheduleList(PREDICATE_SHOW_ALL_SCHEDULE);","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"rickyaandrew"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_SCHEDULE_SUCCESS, editedSchedule));","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"rickyaandrew"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"rickyaandrew"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"rickyaandrew"},"content":"    private static Schedule createEditedSchedule(Schedule scheduleToEdit,","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"rickyaandrew"},"content":"            EditScheduleDescriptor editScheduleDescriptor) {","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"rickyaandrew"},"content":"        assert scheduleToEdit !\u003d null;","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"rickyaandrew"},"content":"        String updatedDescription \u003d editScheduleDescriptor.getDescription().orElse(scheduleToEdit.getDescription());","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"rickyaandrew"},"content":"        String updatedDate \u003d editScheduleDescriptor.getDate().orElse(scheduleToEdit.getDate());","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"rickyaandrew"},"content":"        String updatedTimeFrom \u003d editScheduleDescriptor.getTimeFrom()","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"rickyaandrew"},"content":"                .orElse(String.valueOf(scheduleToEdit.getTimeFrom()));","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"rickyaandrew"},"content":"        String updatedTimeTo \u003d editScheduleDescriptor.getTimeTo().orElse(String.valueOf(scheduleToEdit.getTimeTo()));","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"rickyaandrew"},"content":"        Set\u003cTag\u003e updatedTags \u003d editScheduleDescriptor.getTags().orElse(scheduleToEdit.getTags());","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"rickyaandrew"},"content":"        return new Schedule(updatedDescription, updatedDate, updatedTimeFrom, updatedTimeTo, false, updatedTags,","lastModifiedDate":"2021-10-28"},{"lineNumber":93,"author":{"gitId":"rickyaandrew"},"content":"                scheduleToEdit.getRecurrType(), scheduleToEdit.getRecurrDate());","lastModifiedDate":"2021-10-28"},{"lineNumber":94,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"rickyaandrew"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"rickyaandrew"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"rickyaandrew"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"rickyaandrew"},"content":"            return true;","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"rickyaandrew"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"rickyaandrew"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"rickyaandrew"},"content":"            return false;","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"rickyaandrew"},"content":"        // state check","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"rickyaandrew"},"content":"        EditScheduleCommand e \u003d (EditScheduleCommand) other;","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"rickyaandrew"},"content":"        return index.equals(e.index) \u0026\u0026 editScheduleDescriptor.equals(e.editScheduleDescriptor);","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"rickyaandrew"},"content":"     * Stores the details to edit the person with. Each non-empty field value will","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"rickyaandrew"},"content":"     * replace the corresponding field value of the person.","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"rickyaandrew"},"content":"    public static class EditScheduleDescriptor {","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"rickyaandrew"},"content":"        private String description;","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"rickyaandrew"},"content":"        private String date;","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"rickyaandrew"},"content":"        private String timeFrom;","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"rickyaandrew"},"content":"        private String timeTo;","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"rickyaandrew"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-10-22"},{"lineNumber":123,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"rickyaandrew"},"content":"        public EditScheduleDescriptor() {","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"rickyaandrew"},"content":"        /**","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"rickyaandrew"},"content":"         * Copy constructor. A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"rickyaandrew"},"content":"         */","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"rickyaandrew"},"content":"        public EditScheduleDescriptor(EditScheduleDescriptor toCopy) {","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"rickyaandrew"},"content":"            setDescription(toCopy.description);","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"rickyaandrew"},"content":"            setDate(toCopy.date);","lastModifiedDate":"2021-10-21"},{"lineNumber":133,"author":{"gitId":"rickyaandrew"},"content":"            setTimeFrom(toCopy.timeFrom);","lastModifiedDate":"2021-10-21"},{"lineNumber":134,"author":{"gitId":"rickyaandrew"},"content":"            setTimeTo(toCopy.timeTo);","lastModifiedDate":"2021-10-21"},{"lineNumber":135,"author":{"gitId":"rickyaandrew"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2021-10-22"},{"lineNumber":136,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":138,"author":{"gitId":"rickyaandrew"},"content":"        /**","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"rickyaandrew"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2021-10-21"},{"lineNumber":140,"author":{"gitId":"rickyaandrew"},"content":"         */","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"rickyaandrew"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-10-21"},{"lineNumber":142,"author":{"gitId":"rickyaandrew"},"content":"            return CollectionUtil.isAnyNonNull(description, date, timeFrom, timeTo, tags);","lastModifiedDate":"2021-10-22"},{"lineNumber":143,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":144,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"rickyaandrew"},"content":"        public void setDescription(String description) {","lastModifiedDate":"2021-10-21"},{"lineNumber":146,"author":{"gitId":"rickyaandrew"},"content":"            this.description \u003d description;","lastModifiedDate":"2021-10-21"},{"lineNumber":147,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":148,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":149,"author":{"gitId":"rickyaandrew"},"content":"        public Optional\u003cString\u003e getDescription() {","lastModifiedDate":"2021-10-21"},{"lineNumber":150,"author":{"gitId":"rickyaandrew"},"content":"            return Optional.ofNullable(description);","lastModifiedDate":"2021-10-21"},{"lineNumber":151,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":152,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":153,"author":{"gitId":"rickyaandrew"},"content":"        public void setDate(String date) {","lastModifiedDate":"2021-10-21"},{"lineNumber":154,"author":{"gitId":"rickyaandrew"},"content":"            this.date \u003d date;","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":156,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":157,"author":{"gitId":"rickyaandrew"},"content":"        public Optional\u003cString\u003e getDate() {","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"rickyaandrew"},"content":"            return Optional.ofNullable(date);","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":161,"author":{"gitId":"rickyaandrew"},"content":"        public void setTimeFrom(String timeFrom) {","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"rickyaandrew"},"content":"            this.timeFrom \u003d timeFrom;","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":165,"author":{"gitId":"rickyaandrew"},"content":"        public Optional\u003cString\u003e getTimeFrom() {","lastModifiedDate":"2021-10-21"},{"lineNumber":166,"author":{"gitId":"rickyaandrew"},"content":"            return Optional.ofNullable(timeFrom);","lastModifiedDate":"2021-10-21"},{"lineNumber":167,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":168,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":169,"author":{"gitId":"rickyaandrew"},"content":"        public void setTimeTo(String timeTo) {","lastModifiedDate":"2021-10-21"},{"lineNumber":170,"author":{"gitId":"rickyaandrew"},"content":"            this.timeTo \u003d timeTo;","lastModifiedDate":"2021-10-21"},{"lineNumber":171,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":172,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":173,"author":{"gitId":"rickyaandrew"},"content":"        public Optional\u003cString\u003e getTimeTo() {","lastModifiedDate":"2021-10-21"},{"lineNumber":174,"author":{"gitId":"rickyaandrew"},"content":"            return Optional.ofNullable(timeTo);","lastModifiedDate":"2021-10-21"},{"lineNumber":175,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":176,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":177,"author":{"gitId":"rickyaandrew"},"content":"        /**","lastModifiedDate":"2021-10-22"},{"lineNumber":178,"author":{"gitId":"rickyaandrew"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}. A defensive copy of","lastModifiedDate":"2021-10-28"},{"lineNumber":179,"author":{"gitId":"rickyaandrew"},"content":"         * {@code tags} is used internally.","lastModifiedDate":"2021-10-28"},{"lineNumber":180,"author":{"gitId":"rickyaandrew"},"content":"         */","lastModifiedDate":"2021-10-22"},{"lineNumber":181,"author":{"gitId":"rickyaandrew"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-22"},{"lineNumber":182,"author":{"gitId":"rickyaandrew"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2021-10-22"},{"lineNumber":183,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":184,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":185,"author":{"gitId":"rickyaandrew"},"content":"        /**","lastModifiedDate":"2021-10-22"},{"lineNumber":186,"author":{"gitId":"rickyaandrew"},"content":"         * Returns an unmodifiable tag set, which throws","lastModifiedDate":"2021-10-28"},{"lineNumber":187,"author":{"gitId":"rickyaandrew"},"content":"         * {@code UnsupportedOperationException} if modification is attempted. Returns","lastModifiedDate":"2021-10-28"},{"lineNumber":188,"author":{"gitId":"rickyaandrew"},"content":"         * {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2021-10-28"},{"lineNumber":189,"author":{"gitId":"rickyaandrew"},"content":"         */","lastModifiedDate":"2021-10-22"},{"lineNumber":190,"author":{"gitId":"rickyaandrew"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2021-10-22"},{"lineNumber":191,"author":{"gitId":"rickyaandrew"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2021-10-22"},{"lineNumber":192,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":193,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":194,"author":{"gitId":"rickyaandrew"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":195,"author":{"gitId":"rickyaandrew"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-10-21"},{"lineNumber":196,"author":{"gitId":"rickyaandrew"},"content":"            // short circuit if same object","lastModifiedDate":"2021-10-21"},{"lineNumber":197,"author":{"gitId":"rickyaandrew"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-21"},{"lineNumber":198,"author":{"gitId":"rickyaandrew"},"content":"                return true;","lastModifiedDate":"2021-10-21"},{"lineNumber":199,"author":{"gitId":"rickyaandrew"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":200,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":201,"author":{"gitId":"rickyaandrew"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-10-21"},{"lineNumber":202,"author":{"gitId":"rickyaandrew"},"content":"            if (!(other instanceof EditScheduleDescriptor)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":203,"author":{"gitId":"rickyaandrew"},"content":"                return false;","lastModifiedDate":"2021-10-21"},{"lineNumber":204,"author":{"gitId":"rickyaandrew"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":205,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":206,"author":{"gitId":"rickyaandrew"},"content":"            // state check","lastModifiedDate":"2021-10-21"},{"lineNumber":207,"author":{"gitId":"rickyaandrew"},"content":"            EditScheduleDescriptor e \u003d (EditScheduleDescriptor) other;","lastModifiedDate":"2021-10-21"},{"lineNumber":208,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":209,"author":{"gitId":"rickyaandrew"},"content":"            return getDescription().equals(e.getDescription()) \u0026\u0026 getDate().equals(e.getDate())","lastModifiedDate":"2021-10-21"},{"lineNumber":210,"author":{"gitId":"rickyaandrew"},"content":"                    \u0026\u0026 getTimeFrom().equals(e.getTimeFrom()) \u0026\u0026 getTimeTo().equals(e.getTimeTo());","lastModifiedDate":"2021-10-21"},{"lineNumber":211,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":212,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":213,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"rickyaandrew":213}},{"path":"src/main/java/seedu/address/logic/commands/EditStatusCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mokdarren"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"mokdarren"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"mokdarren"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"mokdarren"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"mokdarren"},"content":"import java.util.List;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"mokdarren"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"mokdarren"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"mokdarren"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"mokdarren"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Policy;","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Relationship;","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"mokdarren"},"content":"/**","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"mokdarren"},"content":" * Changes the status of a client in the address book.","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"mokdarren"},"content":" */","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"mokdarren"},"content":"public class EditStatusCommand extends Command {","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"mokdarren"},"content":"    public static final String COMMAND_WORD \u003d \"status\";","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"mokdarren"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Changes the status of a client. \"","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"mokdarren"},"content":"            + \"Available statuses: \" + Arrays.asList(Status.values()) + \"\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"mokdarren"},"content":"            + \"Example: `\" + COMMAND_WORD + \" 1 \" + \"approach`\";","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"mokdarren"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Status changed for %s: %s\";","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"mokdarren"},"content":"    private final Status newStatus;","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"mokdarren"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"mokdarren"},"content":"     * Creates an EditStatusCommand to change the {@code Status} of specified {@code Person}","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"mokdarren"},"content":"    public EditStatusCommand(Index targetIndex, Status newStatus) {","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"mokdarren"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"mokdarren"},"content":"        requireNonNull(newStatus);","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"mokdarren"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"mokdarren"},"content":"        this.newStatus \u003d newStatus;","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"mokdarren"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"mokdarren"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"mokdarren"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"mokdarren"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"mokdarren"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"mokdarren"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"mokdarren"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"mokdarren"},"content":"        Person personToChangeStatus \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"mokdarren"},"content":"        Person personWithNewStatus \u003d createClientWithNewStatus(personToChangeStatus, newStatus);","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"mokdarren"},"content":"        model.setPerson(personToChangeStatus, personWithNewStatus);","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"mokdarren"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"mokdarren"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, personWithNewStatus.getName().fullName,","lastModifiedDate":"2021-10-29"},{"lineNumber":64,"author":{"gitId":"mokdarren"},"content":"                personWithNewStatus.getStatus()));","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"mokdarren"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"mokdarren"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-29"},{"lineNumber":69,"author":{"gitId":"mokdarren"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"mokdarren"},"content":"                || (other instanceof EditStatusCommand // instanceof handles nulls","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"mokdarren"},"content":"                \u0026\u0026 newStatus.equals(((EditStatusCommand) other).newStatus)","lastModifiedDate":"2021-10-29"},{"lineNumber":72,"author":{"gitId":"mokdarren"},"content":"                \u0026\u0026 targetIndex.equals(((EditStatusCommand) other).targetIndex));","lastModifiedDate":"2021-10-29"},{"lineNumber":73,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":74,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":75,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":76,"author":{"gitId":"mokdarren"},"content":"     * Creates and returns a {@code Person} with the details of {@code clientToEdit}","lastModifiedDate":"2021-10-29"},{"lineNumber":77,"author":{"gitId":"mokdarren"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2021-10-29"},{"lineNumber":78,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":79,"author":{"gitId":"mokdarren"},"content":"    private static Person createClientWithNewStatus(Person clientToEdit, Status newStatus) throws CommandException {","lastModifiedDate":"2021-10-29"},{"lineNumber":80,"author":{"gitId":"mokdarren"},"content":"        assert clientToEdit !\u003d null;","lastModifiedDate":"2021-10-29"},{"lineNumber":81,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":82,"author":{"gitId":"mokdarren"},"content":"        Name name \u003d clientToEdit.getName();","lastModifiedDate":"2021-10-29"},{"lineNumber":83,"author":{"gitId":"mokdarren"},"content":"        Relationship relationship \u003d clientToEdit.getRelationship();","lastModifiedDate":"2021-10-29"},{"lineNumber":84,"author":{"gitId":"mokdarren"},"content":"        Phone phone \u003d clientToEdit.getPhone();","lastModifiedDate":"2021-10-29"},{"lineNumber":85,"author":{"gitId":"mokdarren"},"content":"        Email email \u003d clientToEdit.getEmail();","lastModifiedDate":"2021-10-29"},{"lineNumber":86,"author":{"gitId":"mokdarren"},"content":"        Address address \u003d clientToEdit.getAddress();","lastModifiedDate":"2021-10-29"},{"lineNumber":87,"author":{"gitId":"mokdarren"},"content":"        Set\u003cTag\u003e tags \u003d clientToEdit.getTags();","lastModifiedDate":"2021-10-29"},{"lineNumber":88,"author":{"gitId":"mokdarren"},"content":"        Set\u003cPolicy\u003e policies \u003d clientToEdit.getPolicies();","lastModifiedDate":"2021-10-29"},{"lineNumber":89,"author":{"gitId":"mokdarren"},"content":"        //new status","lastModifiedDate":"2021-10-29"},{"lineNumber":90,"author":{"gitId":"mokdarren"},"content":"        Status status \u003d newStatus;","lastModifiedDate":"2021-10-29"},{"lineNumber":91,"author":{"gitId":"mokdarren"},"content":"        String notes \u003d clientToEdit.getNotes();","lastModifiedDate":"2021-10-29"},{"lineNumber":92,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":93,"author":{"gitId":"mokdarren"},"content":"        return new Person(name, relationship, phone, email, address, tags,","lastModifiedDate":"2021-10-29"},{"lineNumber":94,"author":{"gitId":"mokdarren"},"content":"                policies, status, notes);","lastModifiedDate":"2021-10-29"},{"lineNumber":95,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":96,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":97,"author":{"gitId":"mokdarren"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"mokdarren":97}},{"path":"src/main/java/seedu/address/logic/commands/EditTodoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TODOS;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.Todo;","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":" * Edits the details of an existing Todo.","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"public class EditTodoCommand extends Command {","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the todo identified \"","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"            + \"by the index number used in the displayed todo list. \"","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION] \"","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"            + PREFIX_DESCRIPTION + \"read book \";","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"kslui99"},"content":"    public static final String MESSAGE_EDIT_TODO_SUCCESS \u003d \"Edited Todo: %1$s\";","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"    public static final String MESSAGE_DUPLICATE_TODO \u003d \"This todo already exists in Advyze.\";","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"kslui99"},"content":"    private final Index index;","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"kslui99"},"content":"    private final EditTodoDescriptor editTodoDescriptor;","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"kslui99"},"content":"     * @param index of the todo in the filtered todo list to edit","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"kslui99"},"content":"     * @param editTodoDescriptor details to edit the todo with","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"kslui99"},"content":"    public EditTodoCommand(Index index, EditTodoDescriptor editTodoDescriptor) {","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"kslui99"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"kslui99"},"content":"        requireNonNull(editTodoDescriptor);","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"kslui99"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"kslui99"},"content":"        this.editTodoDescriptor \u003d new EditTodoDescriptor(editTodoDescriptor);","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"kslui99"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"kslui99"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"kslui99"},"content":"        List\u003cTodo\u003e lastShownList \u003d model.getFilteredTodoList();","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"kslui99"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"kslui99"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TODO_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"kslui99"},"content":"        Todo todoToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"kslui99"},"content":"        Todo editedTodo \u003d createEditedTodo(todoToEdit, editTodoDescriptor);","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"kslui99"},"content":"        if (!todoToEdit.equals(editedTodo) \u0026\u0026 model.hasTodo(editedTodo)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"kslui99"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TODO);","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"kslui99"},"content":"        model.setTodo(todoToEdit, editedTodo);","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"kslui99"},"content":"        model.updateFilteredTodoList(PREDICATE_SHOW_ALL_TODOS);","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"kslui99"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_TODO_SUCCESS, editedTodo));","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"kslui99"},"content":"     * Creates and returns a {@code Todo} with the details of {@code todoToEdit}","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"kslui99"},"content":"     * edited with {@code editTodoDescriptor}.","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"kslui99"},"content":"    private static Todo createEditedTodo(Todo todoToEdit, EditTodoDescriptor editTodoDescriptor) {","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"kslui99"},"content":"        assert todoToEdit !\u003d null;","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"kslui99"},"content":"        String updatedDescription \u003d editTodoDescriptor.getDescription()","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"kslui99"},"content":"                .orElse(todoToEdit.getDescription());","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"kslui99"},"content":"        Set\u003cTag\u003e updatedTags \u003d editTodoDescriptor.getTags().orElse(todoToEdit.getTags());","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"kslui99"},"content":"        boolean isDone \u003d todoToEdit.isDone();","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"kslui99"},"content":"        return new Todo(updatedDescription, updatedTags, isDone);","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"kslui99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"kslui99"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"kslui99"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"kslui99"},"content":"            return true;","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":99,"author":{"gitId":"kslui99"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-22"},{"lineNumber":100,"author":{"gitId":"kslui99"},"content":"        if (!(other instanceof EditTodoCommand)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":101,"author":{"gitId":"kslui99"},"content":"            return false;","lastModifiedDate":"2021-10-22"},{"lineNumber":102,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":103,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":104,"author":{"gitId":"kslui99"},"content":"        // state check","lastModifiedDate":"2021-10-22"},{"lineNumber":105,"author":{"gitId":"kslui99"},"content":"        EditTodoCommand e \u003d (EditTodoCommand) other;","lastModifiedDate":"2021-10-22"},{"lineNumber":106,"author":{"gitId":"kslui99"},"content":"        return index.equals(e.index)","lastModifiedDate":"2021-10-22"},{"lineNumber":107,"author":{"gitId":"kslui99"},"content":"                \u0026\u0026 editTodoDescriptor.equals(e.editTodoDescriptor);","lastModifiedDate":"2021-10-22"},{"lineNumber":108,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":109,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":110,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":111,"author":{"gitId":"kslui99"},"content":"     * Stores the details to edit the todo with. Each non-empty field value will replace the","lastModifiedDate":"2021-10-22"},{"lineNumber":112,"author":{"gitId":"kslui99"},"content":"     * corresponding field value of the todo.","lastModifiedDate":"2021-10-22"},{"lineNumber":113,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":114,"author":{"gitId":"kslui99"},"content":"    public static class EditTodoDescriptor {","lastModifiedDate":"2021-10-22"},{"lineNumber":115,"author":{"gitId":"kslui99"},"content":"        private String description;","lastModifiedDate":"2021-10-22"},{"lineNumber":116,"author":{"gitId":"kslui99"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":118,"author":{"gitId":"kslui99"},"content":"        public EditTodoDescriptor() {}","lastModifiedDate":"2021-10-22"},{"lineNumber":119,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":120,"author":{"gitId":"kslui99"},"content":"        /**","lastModifiedDate":"2021-10-22"},{"lineNumber":121,"author":{"gitId":"kslui99"},"content":"         * Copy constructor.","lastModifiedDate":"2021-10-22"},{"lineNumber":122,"author":{"gitId":"kslui99"},"content":"         */","lastModifiedDate":"2021-10-22"},{"lineNumber":123,"author":{"gitId":"kslui99"},"content":"        public EditTodoDescriptor(EditTodoDescriptor toCopy) {","lastModifiedDate":"2021-10-22"},{"lineNumber":124,"author":{"gitId":"kslui99"},"content":"            setDescription(toCopy.description);","lastModifiedDate":"2021-10-22"},{"lineNumber":125,"author":{"gitId":"kslui99"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":127,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":128,"author":{"gitId":"kslui99"},"content":"        /**","lastModifiedDate":"2021-10-22"},{"lineNumber":129,"author":{"gitId":"kslui99"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2021-10-22"},{"lineNumber":130,"author":{"gitId":"kslui99"},"content":"         */","lastModifiedDate":"2021-10-22"},{"lineNumber":131,"author":{"gitId":"kslui99"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-10-22"},{"lineNumber":132,"author":{"gitId":"kslui99"},"content":"            return CollectionUtil.isAnyNonNull(description, tags);","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":134,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":135,"author":{"gitId":"kslui99"},"content":"        public void setDescription(String description) {","lastModifiedDate":"2021-10-22"},{"lineNumber":136,"author":{"gitId":"kslui99"},"content":"            this.description \u003d description;","lastModifiedDate":"2021-10-22"},{"lineNumber":137,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":138,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":139,"author":{"gitId":"kslui99"},"content":"        public Optional\u003cString\u003e getDescription() {","lastModifiedDate":"2021-10-22"},{"lineNumber":140,"author":{"gitId":"kslui99"},"content":"            return Optional.ofNullable(description);","lastModifiedDate":"2021-10-22"},{"lineNumber":141,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":142,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":143,"author":{"gitId":"kslui99"},"content":"        /**","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"kslui99"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"kslui99"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"kslui99"},"content":"         */","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"kslui99"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"kslui99"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":150,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":151,"author":{"gitId":"kslui99"},"content":"        /**","lastModifiedDate":"2021-10-24"},{"lineNumber":152,"author":{"gitId":"kslui99"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-24"},{"lineNumber":153,"author":{"gitId":"kslui99"},"content":"         * if modification is attempted.","lastModifiedDate":"2021-10-24"},{"lineNumber":154,"author":{"gitId":"kslui99"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2021-10-24"},{"lineNumber":155,"author":{"gitId":"kslui99"},"content":"         */","lastModifiedDate":"2021-10-24"},{"lineNumber":156,"author":{"gitId":"kslui99"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2021-10-24"},{"lineNumber":157,"author":{"gitId":"kslui99"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2021-10-24"},{"lineNumber":158,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":159,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":160,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":161,"author":{"gitId":"kslui99"},"content":"        @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":162,"author":{"gitId":"kslui99"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-10-22"},{"lineNumber":163,"author":{"gitId":"kslui99"},"content":"            // short circuit if same object","lastModifiedDate":"2021-10-22"},{"lineNumber":164,"author":{"gitId":"kslui99"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-22"},{"lineNumber":165,"author":{"gitId":"kslui99"},"content":"                return true;","lastModifiedDate":"2021-10-22"},{"lineNumber":166,"author":{"gitId":"kslui99"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":167,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":168,"author":{"gitId":"kslui99"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-10-22"},{"lineNumber":169,"author":{"gitId":"kslui99"},"content":"            if (!(other instanceof EditTodoDescriptor)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":170,"author":{"gitId":"kslui99"},"content":"                return false;","lastModifiedDate":"2021-10-22"},{"lineNumber":171,"author":{"gitId":"kslui99"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":172,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":173,"author":{"gitId":"kslui99"},"content":"            // state check","lastModifiedDate":"2021-10-22"},{"lineNumber":174,"author":{"gitId":"kslui99"},"content":"            EditTodoDescriptor e \u003d (EditTodoDescriptor) other;","lastModifiedDate":"2021-10-22"},{"lineNumber":175,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":176,"author":{"gitId":"kslui99"},"content":"            return getDescription().equals(e.getDescription())","lastModifiedDate":"2021-10-24"},{"lineNumber":177,"author":{"gitId":"kslui99"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2021-10-24"},{"lineNumber":178,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":179,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":180,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"kslui99":180}},{"path":"src/main/java/seedu/address/logic/commands/FilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mokdarren"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"mokdarren"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"mokdarren"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"mokdarren"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"mokdarren"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"mokdarren"},"content":"    public static final String COMMAND_WORD \u003d \"filter\";","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"mokdarren"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Filter all persons according to their attributes \"","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"mokdarren"},"content":"            + \"(case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"mokdarren"},"content":"            + \"Parameters: filter [n/NAME] [r/RELATIONSHIP] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"mokdarren"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/John\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"mokdarren"},"content":"            + \"Example: \" + COMMAND_WORD + \" r/client\\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"mokdarren"},"content":"            + \"Example: \" + COMMAND_WORD + \" e/@gmail.com\\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"mokdarren"},"content":"            + \"Example: \" + COMMAND_WORD + \" t/nus r/client\";","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"mokdarren"},"content":"    private final Predicate\u003cPerson\u003e predicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"mokdarren"},"content":"    public FilterCommand(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"mokdarren"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"mokdarren"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"mokdarren"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"mokdarren"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"mokdarren"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"mokdarren"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"mokdarren"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"mokdarren"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"mokdarren"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"mokdarren"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"mokdarren"},"content":"                || (other instanceof FilterCommand // instanceof handles nulls","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"mokdarren"},"content":"                \u0026\u0026 predicate.equals(((FilterCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"mokdarren"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"mokdarren":44}},{"path":"src/main/java/seedu/address/logic/commands/FilterScheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FROM;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TO;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.event.Schedule;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"public class FilterScheduleCommand extends Command {","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"    public static final String COMMAND_WORD \u003d \"filter\";","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all schedule whose tags contain any of \"","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"            + \"Parameters: /ATTRIBUTE KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_DESCRIPTION + \" lesson\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_DATE + \" 12-01-2021\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_FROM + \" 1400\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_TO + \" 1600\";","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"    private final Predicate\u003cSchedule\u003e predicate;","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"    public FilterScheduleCommand(Predicate\u003cSchedule\u003e predicate) {","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"        model.updateFilteredScheduleList(predicate);","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"                String.format(Messages.MESSAGE_SCHEDULE_LISTED_OVERVIEW, model.getFilteredScheduleList().size()));","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"rickyaandrew"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"rickyaandrew"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"rickyaandrew"},"content":"                || (other instanceof FilterScheduleCommand // instanceof handles nulls","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"rickyaandrew"},"content":"                \u0026\u0026 predicate.equals(((FilterScheduleCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"rickyaandrew":46}},{"path":"src/main/java/seedu/address/logic/commands/FilterTodoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DONE;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.Todo;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":" * Filters and lists all todos whose attributes (description, tags) contain any of the argument keywords.","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":" * Also supports filtering and listing all todos which are marked as done, or all todos which are not marked as done.","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"public class FilterTodoCommand extends Command {","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"    public static final String COMMAND_WORD \u003d \"filter\";","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Filters all todos according to their attributes \"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"            + \"(case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION KEYWORDS]... \"","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"            + \"[\" + PREFIX_TAG + \"TAG KEYWORDS]... \"","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"            + \"[\" + PREFIX_DONE + \"yes OR \" + PREFIX_DONE + \"no]\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"            + PREFIX_DESCRIPTION + \"read \"","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"            + PREFIX_TAG + \"personalDevelopment nonUrgent \"","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"            + PREFIX_DONE + \"yes\";","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"    private final Predicate\u003cTodo\u003e predicate;","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"    public FilterTodoCommand(Predicate\u003cTodo\u003e predicate) {","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"kslui99"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"kslui99"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"kslui99"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"kslui99"},"content":"        model.updateFilteredTodoList(predicate);","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"kslui99"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"kslui99"},"content":"                String.format(Messages.MESSAGE_TODOS_LISTED_OVERVIEW, model.getFilteredTodoList().size()));","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"kslui99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"kslui99"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"kslui99"},"content":"                || (other instanceof FilterTodoCommand // instanceof handles nulls","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"kslui99"},"content":"                \u0026\u0026 predicate.equals(((FilterTodoCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"kslui99":54}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":41,"mokdarren":1}},{"path":"src/main/java/seedu/address/logic/commands/FindScheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.event.predicates.ScheduleContainsKeywordsPredicate;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":" * Finds and lists all Schedules in address book which description contains any","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":" * of the argument keywords. Keyword matching is case insensitive.","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"public class FindScheduleCommand extends Command {","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all Schedules that contains any of \"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\" + \"Example: \" + COMMAND_WORD + \" lecture\";","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"    private final ScheduleContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"    public FindScheduleCommand(ScheduleContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"        model.updateFilteredScheduleList(predicate);","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"                String.format(Messages.MESSAGE_SCHEDULE_LISTED_OVERVIEW, model.getFilteredScheduleList().size()));","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"                || (other instanceof FindScheduleCommand // instanceof handles nulls","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"                        \u0026\u0026 predicate.equals(((FindScheduleCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"rickyaandrew":40}},{"path":"src/main/java/seedu/address/logic/commands/FindTodoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.predicates.DescriptionContainsKeywordsPredicate;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":" * Finds and lists all todos whose description contains any of the argument keywords.","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"public class FindTodoCommand extends Command {","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all todos whose descriptions contain any of \"","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"            + \"Example: \" + COMMAND_WORD + \" read travel bake\";","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"    private final DescriptionContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"    public FindTodoCommand(DescriptionContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"        model.updateFilteredTodoList(predicate);","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"                String.format(Messages.MESSAGE_TODOS_LISTED_OVERVIEW, model.getFilteredTodoList().size()));","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"kslui99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"                || (other instanceof FindTodoCommand // instanceof handles nulls","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"kslui99"},"content":"                \u0026\u0026 predicate.equals(((FindTodoCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"kslui99":42}},{"path":"src/main/java/seedu/address/logic/commands/ImportCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SpdPnd98"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"SpdPnd98"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"SpdPnd98"},"content":"/**","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"SpdPnd98"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"SpdPnd98"},"content":" */","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"SpdPnd98"},"content":"public class ImportCommand extends Command {","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"SpdPnd98"},"content":"    public static final String COMMAND_WORD \u003d \"import\";","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"SpdPnd98"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": imports a schedule.\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"SpdPnd98"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"SpdPnd98"},"content":"    public static final String MESSAGE_SHOWING_IMPORT_WINDOW \u003d \"Opened import window.\";","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"SpdPnd98"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"SpdPnd98"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"SpdPnd98"},"content":"        return new CommandResult(MESSAGE_SHOWING_IMPORT_WINDOW, true);","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"SpdPnd98"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"SpdPnd98"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"SpdPnd98":21}},{"path":"src/main/java/seedu/address/logic/commands/ListSchedulesCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_SCHEDULE;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":" * Lists all schedules in the schedule list to the user.","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"public class ListSchedulesCommand extends Command {","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all schedules\";","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"        model.updateFilteredScheduleList(PREDICATE_SHOW_ALL_SCHEDULE);","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"rickyaandrew":22}},{"path":"src/main/java/seedu/address/logic/commands/ListTodosCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TODOS;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":" * Lists all todos in the todo list to the user.","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"public class ListTodosCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all todos\";","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"        model.updateFilteredTodoList(PREDICATE_SHOW_ALL_TODOS);","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"kslui99":24}},{"path":"src/main/java/seedu/address/logic/commands/SelectContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mokdarren"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"mokdarren"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"mokdarren"},"content":"import java.util.List;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"mokdarren"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"mokdarren"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"mokdarren"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"mokdarren"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"mokdarren"},"content":"public class SelectContactCommand extends Command {","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"mokdarren"},"content":"    public static final String COMMAND_WORD \u003d \"select\";","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"mokdarren"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Selects a specific contact to find client details\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"mokdarren"},"content":"            + \"Parameters: INDEX\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"mokdarren"},"content":"            + \"Example: \" + COMMAND_WORD + \"1\";","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"mokdarren"},"content":"    private final Index index;","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"mokdarren"},"content":"     *  Creates a SelectContactCommand class that takes in an index to select a contact","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"mokdarren"},"content":"     * @param index","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"mokdarren"},"content":"    public SelectContactCommand(Index index) {","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"mokdarren"},"content":"        //find the contact and filter exactly for that","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"mokdarren"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"mokdarren"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"mokdarren"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"mokdarren"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"mokdarren"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"mokdarren"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"mokdarren"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"mokdarren"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"mokdarren"},"content":"        Person personToSelect \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"mokdarren"},"content":"        Predicate\u003cPerson\u003e predicate \u003d person -\u003e person.equals(personToSelect);","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"mokdarren"},"content":"        model.updateSelectedPersonList(predicate);","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"mokdarren"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"mokdarren"},"content":"                String.format(Messages.MESSAGE_PERSONS_SELECTED_OVERVIEW,","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"mokdarren"},"content":"                        model.getSelectedPersonList().get(0).getName().fullName));","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"mokdarren"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"mokdarren"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"mokdarren"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"mokdarren"},"content":"                || (other instanceof SelectContactCommand // instanceof handles nulls","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"mokdarren"},"content":"                \u0026\u0026 index.equals(((SelectContactCommand) other).index)); // state check","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"mokdarren"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"mokdarren":55}},{"path":"src/main/java/seedu/address/logic/commands/TabSwitchCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SpdPnd98"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"SpdPnd98"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"SpdPnd98"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"SpdPnd98"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"SpdPnd98"},"content":"import seedu.address.model.TabSwitch;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"SpdPnd98"},"content":"public class TabSwitchCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"SpdPnd98"},"content":"    public static final String COMMAND_WORD \u003d \"tab\";","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"SpdPnd98"},"content":"    private TabSwitch.Tab tabId;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"SpdPnd98"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"SpdPnd98"},"content":"     * Creates a TabSwitchCommand object","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"SpdPnd98"},"content":"     * @param tabId","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"SpdPnd98"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"SpdPnd98"},"content":"    public TabSwitchCommand(TabSwitch.Tab tabId) {","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"SpdPnd98"},"content":"        requireNonNull(tabId);","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"SpdPnd98"},"content":"        this.tabId \u003d tabId;","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"SpdPnd98"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"SpdPnd98"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"SpdPnd98"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"SpdPnd98"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"SpdPnd98"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"SpdPnd98"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"SpdPnd98"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"SpdPnd98"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"SpdPnd98"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"SpdPnd98"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"SpdPnd98"},"content":"        return new CommandResult(generateSuccessMessage(), true, this.tabId);","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"SpdPnd98"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"SpdPnd98"},"content":"    private String generateSuccessMessage() {","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"SpdPnd98"},"content":"        String message \u003d String.format(\"Switched to %s\", tabId);","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"SpdPnd98"},"content":"        return message;","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"SpdPnd98"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"SpdPnd98"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"SpdPnd98":40}},{"path":"src/main/java/seedu/address/logic/commands/UpdateCustomGoalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"whoisjustinngo"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"whoisjustinngo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"whoisjustinngo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_VALUE;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.model.customGoal.exceptions.NegativeProgressException;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"whoisjustinngo"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"whoisjustinngo"},"content":" * Creates a command to update the progress of a specific CustomGoal.","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"whoisjustinngo"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"whoisjustinngo"},"content":"public class UpdateCustomGoalCommand extends Command {","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"whoisjustinngo"},"content":"    public static final String COMMAND_WORD \u003d \"update\";","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"whoisjustinngo"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": updates a custom goal by a specified value for the \"","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"whoisjustinngo"},"content":"            + \"user to track their progress. \"","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"whoisjustinngo"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"whoisjustinngo"},"content":"            + \"INDEX_OF_GOAL_TO_UPDATE \"","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"whoisjustinngo"},"content":"            + PREFIX_VALUE + \"VALUE \"","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"whoisjustinngo"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"whoisjustinngo"},"content":"            + \"1 \" + PREFIX_VALUE + \"20.3\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"whoisjustinngo"},"content":"            + \"This adds 20.3 to the progress of custom goal 1\";","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"whoisjustinngo"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Successfully updated progress of custom goal %s with value %s\";","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"whoisjustinngo"},"content":"    public static final String MESSAGE_RESET \u003d \"Progress cannot be negative, progress of custom goal %s \"","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"whoisjustinngo"},"content":"            + \"is reset to 0\";","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"whoisjustinngo"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"The specified index is invalid\";","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"whoisjustinngo"},"content":"    private final Index goalToUpdate;","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"whoisjustinngo"},"content":"    private final float valueToUpdateBy;","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"whoisjustinngo"},"content":"     * Creates an UpdateCustomGoalCommand.","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"whoisjustinngo"},"content":"     * @param goalToUpdate The (1-based) \u003ccode\u003eIndex\u003c/code\u003e of the CustomGoal to update.","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"whoisjustinngo"},"content":"     * @param value The value with which to increase the progress of the corresponding CustomGoal by.","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"whoisjustinngo"},"content":"    public UpdateCustomGoalCommand(Index goalToUpdate, float value) {","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"whoisjustinngo"},"content":"        requireNonNull(goalToUpdate);","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"whoisjustinngo"},"content":"        this.goalToUpdate \u003d goalToUpdate;","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"whoisjustinngo"},"content":"        this.valueToUpdateBy \u003d value;","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"whoisjustinngo"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"whoisjustinngo"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"whoisjustinngo"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"whoisjustinngo"},"content":"        if (this.goalToUpdate.getOneBased() \u003e model.getNumOfCustomGoals()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"whoisjustinngo"},"content":"            throw new CommandException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"whoisjustinngo"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"whoisjustinngo"},"content":"            model.updateCustomGoal(this.goalToUpdate, this.valueToUpdateBy);","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"whoisjustinngo"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, this.goalToUpdate.getOneBased(),","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"whoisjustinngo"},"content":"                    formatFloat(this.valueToUpdateBy)));","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"whoisjustinngo"},"content":"        } catch (NegativeProgressException ex) {","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"whoisjustinngo"},"content":"            return new CommandResult(String.format(MESSAGE_RESET, this.goalToUpdate.getOneBased(),","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"whoisjustinngo"},"content":"                    formatFloat(this.valueToUpdateBy)));","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"whoisjustinngo"},"content":"     * Converts the provided float to a string while truncating all trailing zeroes.","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"whoisjustinngo"},"content":"     * @param f The float to convert and truncate.","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"whoisjustinngo"},"content":"     * @return The string representation of the given float with the trailing zeroes truncated.ß","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"whoisjustinngo"},"content":"    public String formatFloat(float f) {","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"whoisjustinngo"},"content":"        if (f \u003d\u003d (long) f) {","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"whoisjustinngo"},"content":"            return String.format(\"%d\", (long) f);","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"whoisjustinngo"},"content":"        } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"whoisjustinngo"},"content":"            return String.format(\"%s\", f);","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"whoisjustinngo"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"whoisjustinngo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"whoisjustinngo"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"whoisjustinngo"},"content":"                || (other instanceof UpdateCustomGoalCommand // instanceof handles nulls","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"whoisjustinngo"},"content":"                \u0026\u0026 this.equals(((UpdateCustomGoalCommand) other)));","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"whoisjustinngo":83}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"mokdarren"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RELATIONSHIP;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Relationship;","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"mokdarren"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_RELATIONSHIP, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"mokdarren"},"content":"                        PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":39,"author":{"gitId":"mokdarren"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_RELATIONSHIP, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"mokdarren"},"content":"                PREFIX_ADDRESS)","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"mokdarren"},"content":"        Relationship relationship \u003d ParserUtil.parseRelationship(argMultimap.getValue(PREFIX_RELATIONSHIP).get());","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"mokdarren"},"content":"        Person person \u003d new Person(name, relationship, phone, email, address, tagList);","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"-":56,"mokdarren":8}},{"path":"src/main/java/seedu/address/logic/parser/AddCustomGoalCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"whoisjustinngo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"whoisjustinngo"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"whoisjustinngo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"whoisjustinngo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_DATE;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"whoisjustinngo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_TIME;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"whoisjustinngo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GOAL;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"whoisjustinngo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"whoisjustinngo"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"whoisjustinngo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"whoisjustinngo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"whoisjustinngo"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"whoisjustinngo"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.logic.commands.AddCustomGoalCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.model.customGoal.CustomGoal;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"whoisjustinngo"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"whoisjustinngo"},"content":" * Parses input arguments and creates a new AddCustomGoalCommand object","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"whoisjustinngo"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"whoisjustinngo"},"content":"public class AddCustomGoalCommandParser implements Parser\u003cAddCustomGoalCommand\u003e {","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"whoisjustinngo"},"content":"    public static final String DATE_FORMAT \u003d \"dd-MM-yyyy\";","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"whoisjustinngo"},"content":"    public static final String TIME_FORMAT \u003d \"HHmm\";","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"whoisjustinngo"},"content":"    public static final String MESSAGE_WRONG_DATETIME_FORMAT \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"whoisjustinngo"},"content":"            \"Please use date in \" + DATE_FORMAT + \" format and time in \" + TIME_FORMAT + \" 24hr format\\n\";","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"whoisjustinngo"},"content":"    public static final String MESSAGE_WRONG_GOAL_FORMAT \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"whoisjustinngo"},"content":"            \"Goal has to be a non-negative number\";","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"whoisjustinngo"},"content":"     * Parses the provided string and creates a proper {@link AddCustomGoalCommand} that can be","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"whoisjustinngo"},"content":"     * subsequently executed.","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"whoisjustinngo"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"whoisjustinngo"},"content":"     * @param args The string to parse.","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"whoisjustinngo"},"content":"     * @return TheAddCustomGoalCommand created from parsing.","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"whoisjustinngo"},"content":"     * @throws ParseException If the argument given is invalid.","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"whoisjustinngo"},"content":"    public AddCustomGoalCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"whoisjustinngo"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"whoisjustinngo"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DESCRIPTION, PREFIX_GOAL, PREFIX_END_DATE, PREFIX_END_TIME);","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"whoisjustinngo"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_DESCRIPTION, PREFIX_GOAL)","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"whoisjustinngo"},"content":"                || ((!arePrefixesPresent(argMultimap, PREFIX_END_DATE)) \u0026\u0026 arePrefixesPresent(argMultimap,","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"whoisjustinngo"},"content":"                PREFIX_END_TIME)) // user specified an end time without an end date","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"whoisjustinngo"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"whoisjustinngo"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"whoisjustinngo"},"content":"                    AddCustomGoalCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"whoisjustinngo"},"content":"        String description \u003d argMultimap.getValue(PREFIX_DESCRIPTION).get();","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"whoisjustinngo"},"content":"        float goal;","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"whoisjustinngo"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"whoisjustinngo"},"content":"            goal \u003d Float.parseFloat(argMultimap.getValue(PREFIX_GOAL).get());","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"whoisjustinngo"},"content":"            if (goal \u003c 0) {","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"whoisjustinngo"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_WRONG_GOAL_FORMAT));","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"whoisjustinngo"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"whoisjustinngo"},"content":"        } catch (NumberFormatException ex) {","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"whoisjustinngo"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"whoisjustinngo"},"content":"                    MESSAGE_WRONG_GOAL_FORMAT));","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"whoisjustinngo"},"content":"        LocalTime endTime;","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"whoisjustinngo"},"content":"        try { // if have time","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"whoisjustinngo"},"content":"            endTime \u003d LocalTime.parse(argMultimap.getValue(PREFIX_END_TIME).get(),","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"whoisjustinngo"},"content":"                    DateTimeFormatter.ofPattern(TIME_FORMAT));","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"whoisjustinngo"},"content":"        } catch (NoSuchElementException nsee) { // if user didn\u0027t specify a time","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"whoisjustinngo"},"content":"            endTime \u003d LocalTime.MAX;","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"whoisjustinngo"},"content":"        } catch (DateTimeParseException dtpe) { // if user specified a wrong time","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"whoisjustinngo"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"whoisjustinngo"},"content":"                    MESSAGE_WRONG_DATETIME_FORMAT));","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"whoisjustinngo"},"content":"        LocalDate endDate;","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"whoisjustinngo"},"content":"        try { // if have date","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"whoisjustinngo"},"content":"            endDate \u003d LocalDate.parse(argMultimap.getValue(PREFIX_END_DATE).get(),","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"whoisjustinngo"},"content":"                    DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"whoisjustinngo"},"content":"        } catch (NoSuchElementException nsee) { // if user didnt specify a date","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"whoisjustinngo"},"content":"            endDate \u003d LocalDate.MAX;","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"whoisjustinngo"},"content":"        } catch (DateTimeParseException dtpe) { // if user specified a wrong time","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"whoisjustinngo"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"whoisjustinngo"},"content":"                    MESSAGE_WRONG_DATETIME_FORMAT));","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"whoisjustinngo"},"content":"        CustomGoal customGoal \u003d new CustomGoal(description, goal, endDate, endTime);","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"whoisjustinngo"},"content":"        return new AddCustomGoalCommand(customGoal);","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"whoisjustinngo"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"whoisjustinngo"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"whoisjustinngo"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"whoisjustinngo"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"whoisjustinngo":99}},{"path":"src/main/java/seedu/address/logic/parser/AddNoteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mokdarren"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"mokdarren"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"mokdarren"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"mokdarren"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"mokdarren"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"mokdarren"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"mokdarren"},"content":"import seedu.address.logic.commands.AddNoteCommand;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"mokdarren"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"mokdarren"},"content":"/**","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"mokdarren"},"content":" * Parses input arguments and creates a new AddNoteCommand object","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"mokdarren"},"content":" */","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"mokdarren"},"content":"public class AddNoteCommandParser implements Parser\u003cAddNoteCommand\u003e {","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"mokdarren"},"content":"     * Used for separation of index and note.","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"mokdarren"},"content":"    private static final Pattern ADD_NOTE_ARGS_FORMAT \u003d Pattern","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"mokdarren"},"content":"            .compile(\"(?\u003cindex\u003e\\\\d+) (?\u003cnote\u003e.*)\");","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"mokdarren"},"content":"     * Parses the given {@code String} of arguments in the context of the AddNoteCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"mokdarren"},"content":"     * and returns an AddNoteCommand object for execution.","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"mokdarren"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"mokdarren"},"content":"    public AddNoteCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"mokdarren"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"mokdarren"},"content":"        final Matcher matcher \u003d ADD_NOTE_ARGS_FORMAT.matcher(args.trim());","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"mokdarren"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"mokdarren"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddNoteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"mokdarren"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"mokdarren"},"content":"        final String indexArg \u003d matcher.group(\"index\");","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"mokdarren"},"content":"        final String note \u003d matcher.group(\"note\");","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"mokdarren"},"content":"        Index index \u003d ParserUtil.parseIndex(indexArg);","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"mokdarren"},"content":"        return new AddNoteCommand(index, note);","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"mokdarren"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"mokdarren":42}},{"path":"src/main/java/seedu/address/logic/parser/AddPolicyCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mokdarren"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"mokdarren"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"mokdarren"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMISSION;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"mokdarren"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INSURER;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"mokdarren"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"mokdarren"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NUMBER;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"mokdarren"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"mokdarren"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"mokdarren"},"content":"import seedu.address.logic.commands.AddPolicyCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"mokdarren"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Policy;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"mokdarren"},"content":"/**","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"mokdarren"},"content":" * Parses input arguments and creates a new AddPolicyCommand object","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"mokdarren"},"content":" */","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"mokdarren"},"content":"public class AddPolicyCommandParser implements Parser\u003cAddPolicyCommand\u003e {","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"mokdarren"},"content":"     * Parses the given {@code String} of arguments in the context of the AddPolicyCommand","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"mokdarren"},"content":"     * and returns an AddPolicyCommand object for execution.","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"mokdarren"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"mokdarren"},"content":"    public AddPolicyCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"mokdarren"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"mokdarren"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_INSURER, PREFIX_NUMBER, PREFIX_NAME, PREFIX_COMMISSION);","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"mokdarren"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_INSURER, PREFIX_NUMBER, PREFIX_NAME, PREFIX_COMMISSION)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"mokdarren"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPolicyCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"mokdarren"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"mokdarren"},"content":"        Index index;","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"mokdarren"},"content":"        try {","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"mokdarren"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"mokdarren"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"mokdarren"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPolicyCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"mokdarren"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"mokdarren"},"content":"        Name insurer \u003d ParserUtil.parseInsurerName(argMultimap.getValue(PREFIX_INSURER).get());","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"mokdarren"},"content":"        int policyNumber \u003d ParserUtil.parsePolicyNumber(argMultimap.getValue(PREFIX_NUMBER).get());","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"mokdarren"},"content":"        Name policyName \u003d ParserUtil.parsePolicyName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"mokdarren"},"content":"        double commission \u003d ParserUtil.parseCommission(argMultimap.getValue(PREFIX_COMMISSION).get());","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"mokdarren"},"content":"        Policy newPolicy \u003d new Policy(insurer, policyNumber, policyName, commission);","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"mokdarren"},"content":"        return new AddPolicyCommand(index, newPolicy);","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"mokdarren"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"mokdarren"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"mokdarren"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"mokdarren"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"mokdarren"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"mokdarren":60}},{"path":"src/main/java/seedu/address/logic/parser/AddScheduleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FROM;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RECURR_DAILY;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RECURR_WEEKLY;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RECURR_YEARLY;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TO;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.logic.commands.AddScheduleCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.event.Schedule;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.event.exceptions.InvalidTimeException;","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"public class AddScheduleCommandParser implements Parser\u003cAddScheduleCommand\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"     * AddScheduleCommand and returns an AddScheduleCommand object for execution.","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"    public AddScheduleCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_DESCRIPTION, PREFIX_DATE, PREFIX_FROM,","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"                PREFIX_TO, PREFIX_TAG, PREFIX_RECURR_DAILY, PREFIX_RECURR_WEEKLY, PREFIX_RECURR_YEARLY);","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_DESCRIPTION, PREFIX_DATE, PREFIX_FROM, PREFIX_TO)","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"        String description \u003d argMultimap.getValue(PREFIX_DESCRIPTION).get();","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"        String date \u003d argMultimap.getValue(PREFIX_DATE).get();","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"rickyaandrew"},"content":"        String from \u003d argMultimap.getValue(PREFIX_FROM).get();","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"rickyaandrew"},"content":"        String to \u003d argMultimap.getValue(PREFIX_TO).get();","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"rickyaandrew"},"content":"        Optional\u003cString\u003e recurrD \u003d argMultimap.getValue(PREFIX_RECURR_DAILY);","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"rickyaandrew"},"content":"        Optional\u003cString\u003e recurrW \u003d argMultimap.getValue(PREFIX_RECURR_WEEKLY);","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"rickyaandrew"},"content":"        Optional\u003cString\u003e recurrY \u003d argMultimap.getValue(PREFIX_RECURR_YEARLY);","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"rickyaandrew"},"content":"        String recurrType \u003d \"N\";","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"rickyaandrew"},"content":"        String recurrDate \u003d \"\";","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"rickyaandrew"},"content":"        if (!recurrD.isEmpty()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"rickyaandrew"},"content":"            System.out.println(recurrD.get());","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"rickyaandrew"},"content":"            recurrType \u003d \"D\";","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"rickyaandrew"},"content":"            recurrDate \u003d recurrD.get();","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"rickyaandrew"},"content":"        if (!recurrW.isEmpty()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"rickyaandrew"},"content":"            recurrType \u003d \"W\";","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"rickyaandrew"},"content":"            recurrDate \u003d recurrW.get();","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"rickyaandrew"},"content":"        if (!recurrY.isEmpty()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"rickyaandrew"},"content":"            recurrType \u003d \"Y\";","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"rickyaandrew"},"content":"            recurrDate \u003d recurrY.get();","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"rickyaandrew"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"rickyaandrew"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"rickyaandrew"},"content":"            Schedule schedule \u003d new Schedule(description, date, from, to, false, tagList, recurrType, recurrDate);","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"rickyaandrew"},"content":"            return new AddScheduleCommand(schedule);","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"rickyaandrew"},"content":"        } catch (InvalidTimeException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"rickyaandrew"},"content":"            throw new ParseException(e.getMsg());","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"rickyaandrew"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"rickyaandrew"},"content":"     * in the given {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"rickyaandrew"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"rickyaandrew"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"rickyaandrew":80}},{"path":"src/main/java/seedu/address/logic/parser/AddTodoCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"import seedu.address.logic.commands.AddTodoCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.Todo;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":" * Parses input arguments and creates a new AddTodoCommand object","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"public class AddTodoCommandParser implements Parser\u003cAddTodoCommand\u003e {","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"     * Parses the given {@code String} of arguments in the context of the AddTodoCommand","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"     * and returns an AddTodoCommand object for execution.","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"    public AddTodoCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DESCRIPTION, PREFIX_TAG);","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_DESCRIPTION)","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTodoCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"        String description \u003d argMultimap.getValue(PREFIX_DESCRIPTION).get();","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"kslui99"},"content":"        Todo todo \u003d new Todo(description, tagList);","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"        return new AddTodoCommand(todo);","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"kslui99"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"kslui99"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"kslui99"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"kslui99"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"kslui99":50}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_ERROR_PARSING_TAB;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_TAB;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"mokdarren"},"content":"import seedu.address.logic.commands.AddNoteCommand;","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"mokdarren"},"content":"import seedu.address.logic.commands.AddPolicyCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"import seedu.address.logic.commands.DoneTodoCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"mokdarren"},"content":"import seedu.address.logic.commands.EditStatusCommand;","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"SpdPnd98"},"content":"import seedu.address.logic.commands.ImportCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.logic.commands.ListSchedulesCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.logic.commands.ListTodosCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"mokdarren"},"content":"import seedu.address.logic.commands.SelectContactCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.logic.commands.TabSwitchCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.logic.commands.UpdateCustomGoalCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"    private static final String DASHBOARD_TAB_ID \u003d \"dashboardTab\";","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"    private static final String CONTACTS_TAB_ID \u003d \"contactsTab\";","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"kslui99"},"content":"    private static final String SCHEDULE_TAB_ID \u003d \"scheduleTab\";","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"kslui99"},"content":"    private static final String TODOS_TAB_ID \u003d \"todosTab\";","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"mokdarren"},"content":"    private static final String DETAILS_TAB_ID \u003d \"detailsTab\";","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"SpdPnd98"},"content":"    private static final String DASHBOARD_PREFIX \u003d \"dashboard\";","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"SpdPnd98"},"content":"    private static final String CONTACTS_PREFIX \u003d \"contacts\";","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"SpdPnd98"},"content":"    private static final String SCHEDULE_PREFIX \u003d \"schedule\";","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"SpdPnd98"},"content":"    private static final String TODOS_PREFIX \u003d \"todos\";","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"SpdPnd98"},"content":"    private static final String DETAILS_PREFIX \u003d \"details\";","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"rickyaandrew"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"rickyaandrew"},"content":"            .compile(\"(?\u003ctab\u003e\\\\S+) (?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"SpdPnd98"},"content":"    private static final Pattern CONTEXTUAL_COMMAND_FORMAT \u003d Pattern","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"SpdPnd98"},"content":"            .compile(\"(?\u003cprefixTab\u003e\\\\S+) /(?\u003ctab\u003e\\\\S+) (?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"SpdPnd98"},"content":"    private String targetTab;","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":68,"author":{"gitId":"SpdPnd98"},"content":"        final Matcher matcher;","lastModifiedDate":"2021-10-29"},{"lineNumber":69,"author":{"gitId":"SpdPnd98"},"content":"        final Matcher basicMatcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"SpdPnd98"},"content":"        final Matcher contextualMatcher \u003d CONTEXTUAL_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"SpdPnd98"},"content":"        if (contextualMatcher.matches()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":72,"author":{"gitId":"SpdPnd98"},"content":"            matcher \u003d contextualMatcher;","lastModifiedDate":"2021-10-29"},{"lineNumber":73,"author":{"gitId":"SpdPnd98"},"content":"        } else if (basicMatcher.matches()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":74,"author":{"gitId":"SpdPnd98"},"content":"            matcher \u003d basicMatcher;","lastModifiedDate":"2021-10-29"},{"lineNumber":75,"author":{"gitId":"SpdPnd98"},"content":"        } else {","lastModifiedDate":"2021-10-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"SpdPnd98"},"content":"        final String tab \u003d toTabIDs(matcher.group(\"tab\"));","lastModifiedDate":"2021-10-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"SpdPnd98"},"content":"        this.targetTab \u003d toTabPrefix(tab);","lastModifiedDate":"2021-10-29"},{"lineNumber":84,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"kslui99"},"content":"            switch (tab) {","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"kslui99"},"content":"            case DASHBOARD_TAB_ID:","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"whoisjustinngo"},"content":"                return new AddCustomGoalCommandParser().parse(arguments);","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"kslui99"},"content":"            case CONTACTS_TAB_ID:","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"kslui99"},"content":"            case SCHEDULE_TAB_ID:","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"rickyaandrew"},"content":"                return new AddScheduleCommandParser().parse(arguments);","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"kslui99"},"content":"            case TODOS_TAB_ID:","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"kslui99"},"content":"                return new AddTodoCommandParser().parse(arguments);","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"kslui99"},"content":"            default:","lastModifiedDate":"2021-10-09"},{"lineNumber":103,"author":{"gitId":"kslui99"},"content":"                throw new ParseException(MESSAGE_ERROR_PARSING_TAB);","lastModifiedDate":"2021-10-09"},{"lineNumber":104,"author":{"gitId":"kslui99"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":105,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":106,"author":{"gitId":"mokdarren"},"content":"        case AddPolicyCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-28"},{"lineNumber":107,"author":{"gitId":"mokdarren"},"content":"            switch (tab) {","lastModifiedDate":"2021-10-28"},{"lineNumber":108,"author":{"gitId":"mokdarren"},"content":"            case CONTACTS_TAB_ID:","lastModifiedDate":"2021-10-28"},{"lineNumber":109,"author":{"gitId":"mokdarren"},"content":"                //fallthrough","lastModifiedDate":"2021-10-29"},{"lineNumber":110,"author":{"gitId":"mokdarren"},"content":"            case DETAILS_TAB_ID:","lastModifiedDate":"2021-10-29"},{"lineNumber":111,"author":{"gitId":"mokdarren"},"content":"                return new AddPolicyCommandParser().parse(arguments);","lastModifiedDate":"2021-10-28"},{"lineNumber":112,"author":{"gitId":"mokdarren"},"content":"            default:","lastModifiedDate":"2021-10-28"},{"lineNumber":113,"author":{"gitId":"mokdarren"},"content":"                throw new ParseException(MESSAGE_ERROR_PARSING_TAB);","lastModifiedDate":"2021-10-28"},{"lineNumber":114,"author":{"gitId":"kslui99"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":115,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":116,"author":{"gitId":"whoisjustinngo"},"content":"        case UpdateCustomGoalCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"whoisjustinngo"},"content":"            switch(tab) {","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"whoisjustinngo"},"content":"            case DASHBOARD_TAB_ID:","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"whoisjustinngo"},"content":"                return new UpdateCustomGoalCommandParser().parse(arguments);","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"whoisjustinngo"},"content":"            default:","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"whoisjustinngo"},"content":"                throw new ParseException(MESSAGE_ERROR_PARSING_TAB);","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"whoisjustinngo"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"kslui99"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"kslui99"},"content":"            switch (tab) {","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"kslui99"},"content":"            case DASHBOARD_TAB_ID:","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"kslui99"},"content":"                throw new ParseException(MESSAGE_INVALID_TAB);","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"kslui99"},"content":"            case CONTACTS_TAB_ID:","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"kslui99"},"content":"                return new ListCommand();","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"kslui99"},"content":"            case SCHEDULE_TAB_ID:","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"kslui99"},"content":"                return new ListSchedulesCommand();","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"kslui99"},"content":"            case TODOS_TAB_ID:","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"kslui99"},"content":"                return new ListTodosCommand();","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"kslui99"},"content":"            default:","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"kslui99"},"content":"                throw new ParseException(MESSAGE_ERROR_PARSING_TAB);","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"kslui99"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":146,"author":{"gitId":"kslui99"},"content":"            switch (tab) {","lastModifiedDate":"2021-10-09"},{"lineNumber":147,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":148,"author":{"gitId":"kslui99"},"content":"            case DASHBOARD_TAB_ID:","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"kslui99"},"content":"                throw new ParseException(MESSAGE_INVALID_TAB);","lastModifiedDate":"2021-10-24"},{"lineNumber":150,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":151,"author":{"gitId":"kslui99"},"content":"            case CONTACTS_TAB_ID:","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":154,"author":{"gitId":"kslui99"},"content":"            case TODOS_TAB_ID:","lastModifiedDate":"2021-10-22"},{"lineNumber":155,"author":{"gitId":"kslui99"},"content":"                return new EditTodoCommandParser().parse(arguments);","lastModifiedDate":"2021-10-22"},{"lineNumber":156,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":157,"author":{"gitId":"rickyaandrew"},"content":"            case SCHEDULE_TAB_ID:","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"rickyaandrew"},"content":"                return new EditScheduleCommandParser().parse(arguments);","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"kslui99"},"content":"            default:","lastModifiedDate":"2021-10-09"},{"lineNumber":161,"author":{"gitId":"kslui99"},"content":"                throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-10-09"},{"lineNumber":162,"author":{"gitId":"kslui99"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":165,"author":{"gitId":"kslui99"},"content":"            switch (tab) {","lastModifiedDate":"2021-10-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":167,"author":{"gitId":"kslui99"},"content":"            case DASHBOARD_TAB_ID:","lastModifiedDate":"2021-10-10"},{"lineNumber":168,"author":{"gitId":"whoisjustinngo"},"content":"                return new DeleteCustomGoalCommandParser().parse(arguments);","lastModifiedDate":"2021-10-24"},{"lineNumber":169,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":170,"author":{"gitId":"kslui99"},"content":"            case CONTACTS_TAB_ID:","lastModifiedDate":"2021-10-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":173,"author":{"gitId":"kslui99"},"content":"            case SCHEDULE_TAB_ID:","lastModifiedDate":"2021-10-10"},{"lineNumber":174,"author":{"gitId":"rickyaandrew"},"content":"                return new DeleteScheduleCommandParser().parse(arguments);","lastModifiedDate":"2021-10-13"},{"lineNumber":175,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":176,"author":{"gitId":"kslui99"},"content":"            case TODOS_TAB_ID:","lastModifiedDate":"2021-10-10"},{"lineNumber":177,"author":{"gitId":"kslui99"},"content":"                return new DeleteTodoCommandParser().parse(arguments);","lastModifiedDate":"2021-10-10"},{"lineNumber":178,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":179,"author":{"gitId":"kslui99"},"content":"            default:","lastModifiedDate":"2021-10-09"},{"lineNumber":180,"author":{"gitId":"kslui99"},"content":"                throw new ParseException(MESSAGE_ERROR_PARSING_TAB);","lastModifiedDate":"2021-10-09"},{"lineNumber":181,"author":{"gitId":"kslui99"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":184,"author":{"gitId":"kslui99"},"content":"            switch (tab) {","lastModifiedDate":"2021-10-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":186,"author":{"gitId":"kslui99"},"content":"            case DASHBOARD_TAB_ID:","lastModifiedDate":"2021-10-24"},{"lineNumber":187,"author":{"gitId":"kslui99"},"content":"                throw new ParseException(MESSAGE_INVALID_TAB);","lastModifiedDate":"2021-10-24"},{"lineNumber":188,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":189,"author":{"gitId":"kslui99"},"content":"            case CONTACTS_TAB_ID:","lastModifiedDate":"2021-10-10"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":192,"author":{"gitId":"kslui99"},"content":"            case TODOS_TAB_ID:","lastModifiedDate":"2021-10-24"},{"lineNumber":193,"author":{"gitId":"kslui99"},"content":"                return new FindTodoCommandParser().parse(arguments);","lastModifiedDate":"2021-10-24"},{"lineNumber":194,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":195,"author":{"gitId":"rickyaandrew"},"content":"            case SCHEDULE_TAB_ID:","lastModifiedDate":"2021-10-21"},{"lineNumber":196,"author":{"gitId":"rickyaandrew"},"content":"                return new FindScheduleCommandParser().parse(arguments);","lastModifiedDate":"2021-10-21"},{"lineNumber":197,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":198,"author":{"gitId":"kslui99"},"content":"            default:","lastModifiedDate":"2021-10-09"},{"lineNumber":199,"author":{"gitId":"kslui99"},"content":"                throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-10-09"},{"lineNumber":200,"author":{"gitId":"kslui99"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":201,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":202,"author":{"gitId":"mokdarren"},"content":"        case FilterCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-20"},{"lineNumber":203,"author":{"gitId":"mokdarren"},"content":"            switch (tab) {","lastModifiedDate":"2021-10-20"},{"lineNumber":204,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":205,"author":{"gitId":"kslui99"},"content":"            case DASHBOARD_TAB_ID:","lastModifiedDate":"2021-10-24"},{"lineNumber":206,"author":{"gitId":"kslui99"},"content":"                throw new ParseException(MESSAGE_INVALID_TAB);","lastModifiedDate":"2021-10-24"},{"lineNumber":207,"author":{"gitId":"mokdarren"},"content":"            case CONTACTS_TAB_ID:","lastModifiedDate":"2021-10-20"},{"lineNumber":208,"author":{"gitId":"mokdarren"},"content":"                return new FilterCommandParser().parse(arguments);","lastModifiedDate":"2021-10-20"},{"lineNumber":209,"author":{"gitId":"rickyaandrew"},"content":"            case SCHEDULE_TAB_ID:","lastModifiedDate":"2021-10-22"},{"lineNumber":210,"author":{"gitId":"rickyaandrew"},"content":"                return new FilterScheduleCommandParser().parse(arguments);","lastModifiedDate":"2021-10-22"},{"lineNumber":211,"author":{"gitId":"kslui99"},"content":"            case TODOS_TAB_ID:","lastModifiedDate":"2021-10-24"},{"lineNumber":212,"author":{"gitId":"kslui99"},"content":"                return new FilterTodoCommandParser().parse(arguments);","lastModifiedDate":"2021-10-24"},{"lineNumber":213,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":214,"author":{"gitId":"mokdarren"},"content":"            default:","lastModifiedDate":"2021-10-20"},{"lineNumber":215,"author":{"gitId":"mokdarren"},"content":"                throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-10-20"},{"lineNumber":216,"author":{"gitId":"mokdarren"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":217,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":218,"author":{"gitId":"mokdarren"},"content":"        case SelectContactCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-28"},{"lineNumber":219,"author":{"gitId":"mokdarren"},"content":"            switch (tab) {","lastModifiedDate":"2021-10-28"},{"lineNumber":220,"author":{"gitId":"mokdarren"},"content":"            case DETAILS_TAB_ID:","lastModifiedDate":"2021-10-28"},{"lineNumber":221,"author":{"gitId":"mokdarren"},"content":"                //fallthrough","lastModifiedDate":"2021-10-28"},{"lineNumber":222,"author":{"gitId":"mokdarren"},"content":"            case CONTACTS_TAB_ID:","lastModifiedDate":"2021-10-28"},{"lineNumber":223,"author":{"gitId":"mokdarren"},"content":"                return new SelectContactCommandParser().parse(arguments);","lastModifiedDate":"2021-10-28"},{"lineNumber":224,"author":{"gitId":"mokdarren"},"content":"            default:","lastModifiedDate":"2021-10-28"},{"lineNumber":225,"author":{"gitId":"mokdarren"},"content":"                throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-10-28"},{"lineNumber":226,"author":{"gitId":"mokdarren"},"content":"            }","lastModifiedDate":"2021-10-28"},{"lineNumber":227,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":228,"author":{"gitId":"kslui99"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-24"},{"lineNumber":229,"author":{"gitId":"kslui99"},"content":"            switch (tab) {","lastModifiedDate":"2021-10-09"},{"lineNumber":230,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":231,"author":{"gitId":"kslui99"},"content":"            case CONTACTS_TAB_ID:","lastModifiedDate":"2021-10-10"},{"lineNumber":232,"author":{"gitId":"kslui99"},"content":"                return new ClearCommand();","lastModifiedDate":"2021-10-24"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":234,"author":{"gitId":"kslui99"},"content":"            default:","lastModifiedDate":"2021-10-24"},{"lineNumber":235,"author":{"gitId":"kslui99"},"content":"                throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-10-24"},{"lineNumber":236,"author":{"gitId":"kslui99"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":237,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":238,"author":{"gitId":"kslui99"},"content":"        case DoneTodoCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-24"},{"lineNumber":239,"author":{"gitId":"kslui99"},"content":"            switch (tab) {","lastModifiedDate":"2021-10-24"},{"lineNumber":240,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":241,"author":{"gitId":"kslui99"},"content":"            case TODOS_TAB_ID:","lastModifiedDate":"2021-10-10"},{"lineNumber":242,"author":{"gitId":"kslui99"},"content":"                return new DoneTodoCommandParser().parse(arguments);","lastModifiedDate":"2021-10-24"},{"lineNumber":243,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":244,"author":{"gitId":"kslui99"},"content":"            default:","lastModifiedDate":"2021-10-09"},{"lineNumber":245,"author":{"gitId":"kslui99"},"content":"                throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-10-24"},{"lineNumber":246,"author":{"gitId":"kslui99"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":247,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":248,"author":{"gitId":"kslui99"},"content":"        case TabSwitchCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-24"},{"lineNumber":249,"author":{"gitId":"SpdPnd98"},"content":"            this.targetTab \u003d arguments;","lastModifiedDate":"2021-10-29"},{"lineNumber":250,"author":{"gitId":"kslui99"},"content":"            return new TabSwitchCommandParser().parse(arguments);","lastModifiedDate":"2021-10-24"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":258,"author":{"gitId":"SpdPnd98"},"content":"        case ImportCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-28"},{"lineNumber":259,"author":{"gitId":"SpdPnd98"},"content":"            return new ImportCommand();","lastModifiedDate":"2021-10-28"},{"lineNumber":260,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2021-10-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-10-29"},{"lineNumber":263,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":264,"author":{"gitId":"mokdarren"},"content":"        case AddNoteCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-29"},{"lineNumber":265,"author":{"gitId":"mokdarren"},"content":"            switch(tab) {","lastModifiedDate":"2021-10-29"},{"lineNumber":266,"author":{"gitId":"mokdarren"},"content":"            case DETAILS_TAB_ID:","lastModifiedDate":"2021-10-29"},{"lineNumber":267,"author":{"gitId":"mokdarren"},"content":"                return new AddNoteCommandParser().parse(arguments);","lastModifiedDate":"2021-10-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"            default:","lastModifiedDate":"2016-08-26"},{"lineNumber":269,"author":{"gitId":"-"},"content":"                throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-08-24"},{"lineNumber":271,"author":{"gitId":"mokdarren"},"content":"        case EditStatusCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-29"},{"lineNumber":272,"author":{"gitId":"mokdarren"},"content":"            switch(tab) {","lastModifiedDate":"2021-10-29"},{"lineNumber":273,"author":{"gitId":"mokdarren"},"content":"            case CONTACTS_TAB_ID:","lastModifiedDate":"2021-10-29"},{"lineNumber":274,"author":{"gitId":"mokdarren"},"content":"                //fallthrough","lastModifiedDate":"2021-10-29"},{"lineNumber":275,"author":{"gitId":"mokdarren"},"content":"            case DETAILS_TAB_ID:","lastModifiedDate":"2021-10-29"},{"lineNumber":276,"author":{"gitId":"mokdarren"},"content":"                return new EditStatusCommandParser().parse(arguments);","lastModifiedDate":"2021-10-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            default:","lastModifiedDate":"2016-08-26"},{"lineNumber":278,"author":{"gitId":"-"},"content":"                throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-08-24"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":281,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":283,"author":{"gitId":"SpdPnd98"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":284,"author":{"gitId":"SpdPnd98"},"content":"     * Converts convinience tab names to tab IDs.","lastModifiedDate":"2021-10-29"},{"lineNumber":285,"author":{"gitId":"SpdPnd98"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":286,"author":{"gitId":"SpdPnd98"},"content":"     * @param tab tabname provided, might be tab IDs themselves","lastModifiedDate":"2021-10-29"},{"lineNumber":287,"author":{"gitId":"SpdPnd98"},"content":"     * @return","lastModifiedDate":"2021-10-29"},{"lineNumber":288,"author":{"gitId":"SpdPnd98"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":289,"author":{"gitId":"SpdPnd98"},"content":"    private String toTabIDs(String tab) throws ParseException {","lastModifiedDate":"2021-10-29"},{"lineNumber":290,"author":{"gitId":"SpdPnd98"},"content":"        switch (tab) {","lastModifiedDate":"2021-10-29"},{"lineNumber":291,"author":{"gitId":"SpdPnd98"},"content":"        case DASHBOARD_PREFIX:","lastModifiedDate":"2021-10-29"},{"lineNumber":292,"author":{"gitId":"SpdPnd98"},"content":"            return DASHBOARD_TAB_ID;","lastModifiedDate":"2021-10-29"},{"lineNumber":293,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":294,"author":{"gitId":"SpdPnd98"},"content":"        case CONTACTS_PREFIX:","lastModifiedDate":"2021-10-29"},{"lineNumber":295,"author":{"gitId":"SpdPnd98"},"content":"            return CONTACTS_TAB_ID;","lastModifiedDate":"2021-10-29"},{"lineNumber":296,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":297,"author":{"gitId":"SpdPnd98"},"content":"        case TODOS_PREFIX:","lastModifiedDate":"2021-10-29"},{"lineNumber":298,"author":{"gitId":"SpdPnd98"},"content":"            return TODOS_TAB_ID;","lastModifiedDate":"2021-10-29"},{"lineNumber":299,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":300,"author":{"gitId":"SpdPnd98"},"content":"        case SCHEDULE_PREFIX:","lastModifiedDate":"2021-10-29"},{"lineNumber":301,"author":{"gitId":"SpdPnd98"},"content":"            return SCHEDULE_TAB_ID;","lastModifiedDate":"2021-10-29"},{"lineNumber":302,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":303,"author":{"gitId":"SpdPnd98"},"content":"        case DETAILS_PREFIX:","lastModifiedDate":"2021-10-29"},{"lineNumber":304,"author":{"gitId":"SpdPnd98"},"content":"            return DETAILS_TAB_ID;","lastModifiedDate":"2021-10-29"},{"lineNumber":305,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":306,"author":{"gitId":"SpdPnd98"},"content":"        case DASHBOARD_TAB_ID:","lastModifiedDate":"2021-10-29"},{"lineNumber":307,"author":{"gitId":"SpdPnd98"},"content":"        case CONTACTS_TAB_ID:","lastModifiedDate":"2021-10-29"},{"lineNumber":308,"author":{"gitId":"SpdPnd98"},"content":"        case TODOS_TAB_ID:","lastModifiedDate":"2021-10-29"},{"lineNumber":309,"author":{"gitId":"SpdPnd98"},"content":"        case SCHEDULE_TAB_ID:","lastModifiedDate":"2021-10-29"},{"lineNumber":310,"author":{"gitId":"SpdPnd98"},"content":"        case DETAILS_TAB_ID:","lastModifiedDate":"2021-10-29"},{"lineNumber":311,"author":{"gitId":"SpdPnd98"},"content":"            return tab;","lastModifiedDate":"2021-10-29"},{"lineNumber":312,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":313,"author":{"gitId":"SpdPnd98"},"content":"        default:","lastModifiedDate":"2021-10-29"},{"lineNumber":314,"author":{"gitId":"SpdPnd98"},"content":"            throw new ParseException(MESSAGE_ERROR_PARSING_TAB);","lastModifiedDate":"2021-10-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":318,"author":{"gitId":"SpdPnd98"},"content":"    private String toTabPrefix(String tabId) throws ParseException {","lastModifiedDate":"2021-10-29"},{"lineNumber":319,"author":{"gitId":"SpdPnd98"},"content":"        switch (tabId) {","lastModifiedDate":"2021-10-29"},{"lineNumber":320,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":321,"author":{"gitId":"SpdPnd98"},"content":"        case DASHBOARD_TAB_ID:","lastModifiedDate":"2021-10-29"},{"lineNumber":322,"author":{"gitId":"SpdPnd98"},"content":"            return DASHBOARD_PREFIX;","lastModifiedDate":"2021-10-29"},{"lineNumber":323,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":324,"author":{"gitId":"SpdPnd98"},"content":"        case CONTACTS_TAB_ID:","lastModifiedDate":"2021-10-29"},{"lineNumber":325,"author":{"gitId":"SpdPnd98"},"content":"            return CONTACTS_PREFIX;","lastModifiedDate":"2021-10-29"},{"lineNumber":326,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":327,"author":{"gitId":"SpdPnd98"},"content":"        case TODOS_TAB_ID:","lastModifiedDate":"2021-10-29"},{"lineNumber":328,"author":{"gitId":"SpdPnd98"},"content":"            return TODOS_PREFIX;","lastModifiedDate":"2021-10-29"},{"lineNumber":329,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":330,"author":{"gitId":"SpdPnd98"},"content":"        case SCHEDULE_TAB_ID:","lastModifiedDate":"2021-10-29"},{"lineNumber":331,"author":{"gitId":"SpdPnd98"},"content":"            return SCHEDULE_PREFIX;","lastModifiedDate":"2021-10-29"},{"lineNumber":332,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":333,"author":{"gitId":"SpdPnd98"},"content":"        case DETAILS_TAB_ID:","lastModifiedDate":"2021-10-29"},{"lineNumber":334,"author":{"gitId":"SpdPnd98"},"content":"            return DETAILS_PREFIX;","lastModifiedDate":"2021-10-29"},{"lineNumber":335,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":336,"author":{"gitId":"SpdPnd98"},"content":"        default:","lastModifiedDate":"2021-10-29"},{"lineNumber":337,"author":{"gitId":"SpdPnd98"},"content":"            throw new ParseException(MESSAGE_ERROR_PARSING_TAB);","lastModifiedDate":"2021-10-29"},{"lineNumber":338,"author":{"gitId":"SpdPnd98"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":339,"author":{"gitId":"SpdPnd98"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":340,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":341,"author":{"gitId":"SpdPnd98"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":342,"author":{"gitId":"SpdPnd98"},"content":"     * Always switches to where it last ran the context.","lastModifiedDate":"2021-10-29"},{"lineNumber":343,"author":{"gitId":"SpdPnd98"},"content":"     * @return","lastModifiedDate":"2021-10-29"},{"lineNumber":344,"author":{"gitId":"SpdPnd98"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":345,"author":{"gitId":"SpdPnd98"},"content":"    public Command goToContextTab() throws ParseException {","lastModifiedDate":"2021-10-29"},{"lineNumber":346,"author":{"gitId":"SpdPnd98"},"content":"        return new TabSwitchCommandParser().parse(this.targetTab);","lastModifiedDate":"2021-10-29"},{"lineNumber":347,"author":{"gitId":"SpdPnd98"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"whoisjustinngo":17,"kslui99":106,"rickyaandrew":13,"-":82,"SpdPnd98":88,"mokdarren":42}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"mokdarren"},"content":"    public static final Prefix PREFIX_RELATIONSHIP \u003d new Prefix(\"r/\");","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"d/\");","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"    public static final Prefix PREFIX_DONE \u003d new Prefix(\"done/\");","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"date/\");","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"    public static final Prefix PREFIX_FROM \u003d new Prefix(\"fr/\");","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"    public static final Prefix PREFIX_TO \u003d new Prefix(\"to/\");","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"whoisjustinngo"},"content":"    public static final Prefix PREFIX_GOAL \u003d new Prefix(\"goal/\");","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"whoisjustinngo"},"content":"    public static final Prefix PREFIX_END_DATE \u003d new Prefix(\"bydate/\");","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"whoisjustinngo"},"content":"    public static final Prefix PREFIX_END_TIME \u003d new Prefix(\"bytime/\");","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"whoisjustinngo"},"content":"    public static final Prefix PREFIX_VALUE \u003d new Prefix(\"val/\");","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"mokdarren"},"content":"    public static final Prefix PREFIX_INSURER \u003d new Prefix(\"insurer/\");","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"mokdarren"},"content":"    public static final Prefix PREFIX_NUMBER \u003d new Prefix(\"num/\");","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"mokdarren"},"content":"    public static final Prefix PREFIX_COMMISSION \u003d new Prefix(\"comm/\");","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"    public static final Prefix PREFIX_RECURR_DAILY \u003d new Prefix(\"recurd/\");","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"    public static final Prefix PREFIX_RECURR_WEEKLY \u003d new Prefix(\"recurw/\");","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"    public static final Prefix PREFIX_RECURR_YEARLY \u003d new Prefix(\"recury/\");","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"whoisjustinngo":4,"kslui99":2,"rickyaandrew":6,"-":14,"mokdarren":4}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCustomGoalCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"whoisjustinngo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"whoisjustinngo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"whoisjustinngo"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"whoisjustinngo"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.logic.commands.DeleteCustomGoalCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"whoisjustinngo"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"whoisjustinngo"},"content":" * Parses input arguments and creates a new DeleteCustomGoalCommand object.","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"whoisjustinngo"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"whoisjustinngo"},"content":"public class DeleteCustomGoalCommandParser implements Parser\u003cDeleteCustomGoalCommand\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"whoisjustinngo"},"content":"    private static final String MESSAGE_INVALID_INDEX \u003d \"Please specify a valid index\";","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"whoisjustinngo"},"content":"     * Parses the provided string and creates a proper {@link DeleteCustomGoalCommand} that can be","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"whoisjustinngo"},"content":"     * subsequently executed.","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"whoisjustinngo"},"content":"     * @param args The string to parse.","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"whoisjustinngo"},"content":"     * @return The DeleteCustomGoalCommand created from parsing.","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"whoisjustinngo"},"content":"     * @throws ParseException If the argument given is invalid.","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"whoisjustinngo"},"content":"    public DeleteCustomGoalCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"whoisjustinngo"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"whoisjustinngo"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"whoisjustinngo"},"content":"            Index index \u003d ParserUtil.parseIndex(args.trim().split(\" \")[0]);","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"whoisjustinngo"},"content":"            return new DeleteCustomGoalCommand(index);","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"whoisjustinngo"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"whoisjustinngo"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_INVALID_INDEX));","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"whoisjustinngo"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"whoisjustinngo"},"content":"     * in the given {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"whoisjustinngo"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"whoisjustinngo"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"whoisjustinngo":44}},{"path":"src/main/java/seedu/address/logic/parser/DeleteScheduleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.logic.commands.DeleteScheduleCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":" * Parses input arguments and creates a new DeleteScheduleCommand object","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"public class DeleteScheduleCommandParser implements Parser\u003cDeleteScheduleCommand\u003e {","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"     * DeleteTodoCommand and returns a DeleteTodoCommand object for execution.","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"    public DeleteScheduleCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"            return new DeleteScheduleCommand(index);","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteScheduleCommand.MESSAGE_USAGE),","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"                    pe);","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"rickyaandrew":28}},{"path":"src/main/java/seedu/address/logic/parser/DeleteTodoCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"import seedu.address.logic.commands.DeleteTodoCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":" * Parses input arguments and creates a new DeleteTodoCommand object","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"public class DeleteTodoCommandParser implements Parser\u003cDeleteTodoCommand\u003e {","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteTodoCommand","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"     * and returns a DeleteTodoCommand object for execution.","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"    public DeleteTodoCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"            return new DeleteTodoCommand(index);","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTodoCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"kslui99":29}},{"path":"src/main/java/seedu/address/logic/parser/DoneTodoCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"import seedu.address.logic.commands.DoneTodoCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":" * Parses input arguments and creates a new DoneTodoCommand object","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"public class DoneTodoCommandParser implements Parser\u003cDoneTodoCommand\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"     * Parses the given {@code String} of arguments in the context of the DoneTodoCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"     * and returns a DoneTodoCommand object for execution.","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"    public DoneTodoCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"            return new DoneTodoCommand(index);","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DoneTodoCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"kslui99":29}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"mokdarren"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RELATIONSHIP;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"mokdarren"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_RELATIONSHIP, PREFIX_PHONE,","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"mokdarren"},"content":"                        PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"mokdarren"},"content":"        if (argMultimap.getValue(PREFIX_RELATIONSHIP).isPresent()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"mokdarren"},"content":"            editPersonDescriptor.setRelationship(","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"mokdarren"},"content":"                    ParserUtil.parseRelationship(argMultimap.getValue(PREFIX_RELATIONSHIP).get()));","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"mokdarren"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":81,"mokdarren":7}},{"path":"src/main/java/seedu/address/logic/parser/EditScheduleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FROM;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TO;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"import java.util.Collection;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.logic.commands.EditScheduleCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.logic.commands.EditScheduleCommand.EditScheduleDescriptor;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":" * Parses input arguments and creates a new EditScheduleCommand object","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"public class EditScheduleCommandParser implements Parser\u003cEditScheduleCommand\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"     * EditCommand and returns an EditCommand object for execution.","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"    public EditScheduleCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_DESCRIPTION, PREFIX_DATE, PREFIX_FROM,","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"                PREFIX_TO, PREFIX_TAG);","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"        Index index;","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"rickyaandrew"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"rickyaandrew"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditScheduleCommand.MESSAGE_USAGE),","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"rickyaandrew"},"content":"                    pe);","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"rickyaandrew"},"content":"        EditScheduleDescriptor editScheduleDescriptor \u003d new EditScheduleDescriptor();","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"rickyaandrew"},"content":"        if (argMultimap.getValue(PREFIX_DESCRIPTION).isPresent()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"rickyaandrew"},"content":"            editScheduleDescriptor.setDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"rickyaandrew"},"content":"        if (argMultimap.getValue(PREFIX_DATE).isPresent()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"rickyaandrew"},"content":"            editScheduleDescriptor.setDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"rickyaandrew"},"content":"        if (argMultimap.getValue(PREFIX_FROM).isPresent()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"rickyaandrew"},"content":"            editScheduleDescriptor.setTimeFrom(argMultimap.getValue(PREFIX_FROM).get());","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"rickyaandrew"},"content":"        if (argMultimap.getValue(PREFIX_TO).isPresent()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"rickyaandrew"},"content":"            editScheduleDescriptor.setTimeTo(argMultimap.getValue(PREFIX_TO).get());","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"rickyaandrew"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editScheduleDescriptor::setTags);","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"rickyaandrew"},"content":"        if (!editScheduleDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"rickyaandrew"},"content":"            throw new ParseException(EditScheduleCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"rickyaandrew"},"content":"        return new EditScheduleCommand(index, editScheduleDescriptor);","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"rickyaandrew"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"rickyaandrew"},"content":"     * {@code tags} is non-empty. If {@code tags} contain only one element which is","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"rickyaandrew"},"content":"     * an empty string, it will be parsed into a {@code Set\u003cTag\u003e} containing zero","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"rickyaandrew"},"content":"     * tags.","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"rickyaandrew"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"rickyaandrew"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"rickyaandrew"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"rickyaandrew"},"content":"            return Optional.empty();","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"rickyaandrew"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"rickyaandrew"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"rickyaandrew":82}},{"path":"src/main/java/seedu/address/logic/parser/EditStatusCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mokdarren"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"mokdarren"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"mokdarren"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"mokdarren"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_STATUS;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"mokdarren"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"mokdarren"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"mokdarren"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"mokdarren"},"content":"import seedu.address.logic.commands.EditStatusCommand;","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"mokdarren"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"mokdarren"},"content":"/**","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"mokdarren"},"content":" * Parses input arguments and creates a new EditStatusCommand object","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"mokdarren"},"content":" */","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"mokdarren"},"content":"public class EditStatusCommandParser implements Parser\u003cEditStatusCommand\u003e {","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"mokdarren"},"content":"     * Used for separation of index and status.","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"mokdarren"},"content":"    private static final Pattern EDIT_STATUS_ARGS_FORMAT \u003d Pattern","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"mokdarren"},"content":"            .compile(\"(?\u003cindex\u003e\\\\d+) (?\u003cstatus\u003e.*)\");","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"mokdarren"},"content":"     * Parses the given {@code String} of arguments in the context of the EditStatusCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"mokdarren"},"content":"     * and returns an EditStatusCommand object for execution.","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"mokdarren"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"mokdarren"},"content":"    public EditStatusCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"mokdarren"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"mokdarren"},"content":"        final Matcher matcher \u003d EDIT_STATUS_ARGS_FORMAT.matcher(args.trim());","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"mokdarren"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"mokdarren"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditStatusCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"mokdarren"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"mokdarren"},"content":"        final String indexArg \u003d matcher.group(\"index\");","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"mokdarren"},"content":"        Index index \u003d ParserUtil.parseIndex(indexArg);","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"mokdarren"},"content":"        final String statusArg \u003d matcher.group(\"status\");","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"mokdarren"},"content":"        if (!Status.contains(statusArg.toUpperCase())) {","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"mokdarren"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_STATUS, EditStatusCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"mokdarren"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"mokdarren"},"content":"        return new EditStatusCommand(index, Status.valueOf(statusArg.toUpperCase()));","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"mokdarren"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"mokdarren":48}},{"path":"src/main/java/seedu/address/logic/parser/EditTodoCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"import java.util.Collection;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"import seedu.address.logic.commands.EditTodoCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"import seedu.address.logic.commands.EditTodoCommand.EditTodoDescriptor;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":" * Parses input arguments and creates a new EditTodoCommand object","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"public class EditTodoCommandParser implements Parser\u003cEditTodoCommand\u003e {","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"     * Parses the given {@code String} of arguments in the context of the EditTodoCommand","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"     * and returns an EditTodoCommand object for execution.","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"    public EditTodoCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DESCRIPTION, PREFIX_TAG);","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"        Index index;","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"kslui99"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditTodoCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"kslui99"},"content":"        EditTodoDescriptor editTodoDescriptor \u003d new EditTodoDescriptor();","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"kslui99"},"content":"        if (argMultimap.getValue(PREFIX_DESCRIPTION).isPresent()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"kslui99"},"content":"            editTodoDescriptor.setDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"kslui99"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editTodoDescriptor::setTags);","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"kslui99"},"content":"        if (!editTodoDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"kslui99"},"content":"            throw new ParseException(EditTodoCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"kslui99"},"content":"        return new EditTodoCommand(index, editTodoDescriptor);","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"kslui99"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"kslui99"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"kslui99"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"kslui99"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"kslui99"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"kslui99"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"kslui99"},"content":"            return Optional.empty();","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"kslui99"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"kslui99"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"kslui99":69}},{"path":"src/main/java/seedu/address/logic/parser/FilterCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mokdarren"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"mokdarren"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"mokdarren"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"mokdarren"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"mokdarren"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"mokdarren"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"mokdarren"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RELATIONSHIP;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"mokdarren"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"mokdarren"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"mokdarren"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"mokdarren"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"mokdarren"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"mokdarren"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.predicates.AddressContainsKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.predicates.EmailContainsKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.predicates.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.predicates.RelationshipContainsKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.predicates.TagsContainsKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"mokdarren"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"mokdarren"},"content":" * Parses input arguments and creates a new FilterCommand object","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"mokdarren"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"mokdarren"},"content":"public class FilterCommandParser implements Parser\u003cFilterCommand\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"mokdarren"},"content":"     * Parses the given {@code String} of arguments in the context of the FilterCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"mokdarren"},"content":"     * and returns a FilterCommand object for execution.","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"mokdarren"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"mokdarren"},"content":"    public FilterCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"mokdarren"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"mokdarren"},"content":"                PREFIX_NAME, PREFIX_RELATIONSHIP, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"mokdarren"},"content":"        if (!argMultimap.getPreamble().isEmpty() || args.trim().isEmpty()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"mokdarren"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"mokdarren"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"mokdarren"},"content":"        Predicate\u003cPerson\u003e namePredicate \u003d getPredicateFromMultimap(PREFIX_NAME, argMultimap);","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"mokdarren"},"content":"        Predicate\u003cPerson\u003e tagsPredicate \u003d getPredicateFromMultimap(PREFIX_TAG, argMultimap);","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"mokdarren"},"content":"        Predicate\u003cPerson\u003e relationshipPredicate \u003d getPredicateFromMultimap(PREFIX_RELATIONSHIP, argMultimap);","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"mokdarren"},"content":"        Predicate\u003cPerson\u003e emailPredicate \u003d getPredicateFromMultimap(PREFIX_EMAIL, argMultimap);","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"mokdarren"},"content":"        Predicate\u003cPerson\u003e addressPredicate \u003d getPredicateFromMultimap(PREFIX_ADDRESS, argMultimap);","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"mokdarren"},"content":"        Predicate\u003cPerson\u003e phonePredicate \u003d getPredicateFromMultimap(PREFIX_PHONE, argMultimap);","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"mokdarren"},"content":"        return new FilterCommand(namePredicate.and(relationshipPredicate).and(phonePredicate)","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"mokdarren"},"content":"                .and(emailPredicate).and(addressPredicate).and(tagsPredicate));","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"mokdarren"},"content":"    private Predicate\u003cPerson\u003e getPredicateFromMultimap(Prefix prefix, ArgumentMultimap argMultimap) {","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"mokdarren"},"content":"        Optional\u003cString\u003e filter \u003d argMultimap.getValue(prefix);","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"mokdarren"},"content":"        if (filter.isEmpty()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"mokdarren"},"content":"            return unused -\u003e true;","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"mokdarren"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"mokdarren"},"content":"        String[] keywords \u003d filter.get().split(\"\\\\s+\");","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"mokdarren"},"content":"        if (prefix.getPrefix() \u003d\u003d PREFIX_TAG.getPrefix()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"mokdarren"},"content":"            return new TagsContainsKeywordsPredicate(Arrays.asList(keywords));","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"mokdarren"},"content":"        } else if (prefix.getPrefix().equals(PREFIX_RELATIONSHIP.getPrefix())) {","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"mokdarren"},"content":"            return new RelationshipContainsKeywordsPredicate(Arrays.asList(keywords));","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"mokdarren"},"content":"        } else if (prefix.getPrefix().equals(PREFIX_EMAIL.getPrefix())) {","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"mokdarren"},"content":"            return new EmailContainsKeywordsPredicate(Arrays.asList(keywords));","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"mokdarren"},"content":"        } else if (prefix.getPrefix().equals(PREFIX_NAME.getPrefix())) {","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"mokdarren"},"content":"            return new NameContainsKeywordsPredicate(Arrays.asList(keywords));","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"mokdarren"},"content":"        } else if (prefix.getPrefix().equals(PREFIX_PHONE.getPrefix())) {","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"mokdarren"},"content":"            return new PhoneContainsKeywordsPredicate(Arrays.asList(keywords));","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"mokdarren"},"content":"        } else if (prefix.getPrefix().equals(PREFIX_ADDRESS.getPrefix())) {","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"mokdarren"},"content":"            return new AddressContainsKeywordsPredicate(Arrays.asList(keywords));","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"mokdarren"},"content":"        } else {","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"mokdarren"},"content":"            return unused -\u003e true;","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"mokdarren"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"mokdarren"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"mokdarren":75}},{"path":"src/main/java/seedu/address/logic/parser/FilterScheduleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FROM;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TO;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.logic.commands.FilterScheduleCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.event.Schedule;","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.event.predicates.ScheduleContainsDatePredicate;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.event.predicates.ScheduleContainsFromPredicate;","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.event.predicates.ScheduleContainsKeywordsPredicate;","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.event.predicates.ScheduleContainsToPredicate;","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.event.predicates.ScheduleTagContainsKeywordsPredicate;","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":" * Parses input arguments and creates a new FilterScheduleCommand object","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"public class FilterScheduleCommandParser implements Parser\u003cFilterScheduleCommand\u003e {","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"     * FilterCommand and returns a FilterCommand object for execution.","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"    public FilterScheduleCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_DESCRIPTION, PREFIX_DATE, PREFIX_FROM,","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"                PREFIX_TO, PREFIX_TAG);","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"        if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"rickyaandrew"},"content":"        Predicate\u003cSchedule\u003e descriptionPredicate \u003d getPredicateFromMultimap(PREFIX_DESCRIPTION, argMultimap);","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"rickyaandrew"},"content":"        Predicate\u003cSchedule\u003e tagsPredicate \u003d getPredicateFromMultimap(PREFIX_TAG, argMultimap);","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"rickyaandrew"},"content":"        Predicate\u003cSchedule\u003e datePredicate \u003d getPredicateFromMultimap(PREFIX_DATE, argMultimap);","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"rickyaandrew"},"content":"        Predicate\u003cSchedule\u003e fromPredicate \u003d getPredicateFromMultimap(PREFIX_FROM, argMultimap);","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"rickyaandrew"},"content":"        Predicate\u003cSchedule\u003e toPredicate \u003d getPredicateFromMultimap(PREFIX_TO, argMultimap);","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"rickyaandrew"},"content":"        return new FilterScheduleCommand(descriptionPredicate.and(tagsPredicate).and(datePredicate)","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"rickyaandrew"},"content":"                .and(fromPredicate).and(toPredicate));","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"rickyaandrew"},"content":"    private Predicate\u003cSchedule\u003e getPredicateFromMultimap(Prefix prefix, ArgumentMultimap argMultimap) {","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"rickyaandrew"},"content":"        Optional\u003cString\u003e filter \u003d argMultimap.getValue(prefix);","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"rickyaandrew"},"content":"        if (filter.isEmpty()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"rickyaandrew"},"content":"            return unused -\u003e true;","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"rickyaandrew"},"content":"        String[] keywords \u003d filter.get().split(\"\\\\s+\");","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"rickyaandrew"},"content":"        if (prefix.getPrefix() \u003d\u003d PREFIX_TAG.getPrefix()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"rickyaandrew"},"content":"            return new ScheduleTagContainsKeywordsPredicate(Arrays.asList(keywords));","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"rickyaandrew"},"content":"        } else if (prefix.getPrefix().equals(PREFIX_DESCRIPTION.getPrefix())) {","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"rickyaandrew"},"content":"            return new ScheduleContainsKeywordsPredicate(Arrays.asList(keywords));","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"rickyaandrew"},"content":"        } else if (prefix.getPrefix().equals(PREFIX_DATE.getPrefix())) {","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"rickyaandrew"},"content":"            return new ScheduleContainsDatePredicate(Arrays.asList(keywords));","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"rickyaandrew"},"content":"        } else if (prefix.getPrefix().equals(PREFIX_FROM.getPrefix())) {","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"rickyaandrew"},"content":"            return new ScheduleContainsFromPredicate(Arrays.asList(keywords));","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"rickyaandrew"},"content":"        } else if (prefix.getPrefix().equals(PREFIX_TO.getPrefix())) {","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"rickyaandrew"},"content":"            return new ScheduleContainsToPredicate(Arrays.asList(keywords));","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"rickyaandrew"},"content":"        } else {","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"rickyaandrew"},"content":"            return unused -\u003e true;","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"rickyaandrew":71}},{"path":"src/main/java/seedu/address/logic/parser/FilterTodoCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DONE;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"import seedu.address.logic.commands.FilterTodoCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.Todo;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.predicates.DescriptionContainsKeywordsPredicate;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.predicates.TagsContainsKeywordsPredicate;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.predicates.TodoIsDonePredicate;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.predicates.TodoIsNotDonePredicate;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":" * Parses input arguments and creates a new FilterTodoCommand object","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"public class FilterTodoCommandParser implements Parser\u003cFilterTodoCommand\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"     * Parses the given {@code String} of arguments in the context of the FilterTodoCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"     * and returns a FilterTodoCommand object for execution.","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"    public FilterTodoCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_DESCRIPTION, PREFIX_TAG, PREFIX_DONE);","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"        if (!argMultimap.getPreamble().isEmpty() || args.trim().isEmpty()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterTodoCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"        Predicate\u003cTodo\u003e descriptionPredicate \u003d getPredicateFromMultimap(PREFIX_DESCRIPTION, argMultimap);","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"        Predicate\u003cTodo\u003e tagsPredicate \u003d getPredicateFromMultimap(PREFIX_TAG, argMultimap);","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"kslui99"},"content":"        Predicate\u003cTodo\u003e donePredicate \u003d getPredicateFromMultimap(PREFIX_DONE, argMultimap);","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"kslui99"},"content":"        return new FilterTodoCommand(descriptionPredicate.and(tagsPredicate).and(donePredicate));","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"kslui99"},"content":"    private Predicate\u003cTodo\u003e getPredicateFromMultimap(Prefix prefix, ArgumentMultimap argMultimap)","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"kslui99"},"content":"            throws ParseException {","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"kslui99"},"content":"        Optional\u003cString\u003e filter \u003d argMultimap.getValue(prefix);","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"kslui99"},"content":"        if (filter.isEmpty()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"kslui99"},"content":"            return unused -\u003e true;","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"kslui99"},"content":"        String[] keywords \u003d filter.get().split(\"\\\\s+\");","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"kslui99"},"content":"        if (prefix.getPrefix().equals(PREFIX_DESCRIPTION.getPrefix())) {","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"kslui99"},"content":"            return new DescriptionContainsKeywordsPredicate(Arrays.asList(keywords));","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"kslui99"},"content":"        } else if (prefix.getPrefix().equals(PREFIX_TAG.getPrefix())) {","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"kslui99"},"content":"            return new TagsContainsKeywordsPredicate(Arrays.asList(keywords));","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"kslui99"},"content":"        } else if (prefix.getPrefix().equals(PREFIX_DONE.getPrefix())) {","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"kslui99"},"content":"            return getDonePredicateFromKeywords(keywords);","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"kslui99"},"content":"        } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"kslui99"},"content":"            return unused -\u003e true;","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"kslui99"},"content":"    private Predicate\u003cTodo\u003e getDonePredicateFromKeywords(String[] keywords) throws ParseException {","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"kslui99"},"content":"        String keyword \u003d keywords[0];","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"kslui99"},"content":"        String showDoneTodosKeyword \u003d \"yes\";","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"kslui99"},"content":"        String showUndoneTodosKeyword \u003d \"no\";","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"kslui99"},"content":"        if (keyword.equals(showDoneTodosKeyword)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"kslui99"},"content":"            return new TodoIsDonePredicate();","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"kslui99"},"content":"        } else if (keyword.equals(showUndoneTodosKeyword)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"kslui99"},"content":"            return new TodoIsNotDonePredicate();","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"kslui99"},"content":"        } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"kslui99"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterTodoCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"kslui99":77}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":32,"mokdarren":2}},{"path":"src/main/java/seedu/address/logic/parser/FindScheduleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.logic.commands.FindScheduleCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.event.predicates.ScheduleContainsKeywordsPredicate;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":" * Parses input arguments and creates a new FindScheduleCommand object","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"public class FindScheduleCommandParser implements Parser\u003cFindScheduleCommand\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"     * FindCommand and returns a FindCommand object for execution.","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"    public FindScheduleCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"        String[] descriptionKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"        return new FindScheduleCommand(new ScheduleContainsKeywordsPredicate(Arrays.asList(descriptionKeywords)));","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"rickyaandrew":34}},{"path":"src/main/java/seedu/address/logic/parser/FindTodoCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"import seedu.address.logic.commands.FindTodoCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.predicates.DescriptionContainsKeywordsPredicate;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":" * Parses input arguments and creates a new FindTodoCommand object","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"public class FindTodoCommandParser implements Parser\u003cFindTodoCommand\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"     * Parses the given {@code String} of arguments in the context of the FindTodoCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"     * and returns a FindTodoCommand object for execution.","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"    public FindTodoCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindTodoCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"        return new FindTodoCommand(","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"                new DescriptionContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"kslui99":34}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Policy;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Relationship;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"mokdarren"},"content":"    private static final String INTEGER_MESSAGE_CONSTRAINTS \u003d \"Number must be an integer.\";","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"mokdarren"},"content":"     * Parses a {@code String insurerName} into a {@code insurerName}.","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"mokdarren"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"mokdarren"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"mokdarren"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"mokdarren"},"content":"    public static Name parseInsurerName(String name) throws ParseException {","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"mokdarren"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"mokdarren"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"mokdarren"},"content":"        if (!name.matches(Policy.NAME_VALIDATION_REGEX)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"mokdarren"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"mokdarren"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"mokdarren"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"mokdarren"},"content":"     * Parses a {@code String name} into a {@code policyName}.","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"mokdarren"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"mokdarren"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"mokdarren"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"mokdarren"},"content":"    public static Name parsePolicyName(String name) throws ParseException {","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"mokdarren"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"mokdarren"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"mokdarren"},"content":"        if (!name.matches(Policy.NAME_VALIDATION_REGEX)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"mokdarren"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-28"},{"lineNumber":81,"author":{"gitId":"mokdarren"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":82,"author":{"gitId":"mokdarren"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"mokdarren"},"content":"     * Ensure non-null and is numeric","lastModifiedDate":"2021-10-28"},{"lineNumber":86,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"mokdarren"},"content":"    public static int parsePolicyNumber(String number) throws ParseException {","lastModifiedDate":"2021-10-28"},{"lineNumber":88,"author":{"gitId":"mokdarren"},"content":"        requireNonNull(number);","lastModifiedDate":"2021-10-28"},{"lineNumber":89,"author":{"gitId":"mokdarren"},"content":"        if (!number.matches(Policy.NUMBER_VALIDATION_REGEX)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":90,"author":{"gitId":"mokdarren"},"content":"            throw new ParseException(INTEGER_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-28"},{"lineNumber":91,"author":{"gitId":"mokdarren"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":92,"author":{"gitId":"mokdarren"},"content":"        return Integer.valueOf(number);","lastModifiedDate":"2021-10-28"},{"lineNumber":93,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":94,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":95,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":96,"author":{"gitId":"mokdarren"},"content":"     * Ensure non-null and is numeric","lastModifiedDate":"2021-10-28"},{"lineNumber":97,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":98,"author":{"gitId":"mokdarren"},"content":"    public static double parseCommission(String number) throws ParseException {","lastModifiedDate":"2021-10-28"},{"lineNumber":99,"author":{"gitId":"mokdarren"},"content":"        requireNonNull(number);","lastModifiedDate":"2021-10-28"},{"lineNumber":100,"author":{"gitId":"mokdarren"},"content":"        if (!number.matches(Policy.COMMISSION_VALIDATION_REGEX)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":101,"author":{"gitId":"mokdarren"},"content":"            throw new ParseException(INTEGER_MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-28"},{"lineNumber":102,"author":{"gitId":"mokdarren"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":103,"author":{"gitId":"mokdarren"},"content":"        return Double.valueOf(number);","lastModifiedDate":"2021-10-29"},{"lineNumber":104,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":105,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":106,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"mokdarren"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"mokdarren"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"mokdarren"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"mokdarren"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"mokdarren"},"content":"    public static Relationship parseRelationship(String relationship) throws ParseException {","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"mokdarren"},"content":"        requireNonNull(relationship);","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"mokdarren"},"content":"        String trimmedRelationship \u003d relationship.trim();","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"mokdarren"},"content":"        if (!Relationship.isValidRelationship(trimmedRelationship)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"mokdarren"},"content":"            throw new ParseException(Relationship.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"mokdarren"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"mokdarren"},"content":"        return new Relationship(trimmedRelationship);","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":192,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":193,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":194,"author":{"gitId":"mokdarren"},"content":"     * Parses {@code Collection\u003cPolicy\u003e policies} into a {@code Set\u003cPolicy\u003e}.","lastModifiedDate":"2021-10-28"},{"lineNumber":195,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":196,"author":{"gitId":"mokdarren"},"content":"    public static Set\u003cPolicy\u003e parsePolicies(Collection\u003cPolicy\u003e policies, Policy toAdd) throws ParseException {","lastModifiedDate":"2021-10-28"},{"lineNumber":197,"author":{"gitId":"mokdarren"},"content":"        requireNonNull(policies);","lastModifiedDate":"2021-10-28"},{"lineNumber":198,"author":{"gitId":"mokdarren"},"content":"        final Set\u003cPolicy\u003e policySet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-28"},{"lineNumber":199,"author":{"gitId":"mokdarren"},"content":"        for (Policy policy : policies) {","lastModifiedDate":"2021-10-28"},{"lineNumber":200,"author":{"gitId":"mokdarren"},"content":"            policySet.add(policy);","lastModifiedDate":"2021-10-28"},{"lineNumber":201,"author":{"gitId":"mokdarren"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":202,"author":{"gitId":"mokdarren"},"content":"        return policySet;","lastModifiedDate":"2021-10-28"},{"lineNumber":203,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":204,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"-":123,"SpdPnd98":1,"mokdarren":81}},{"path":"src/main/java/seedu/address/logic/parser/SelectContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mokdarren"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"mokdarren"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"mokdarren"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"mokdarren"},"content":"import seedu.address.logic.commands.SelectContactCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"mokdarren"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"mokdarren"},"content":"/**","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"mokdarren"},"content":" * Parses input argument and creates a new SelectContactCommandParser object","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"mokdarren"},"content":" */","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"mokdarren"},"content":"public class SelectContactCommandParser implements Parser\u003cSelectContactCommand\u003e {","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"mokdarren"},"content":"     * Parses the given {@code String} of arguments in the context of the SelectContactCommand","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"mokdarren"},"content":"     * and returns a SelectContactCommand object for execution.","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"mokdarren"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"mokdarren"},"content":"    public SelectContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"mokdarren"},"content":"        try {","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"mokdarren"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"mokdarren"},"content":"            return new SelectContactCommand(index);","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"mokdarren"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"mokdarren"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"SpdPnd98"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SelectContactCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"mokdarren"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"mokdarren"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"SpdPnd98":1,"mokdarren":28}},{"path":"src/main/java/seedu/address/logic/parser/TabSwitchCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SpdPnd98"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"SpdPnd98"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"SpdPnd98"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_TAB_NAME;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"SpdPnd98"},"content":"import seedu.address.logic.commands.TabSwitchCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"SpdPnd98"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"SpdPnd98"},"content":"import seedu.address.model.TabSwitch;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"SpdPnd98"},"content":"public class TabSwitchCommandParser implements Parser\u003cTabSwitchCommand\u003e {","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"SpdPnd98"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"SpdPnd98"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"SpdPnd98"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"SpdPnd98"},"content":"     * @param args","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"SpdPnd98"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"SpdPnd98"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"SpdPnd98"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"SpdPnd98"},"content":"    public TabSwitchCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"SpdPnd98"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"SpdPnd98"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"SpdPnd98"},"content":"            return new TabSwitchCommand(TabSwitch.Tab.toEnum(args.trim()));","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"SpdPnd98"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"SpdPnd98"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"SpdPnd98"},"content":"                    String.format(MESSAGE_INVALID_TAB_NAME, args),","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"SpdPnd98"},"content":"                    pe","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"SpdPnd98"},"content":"            );","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"SpdPnd98"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"SpdPnd98"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"SpdPnd98"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"SpdPnd98":29}},{"path":"src/main/java/seedu/address/logic/parser/UpdateCustomGoalCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"whoisjustinngo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"whoisjustinngo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"whoisjustinngo"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"whoisjustinngo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_VALUE;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"whoisjustinngo"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.logic.commands.UpdateCustomGoalCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"whoisjustinngo"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"whoisjustinngo"},"content":" * Parses input arguments and creates a new UpdateCustomGoalCommand object.","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"whoisjustinngo"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"whoisjustinngo"},"content":"public class UpdateCustomGoalCommandParser implements Parser\u003cUpdateCustomGoalCommand\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"whoisjustinngo"},"content":"    private static final String MESSAGE_INVALID_VALUE_FORMAT \u003d \"Please specify a valid value (can be an integer or \"","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"whoisjustinngo"},"content":"            + \"a decimal value)\";","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"whoisjustinngo"},"content":"    private static final String MESSAGE_INVALID_INDEX \u003d \"Please specify a valid index\";","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"whoisjustinngo"},"content":"     * Parses the provided string and creates a proper {@link UpdateCustomGoalCommand} that can be","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"whoisjustinngo"},"content":"     * subsequently executed.","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"whoisjustinngo"},"content":"     * @param args The string to parse.","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"whoisjustinngo"},"content":"     * @return The UpdateCustomGoalCommand created from parsing.","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"whoisjustinngo"},"content":"     * @throws ParseException If the argument given is invalid.","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"whoisjustinngo"},"content":"    public UpdateCustomGoalCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"whoisjustinngo"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"whoisjustinngo"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_VALUE);","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"whoisjustinngo"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_VALUE)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"whoisjustinngo"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"whoisjustinngo"},"content":"                    UpdateCustomGoalCommand.MESSAGE_USAGE, MESSAGE_INVALID_VALUE_FORMAT));","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"whoisjustinngo"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"whoisjustinngo"},"content":"            Index index \u003d ParserUtil.parseIndex(args.trim().split(\" \")[0]);","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"whoisjustinngo"},"content":"            float valueToUpdateBy \u003d Float.parseFloat(argMultimap.getValue(PREFIX_VALUE).get());","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"whoisjustinngo"},"content":"            return new UpdateCustomGoalCommand(index, valueToUpdateBy);","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"whoisjustinngo"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"whoisjustinngo"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_INVALID_INDEX));","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"whoisjustinngo"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"whoisjustinngo"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_INVALID_VALUE_FORMAT));","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"whoisjustinngo"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"whoisjustinngo"},"content":"     * in the given {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"whoisjustinngo"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"whoisjustinngo"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"whoisjustinngo":56}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.model.customGoal.CustomGoal;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.model.customGoal.UniqueCustomGoalList;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.event.Schedule;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.event.UniqueScheduleList;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.Todo;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.UniqueTodoList;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":" * Wraps all data at the address-book level Duplicates are not allowed (by","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":" * .isSamePerson comparison)","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"whoisjustinngo"},"content":"    private final UniqueCustomGoalList customGoals;","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"    private final UniqueTodoList todos;","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"    private final UniqueScheduleList schedule;","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block,","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"     * sometimes used to avoid duplication between constructors. See","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"     * https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"     * Note that non-static init blocks are not recommended to use. There are other","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"     * ways to avoid duplication among constructors.","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"whoisjustinngo"},"content":"        customGoals \u003d new UniqueCustomGoalList();","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":40,"author":{"gitId":"kslui99"},"content":"        todos \u003d new UniqueTodoList();","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"rickyaandrew"},"content":"        schedule \u003d new UniqueScheduleList();","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"rickyaandrew"},"content":"    public AddressBook() {","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"whoisjustinngo"},"content":"     * Replaces the contents of the customGoals list with {@code customGoals}.","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"whoisjustinngo"},"content":"     * {@code customGoals} must not contain duplicates.","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"whoisjustinngo"},"content":"    public void setCustomGoals(List\u003cCustomGoal\u003e customGoals) {","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"whoisjustinngo"},"content":"        this.customGoals.setCustomGoals(customGoals);","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"rickyaandrew"},"content":"     * Replaces the contents of the todo list with {@code todos}. {@code todos} must","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"rickyaandrew"},"content":"     * not contain duplicate todos.","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"kslui99"},"content":"    public void setTodos(List\u003cTodo\u003e todos) {","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"kslui99"},"content":"        this.todos.setTodos(todos);","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"rickyaandrew"},"content":"     * Replaces the contents of the Schedules list with {@code Schedules}.","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"rickyaandrew"},"content":"     * {@code Schedules} must not contain duplicate Schedules.","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"rickyaandrew"},"content":"    public void setSchedules(List\u003cSchedule\u003e schedules) {","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"rickyaandrew"},"content":"        this.schedule.setSchedules(schedules);","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":94,"author":{"gitId":"whoisjustinngo"},"content":"        setCustomGoals(newData.getCustomGoalList());","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":96,"author":{"gitId":"kslui99"},"content":"        setTodos(newData.getTodoList());","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"rickyaandrew"},"content":"        setSchedules(newData.getScheduleList());","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"whoisjustinngo"},"content":"    //// customGoal-level operations","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"whoisjustinngo"},"content":"     * Adds a given customGoal to the list of CustomGoals.","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"whoisjustinngo"},"content":"    public void addCustomGoal(CustomGoal toAdd) {","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"whoisjustinngo"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"whoisjustinngo"},"content":"        customGoals.add(toAdd);","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"whoisjustinngo"},"content":"     * Deletes the \u003ccode\u003eCustomGoal\u003c/code\u003e corresponding to the specified \u003ccode\u003eIndex\u003c/code\u003e from the list.","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"whoisjustinngo"},"content":"     * @param goalToDelete The \u003ccode\u003eIndex\u003c/code\u003e of the desired \u003ccode\u003eCustomGoal\u003c/code\u003e to be deleted (1-based).","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"whoisjustinngo"},"content":"    public void deleteCustomGoal(Index goalToDelete) {","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"whoisjustinngo"},"content":"        requireNonNull(goalToDelete);","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"whoisjustinngo"},"content":"        customGoals.delete(goalToDelete);","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"whoisjustinngo"},"content":"     * Checks if specified goal is already in the list of CustomGoals.","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"whoisjustinngo"},"content":"     * @param goal The goal to check.","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"whoisjustinngo"},"content":"     * @return Whether the goal is currently in the list of CustomGoals or not.","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"whoisjustinngo"},"content":"    public boolean hasCustomGoal(CustomGoal goal) {","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"whoisjustinngo"},"content":"        requireNonNull(goal);","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"whoisjustinngo"},"content":"        return customGoals.contains(goal);","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"whoisjustinngo"},"content":"     * Increases the progress of the \u003ccode\u003eCustomGoal\u003c/code\u003e corresponding to the specified \u003ccode\u003eIndex\u003c/code\u003e by the","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"whoisjustinngo"},"content":"     * specified value.","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"whoisjustinngo"},"content":"     * @param goalToUpdate The \u003ccode\u003eIndex\u003c/code\u003e of the desired \u003ccode\u003eCustomGoal\u003c/code\u003e.","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"whoisjustinngo"},"content":"     * @param valueToUpdateBy The value to update the progress of the specified \u003ccode\u003eCustomGoal\u003c/code\u003e by.","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":136,"author":{"gitId":"whoisjustinngo"},"content":"    public void updateCustomGoal(Index goalToUpdate, float valueToUpdateBy) {","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"whoisjustinngo"},"content":"        requireNonNull(goalToUpdate);","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"whoisjustinngo"},"content":"        customGoals.update(goalToUpdate, valueToUpdateBy);","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"rickyaandrew"},"content":"     * Returns true if a person with the same identity as {@code person} exists in","lastModifiedDate":"2021-10-11"},{"lineNumber":145,"author":{"gitId":"rickyaandrew"},"content":"     * the address book.","lastModifiedDate":"2021-10-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"rickyaandrew"},"content":"     * Adds a person to the address book. The person must not already exist in the","lastModifiedDate":"2021-10-11"},{"lineNumber":154,"author":{"gitId":"rickyaandrew"},"content":"     * address book.","lastModifiedDate":"2021-10-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":161,"author":{"gitId":"rickyaandrew"},"content":"     * Replaces the given person {@code target} in the list with","lastModifiedDate":"2021-10-11"},{"lineNumber":162,"author":{"gitId":"rickyaandrew"},"content":"     * {@code editedPerson}. {@code target} must exist in the address book. The","lastModifiedDate":"2021-10-11"},{"lineNumber":163,"author":{"gitId":"rickyaandrew"},"content":"     * person identity of {@code editedPerson} must not be the same as another","lastModifiedDate":"2021-10-11"},{"lineNumber":164,"author":{"gitId":"rickyaandrew"},"content":"     * existing person in the address book.","lastModifiedDate":"2021-10-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":173,"author":{"gitId":"rickyaandrew"},"content":"     * Removes {@code key} from this {@code AddressBook}. {@code key} must exist in","lastModifiedDate":"2021-10-11"},{"lineNumber":174,"author":{"gitId":"rickyaandrew"},"content":"     * the address book.","lastModifiedDate":"2021-10-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"kslui99"},"content":"    //// todo-level operations","lastModifiedDate":"2021-10-09"},{"lineNumber":181,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":182,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":183,"author":{"gitId":"rickyaandrew"},"content":"     * Returns true if a todo with the same description as {@code todo} exists in","lastModifiedDate":"2021-10-11"},{"lineNumber":184,"author":{"gitId":"rickyaandrew"},"content":"     * the list of todos.","lastModifiedDate":"2021-10-11"},{"lineNumber":185,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":186,"author":{"gitId":"kslui99"},"content":"    public boolean hasTodo(Todo todo) {","lastModifiedDate":"2021-10-09"},{"lineNumber":187,"author":{"gitId":"kslui99"},"content":"        requireNonNull(todo);","lastModifiedDate":"2021-10-09"},{"lineNumber":188,"author":{"gitId":"kslui99"},"content":"        return todos.contains(todo);","lastModifiedDate":"2021-10-09"},{"lineNumber":189,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":190,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":191,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":192,"author":{"gitId":"rickyaandrew"},"content":"     * Adds a todo to the list of todos. The todo must not already exist in the list","lastModifiedDate":"2021-10-11"},{"lineNumber":193,"author":{"gitId":"rickyaandrew"},"content":"     * of todos.","lastModifiedDate":"2021-10-11"},{"lineNumber":194,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":195,"author":{"gitId":"kslui99"},"content":"    public void addTodo(Todo t) {","lastModifiedDate":"2021-10-09"},{"lineNumber":196,"author":{"gitId":"kslui99"},"content":"        todos.add(t);","lastModifiedDate":"2021-10-09"},{"lineNumber":197,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":198,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":199,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":200,"author":{"gitId":"rickyaandrew"},"content":"     * Adds a schedule to the list of schedules. The schedule must not already exist","lastModifiedDate":"2021-10-11"},{"lineNumber":201,"author":{"gitId":"rickyaandrew"},"content":"     * in the list of schedules.","lastModifiedDate":"2021-10-11"},{"lineNumber":202,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":203,"author":{"gitId":"rickyaandrew"},"content":"    public void addSchedule(Schedule s) {","lastModifiedDate":"2021-10-11"},{"lineNumber":204,"author":{"gitId":"rickyaandrew"},"content":"        schedule.add(s);","lastModifiedDate":"2021-10-11"},{"lineNumber":205,"author":{"gitId":"rickyaandrew"},"content":"        schedule.sort();","lastModifiedDate":"2021-10-13"},{"lineNumber":206,"author":{"gitId":"rickyaandrew"},"content":"        schedule.view();","lastModifiedDate":"2021-10-29"},{"lineNumber":207,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":208,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":209,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":210,"author":{"gitId":"rickyaandrew"},"content":"     * Returns true if a schedule with the same description as {@code schedule}","lastModifiedDate":"2021-10-13"},{"lineNumber":211,"author":{"gitId":"rickyaandrew"},"content":"     * exists in the list of schedules.","lastModifiedDate":"2021-10-13"},{"lineNumber":212,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":213,"author":{"gitId":"rickyaandrew"},"content":"    public boolean hasSchedule(Schedule s) {","lastModifiedDate":"2021-10-11"},{"lineNumber":214,"author":{"gitId":"rickyaandrew"},"content":"        requireNonNull(schedule);","lastModifiedDate":"2021-10-11"},{"lineNumber":215,"author":{"gitId":"rickyaandrew"},"content":"        return schedule.contains(s);","lastModifiedDate":"2021-10-11"},{"lineNumber":216,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":217,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":218,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":219,"author":{"gitId":"kslui99"},"content":"     * Replaces the given todo {@code target} in the list with","lastModifiedDate":"2021-10-22"},{"lineNumber":220,"author":{"gitId":"kslui99"},"content":"     * {@code editedTodo}. {@code target} must exist in the address book. The","lastModifiedDate":"2021-10-22"},{"lineNumber":221,"author":{"gitId":"kslui99"},"content":"     * {@code editedTodo} must not be the same as another","lastModifiedDate":"2021-10-22"},{"lineNumber":222,"author":{"gitId":"kslui99"},"content":"     * existing todo in the address book.","lastModifiedDate":"2021-10-22"},{"lineNumber":223,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":224,"author":{"gitId":"kslui99"},"content":"    public void setTodo(Todo target, Todo editedTodo) {","lastModifiedDate":"2021-10-22"},{"lineNumber":225,"author":{"gitId":"kslui99"},"content":"        requireNonNull(editedTodo);","lastModifiedDate":"2021-10-22"},{"lineNumber":226,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":227,"author":{"gitId":"kslui99"},"content":"        todos.setTodo(target, editedTodo);","lastModifiedDate":"2021-10-22"},{"lineNumber":228,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":229,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":230,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":231,"author":{"gitId":"kslui99"},"content":"     * Replaces the given schedule {@code target} in the list with","lastModifiedDate":"2021-10-26"},{"lineNumber":232,"author":{"gitId":"kslui99"},"content":"     * {@code editedSchedule}. {@code target} must exist in the address book. The","lastModifiedDate":"2021-10-26"},{"lineNumber":233,"author":{"gitId":"kslui99"},"content":"     * schedule identity of {@code editedSchedule} must not be the same as another","lastModifiedDate":"2021-10-26"},{"lineNumber":234,"author":{"gitId":"kslui99"},"content":"     * existing schedule in the address book.","lastModifiedDate":"2021-10-26"},{"lineNumber":235,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":236,"author":{"gitId":"rickyaandrew"},"content":"    public void setSchedule(Schedule target, Schedule editedSchedule) {","lastModifiedDate":"2021-10-21"},{"lineNumber":237,"author":{"gitId":"rickyaandrew"},"content":"        requireNonNull(editedSchedule);","lastModifiedDate":"2021-10-21"},{"lineNumber":238,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":239,"author":{"gitId":"rickyaandrew"},"content":"        schedule.setSchedule(target, editedSchedule);","lastModifiedDate":"2021-10-21"},{"lineNumber":240,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":241,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":242,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":243,"author":{"gitId":"rickyaandrew"},"content":"     * Removes {@code key} from this {@code AddressBook}. {@code key} must exist in","lastModifiedDate":"2021-10-11"},{"lineNumber":244,"author":{"gitId":"rickyaandrew"},"content":"     * the address book.","lastModifiedDate":"2021-10-11"},{"lineNumber":245,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":246,"author":{"gitId":"kslui99"},"content":"    public void removeTodo(Todo key) {","lastModifiedDate":"2021-10-10"},{"lineNumber":247,"author":{"gitId":"kslui99"},"content":"        todos.remove(key);","lastModifiedDate":"2021-10-10"},{"lineNumber":248,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":249,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":250,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":251,"author":{"gitId":"rickyaandrew"},"content":"     * Removes {@code schedule} from this {@code AddressBook}. {@code schedule} must exist in","lastModifiedDate":"2021-10-13"},{"lineNumber":252,"author":{"gitId":"rickyaandrew"},"content":"     * the address book.","lastModifiedDate":"2021-10-13"},{"lineNumber":253,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":254,"author":{"gitId":"rickyaandrew"},"content":"    public void removeSchedule(Schedule key) {","lastModifiedDate":"2021-10-13"},{"lineNumber":255,"author":{"gitId":"rickyaandrew"},"content":"        schedule.remove(key);","lastModifiedDate":"2021-10-13"},{"lineNumber":256,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":257,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":258,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":259,"author":{"gitId":"rickyaandrew"},"content":"     * Checks if {@code schedule} clashes from this {@code AddressBook}.","lastModifiedDate":"2021-10-13"},{"lineNumber":260,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":261,"author":{"gitId":"rickyaandrew"},"content":"    public boolean hasScheduleClash(Schedule key) {","lastModifiedDate":"2021-10-13"},{"lineNumber":262,"author":{"gitId":"rickyaandrew"},"content":"        return schedule.isClash(key);","lastModifiedDate":"2021-10-13"},{"lineNumber":263,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":264,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"whoisjustinngo"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":273,"author":{"gitId":"whoisjustinngo"},"content":"    public ObservableList\u003cCustomGoal\u003e getCustomGoalList() {","lastModifiedDate":"2021-10-24"},{"lineNumber":274,"author":{"gitId":"whoisjustinngo"},"content":"        return customGoals.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-24"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":282,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":283,"author":{"gitId":"kslui99"},"content":"    public ObservableList\u003cTodo\u003e getTodoList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":284,"author":{"gitId":"kslui99"},"content":"        return todos.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-10"},{"lineNumber":285,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":286,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":287,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":288,"author":{"gitId":"rickyaandrew"},"content":"    public ObservableList\u003cSchedule\u003e getScheduleList() {","lastModifiedDate":"2021-10-11"},{"lineNumber":289,"author":{"gitId":"rickyaandrew"},"content":"        return schedule.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-11"},{"lineNumber":290,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":291,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":295,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":296,"author":{"gitId":"-"},"content":"                        \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":303,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"whoisjustinngo":56,"kslui99":53,"rickyaandrew":87,"-":107,"mokdarren":1}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"SpdPnd98"},"content":"import java.io.File;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"SpdPnd98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"SpdPnd98"},"content":"import java.util.List;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"SpdPnd98"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.model.analytics.ClientAnalytics;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.model.customGoal.CustomGoal;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.event.Schedule;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.Todo;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"whoisjustinngo"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":28,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"whoisjustinngo"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"    Predicate\u003cTodo\u003e PREDICATE_SHOW_ALL_TODOS \u003d unused -\u003e true;","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"whoisjustinngo"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"    Predicate\u003cSchedule\u003e PREDICATE_SHOW_ALL_SCHEDULE \u003d unused -\u003e true;","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"whoisjustinngo"},"content":"     * Returns the AddressBook","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"rickyaandrew"},"content":"     * Returns true if a person with the same identity as {@code person} exists in","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"rickyaandrew"},"content":"     * the address book.","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"rickyaandrew"},"content":"     * Returns true if a Todo with the same description as {@code todo} exists in","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"rickyaandrew"},"content":"     * the list of todos.","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"kslui99"},"content":"    boolean hasTodo(Todo todo);","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"whoisjustinngo"},"content":"     * Returns true if a CustomGoal with the same description, goal, and/or endDate and/or endTime as","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"whoisjustinngo"},"content":"     * {@code toAdd} exists in the list of customGoals.","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"whoisjustinngo"},"content":"    boolean hasCustomGoal(CustomGoal toAdd);","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"rickyaandrew"},"content":"     * Returns true if a Schedule with the same description, date and time as","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"rickyaandrew"},"content":"     * {@code schedule} exists in the list of Schedule.","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"rickyaandrew"},"content":"    boolean hasSchedule(Schedule schedule);","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":103,"author":{"gitId":"rickyaandrew"},"content":"     * Returns true if a Schedule clashes with {@code schedule} exists in the list","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"rickyaandrew"},"content":"     * of schedules.","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"rickyaandrew"},"content":"    boolean hasScheduleClash(Schedule schedule);","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":109,"author":{"gitId":"rickyaandrew"},"content":"     * Deletes the given person. The person must exist in the address book.","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"rickyaandrew"},"content":"     * Deletes the given todo. The todo must exist in the address book.","lastModifiedDate":"2021-10-13"},{"lineNumber":115,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"kslui99"},"content":"    void deleteTodo(Todo target);","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":119,"author":{"gitId":"rickyaandrew"},"content":"     * Deletes the given todo. The todo must exist in the address book.","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":121,"author":{"gitId":"rickyaandrew"},"content":"    void deleteSchedule(Schedule target);","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":123,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"whoisjustinngo"},"content":"     * Adds the given CustomGoal, which must not already exist in the list of customGoals.","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"whoisjustinngo"},"content":"    void addCustomGoal(CustomGoal toAdd);","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":129,"author":{"gitId":"rickyaandrew"},"content":"     * Adds the given person. {@code person} must not already exist in the address","lastModifiedDate":"2021-10-13"},{"lineNumber":130,"author":{"gitId":"rickyaandrew"},"content":"     * book.","lastModifiedDate":"2021-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":134,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":135,"author":{"gitId":"rickyaandrew"},"content":"     * Adds the given Todo. {@code todo} must not already exist in the list of","lastModifiedDate":"2021-10-11"},{"lineNumber":136,"author":{"gitId":"rickyaandrew"},"content":"     * todos.","lastModifiedDate":"2021-10-11"},{"lineNumber":137,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":138,"author":{"gitId":"kslui99"},"content":"    void addTodo(Todo todo);","lastModifiedDate":"2021-10-09"},{"lineNumber":139,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":140,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":141,"author":{"gitId":"rickyaandrew"},"content":"     * Adds the given Schedule. {@code schedule} must not already exist in the list","lastModifiedDate":"2021-10-11"},{"lineNumber":142,"author":{"gitId":"rickyaandrew"},"content":"     * of schedules.","lastModifiedDate":"2021-10-11"},{"lineNumber":143,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":144,"author":{"gitId":"rickyaandrew"},"content":"    void addSchedule(Schedule schedule);","lastModifiedDate":"2021-10-11"},{"lineNumber":145,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":148,"author":{"gitId":"rickyaandrew"},"content":"     * {@code target} must exist in the address book. The person identity of","lastModifiedDate":"2021-10-11"},{"lineNumber":149,"author":{"gitId":"rickyaandrew"},"content":"     * {@code editedPerson} must not be the same as another existing person in the","lastModifiedDate":"2021-10-11"},{"lineNumber":150,"author":{"gitId":"rickyaandrew"},"content":"     * address book.","lastModifiedDate":"2021-10-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":154,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":155,"author":{"gitId":"whoisjustinngo"},"content":"     * Gets the {@code Analytics} object for this addressBook.","lastModifiedDate":"2021-10-25"},{"lineNumber":156,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":157,"author":{"gitId":"whoisjustinngo"},"content":"    ClientAnalytics getAnalytics();","lastModifiedDate":"2021-10-25"},{"lineNumber":158,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":159,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":160,"author":{"gitId":"kslui99"},"content":"     * Replaces the given todo {@code target} with {@code editedTodo}.","lastModifiedDate":"2021-10-22"},{"lineNumber":161,"author":{"gitId":"kslui99"},"content":"     * {@code target} must exist in the address book. The","lastModifiedDate":"2021-10-22"},{"lineNumber":162,"author":{"gitId":"kslui99"},"content":"     * {@code editedTodo} must not be the same as another existing todo.","lastModifiedDate":"2021-10-22"},{"lineNumber":163,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":164,"author":{"gitId":"kslui99"},"content":"    void setTodo(Todo target, Todo editedTodo);","lastModifiedDate":"2021-10-22"},{"lineNumber":165,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":166,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":167,"author":{"gitId":"rickyaandrew"},"content":"     * Replaces the given schedule {@code target} with {@code editedSchedule}.","lastModifiedDate":"2021-10-21"},{"lineNumber":168,"author":{"gitId":"rickyaandrew"},"content":"     * {@code target} must exist in the address book. The schedule identity of","lastModifiedDate":"2021-10-21"},{"lineNumber":169,"author":{"gitId":"rickyaandrew"},"content":"     * {@code editedSchedule} must not be the same as another existing schedule in","lastModifiedDate":"2021-10-21"},{"lineNumber":170,"author":{"gitId":"rickyaandrew"},"content":"     * the address book.","lastModifiedDate":"2021-10-21"},{"lineNumber":171,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":172,"author":{"gitId":"rickyaandrew"},"content":"    void setSchedule(Schedule target, Schedule editedSchedule);","lastModifiedDate":"2021-10-21"},{"lineNumber":173,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":174,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":175,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":176,"author":{"gitId":"whoisjustinngo"},"content":"     * Returns an unmodifiable view of the filtered person list","lastModifiedDate":"2021-10-27"},{"lineNumber":177,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":181,"author":{"gitId":"mokdarren"},"content":"     * Returns an unmodifiable view of a selected person list","lastModifiedDate":"2021-10-28"},{"lineNumber":182,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":183,"author":{"gitId":"mokdarren"},"content":"    ObservableList\u003cPerson\u003e getSelectedPersonList();","lastModifiedDate":"2021-10-28"},{"lineNumber":184,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":186,"author":{"gitId":"rickyaandrew"},"content":"     * Updates the filter of the filtered person list to filter by the given","lastModifiedDate":"2021-10-11"},{"lineNumber":187,"author":{"gitId":"rickyaandrew"},"content":"     * {@code predicate}.","lastModifiedDate":"2021-10-11"},{"lineNumber":188,"author":{"gitId":"rickyaandrew"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":192,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":193,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":194,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":195,"author":{"gitId":"mokdarren"},"content":"     * Updates the filter of the selected person list to filter by the given","lastModifiedDate":"2021-10-28"},{"lineNumber":196,"author":{"gitId":"mokdarren"},"content":"     * {@code predicate}.","lastModifiedDate":"2021-10-28"},{"lineNumber":197,"author":{"gitId":"mokdarren"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":198,"author":{"gitId":"mokdarren"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-10-28"},{"lineNumber":199,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":200,"author":{"gitId":"mokdarren"},"content":"    void updateSelectedPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2021-10-28"},{"lineNumber":201,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":202,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":203,"author":{"gitId":"whoisjustinngo"},"content":"     * Returns an unmodifiable view of the filtered todo list","lastModifiedDate":"2021-10-27"},{"lineNumber":204,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":205,"author":{"gitId":"kslui99"},"content":"    ObservableList\u003cTodo\u003e getFilteredTodoList();","lastModifiedDate":"2021-10-10"},{"lineNumber":206,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":207,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":208,"author":{"gitId":"whoisjustinngo"},"content":"     * Returns an unmodifiable view of the filtered schedule list","lastModifiedDate":"2021-10-27"},{"lineNumber":209,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":210,"author":{"gitId":"rickyaandrew"},"content":"    ObservableList\u003cSchedule\u003e getFilteredScheduleList();","lastModifiedDate":"2021-10-11"},{"lineNumber":211,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":212,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":213,"author":{"gitId":"whoisjustinngo"},"content":"     * Returns an unmodifiable view of the filtered custom goal list","lastModifiedDate":"2021-10-27"},{"lineNumber":214,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":215,"author":{"gitId":"whoisjustinngo"},"content":"    ObservableList\u003cCustomGoal\u003e getFilteredCustomGoalList();","lastModifiedDate":"2021-10-24"},{"lineNumber":216,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":217,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":218,"author":{"gitId":"rickyaandrew"},"content":"     * Updates the filter of the filtered todo list to filter by the given","lastModifiedDate":"2021-10-11"},{"lineNumber":219,"author":{"gitId":"rickyaandrew"},"content":"     * {@code predicate}.","lastModifiedDate":"2021-10-11"},{"lineNumber":220,"author":{"gitId":"rickyaandrew"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":221,"author":{"gitId":"kslui99"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-10-10"},{"lineNumber":222,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":223,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":224,"author":{"gitId":"kslui99"},"content":"    void updateFilteredTodoList(Predicate\u003cTodo\u003e predicate);","lastModifiedDate":"2021-10-10"},{"lineNumber":225,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":226,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":227,"author":{"gitId":"rickyaandrew"},"content":"     * Updates the filter of the filtered schedule list to filter by the given","lastModifiedDate":"2021-10-13"},{"lineNumber":228,"author":{"gitId":"rickyaandrew"},"content":"     * {@code predicate}.","lastModifiedDate":"2021-10-13"},{"lineNumber":229,"author":{"gitId":"rickyaandrew"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":230,"author":{"gitId":"rickyaandrew"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-10-13"},{"lineNumber":231,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":232,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":233,"author":{"gitId":"rickyaandrew"},"content":"    void updateFilteredScheduleList(Predicate\u003cSchedule\u003e predicate);","lastModifiedDate":"2021-10-13"},{"lineNumber":234,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":235,"author":{"gitId":"whoisjustinngo"},"content":"    void updateCustomGoal(Index goalToUpdate, float valueToUpdateBy);","lastModifiedDate":"2021-10-24"},{"lineNumber":236,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":237,"author":{"gitId":"whoisjustinngo"},"content":"    int getNumOfCustomGoals();","lastModifiedDate":"2021-10-24"},{"lineNumber":238,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":239,"author":{"gitId":"whoisjustinngo"},"content":"    void deleteCustomGoal(Index goalToDelete);","lastModifiedDate":"2021-10-24"},{"lineNumber":240,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":241,"author":{"gitId":"SpdPnd98"},"content":"    List\u003cSchedule\u003e importSchedule(File file) throws IOException, ParseException;","lastModifiedDate":"2021-10-28"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"whoisjustinngo":52,"kslui99":26,"rickyaandrew":66,"-":79,"SpdPnd98":6,"mokdarren":13}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"SpdPnd98"},"content":"import java.io.File;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"SpdPnd98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"SpdPnd98"},"content":"import java.util.List;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":17,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"SpdPnd98"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.model.analytics.ClientAnalytics;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.model.customGoal.CustomGoal;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.event.Schedule;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.Todo;","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"SpdPnd98"},"content":"import seedu.address.storage.IcsScheduleStorage;","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"whoisjustinngo"},"content":"    private final ClientAnalytics clientAnalytics;","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"SpdPnd98"},"content":"    private final IcsScheduleStorage icsScheduleStorage;","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"whoisjustinngo"},"content":"    private final FilteredList\u003cCustomGoal\u003e filteredCustomGoals;","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"mokdarren"},"content":"    private final FilteredList\u003cPerson\u003e selectedPerson;","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"    private final FilteredList\u003cTodo\u003e filteredTodos;","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"    private final FilteredList\u003cSchedule\u003e filteredSchedule;","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"whoisjustinngo"},"content":"        this.clientAnalytics \u003d new ClientAnalytics(this.addressBook);","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"SpdPnd98"},"content":"        this.icsScheduleStorage \u003d new IcsScheduleStorage();","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"whoisjustinngo"},"content":"        filteredCustomGoals \u003d new FilteredList\u003c\u003e(this.addressBook.getCustomGoalList());","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":57,"author":{"gitId":"kslui99"},"content":"        filteredTodos \u003d new FilteredList\u003c\u003e(this.addressBook.getTodoList());","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"rickyaandrew"},"content":"        filteredSchedule \u003d new FilteredList\u003c\u003e(this.addressBook.getScheduleList());","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"mokdarren"},"content":"        selectedPerson \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"rickyaandrew"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"rickyaandrew"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"whoisjustinngo"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Analytics","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"whoisjustinngo"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"whoisjustinngo"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"whoisjustinngo"},"content":"    public ClientAnalytics getAnalytics() {","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"whoisjustinngo"},"content":"        return this.clientAnalytics;","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"rickyaandrew"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"rickyaandrew"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":129,"author":{"gitId":"kslui99"},"content":"    public boolean hasTodo(Todo todo) {","lastModifiedDate":"2021-10-09"},{"lineNumber":130,"author":{"gitId":"kslui99"},"content":"        requireNonNull(todo);","lastModifiedDate":"2021-10-09"},{"lineNumber":131,"author":{"gitId":"kslui99"},"content":"        return addressBook.hasTodo(todo);","lastModifiedDate":"2021-10-09"},{"lineNumber":132,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":133,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":134,"author":{"gitId":"whoisjustinngo"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"whoisjustinngo"},"content":"    public boolean hasCustomGoal(CustomGoal toAdd) {","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"whoisjustinngo"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"whoisjustinngo"},"content":"        return addressBook.hasCustomGoal(toAdd);","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"kslui99"},"content":"    public void deleteTodo(Todo target) {","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"kslui99"},"content":"        addressBook.removeTodo(target);","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":149,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":150,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":151,"author":{"gitId":"rickyaandrew"},"content":"    public void deleteSchedule(Schedule target) {","lastModifiedDate":"2021-10-13"},{"lineNumber":152,"author":{"gitId":"rickyaandrew"},"content":"        addressBook.removeSchedule(target);","lastModifiedDate":"2021-10-13"},{"lineNumber":153,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":154,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":155,"author":{"gitId":"whoisjustinngo"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":156,"author":{"gitId":"whoisjustinngo"},"content":"    public void addCustomGoal(CustomGoal toAdd) {","lastModifiedDate":"2021-10-24"},{"lineNumber":157,"author":{"gitId":"whoisjustinngo"},"content":"        addressBook.addCustomGoal(toAdd);","lastModifiedDate":"2021-10-24"},{"lineNumber":158,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":159,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":160,"author":{"gitId":"whoisjustinngo"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":161,"author":{"gitId":"whoisjustinngo"},"content":"    public void deleteCustomGoal(Index goalToDelete) {","lastModifiedDate":"2021-10-24"},{"lineNumber":162,"author":{"gitId":"whoisjustinngo"},"content":"        addressBook.deleteCustomGoal(goalToDelete);","lastModifiedDate":"2021-10-24"},{"lineNumber":163,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":164,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":165,"author":{"gitId":"whoisjustinngo"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":166,"author":{"gitId":"whoisjustinngo"},"content":"    public void updateCustomGoal(Index goalToUpdate, float valueToUpdateBy) {","lastModifiedDate":"2021-10-24"},{"lineNumber":167,"author":{"gitId":"whoisjustinngo"},"content":"        addressBook.updateCustomGoal(goalToUpdate, valueToUpdateBy);","lastModifiedDate":"2021-10-24"},{"lineNumber":168,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":169,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":170,"author":{"gitId":"whoisjustinngo"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":171,"author":{"gitId":"whoisjustinngo"},"content":"    public int getNumOfCustomGoals() {","lastModifiedDate":"2021-10-24"},{"lineNumber":172,"author":{"gitId":"whoisjustinngo"},"content":"        return this.getFilteredCustomGoalList().size();","lastModifiedDate":"2021-10-24"},{"lineNumber":173,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":174,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":181,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":182,"author":{"gitId":"kslui99"},"content":"    public void addTodo(Todo todo) {","lastModifiedDate":"2021-10-09"},{"lineNumber":183,"author":{"gitId":"kslui99"},"content":"        addressBook.addTodo(todo);","lastModifiedDate":"2021-10-09"},{"lineNumber":184,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":185,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":186,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":187,"author":{"gitId":"rickyaandrew"},"content":"    public void addSchedule(Schedule schedule) {","lastModifiedDate":"2021-10-11"},{"lineNumber":188,"author":{"gitId":"rickyaandrew"},"content":"        addressBook.addSchedule(schedule);","lastModifiedDate":"2021-10-11"},{"lineNumber":189,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":190,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":198,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":199,"author":{"gitId":"kslui99"},"content":"    public void setTodo(Todo target, Todo editedTodo) {","lastModifiedDate":"2021-10-22"},{"lineNumber":200,"author":{"gitId":"kslui99"},"content":"        requireAllNonNull(target, editedTodo);","lastModifiedDate":"2021-10-22"},{"lineNumber":201,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":202,"author":{"gitId":"kslui99"},"content":"        addressBook.setTodo(target, editedTodo);","lastModifiedDate":"2021-10-22"},{"lineNumber":203,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":204,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":205,"author":{"gitId":"rickyaandrew"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors","lastModifiedDate":"2021-10-11"},{"lineNumber":206,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":207,"author":{"gitId":"rickyaandrew"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":210,"author":{"gitId":"rickyaandrew"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the","lastModifiedDate":"2021-10-11"},{"lineNumber":211,"author":{"gitId":"rickyaandrew"},"content":"     * internal list of {@code versionedAddressBook}","lastModifiedDate":"2021-10-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":224,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":225,"author":{"gitId":"mokdarren"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the","lastModifiedDate":"2021-10-28"},{"lineNumber":226,"author":{"gitId":"mokdarren"},"content":"     * internal list of {@code versionedAddressBook}","lastModifiedDate":"2021-10-28"},{"lineNumber":227,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":228,"author":{"gitId":"mokdarren"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":229,"author":{"gitId":"mokdarren"},"content":"    public ObservableList\u003cPerson\u003e getSelectedPersonList() {","lastModifiedDate":"2021-10-28"},{"lineNumber":230,"author":{"gitId":"mokdarren"},"content":"        return selectedPerson;","lastModifiedDate":"2021-10-28"},{"lineNumber":231,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":232,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":233,"author":{"gitId":"mokdarren"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":234,"author":{"gitId":"mokdarren"},"content":"    public void updateSelectedPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-28"},{"lineNumber":235,"author":{"gitId":"mokdarren"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-28"},{"lineNumber":236,"author":{"gitId":"mokdarren"},"content":"        selectedPerson.setPredicate(predicate);","lastModifiedDate":"2021-10-28"},{"lineNumber":237,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":238,"author":{"gitId":"rickyaandrew"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Todo List Accessors","lastModifiedDate":"2021-10-11"},{"lineNumber":239,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":240,"author":{"gitId":"rickyaandrew"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":241,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":242,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":243,"author":{"gitId":"rickyaandrew"},"content":"     * Returns an unmodifiable view of the list of {@code Todo} backed by the","lastModifiedDate":"2021-10-11"},{"lineNumber":244,"author":{"gitId":"rickyaandrew"},"content":"     * internal list","lastModifiedDate":"2021-10-11"},{"lineNumber":245,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":246,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":247,"author":{"gitId":"kslui99"},"content":"    public ObservableList\u003cTodo\u003e getFilteredTodoList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":248,"author":{"gitId":"kslui99"},"content":"        return filteredTodos;","lastModifiedDate":"2021-10-10"},{"lineNumber":249,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":250,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":251,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":252,"author":{"gitId":"rickyaandrew"},"content":"     * Returns an unmodifiable view of the list of {@code Schedule} backed by the","lastModifiedDate":"2021-10-11"},{"lineNumber":253,"author":{"gitId":"rickyaandrew"},"content":"     * internal list","lastModifiedDate":"2021-10-11"},{"lineNumber":254,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":255,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":256,"author":{"gitId":"rickyaandrew"},"content":"    public ObservableList\u003cSchedule\u003e getFilteredScheduleList() {","lastModifiedDate":"2021-10-11"},{"lineNumber":257,"author":{"gitId":"rickyaandrew"},"content":"        return filteredSchedule;","lastModifiedDate":"2021-10-11"},{"lineNumber":258,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":259,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":260,"author":{"gitId":"whoisjustinngo"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":261,"author":{"gitId":"whoisjustinngo"},"content":"    public ObservableList\u003cCustomGoal\u003e getFilteredCustomGoalList() {","lastModifiedDate":"2021-10-24"},{"lineNumber":262,"author":{"gitId":"whoisjustinngo"},"content":"        return filteredCustomGoals;","lastModifiedDate":"2021-10-24"},{"lineNumber":263,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":264,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":265,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":266,"author":{"gitId":"kslui99"},"content":"    public void updateFilteredTodoList(Predicate\u003cTodo\u003e predicate) {","lastModifiedDate":"2021-10-10"},{"lineNumber":267,"author":{"gitId":"kslui99"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-10"},{"lineNumber":268,"author":{"gitId":"kslui99"},"content":"        filteredTodos.setPredicate(predicate);","lastModifiedDate":"2021-10-10"},{"lineNumber":269,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":270,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":271,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":272,"author":{"gitId":"rickyaandrew"},"content":"    public void updateFilteredScheduleList(Predicate\u003cSchedule\u003e predicate) {","lastModifiedDate":"2021-10-13"},{"lineNumber":273,"author":{"gitId":"rickyaandrew"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-13"},{"lineNumber":274,"author":{"gitId":"rickyaandrew"},"content":"        filteredSchedule.setPredicate(predicate);","lastModifiedDate":"2021-10-13"},{"lineNumber":275,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":276,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":281,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":291,"author":{"gitId":"rickyaandrew"},"content":"        return addressBook.equals(other.addressBook) \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2021-10-11"},{"lineNumber":292,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":295,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":296,"author":{"gitId":"rickyaandrew"},"content":"    public boolean hasSchedule(Schedule schedule) {","lastModifiedDate":"2021-10-13"},{"lineNumber":297,"author":{"gitId":"rickyaandrew"},"content":"        requireNonNull(schedule);","lastModifiedDate":"2021-10-13"},{"lineNumber":298,"author":{"gitId":"rickyaandrew"},"content":"        return addressBook.hasSchedule(schedule);","lastModifiedDate":"2021-10-13"},{"lineNumber":299,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":300,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":301,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":302,"author":{"gitId":"rickyaandrew"},"content":"    public boolean hasScheduleClash(Schedule schedule) {","lastModifiedDate":"2021-10-13"},{"lineNumber":303,"author":{"gitId":"rickyaandrew"},"content":"        requireNonNull(schedule);","lastModifiedDate":"2021-10-13"},{"lineNumber":304,"author":{"gitId":"rickyaandrew"},"content":"        return addressBook.hasScheduleClash(schedule);","lastModifiedDate":"2021-10-13"},{"lineNumber":305,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":306,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":307,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":308,"author":{"gitId":"rickyaandrew"},"content":"    public void setSchedule(Schedule target, Schedule editedSchedule) {","lastModifiedDate":"2021-10-21"},{"lineNumber":309,"author":{"gitId":"rickyaandrew"},"content":"        requireAllNonNull(target, editedSchedule);","lastModifiedDate":"2021-10-21"},{"lineNumber":310,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":311,"author":{"gitId":"rickyaandrew"},"content":"        addressBook.setSchedule(target, editedSchedule);","lastModifiedDate":"2021-10-21"},{"lineNumber":312,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":313,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":314,"author":{"gitId":"SpdPnd98"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":315,"author":{"gitId":"SpdPnd98"},"content":"    public List\u003cSchedule\u003e importSchedule(File file) throws IOException, ParseException {","lastModifiedDate":"2021-10-28"},{"lineNumber":316,"author":{"gitId":"SpdPnd98"},"content":"        requireNonNull(file);","lastModifiedDate":"2021-10-28"},{"lineNumber":317,"author":{"gitId":"SpdPnd98"},"content":"        return icsScheduleStorage.importSchedule(file);","lastModifiedDate":"2021-10-28"},{"lineNumber":318,"author":{"gitId":"SpdPnd98"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":319,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":320,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"whoisjustinngo":47,"kslui99":41,"rickyaandrew":58,"-":144,"SpdPnd98":14,"mokdarren":16}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.model.customGoal.CustomGoal;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.event.Schedule;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.Todo;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"whoisjustinngo"},"content":"     * Returns an unmodifiable view of the todos list. This list will not contain","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"whoisjustinngo"},"content":"     * any duplicate todos.","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"whoisjustinngo"},"content":"    ObservableList\u003cCustomGoal\u003e getCustomGoalList();","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"     * Returns an unmodifiable view of the persons list. This list will not contain","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"     * any duplicate persons.","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"     * Returns an unmodifiable view of the todos list. This list will not contain","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"     * any duplicate todos.","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"    ObservableList\u003cTodo\u003e getTodoList();","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"     * Returns an unmodifiable view of the schedules list. This list will not","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"     * contain any duplicate schedules.","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"    ObservableList\u003cSchedule\u003e getScheduleList();","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"whoisjustinngo":6,"kslui99":5,"rickyaandrew":11,"-":16}},{"path":"src/main/java/seedu/address/model/TabSwitch.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SpdPnd98"},"content":"package seedu.address.model;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"SpdPnd98"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"SpdPnd98"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"SpdPnd98"},"content":" * Represents a Tab Switch Command","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"SpdPnd98"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"SpdPnd98"},"content":"public class TabSwitch {","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"SpdPnd98"},"content":"    private static final String DASHBOARD_ALIAS \u003d \"dashboard\";","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"SpdPnd98"},"content":"    private static final String CONTACTS_ALIAS \u003d \"contacts\";","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"mokdarren"},"content":"    private static final String DETAILS_ALIAS \u003d \"details\";","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"SpdPnd98"},"content":"    private static final String SCHEDULE_ALIAS \u003d \"schedule\";","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"SpdPnd98"},"content":"    private static final String TODOS_ALIAS \u003d \"todos\";","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"SpdPnd98"},"content":"    private static final String DOES_NOT_EXIST \u003d \" does not exist!\";","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"SpdPnd98"},"content":"    public enum Tab { //used to index tabs for TabPane","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"SpdPnd98"},"content":"        DASHBOARD(\"dashboardTab\", 0),","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"SpdPnd98"},"content":"        CONTACTS(\"contactsTab\", 1),","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"mokdarren"},"content":"        DETAILS(\"detailsTab\", 2),","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"mokdarren"},"content":"        SCHEDULE(\"scheduleTab\", 3),","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"mokdarren"},"content":"        TODOS(\"todosTab\", 4);","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"SpdPnd98"},"content":"        private final String label;","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"SpdPnd98"},"content":"        private final int index;","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"SpdPnd98"},"content":"        Tab(String tabName, int index) {","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"SpdPnd98"},"content":"            this.label \u003d tabName;","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"SpdPnd98"},"content":"            this.index \u003d index;","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"SpdPnd98"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"SpdPnd98"},"content":"        public String getLabel() {","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"SpdPnd98"},"content":"            return label;","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"SpdPnd98"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"SpdPnd98"},"content":"        public int getIndex() {","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"SpdPnd98"},"content":"            return index;","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"SpdPnd98"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"SpdPnd98"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"SpdPnd98"},"content":"        public String toString() {","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"SpdPnd98"},"content":"            switch (this.index) {","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"SpdPnd98"},"content":"            case 0:","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"SpdPnd98"},"content":"                return DASHBOARD_ALIAS;","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"SpdPnd98"},"content":"            case 1:","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"SpdPnd98"},"content":"                return CONTACTS_ALIAS;","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"SpdPnd98"},"content":"            case 3:","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"SpdPnd98"},"content":"                return SCHEDULE_ALIAS;","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"mokdarren"},"content":"            case 4:","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"SpdPnd98"},"content":"                return TODOS_ALIAS;","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"SpdPnd98"},"content":"            case 2:","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"mokdarren"},"content":"                return DETAILS_ALIAS;","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"SpdPnd98"},"content":"            default:","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"SpdPnd98"},"content":"                return DOES_NOT_EXIST;","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"SpdPnd98"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"SpdPnd98"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"SpdPnd98"},"content":"        /**","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"SpdPnd98"},"content":"         * Converts tab name into Tab enum","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"SpdPnd98"},"content":"         * @param tabName receivedName","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"SpdPnd98"},"content":"         * @return Tab enum","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"SpdPnd98"},"content":"         * @throws ParseException when TabId does not exist","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"SpdPnd98"},"content":"         */","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"SpdPnd98"},"content":"        public static Tab toEnum(String tabName) throws ParseException {","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"SpdPnd98"},"content":"            switch (tabName) {","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"SpdPnd98"},"content":"            case DASHBOARD_ALIAS:","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"SpdPnd98"},"content":"                return DASHBOARD;","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"SpdPnd98"},"content":"            case CONTACTS_ALIAS:","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"SpdPnd98"},"content":"                return CONTACTS;","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"SpdPnd98"},"content":"            case SCHEDULE_ALIAS:","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"SpdPnd98"},"content":"                return SCHEDULE;","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"SpdPnd98"},"content":"            case TODOS_ALIAS:","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"SpdPnd98"},"content":"                return TODOS;","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"mokdarren"},"content":"            case DETAILS_ALIAS:","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"mokdarren"},"content":"                return DETAILS;","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"SpdPnd98"},"content":"            default:","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"SpdPnd98"},"content":"                throw new ParseException(\"Tab does not exist!\");","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"SpdPnd98"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"SpdPnd98"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"SpdPnd98"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"SpdPnd98"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"SpdPnd98":73,"mokdarren":9}},{"path":"src/main/java/seedu/address/model/analytics/ClientAnalytics.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"whoisjustinngo"},"content":"package seedu.address.model.analytics;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"whoisjustinngo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"whoisjustinngo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"whoisjustinngo"},"content":"import java.time.temporal.IsoFields;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"whoisjustinngo"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"whoisjustinngo"},"content":"import javafx.collections.ListChangeListener;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"whoisjustinngo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"whoisjustinngo"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"whoisjustinngo"},"content":" * A class which tracks various fields in the list of contacts for display on the dashboard.","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"whoisjustinngo"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"whoisjustinngo"},"content":"public class ClientAnalytics {","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"whoisjustinngo"},"content":"    private final ReadOnlyAddressBook addressBook;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"whoisjustinngo"},"content":"    private final ObservableList\u003cPerson\u003e persons;","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"whoisjustinngo"},"content":"    private final TrackedValueList values;","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"whoisjustinngo"},"content":"     * Creates a new ClientAnalytics object that tracks various fields in the contacts for display on the dashboard.","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"whoisjustinngo"},"content":"    public ClientAnalytics(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"whoisjustinngo"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"whoisjustinngo"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"whoisjustinngo"},"content":"        this.persons \u003d addressBook.getPersonList();","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"mokdarren"},"content":"        this.values \u003d new TrackedValueList(Status.values()); // default is to track all values in status","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"whoisjustinngo"},"content":"        this.persons.addListener(new ListChangeListener\u003cPerson\u003e() { // listen for changes in contacts","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"whoisjustinngo"},"content":"            @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"whoisjustinngo"},"content":"            public void onChanged(Change\u003c? extends Person\u003e c) {","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"whoisjustinngo"},"content":"                System.out.println(\"change: \" + c);","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"whoisjustinngo"},"content":"                updateAnalytics();","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"whoisjustinngo"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"whoisjustinngo"},"content":"        });","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"whoisjustinngo"},"content":"        updateAnalytics(); // initialUpdate","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"whoisjustinngo"},"content":"    private void updateAnalytics() {","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"mokdarren"},"content":"        HashMap\u003cStatus, Integer\u003e counts \u003d new HashMap\u003cStatus, Integer\u003e();","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"whoisjustinngo"},"content":"        System.out.println(\"trying to update\");","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"whoisjustinngo"},"content":"        for (Person person: this.persons) {","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"mokdarren"},"content":"            if (person.getRelationship().value.equals(\"client\")) { // TODO update with client","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"mokdarren"},"content":"                LocalDateTime lastUpdated \u003d person.getLastUpdated();","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"mokdarren"},"content":"                Status status \u003d person.getStatus();","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"whoisjustinngo"},"content":"                // check if expired","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"whoisjustinngo"},"content":"                if (isInThisQuarter(lastUpdated)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"mokdarren"},"content":"                    if (!counts.containsKey(status)) {","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"mokdarren"},"content":"                        counts.put(status, 1);","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"whoisjustinngo"},"content":"                    } else {","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"mokdarren"},"content":"                        int currentValue \u003d counts.get(status);","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"mokdarren"},"content":"                        counts.put(status, currentValue + 1);","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"whoisjustinngo"},"content":"                    }","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"whoisjustinngo"},"content":"                }","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"whoisjustinngo"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"whoisjustinngo"},"content":"        values.update(counts);","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"mokdarren"},"content":"    public int getValueOfTrackedField(Status state) {","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"whoisjustinngo"},"content":"        return this.values.getValue(state);","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"whoisjustinngo"},"content":"    private boolean isInThisQuarter(LocalDateTime entry) {","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"whoisjustinngo"},"content":"        return entry.get(IsoFields.QUARTER_OF_YEAR) \u003d\u003d LocalDateTime.now().get(IsoFields.QUARTER_OF_YEAR)","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"whoisjustinngo"},"content":"                \u0026\u0026 entry.getYear() \u003d\u003d LocalDateTime.now().getYear();","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"whoisjustinngo"},"content":"    public ObservableList\u003cInteger\u003e getValues() {","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"whoisjustinngo"},"content":"        return this.values.asUnmodifiableList();","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"whoisjustinngo":65,"mokdarren":11}},{"path":"src/main/java/seedu/address/model/analytics/Quarter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"whoisjustinngo"},"content":"package seedu.address.model.analytics;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"whoisjustinngo"},"content":"public enum Quarter {","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"whoisjustinngo"},"content":"    Q1,","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"whoisjustinngo"},"content":"    Q2,","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"whoisjustinngo"},"content":"    Q3,","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"whoisjustinngo"},"content":"    Q4","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"whoisjustinngo":8}},{"path":"src/main/java/seedu/address/model/analytics/TrackedValueList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"whoisjustinngo"},"content":"package seedu.address.model.analytics;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"whoisjustinngo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"whoisjustinngo"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"whoisjustinngo"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"whoisjustinngo"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"whoisjustinngo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.model.analytics.exceptions.UntrackedFieldException;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"whoisjustinngo"},"content":"public class TrackedValueList {","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"whoisjustinngo"},"content":"    private final ObservableList\u003cInteger\u003e internalValueList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"whoisjustinngo"},"content":"    private final ObservableList\u003cInteger\u003e internalUnmodifiableValuesList \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"whoisjustinngo"},"content":"            FXCollections.unmodifiableObservableList(internalValueList);","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"mokdarren"},"content":"    private final HashMap\u003cStatus, Integer\u003e statusToIndexMappings;","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"mokdarren"},"content":"    private final HashSet\u003cStatus\u003e trackedFields;","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"mokdarren"},"content":"    TrackedValueList(Status[] toTrack) {","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"mokdarren"},"content":"        statusToIndexMappings \u003d new HashMap\u003cStatus, Integer\u003e();","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"mokdarren"},"content":"        this.trackedFields \u003d new HashSet\u003cStatus\u003e();","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"whoisjustinngo"},"content":"        int index \u003d 0;","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"mokdarren"},"content":"        for (Status state: toTrack) {","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"whoisjustinngo"},"content":"            requireNonNull(state);","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"whoisjustinngo"},"content":"            statusToIndexMappings.put(state, index);","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"whoisjustinngo"},"content":"            internalValueList.add(0);","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"whoisjustinngo"},"content":"            index++;","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"whoisjustinngo"},"content":"            this.trackedFields.add(state);","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"mokdarren"},"content":"    private int getIndex(Status status) {","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"mokdarren"},"content":"        if (this.statusToIndexMappings.containsKey(status)) {","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"mokdarren"},"content":"            return this.statusToIndexMappings.get(status);","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"whoisjustinngo"},"content":"        } else {","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"whoisjustinngo"},"content":"            throw new UntrackedFieldException();","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"mokdarren"},"content":"    public int getValue(Status status) {","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"mokdarren"},"content":"        requireNonNull(status);","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"mokdarren"},"content":"        int index \u003d getIndex(status);","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"whoisjustinngo"},"content":"        return this.internalValueList.get(index);","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"whoisjustinngo"},"content":"    public ObservableList\u003cInteger\u003e asUnmodifiableList() {","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"whoisjustinngo"},"content":"        return this.internalUnmodifiableValuesList;","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"whoisjustinngo"},"content":"     * Updates the tracked value list with values from the provided hashmap.","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"whoisjustinngo"},"content":"     * @param counts Counts of the number of clients having each ClientState.","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"mokdarren"},"content":"    public void update(HashMap\u003cStatus, Integer\u003e counts) {","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"mokdarren"},"content":"        for (Status status: counts.keySet()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"mokdarren"},"content":"            if (this.trackedFields.contains(status)) {","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"mokdarren"},"content":"                int index \u003d this.getIndex(status);","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"mokdarren"},"content":"                int value \u003d counts.get(status);","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"whoisjustinngo"},"content":"                this.internalValueList.set(index, value);","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"whoisjustinngo"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"whoisjustinngo":48,"mokdarren":18}},{"path":"src/main/java/seedu/address/model/analytics/exceptions/UntrackedFieldException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"whoisjustinngo"},"content":"package seedu.address.model.analytics.exceptions;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"whoisjustinngo"},"content":"public class UntrackedFieldException extends RuntimeException {","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"whoisjustinngo"},"content":"    public UntrackedFieldException() {","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"whoisjustinngo"},"content":"        super(\"This field is untracked\");","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"whoisjustinngo":8}},{"path":"src/main/java/seedu/address/model/customGoal/CustomGoal.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"whoisjustinngo"},"content":"package seedu.address.model.customGoal;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"whoisjustinngo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"whoisjustinngo"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"whoisjustinngo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"whoisjustinngo"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"whoisjustinngo"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"whoisjustinngo"},"content":" * Represents a custom goal which is to be displayed on the dashboard.","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"whoisjustinngo"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"whoisjustinngo"},"content":"public class CustomGoal {","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"whoisjustinngo"},"content":"    private static final String TIME_FORMAT \u003d \"HH:mm\";","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"whoisjustinngo"},"content":"    private static final String DATE_FORMAT \u003d \"E, dd MMM yyyy\";","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"whoisjustinngo"},"content":"    private final String goalDescription;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"whoisjustinngo"},"content":"    private final float goal;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"whoisjustinngo"},"content":"    private final float progress;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"whoisjustinngo"},"content":"    private final LocalDate dateAdded;","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"whoisjustinngo"},"content":"    private final LocalDate endDate;","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"whoisjustinngo"},"content":"    private final LocalTime timeAdded;","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"whoisjustinngo"},"content":"    private final LocalTime endTime;","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"whoisjustinngo"},"content":"     * Creates a new custom goal.","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"whoisjustinngo"},"content":"     * @param description The description of the goal.","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"whoisjustinngo"},"content":"     * @param goal The value of the goal, i.e. the value the user is aiming to achieve.","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"whoisjustinngo"},"content":"     * @param endDate The date by which to complete the goal.","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"whoisjustinngo"},"content":"     * @param endTime The time by which to complete the goal.","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"whoisjustinngo"},"content":"    public CustomGoal(String description, float goal, LocalDate endDate, LocalTime endTime) {","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"whoisjustinngo"},"content":"        this.goalDescription \u003d description.trim();","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"whoisjustinngo"},"content":"        this.goal \u003d goal;","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"whoisjustinngo"},"content":"        this.progress \u003d 0;","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"whoisjustinngo"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"whoisjustinngo"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"whoisjustinngo"},"content":"        this.dateAdded \u003d LocalDate.now();","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"whoisjustinngo"},"content":"        this.timeAdded \u003d LocalTime.now();","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"whoisjustinngo"},"content":"     * Works just like {@link CustomGoal#CustomGoal(java.lang.String, float, java.time.LocalDate, java.time.LocalTime)}","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"whoisjustinngo"},"content":"     * except this takes additional \u003ccode\u003eString\u003c/code\u003e parameters specifying the date and time the custom goal was","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"whoisjustinngo"},"content":"     * created.","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"whoisjustinngo"},"content":"     * @param dateAdded The date the custom goal was created.","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"whoisjustinngo"},"content":"     * @param timeAdded The time the custom goal was created.","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"whoisjustinngo"},"content":"    public CustomGoal(String goalDescription, float goal, float progress, String dateAdded, String timeAdded,","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"whoisjustinngo"},"content":"                      String endDate,","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"whoisjustinngo"},"content":"                      String endTime) {","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"whoisjustinngo"},"content":"        this.goalDescription \u003d goalDescription.trim();","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"whoisjustinngo"},"content":"        this.goal \u003d goal;","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"whoisjustinngo"},"content":"        this.progress \u003d Math.max(progress, 0);","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"whoisjustinngo"},"content":"        this.dateAdded \u003d LocalDate.parse(dateAdded, DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"whoisjustinngo"},"content":"        this.timeAdded \u003d LocalTime.parse(timeAdded, DateTimeFormatter.ofPattern(TIME_FORMAT));","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"whoisjustinngo"},"content":"        if (endDate.equals(\"-\")) {","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"whoisjustinngo"},"content":"            this.endDate \u003d LocalDate.MAX;","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"whoisjustinngo"},"content":"        } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"whoisjustinngo"},"content":"            this.endDate \u003d LocalDate.parse(endDate, DateTimeFormatter.ofPattern(DATE_FORMAT));;","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"whoisjustinngo"},"content":"        if (endTime.equals(\"-\")) {","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"whoisjustinngo"},"content":"            this.endTime \u003d LocalTime.MAX;","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"whoisjustinngo"},"content":"        } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"whoisjustinngo"},"content":"            this.endTime \u003d LocalTime.parse(endTime, DateTimeFormatter.ofPattern(TIME_FORMAT));","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"whoisjustinngo"},"content":"    private CustomGoal(CustomGoal oldGoal, float valueToUpdateBy) {","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"whoisjustinngo"},"content":"        this.goalDescription \u003d oldGoal.getDescription();","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"whoisjustinngo"},"content":"        this.goal \u003d oldGoal.getGoal();","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"whoisjustinngo"},"content":"        this.progress \u003d Math.max((oldGoal.getProgress() + valueToUpdateBy), 0);","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"whoisjustinngo"},"content":"        this.dateAdded \u003d oldGoal.dateAdded;","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"whoisjustinngo"},"content":"        this.timeAdded \u003d oldGoal.timeAdded;","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"whoisjustinngo"},"content":"        this.endDate \u003d oldGoal.endDate;","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"whoisjustinngo"},"content":"        this.endTime \u003d oldGoal.endTime;","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"whoisjustinngo"},"content":"    public CustomGoal updateProgress(float valueToUpdateBy) {","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"whoisjustinngo"},"content":"        return new CustomGoal(this, valueToUpdateBy);","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"whoisjustinngo"},"content":"    public boolean isComplete() {","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"whoisjustinngo"},"content":"        return this.progress \u003e\u003d this.goal;","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"whoisjustinngo"},"content":"     * Compares this CustomGoal with another object to check if they are the same.","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"whoisjustinngo"},"content":"     * Two CustomGoals are considered equal if they have the same goalDescription, goal, endDate, and endTime.","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"whoisjustinngo"},"content":"     * @param other The other object to compare this to.","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"whoisjustinngo"},"content":"     * @return Whether the other object is equal to this CustomGoal.","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"whoisjustinngo"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"whoisjustinngo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"whoisjustinngo"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"whoisjustinngo"},"content":"            return true;","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"whoisjustinngo"},"content":"        if (!(other instanceof CustomGoal)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"whoisjustinngo"},"content":"            return false;","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"whoisjustinngo"},"content":"        CustomGoal otherGoal \u003d (CustomGoal) other;","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"whoisjustinngo"},"content":"        return this.goalDescription.equals(otherGoal.goalDescription)","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"whoisjustinngo"},"content":"                \u0026\u0026 this.goal \u003d\u003d otherGoal.goal","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"whoisjustinngo"},"content":"                \u0026\u0026 this.endDate.isEqual(otherGoal.endDate)","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"whoisjustinngo"},"content":"                \u0026\u0026 this.endTime.equals(otherGoal.endTime);","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"whoisjustinngo"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"whoisjustinngo"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"whoisjustinngo"},"content":"        return Objects.hash(goalDescription, goal, dateAdded, endDate);","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":114,"author":{"gitId":"whoisjustinngo"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":115,"author":{"gitId":"whoisjustinngo"},"content":"    public String toString() { // TODO update to a better format","lastModifiedDate":"2021-10-23"},{"lineNumber":116,"author":{"gitId":"whoisjustinngo"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"whoisjustinngo"},"content":"        sb.append(this.goalDescription);","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"whoisjustinngo"},"content":"        if (!this.endDate.isEqual(LocalDate.MAX)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"whoisjustinngo"},"content":"            sb.append(\" by \");","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"whoisjustinngo"},"content":"            sb.append(this.getEndDateValue());","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"whoisjustinngo"},"content":"        if (!this.endTime.equals(LocalTime.MAX)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"whoisjustinngo"},"content":"            sb.append(\" \");","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"whoisjustinngo"},"content":"            sb.append(this.getEndTimeValue());","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"whoisjustinngo"},"content":"        sb.append(\" - progress: \");","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"whoisjustinngo"},"content":"        sb.append(this.getProgressValue());","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"whoisjustinngo"},"content":"        sb.append(\"/\");","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"whoisjustinngo"},"content":"        sb.append(this.getGoalValue());","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"whoisjustinngo"},"content":"        return sb.toString();","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"whoisjustinngo"},"content":"     * Converts the provided float to a string while truncating all trailing zeroes.","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"whoisjustinngo"},"content":"     * @param f The float to convert and truncate.","lastModifiedDate":"2021-10-25"},{"lineNumber":136,"author":{"gitId":"whoisjustinngo"},"content":"     * @return The string representation of the given float with the trailing zeroes truncated.ß","lastModifiedDate":"2021-10-25"},{"lineNumber":137,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":138,"author":{"gitId":"whoisjustinngo"},"content":"    public String formatFloat(float f) {","lastModifiedDate":"2021-10-25"},{"lineNumber":139,"author":{"gitId":"whoisjustinngo"},"content":"        if (f \u003d\u003d (long) f) {","lastModifiedDate":"2021-10-25"},{"lineNumber":140,"author":{"gitId":"whoisjustinngo"},"content":"            return String.format(\"%d\", (long) f);","lastModifiedDate":"2021-10-25"},{"lineNumber":141,"author":{"gitId":"whoisjustinngo"},"content":"        } else {","lastModifiedDate":"2021-10-25"},{"lineNumber":142,"author":{"gitId":"whoisjustinngo"},"content":"            return String.format(\"%s\", f);","lastModifiedDate":"2021-10-25"},{"lineNumber":143,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":144,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":145,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"whoisjustinngo"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"whoisjustinngo"},"content":"        return this.goalDescription;","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":150,"author":{"gitId":"whoisjustinngo"},"content":"    public float getProgress() {","lastModifiedDate":"2021-10-24"},{"lineNumber":151,"author":{"gitId":"whoisjustinngo"},"content":"        return this.progress;","lastModifiedDate":"2021-10-24"},{"lineNumber":152,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":153,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":154,"author":{"gitId":"whoisjustinngo"},"content":"    public float getGoal() {","lastModifiedDate":"2021-10-24"},{"lineNumber":155,"author":{"gitId":"whoisjustinngo"},"content":"        return this.goal;","lastModifiedDate":"2021-10-24"},{"lineNumber":156,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":157,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":158,"author":{"gitId":"whoisjustinngo"},"content":"    public String getEndDateValue() {","lastModifiedDate":"2021-10-24"},{"lineNumber":159,"author":{"gitId":"whoisjustinngo"},"content":"        return this.endDate.isEqual(LocalDate.MAX)","lastModifiedDate":"2021-10-25"},{"lineNumber":160,"author":{"gitId":"whoisjustinngo"},"content":"                ? \"-\" : this.endDate.format(DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2021-10-25"},{"lineNumber":161,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":162,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":163,"author":{"gitId":"whoisjustinngo"},"content":"    public String getEndTimeValue() {","lastModifiedDate":"2021-10-24"},{"lineNumber":164,"author":{"gitId":"whoisjustinngo"},"content":"        return this.endTime.equals(LocalTime.MAX) ? \"-\" : this.endTime.format(DateTimeFormatter.ofPattern(TIME_FORMAT));","lastModifiedDate":"2021-10-25"},{"lineNumber":165,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":166,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":167,"author":{"gitId":"whoisjustinngo"},"content":"    public String getDateAddedValue() {","lastModifiedDate":"2021-10-24"},{"lineNumber":168,"author":{"gitId":"whoisjustinngo"},"content":"        return this.dateAdded.format(DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2021-10-24"},{"lineNumber":169,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":170,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":171,"author":{"gitId":"whoisjustinngo"},"content":"    public String getTimeAddedValue() {","lastModifiedDate":"2021-10-24"},{"lineNumber":172,"author":{"gitId":"whoisjustinngo"},"content":"        return this.timeAdded.format(DateTimeFormatter.ofPattern(TIME_FORMAT));","lastModifiedDate":"2021-10-24"},{"lineNumber":173,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":174,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":175,"author":{"gitId":"whoisjustinngo"},"content":"    public String getProgressValue() {","lastModifiedDate":"2021-10-25"},{"lineNumber":176,"author":{"gitId":"whoisjustinngo"},"content":"        return formatFloat(this.progress);","lastModifiedDate":"2021-10-25"},{"lineNumber":177,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":178,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":179,"author":{"gitId":"whoisjustinngo"},"content":"    public String getGoalValue() {","lastModifiedDate":"2021-10-25"},{"lineNumber":180,"author":{"gitId":"whoisjustinngo"},"content":"        return formatFloat(this.goal);","lastModifiedDate":"2021-10-25"},{"lineNumber":181,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":182,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":183,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":184,"author":{"gitId":"whoisjustinngo"},"content":"     * Checks if the current custom goal is overdue","lastModifiedDate":"2021-10-27"},{"lineNumber":185,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":186,"author":{"gitId":"whoisjustinngo"},"content":"    public boolean isOverdue() {","lastModifiedDate":"2021-10-27"},{"lineNumber":187,"author":{"gitId":"whoisjustinngo"},"content":"        if (LocalDate.now().isEqual(this.endDate)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":188,"author":{"gitId":"whoisjustinngo"},"content":"            return LocalTime.now().isAfter(this.endTime);","lastModifiedDate":"2021-10-27"},{"lineNumber":189,"author":{"gitId":"whoisjustinngo"},"content":"        } else {","lastModifiedDate":"2021-10-27"},{"lineNumber":190,"author":{"gitId":"whoisjustinngo"},"content":"            return LocalDate.now().isAfter(this.endDate);","lastModifiedDate":"2021-10-27"},{"lineNumber":191,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":192,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":193,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"whoisjustinngo":193}},{"path":"src/main/java/seedu/address/model/customGoal/UniqueCustomGoalList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"whoisjustinngo"},"content":"package seedu.address.model.customGoal;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"whoisjustinngo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"whoisjustinngo"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"whoisjustinngo"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"whoisjustinngo"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"whoisjustinngo"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"whoisjustinngo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.model.customGoal.exceptions.DuplicateCustomGoalException;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.model.customGoal.exceptions.NegativeProgressException;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"whoisjustinngo"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"whoisjustinngo"},"content":" * A list of unique non-null CustomGoals which supports basic list operations.","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"whoisjustinngo"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"whoisjustinngo"},"content":"public class UniqueCustomGoalList implements Iterable\u003cCustomGoal\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"whoisjustinngo"},"content":"    private final ObservableList\u003cCustomGoal\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"whoisjustinngo"},"content":"    private final ObservableList\u003cCustomGoal\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"whoisjustinngo"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"whoisjustinngo"},"content":"     * Returns true if the list contains a custom goal equal to the one specified in the argument.","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"whoisjustinngo"},"content":"     * @see CustomGoal#equals(java.lang.Object)","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"whoisjustinngo"},"content":"    public boolean contains(CustomGoal toCheck) {","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"whoisjustinngo"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"whoisjustinngo"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"whoisjustinngo"},"content":"     * Adds a new unique CustomGoal to the list.","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"whoisjustinngo"},"content":"    public void add(CustomGoal toAdd) {","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"whoisjustinngo"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"whoisjustinngo"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"whoisjustinngo"},"content":"            throw new DuplicateCustomGoalException();","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"whoisjustinngo"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"whoisjustinngo"},"content":"     * Increases the progress of the \u003ccode\u003eCustomGoal\u003c/code\u003e corresponding to the specified \u003ccode\u003eIndex\u003c/code\u003e by the","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"whoisjustinngo"},"content":"     * specified value.","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"whoisjustinngo"},"content":"     * @param goalToUpdate The \u003ccode\u003eIndex\u003c/code\u003e of the desired \u003ccode\u003eCustomGoal\u003c/code\u003e.","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"whoisjustinngo"},"content":"     * @param valueToUpdateBy The value to update the progress of the specified \u003ccode\u003eCustomGoal\u003c/code\u003e by.","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"whoisjustinngo"},"content":"    public void update(Index goalToUpdate, float valueToUpdateBy) {","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"whoisjustinngo"},"content":"        requireNonNull(goalToUpdate);","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"whoisjustinngo"},"content":"        CustomGoal oldGoal \u003d internalList.get(goalToUpdate.getZeroBased());","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"whoisjustinngo"},"content":"        float oldProgress \u003d oldGoal.getProgress();","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"whoisjustinngo"},"content":"        CustomGoal updatedGoal \u003d oldGoal.updateProgress(valueToUpdateBy);","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"whoisjustinngo"},"content":"        internalList.remove(goalToUpdate.getZeroBased());","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"whoisjustinngo"},"content":"        internalList.add(goalToUpdate.getZeroBased(), updatedGoal);","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"whoisjustinngo"},"content":"        if (oldProgress + valueToUpdateBy \u003c 0) {","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"whoisjustinngo"},"content":"            throw new NegativeProgressException();","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"whoisjustinngo"},"content":"     * Deletes the \u003ccode\u003eCustomGoal\u003c/code\u003e corresponding to the specified \u003ccode\u003eIndex\u003c/code\u003e from the list.","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"whoisjustinngo"},"content":"     * @param goalToDelete The \u003ccode\u003eIndex\u003c/code\u003e of the desired \u003ccode\u003eCustomGoal\u003c/code\u003e to be deleted (1-based).","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"whoisjustinngo"},"content":"    public void delete(Index goalToDelete) {","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"whoisjustinngo"},"content":"        requireNonNull(goalToDelete);","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"whoisjustinngo"},"content":"        internalList.remove(goalToDelete.getZeroBased());","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"whoisjustinngo"},"content":"     * Replaces the contents of this list with {@code customGoals}.","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"whoisjustinngo"},"content":"     * {@code customGoals} must not contain duplicates.","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"whoisjustinngo"},"content":"    public void setCustomGoals(List\u003cCustomGoal\u003e customGoals) {","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"whoisjustinngo"},"content":"        requireAllNonNull(customGoals);","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"whoisjustinngo"},"content":"        if (!customGoalsAreUnique(customGoals)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"whoisjustinngo"},"content":"            throw new DuplicateCustomGoalException();","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"whoisjustinngo"},"content":"        internalList.setAll(customGoals);","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"whoisjustinngo"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"whoisjustinngo"},"content":"    public ObservableList\u003cCustomGoal\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"whoisjustinngo"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"whoisjustinngo"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"whoisjustinngo"},"content":"    public Iterator\u003cCustomGoal\u003e iterator() {","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"whoisjustinngo"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"whoisjustinngo"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"whoisjustinngo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"whoisjustinngo"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"whoisjustinngo"},"content":"                || (other instanceof UniqueCustomGoalList // instanceof handles nulls","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"whoisjustinngo"},"content":"                        \u0026\u0026 internalList.equals(((UniqueCustomGoalList) other).internalList));","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"whoisjustinngo"},"content":"     * Returns true if {@code customGoals} contains only unique customGoals.","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"whoisjustinngo"},"content":"    private boolean customGoalsAreUnique(List\u003cCustomGoal\u003e customGoals) {","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"whoisjustinngo"},"content":"        for (int i \u003d 0; i \u003c customGoals.size() - 1; i++) {","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"whoisjustinngo"},"content":"            for (int j \u003d i + 1; j \u003c customGoals.size(); j++) {","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"whoisjustinngo"},"content":"                if (customGoals.get(i).equals(customGoals.get(j))) {","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"whoisjustinngo"},"content":"                    return false;","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"whoisjustinngo"},"content":"                }","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"whoisjustinngo"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"whoisjustinngo"},"content":"        return true;","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"whoisjustinngo":116}},{"path":"src/main/java/seedu/address/model/customGoal/exceptions/DuplicateCustomGoalException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"whoisjustinngo"},"content":"package seedu.address.model.customGoal.exceptions;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"whoisjustinngo"},"content":"public class DuplicateCustomGoalException extends RuntimeException {","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"whoisjustinngo"},"content":"    public DuplicateCustomGoalException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"whoisjustinngo"},"content":"        super(\"This goal already exists!\");","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"whoisjustinngo":7}},{"path":"src/main/java/seedu/address/model/customGoal/exceptions/NegativeProgressException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"whoisjustinngo"},"content":"package seedu.address.model.customGoal.exceptions;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"whoisjustinngo"},"content":"public class NegativeProgressException extends RuntimeException {","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"whoisjustinngo"},"content":"    public NegativeProgressException() {","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"whoisjustinngo"},"content":"        super(\"Cannot set progress to negative value!\");","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"whoisjustinngo":7}},{"path":"src/main/java/seedu/address/model/event/DayDeadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.event.exceptions.EmptyEventException;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":" * Daily Deadlines.","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"public class DayDeadline {","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"    private final ArrayList\u003cDeadline\u003e dailyDeadline;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"    public DayDeadline() {","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"        this.dailyDeadline \u003d new ArrayList\u003cDeadline\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"    public DayDeadline(ArrayList\u003cDeadline\u003e dailyDeadline) {","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"        this.dailyDeadline \u003d dailyDeadline;","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"     * Adds a deadline to the current day.","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"     * @param deadline {@code Deadline} to be added","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"     * @return {@code String} message stating that deadline is added.","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"    public String addDeadline(Deadline deadline) {","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"        this.dailyDeadline.add(deadline);","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"        return \"Deadline added.\";","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"     * Deletes {@code Deadline} from the current day","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"     * @param deadline the {@code Deadline} to be deleted","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"     * @return {@code String} message stating if the deadline is removed.","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"    public String deleteDeadline(Deadline deadline) {","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"        String deadlineDescription \u003d deadline.getDescription();","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"rickyaandrew"},"content":"        boolean isRemoved \u003d this.dailyDeadline","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"rickyaandrew"},"content":"                .removeIf(currDeadline -\u003e (currDeadline.getDescription().equals(deadlineDescription)));","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"rickyaandrew"},"content":"        if (!isRemoved) {","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"rickyaandrew"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"rickyaandrew"},"content":"        return deadline.toString() + \" is removed.\";","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"rickyaandrew"},"content":"     * Views the {@code Deadline} for the current day.","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"rickyaandrew"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"rickyaandrew"},"content":"     * @return {@code String} of all the {@code Deadline} for the current day.","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"rickyaandrew"},"content":"    public String viewDeadlines() {","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"rickyaandrew"},"content":"        if (this.dailyDeadline.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"rickyaandrew"},"content":"            throw new EmptyEventException();","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"rickyaandrew"},"content":"        String dayPlans \u003d \"\";","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"rickyaandrew"},"content":"        for (int i \u003d 0; i \u003c this.dailyDeadline.size(); i++) {","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"rickyaandrew"},"content":"            dayPlans +\u003d this.dailyDeadline.get(i).toString() + \"\\n\";","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"rickyaandrew"},"content":"        return dayPlans;","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"rickyaandrew"},"content":"     * Checks if there is any {@code Deadline} on the current day.","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"rickyaandrew"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"rickyaandrew"},"content":"     * @return boolean if there is a {@code Deadline}.","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"rickyaandrew"},"content":"    public boolean hasDeadline() {","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"rickyaandrew"},"content":"        return this.dailyDeadline.size() !\u003d 0;","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"rickyaandrew":74}},{"path":"src/main/java/seedu/address/model/event/DayPlan.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.event.exceptions.EmptyEventException;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.event.exceptions.EventClashException;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":" * Class which saves and manages all the {@code Schedule}. Makes sure that no","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":" * {@code Schedule} clashes one another.","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"public class DayPlan {","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"    private final ArrayList\u003cSchedule\u003e scheduledTasks;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"    public DayPlan() {","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"        this.scheduledTasks \u003d new ArrayList\u003cSchedule\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"    public DayPlan(ArrayList\u003cSchedule\u003e scheduledTasks) {","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"        this.scheduledTasks \u003d scheduledTasks;","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"     * Adds the current {@code Schedule} into the {@code DayPlan}.","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"     * @param currTask the {@code Schedule} which will be added into this","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"     *                 {@code DayPlan}.","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"     * @return a message stating if the {@code Schedule} is added into this","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"     *         {@code DayPlan}.","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"    public String addSchedule(Schedule currTask) {","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"        if (this.isClash(currTask)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"            throw new EventClashException();","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"        this.scheduledTasks.add(currTask);","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"        return currTask.toString() + \" is added into the timetable\";","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"rickyaandrew"},"content":"     * Deletes the current {@code Schedule} from the {@code DayPlan}.","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"rickyaandrew"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"rickyaandrew"},"content":"     * @param currTask the {@code Schedule} which will be deleted from this","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"rickyaandrew"},"content":"     *                 {@code DayPlan}.","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"rickyaandrew"},"content":"     * @return a message stating if the {@code Schedule} is deleted from this","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"rickyaandrew"},"content":"     *         {@code DayPlan}.","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"rickyaandrew"},"content":"    public String deleteSchedule(Schedule currTask) {","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"rickyaandrew"},"content":"        int currTimeFrom \u003d currTask.getTimeFrom();","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"rickyaandrew"},"content":"        int currTimeTo \u003d currTask.getTimeTo();","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"rickyaandrew"},"content":"        boolean isRemoved \u003d scheduledTasks","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"rickyaandrew"},"content":"                .removeIf(task -\u003e (task.getTimeFrom() \u003d\u003d currTimeFrom \u0026\u0026 task.getTimeTo() \u003d\u003d currTimeTo));","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"rickyaandrew"},"content":"        if (!isRemoved) {","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"rickyaandrew"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"rickyaandrew"},"content":"        return currTask.toString() + \" is removed from timetable.\";","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"rickyaandrew"},"content":"     * Views all the {@code Schedule} which are already added into this","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"rickyaandrew"},"content":"     * {@code DayPlan}.","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"rickyaandrew"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"rickyaandrew"},"content":"     * @return all the {@code Schedule} which are already in this {@code DayPlan}.","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"rickyaandrew"},"content":"    public String viewDayPlan() {","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"rickyaandrew"},"content":"        if (this.scheduledTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"rickyaandrew"},"content":"            throw new EmptyEventException();","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"rickyaandrew"},"content":"        this.scheduledTasks.sort(getComparatorEarlyToLate());","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"rickyaandrew"},"content":"        String dayPlans \u003d \"\";","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"rickyaandrew"},"content":"        for (int i \u003d 0; i \u003c this.scheduledTasks.size(); i++) {","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"rickyaandrew"},"content":"            dayPlans +\u003d this.scheduledTasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"rickyaandrew"},"content":"        return dayPlans;","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"rickyaandrew"},"content":"     * Checks if the current {@code Schedule} clashes with any {@code Schedule}","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"rickyaandrew"},"content":"     * which are already added in the {@code DayPlan}.","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"rickyaandrew"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"rickyaandrew"},"content":"     * @param currTask is the {@code Schedule} which will be checked if clash","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"rickyaandrew"},"content":"     *                 happens.","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"rickyaandrew"},"content":"     * @return boolean, true if there is a clash in {@code Timetable}.","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"rickyaandrew"},"content":"    public boolean isClash(Schedule currTask) {","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"rickyaandrew"},"content":"        int currTimeFrom \u003d currTask.getTimeFrom();","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"rickyaandrew"},"content":"        int currTimeTo \u003d currTask.getTimeTo();","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"rickyaandrew"},"content":"        ArrayList\u003cSchedule\u003e clashList \u003d new ArrayList\u003cSchedule\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"rickyaandrew"},"content":"        this.scheduledTasks.stream()","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"rickyaandrew"},"content":"                .filter(task -\u003e (currTimeFrom \u003e task.getTimeFrom() \u0026\u0026 currTimeFrom \u003c task.getTimeTo())","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"rickyaandrew"},"content":"                        || (currTimeTo \u003e task.getTimeFrom() \u0026\u0026 currTimeTo \u003c task.getTimeTo())","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"rickyaandrew"},"content":"                        || (task.getTimeFrom() \u003d\u003d currTimeFrom) || (task.getTimeTo() \u003d\u003d currTimeTo))","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"rickyaandrew"},"content":"                .forEach(task -\u003e clashList.add(task));","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"rickyaandrew"},"content":"        return clashList.size() !\u003d 0;","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"rickyaandrew"},"content":"     * Checks if there is any {@code Schedule} in this {@code DayPlan}.","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"rickyaandrew"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"rickyaandrew"},"content":"     * @return true is there is a {@code Schedule} in this {@code DayPlan}.","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"rickyaandrew"},"content":"    public boolean hasSchedule() {","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"rickyaandrew"},"content":"        return this.scheduledTasks.size() !\u003d 0;","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"rickyaandrew"},"content":"    private Comparator\u003cSchedule\u003e getComparatorEarlyToLate() {","lastModifiedDate":"2021-10-09"},{"lineNumber":111,"author":{"gitId":"rickyaandrew"},"content":"        return new Comparator\u003cSchedule\u003e() {","lastModifiedDate":"2021-10-09"},{"lineNumber":112,"author":{"gitId":"rickyaandrew"},"content":"            @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":113,"author":{"gitId":"rickyaandrew"},"content":"            public int compare(Schedule firstTask, Schedule secondTask) {","lastModifiedDate":"2021-10-09"},{"lineNumber":114,"author":{"gitId":"rickyaandrew"},"content":"                return (firstTask.getTimeFrom() \u003e secondTask.getTimeFrom()) ? 1 : -1;","lastModifiedDate":"2021-10-09"},{"lineNumber":115,"author":{"gitId":"rickyaandrew"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":116,"author":{"gitId":"rickyaandrew"},"content":"        };","lastModifiedDate":"2021-10-09"},{"lineNumber":117,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":118,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"rickyaandrew":118}},{"path":"src/main/java/seedu/address/model/event/Deadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":" * A Deadline Event","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"public class Deadline extends Event\u003cDeadline\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"    private final LocalDate taskDate;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"     * Primary Constructor for Deadline.","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"     * @param description is the description for this {@code Deadline}.","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"     * @param date        is this {@code Deadline}\u0027s date.","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"     * @param isDone      determine whether this {@code Deadline} is completed or","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"     *                    not.","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"    public Deadline(String description, String date, boolean isDone) {","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"        super(description, date, isDone);","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"        this.taskDate \u003d LocalDate.of(Integer.parseInt(date.split(\"-\")[2]), Integer.parseInt(date.split(\"-\")[1]),","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"                Integer.parseInt(date.split(\"-\")[0]));","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"    public LocalDate getTaskDate() {","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"        return this.taskDate;","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"    public String toString() {","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"        return String.format(\"%s by %s\", this.getDescription(), this.getDate());","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"rickyaandrew":37}},{"path":"src/main/java/seedu/address/model/event/DeadlineTable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"import java.util.TreeMap;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.event.exceptions.EmptyEventException;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":" * A table for the {@code Deadline}.","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"public class DeadlineTable extends Timeable\u003cDeadline\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"    private final HashMap\u003cString, DayDeadline\u003e deadlineTableHash;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"     * Primary Constructor.","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"    public DeadlineTable() {","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"        this.deadlineTableHash \u003d new HashMap\u003cString, DayDeadline\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"    public String add(Deadline deadline) {","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"        if (this.deadlineTableHash.get(deadline.getDate()) \u003d\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"            DayDeadline dayDeadline \u003d new DayDeadline();","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"            dayDeadline.addDeadline(deadline);","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"            this.deadlineTableHash.put(deadline.getDate(), dayDeadline);","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"            return \"Task added to schedule\";","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"        return this.deadlineTableHash.get(deadline.getDate()).addDeadline(deadline);","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"    public String delete(Deadline deadline) {","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"        String UiMessage \u003d this.deadlineTableHash.get(deadline.getDate()).deleteDeadline(deadline);","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"        if (!this.deadlineTableHash.get(deadline.getDate()).hasDeadline()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"            this.deadlineTableHash.remove(deadline.getDate());","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"        return UiMessage;","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"rickyaandrew"},"content":"    public String view() {","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"rickyaandrew"},"content":"        if (this.deadlineTableHash.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"rickyaandrew"},"content":"            throw new EmptyEventException();","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"rickyaandrew"},"content":"        Map\u003cString, DayDeadline\u003e sortedMap \u003d new TreeMap\u003c\u003e(this.getComparator());","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"rickyaandrew"},"content":"        sortedMap.putAll(this.deadlineTableHash);","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"rickyaandrew"},"content":"        String allScheduledTasks \u003d \"\";","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"rickyaandrew"},"content":"        Iterator\u003cString\u003e activeDates \u003d sortedMap.keySet().iterator();","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"rickyaandrew"},"content":"        while (activeDates.hasNext()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"rickyaandrew"},"content":"            String currDate \u003d activeDates.next();","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"rickyaandrew"},"content":"            allScheduledTasks +\u003d currDate + \"\\n\" + this.deadlineTableHash.get(currDate).viewDeadlines();","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"rickyaandrew"},"content":"        return allScheduledTasks;","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"rickyaandrew":59}},{"path":"src/main/java/seedu/address/model/event/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"abstract class Event\u003cT\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"    protected final String description;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"    protected final String date;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"    protected final boolean isDone;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"    protected Event(String description, String date, boolean isDone) {","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"        requireNonNull(description);","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"        String dateCopy \u003d date;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"        if (dateCopy.contains(\"/\")) {","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"            dateCopy \u003d dateCopy.replace(\"/\", \"-\");","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"        this.date \u003d dateCopy;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"        return this.description;","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"    public String getDate() {","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"        return this.date;","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"        return this.isDone;","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"rickyaandrew":33}},{"path":"src/main/java/seedu/address/model/event/Schedule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.event.exceptions.InvalidTimeException;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"public class Schedule extends Event\u003cSchedule\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"    public static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"    public static final String ERROR_MSG_LETTERS_IN_TIME \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"            \"Please provide a proper time formatting between 0000 - 2359\";","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"    public static final String ERROR_MSG_INVALID_TIME_RANGE \u003d \"Please provide a proper time range between 0000 - 2359.\";","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"    public static final String ERROR_MSG_INVALID_TIME_SQEUENCE \u003d \"Time \u003cfrom\u003e cannot be greater than time \u003cto\u003e.\";","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"    private final LocalDateTime taskDateTimeFrom;","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"    private final LocalDateTime taskDateTimeTo;","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"    private final int timeFrom;","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"    private final int timeTo;","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"    private final String recurrType;","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"    private final String recurrDate;","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"    private final LocalDateTime recurrDateTo;","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"     * Priamry Constructor","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"     * @param description description for this {@code Schedule}.","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"     * @param date        date for this {@code Schedule}.","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"     * @param timeFrom    start time for this {@code Schedule}.","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"     * @param timeTo      end time for this {@code Schedule}.","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"     * @param isDone      if this {@code Schedule} is completed.","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"    public Schedule(String description, String date, String timeFrom, String timeTo, boolean isDone, Set\u003cTag\u003e tags,","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"            String recurrType, String recurDate) {","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"        super(description, date, isDone);","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"        this.checkTimeRangeAndFormatting(timeFrom, timeTo);","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"rickyaandrew"},"content":"        String dateCopy \u003d date;","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"rickyaandrew"},"content":"        if (dateCopy.contains(\"/\")) {","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"rickyaandrew"},"content":"            dateCopy \u003d dateCopy.replace(\"/\", \"-\");","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"rickyaandrew"},"content":"        this.taskDateTimeFrom \u003d this.getLocalDateTime(dateCopy, timeFrom);","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"rickyaandrew"},"content":"        this.taskDateTimeTo \u003d this.getLocalDateTime(dateCopy, timeTo);","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"rickyaandrew"},"content":"        this.timeFrom \u003d Integer.parseInt(timeFrom);","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"rickyaandrew"},"content":"        this.timeTo \u003d Integer.parseInt(timeTo);","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"rickyaandrew"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"rickyaandrew"},"content":"        this.recurrType \u003d recurrType;","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"rickyaandrew"},"content":"        if (!recurrType.equals(\"N\")) {","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"rickyaandrew"},"content":"            String recurrDateCopy \u003d recurDate;","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"rickyaandrew"},"content":"            recurrDateCopy \u003d recurrDateCopy.replace(\"/\", \"-\");","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"rickyaandrew"},"content":"            this.recurrDate \u003d recurrDateCopy;","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"rickyaandrew"},"content":"            recurrDateTo \u003d this.getLocalDateTime(recurrDateCopy, timeTo);","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"rickyaandrew"},"content":"        } else {","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"rickyaandrew"},"content":"            recurrDateTo \u003d null;","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"rickyaandrew"},"content":"            this.recurrDate \u003d recurDate;","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"rickyaandrew"},"content":"     * Constructor which helps to create the same Object as {@code this}.","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"rickyaandrew"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"rickyaandrew"},"content":"     * @param schedule is the {@code Schedule} to be created.","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"rickyaandrew"},"content":"    public Schedule(Schedule schedule) {","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"rickyaandrew"},"content":"        super(schedule.getDescription(), schedule.getDate(), false);","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"rickyaandrew"},"content":"        this.taskDateTimeFrom \u003d schedule.getTaskDateTimeFrom();","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"rickyaandrew"},"content":"        this.taskDateTimeTo \u003d schedule.getRecurrDateTo();","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"rickyaandrew"},"content":"        this.timeFrom \u003d schedule.getTimeFrom();","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"rickyaandrew"},"content":"        this.timeTo \u003d schedule.getTimeTo();","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"rickyaandrew"},"content":"        this.tags.addAll(schedule.getTags());","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"rickyaandrew"},"content":"        this.recurrType \u003d schedule.getRecurrType();","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"rickyaandrew"},"content":"        this.recurrDate \u003d schedule.getRecurrDate();","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"rickyaandrew"},"content":"        this.recurrDateTo \u003d schedule.getRecurrDateTo();","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":81,"author":{"gitId":"rickyaandrew"},"content":"     * Constructor which helps in the changing of the date, keeping the remaining","lastModifiedDate":"2021-10-28"},{"lineNumber":82,"author":{"gitId":"rickyaandrew"},"content":"     * information the same.","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"rickyaandrew"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"rickyaandrew"},"content":"     * @param schedule         is the {@code Schedule} to be created.","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"rickyaandrew"},"content":"     * @param taskDateTimeFrom the new date with a specific timing from.","lastModifiedDate":"2021-10-28"},{"lineNumber":86,"author":{"gitId":"rickyaandrew"},"content":"     * @param taskDateTimeTo   the new date with a specific timing to.","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":88,"author":{"gitId":"rickyaandrew"},"content":"    public Schedule(Schedule schedule, LocalDateTime taskDateTimeFrom, LocalDateTime taskDateTimeTo) {","lastModifiedDate":"2021-10-28"},{"lineNumber":89,"author":{"gitId":"rickyaandrew"},"content":"        super(schedule.getDescription(), taskDateTimeFrom.format(Schedule.FORMATTER), false);","lastModifiedDate":"2021-10-28"},{"lineNumber":90,"author":{"gitId":"rickyaandrew"},"content":"        this.taskDateTimeFrom \u003d taskDateTimeFrom;","lastModifiedDate":"2021-10-28"},{"lineNumber":91,"author":{"gitId":"rickyaandrew"},"content":"        this.taskDateTimeTo \u003d taskDateTimeTo;","lastModifiedDate":"2021-10-28"},{"lineNumber":92,"author":{"gitId":"rickyaandrew"},"content":"        this.timeFrom \u003d schedule.getTimeFrom();","lastModifiedDate":"2021-10-28"},{"lineNumber":93,"author":{"gitId":"rickyaandrew"},"content":"        this.timeTo \u003d schedule.getTimeTo();","lastModifiedDate":"2021-10-28"},{"lineNumber":94,"author":{"gitId":"rickyaandrew"},"content":"        this.tags.addAll(schedule.getTags());","lastModifiedDate":"2021-10-28"},{"lineNumber":95,"author":{"gitId":"rickyaandrew"},"content":"        this.recurrType \u003d schedule.getRecurrType();","lastModifiedDate":"2021-10-28"},{"lineNumber":96,"author":{"gitId":"rickyaandrew"},"content":"        this.recurrDate \u003d schedule.getRecurrDate();","lastModifiedDate":"2021-10-28"},{"lineNumber":97,"author":{"gitId":"rickyaandrew"},"content":"        this.recurrDateTo \u003d schedule.getRecurrDateTo();","lastModifiedDate":"2021-10-28"},{"lineNumber":98,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"rickyaandrew"},"content":"    public LocalDateTime getTaskDateTimeFrom() {","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"rickyaandrew"},"content":"        return this.taskDateTimeFrom;","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"rickyaandrew"},"content":"    public LocalDateTime getTaskDateTimeTo() {","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"rickyaandrew"},"content":"        return this.taskDateTimeTo;","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"rickyaandrew"},"content":"    public int getTimeFrom() {","lastModifiedDate":"2021-10-09"},{"lineNumber":109,"author":{"gitId":"rickyaandrew"},"content":"        return this.timeFrom;","lastModifiedDate":"2021-10-09"},{"lineNumber":110,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":111,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":112,"author":{"gitId":"rickyaandrew"},"content":"    public int getTimeTo() {","lastModifiedDate":"2021-10-09"},{"lineNumber":113,"author":{"gitId":"rickyaandrew"},"content":"        return this.timeTo;","lastModifiedDate":"2021-10-09"},{"lineNumber":114,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":115,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":116,"author":{"gitId":"rickyaandrew"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2021-10-22"},{"lineNumber":117,"author":{"gitId":"rickyaandrew"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2021-10-22"},{"lineNumber":118,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":119,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":120,"author":{"gitId":"rickyaandrew"},"content":"    public String getRecurrType() {","lastModifiedDate":"2021-10-28"},{"lineNumber":121,"author":{"gitId":"rickyaandrew"},"content":"        return this.recurrType;","lastModifiedDate":"2021-10-28"},{"lineNumber":122,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":123,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":124,"author":{"gitId":"rickyaandrew"},"content":"    public LocalDateTime getRecurrDateTo() {","lastModifiedDate":"2021-10-28"},{"lineNumber":125,"author":{"gitId":"rickyaandrew"},"content":"        return this.recurrDateTo;","lastModifiedDate":"2021-10-28"},{"lineNumber":126,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":127,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":128,"author":{"gitId":"rickyaandrew"},"content":"    public String getRecurrDate() {","lastModifiedDate":"2021-10-28"},{"lineNumber":129,"author":{"gitId":"rickyaandrew"},"content":"        return this.recurrDate;","lastModifiedDate":"2021-10-28"},{"lineNumber":130,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":131,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":132,"author":{"gitId":"rickyaandrew"},"content":"    public Schedule addOneDay() {","lastModifiedDate":"2021-10-28"},{"lineNumber":133,"author":{"gitId":"rickyaandrew"},"content":"        return new Schedule(this, this.taskDateTimeFrom.plusDays(1), this.taskDateTimeTo.plusDays(1));","lastModifiedDate":"2021-10-28"},{"lineNumber":134,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":135,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":136,"author":{"gitId":"rickyaandrew"},"content":"    public Schedule addOneWeek() {","lastModifiedDate":"2021-10-28"},{"lineNumber":137,"author":{"gitId":"rickyaandrew"},"content":"        return new Schedule(this, this.taskDateTimeFrom.plusWeeks(1), this.taskDateTimeTo.plusWeeks(1));","lastModifiedDate":"2021-10-28"},{"lineNumber":138,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":139,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":140,"author":{"gitId":"rickyaandrew"},"content":"    public Schedule addOneYear() {","lastModifiedDate":"2021-10-28"},{"lineNumber":141,"author":{"gitId":"rickyaandrew"},"content":"        return new Schedule(this, this.taskDateTimeFrom.plusYears(1), this.taskDateTimeTo.plusYears(1));","lastModifiedDate":"2021-10-28"},{"lineNumber":142,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":143,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":144,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":145,"author":{"gitId":"rickyaandrew"},"content":"     * Gets the formatted time and date in a proper {@code String}.","lastModifiedDate":"2021-10-11"},{"lineNumber":146,"author":{"gitId":"rickyaandrew"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":147,"author":{"gitId":"rickyaandrew"},"content":"     * @return formatteed time and date.","lastModifiedDate":"2021-10-11"},{"lineNumber":148,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":149,"author":{"gitId":"rickyaandrew"},"content":"    public String getDateTime() {","lastModifiedDate":"2021-10-11"},{"lineNumber":150,"author":{"gitId":"rickyaandrew"},"content":"        return String.format(\"at %s from %04d to %04d\", this.getDate(), this.getTimeFrom(), this.getTimeTo());","lastModifiedDate":"2021-10-20"},{"lineNumber":151,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":152,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":153,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":154,"author":{"gitId":"rickyaandrew"},"content":"     * Checks if the respective {@code Schedule} is the same as this","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"rickyaandrew"},"content":"     * {@code Schedule}.","lastModifiedDate":"2021-10-21"},{"lineNumber":156,"author":{"gitId":"rickyaandrew"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":157,"author":{"gitId":"rickyaandrew"},"content":"     * @param schedule the {@code Schedule} to check if it is the same.","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"rickyaandrew"},"content":"     * @return a {@code boolean} if it is the same.","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"rickyaandrew"},"content":"    public boolean isSameSchedule(Schedule schedule) {","lastModifiedDate":"2021-10-21"},{"lineNumber":161,"author":{"gitId":"rickyaandrew"},"content":"        return this.getTaskDateTimeFrom().equals(schedule.getTaskDateTimeFrom())","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"rickyaandrew"},"content":"                \u0026\u0026 this.getTaskDateTimeTo().equals(schedule.getTaskDateTimeTo())","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"rickyaandrew"},"content":"                \u0026\u0026 this.getDescription().equals(schedule.getDescription()) \u0026\u0026 this.getDate().equals(schedule.getDate())","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"rickyaandrew"},"content":"                \u0026\u0026 this.getTimeFrom() \u003d\u003d schedule.getTimeFrom() \u0026\u0026 this.getTimeTo() \u003d\u003d schedule.getTimeTo();","lastModifiedDate":"2021-10-21"},{"lineNumber":165,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":166,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":167,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":168,"author":{"gitId":"rickyaandrew"},"content":"    public String getDate() {","lastModifiedDate":"2021-10-21"},{"lineNumber":169,"author":{"gitId":"rickyaandrew"},"content":"        int day \u003d Integer.parseInt(this.date.split(\"-\")[0]);","lastModifiedDate":"2021-10-21"},{"lineNumber":170,"author":{"gitId":"rickyaandrew"},"content":"        int month \u003d Integer.parseInt(this.date.split(\"-\")[1]);","lastModifiedDate":"2021-10-21"},{"lineNumber":171,"author":{"gitId":"rickyaandrew"},"content":"        int year \u003d Integer.parseInt(this.date.split(\"-\")[2]);","lastModifiedDate":"2021-10-21"},{"lineNumber":172,"author":{"gitId":"rickyaandrew"},"content":"        return String.format(\"%02d-%02d-%d\", day, month, year);","lastModifiedDate":"2021-10-21"},{"lineNumber":173,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":174,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":175,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":176,"author":{"gitId":"rickyaandrew"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":177,"author":{"gitId":"rickyaandrew"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-11"},{"lineNumber":178,"author":{"gitId":"rickyaandrew"},"content":"            return true;","lastModifiedDate":"2021-10-11"},{"lineNumber":179,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":180,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":181,"author":{"gitId":"rickyaandrew"},"content":"        if (!(other instanceof Schedule)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":182,"author":{"gitId":"rickyaandrew"},"content":"            return false;","lastModifiedDate":"2021-10-11"},{"lineNumber":183,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":184,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":185,"author":{"gitId":"rickyaandrew"},"content":"        Schedule otherSchedule \u003d (Schedule) other;","lastModifiedDate":"2021-10-11"},{"lineNumber":186,"author":{"gitId":"rickyaandrew"},"content":"        return (otherSchedule.getDescription().equals(this.getDescription())","lastModifiedDate":"2021-10-11"},{"lineNumber":187,"author":{"gitId":"rickyaandrew"},"content":"                \u0026\u0026 otherSchedule.getTaskDateTimeFrom().equals(this.getTaskDateTimeFrom())","lastModifiedDate":"2021-10-28"},{"lineNumber":188,"author":{"gitId":"rickyaandrew"},"content":"                \u0026\u0026 otherSchedule.getTaskDateTimeTo().equals(this.getTaskDateTimeTo())","lastModifiedDate":"2021-10-28"},{"lineNumber":189,"author":{"gitId":"rickyaandrew"},"content":"                \u0026\u0026 otherSchedule.getTags().equals(getTags()));","lastModifiedDate":"2021-10-22"},{"lineNumber":190,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":191,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":192,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":193,"author":{"gitId":"rickyaandrew"},"content":"    public String toString() {","lastModifiedDate":"2021-10-09"},{"lineNumber":194,"author":{"gitId":"rickyaandrew"},"content":"        return String.format(\"%s on %s from %04d to %04d\", this.getDescription(), this.getDate(), this.timeFrom,","lastModifiedDate":"2021-10-20"},{"lineNumber":195,"author":{"gitId":"rickyaandrew"},"content":"                this.timeTo);","lastModifiedDate":"2021-10-09"},{"lineNumber":196,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":197,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":198,"author":{"gitId":"rickyaandrew"},"content":"    private int getHour(String time) {","lastModifiedDate":"2021-10-20"},{"lineNumber":199,"author":{"gitId":"rickyaandrew"},"content":"        return Integer.parseInt(time) / 100;","lastModifiedDate":"2021-10-20"},{"lineNumber":200,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":201,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":202,"author":{"gitId":"rickyaandrew"},"content":"    private int getMinute(String time) {","lastModifiedDate":"2021-10-20"},{"lineNumber":203,"author":{"gitId":"rickyaandrew"},"content":"        return Integer.parseInt(time) % 100;","lastModifiedDate":"2021-10-20"},{"lineNumber":204,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":205,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":206,"author":{"gitId":"rickyaandrew"},"content":"    private void checkTimeFormatting(String time) {","lastModifiedDate":"2021-10-20"},{"lineNumber":207,"author":{"gitId":"rickyaandrew"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":208,"author":{"gitId":"rickyaandrew"},"content":"            int hour \u003d Integer.parseInt(time) / 100;","lastModifiedDate":"2021-10-20"},{"lineNumber":209,"author":{"gitId":"rickyaandrew"},"content":"            int minute \u003d Integer.parseInt(time) % 100;","lastModifiedDate":"2021-10-20"},{"lineNumber":210,"author":{"gitId":"rickyaandrew"},"content":"            if (hour \u003e 23 || hour \u003c 0) {","lastModifiedDate":"2021-10-20"},{"lineNumber":211,"author":{"gitId":"rickyaandrew"},"content":"                throw new InvalidTimeException(ERROR_MSG_INVALID_TIME_RANGE);","lastModifiedDate":"2021-10-20"},{"lineNumber":212,"author":{"gitId":"rickyaandrew"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":213,"author":{"gitId":"rickyaandrew"},"content":"            if (minute \u003e 59 || minute \u003c 0) {","lastModifiedDate":"2021-10-20"},{"lineNumber":214,"author":{"gitId":"rickyaandrew"},"content":"                throw new InvalidTimeException(ERROR_MSG_INVALID_TIME_RANGE);","lastModifiedDate":"2021-10-20"},{"lineNumber":215,"author":{"gitId":"rickyaandrew"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":216,"author":{"gitId":"rickyaandrew"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":217,"author":{"gitId":"rickyaandrew"},"content":"            throw new InvalidTimeException(ERROR_MSG_LETTERS_IN_TIME);","lastModifiedDate":"2021-10-20"},{"lineNumber":218,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":219,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":220,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":221,"author":{"gitId":"rickyaandrew"},"content":"    private void checkTimeRange(String timeFrom, String timeTo) {","lastModifiedDate":"2021-10-20"},{"lineNumber":222,"author":{"gitId":"rickyaandrew"},"content":"        if (Integer.parseInt(timeFrom) \u003e Integer.parseInt(timeTo)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":223,"author":{"gitId":"rickyaandrew"},"content":"            throw new InvalidTimeException(ERROR_MSG_INVALID_TIME_SQEUENCE);","lastModifiedDate":"2021-10-20"},{"lineNumber":224,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":225,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":226,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":227,"author":{"gitId":"rickyaandrew"},"content":"    private void checkTimeRangeAndFormatting(String timeFrom, String timeTo) {","lastModifiedDate":"2021-10-20"},{"lineNumber":228,"author":{"gitId":"rickyaandrew"},"content":"        this.checkTimeFormatting(timeFrom);","lastModifiedDate":"2021-10-20"},{"lineNumber":229,"author":{"gitId":"rickyaandrew"},"content":"        this.checkTimeFormatting(timeTo);","lastModifiedDate":"2021-10-20"},{"lineNumber":230,"author":{"gitId":"rickyaandrew"},"content":"        this.checkTimeRange(timeFrom, timeTo);","lastModifiedDate":"2021-10-20"},{"lineNumber":231,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":232,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":233,"author":{"gitId":"rickyaandrew"},"content":"    private LocalDateTime getLocalDateTime(String dateCopy, String time) {","lastModifiedDate":"2021-10-20"},{"lineNumber":234,"author":{"gitId":"rickyaandrew"},"content":"        return LocalDateTime.of(Integer.parseInt(dateCopy.split(\"-\")[2]), Integer.parseInt(dateCopy.split(\"-\")[1]),","lastModifiedDate":"2021-10-20"},{"lineNumber":235,"author":{"gitId":"rickyaandrew"},"content":"                Integer.parseInt(dateCopy.split(\"-\")[0]), getHour(time), getMinute(time));","lastModifiedDate":"2021-10-20"},{"lineNumber":236,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":237,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"rickyaandrew":237}},{"path":"src/main/java/seedu/address/model/event/Timeable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"abstract class Timeable\u003cT\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"     * Adds an {@code Event} to the Timetable.","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"     * @param currTask is the current {@code Event}.","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"     * @return a {@code String} message if the {@code Event} is added.","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"    abstract String add(T currTask);","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"     * Deletes an {@code Event} from the Timetable.","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"     * @param currTask is the current {@code Event} to be deleted.","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"     * @return a {@code String} message if the {@code Event} is deleted.","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"    abstract String delete(T currTask);","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"     * Views the timetable.","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"     * @return {@code String} which contains information from the timetable.","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"    abstract String view();","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"     * Gets a {@code Comparator} for the Timetable.","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"     * @return a {@code Comparator}","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"    protected Comparator\u003cString\u003e getComparator() {","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"        return new Comparator\u003cString\u003e() {","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"            @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"            public int compare(String firstDate, String secondDate) {","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"                String[] firstDateArr \u003d firstDate.split(\"-\");","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"                String[] secondDateArr \u003d secondDate.split(\"-\");","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"                int firstIntDate \u003d Integer.parseInt(firstDateArr[2] + firstDateArr[1] + firstDateArr[1]);","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"rickyaandrew"},"content":"                int secondIntDate \u003d Integer.parseInt(secondDateArr[2] + secondDateArr[1] + secondDateArr[1]);","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"rickyaandrew"},"content":"                return (firstIntDate \u003e secondIntDate) ? -1 : 1;","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"rickyaandrew"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"rickyaandrew"},"content":"        };","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"rickyaandrew":46}},{"path":"src/main/java/seedu/address/model/event/Timetable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"import java.util.TreeMap;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.event.exceptions.EmptyEventException;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"public class Timetable extends Timeable\u003cSchedule\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"    private final HashMap\u003cString, DayPlan\u003e timetable;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"    public Timetable() {","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"        this.timetable \u003d new HashMap\u003cString, DayPlan\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"    public String add(Schedule currTask) {","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"        if (this.timetable.get(currTask.getDate()) \u003d\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"            DayPlan dayPlan \u003d new DayPlan();","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"            dayPlan.addSchedule(currTask);","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"            this.timetable.put(currTask.getDate(), dayPlan);","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"            return \"Task added to schedule\";","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"        return this.timetable.get(currTask.getDate()).addSchedule(currTask);","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"    public String delete(Schedule currTask) {","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"        String UiMessage \u003d this.timetable.get(currTask.getDate()).deleteSchedule(currTask);","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"        if (!this.timetable.get(currTask.getDate()).hasSchedule()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"            this.timetable.remove(currTask.getDate());","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"        return UiMessage;","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"    public String view() {","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"        if (this.timetable.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"            throw new EmptyEventException();","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"rickyaandrew"},"content":"        Map\u003cString, DayPlan\u003e sortedMap \u003d new TreeMap\u003c\u003e(this.getComparator());","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"rickyaandrew"},"content":"        sortedMap.putAll(this.timetable);","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"rickyaandrew"},"content":"        String allScheduledTasks \u003d \"\";","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"rickyaandrew"},"content":"        Iterator\u003cString\u003e activeDates \u003d sortedMap.keySet().iterator();","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"rickyaandrew"},"content":"        while (activeDates.hasNext()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"rickyaandrew"},"content":"            String currDate \u003d activeDates.next();","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"rickyaandrew"},"content":"            allScheduledTasks +\u003d currDate + \"\\n\" + this.timetable.get(currDate).viewDayPlan();","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"rickyaandrew"},"content":"        return allScheduledTasks;","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"rickyaandrew"},"content":"    public DayPlan getDayPlan(String date) {","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"rickyaandrew"},"content":"        return this.timetable.get(date);","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"rickyaandrew"},"content":"     * Clears the {@code Schedule} for this day.","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"rickyaandrew"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"rickyaandrew"},"content":"     * @param date the date which {@code Schedule} will be cleared.","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"rickyaandrew"},"content":"     * @return a message if the {@code Schedule} is cleared.","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"rickyaandrew"},"content":"    public String clearDayPlan(String date) {","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"rickyaandrew"},"content":"        this.timetable.remove(date);","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"rickyaandrew"},"content":"        return \"Plans for the day has cleared.\";","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"rickyaandrew"},"content":"     * Checks of the added {@code Schedule} clashes with the added {@code Schedule}.","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"rickyaandrew"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"rickyaandrew"},"content":"     * @param currTask the {@code Schedule} to be added.","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"rickyaandrew"},"content":"     * @return boolean if the {@code Schedule} clashes.","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"rickyaandrew"},"content":"    public boolean isClash(Schedule currTask) {","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"rickyaandrew"},"content":"        try {","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"rickyaandrew"},"content":"            return this.timetable.get(currTask.getDate()).isClash(currTask);","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"rickyaandrew"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"rickyaandrew"},"content":"            return false;","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"rickyaandrew":82}},{"path":"src/main/java/seedu/address/model/event/UniqueScheduleList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"import java.util.List;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.event.exceptions.DuplicateScheduleException;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.event.exceptions.EventClashException;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"public class UniqueScheduleList implements Iterable\u003cSchedule\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"    private final ObservableList\u003cSchedule\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"    private final ObservableList\u003cSchedule\u003e internalUnmodifiableList \u003d FXCollections","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"            .unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"     * Returns true if the list contains an equivalent schedule as the given","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"     * argument.","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"    public boolean contains(Schedule toCheck) {","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"     * Adds a Schedule to the list. The Schedule must not already exist in the list.","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"    public void add(Schedule schedule) {","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"        requireNonNull(schedule);","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"        if (contains(schedule)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"            throw new DuplicateScheduleException();","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"rickyaandrew"},"content":"        if (isClash(schedule)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"rickyaandrew"},"content":"            throw new EventClashException();","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"rickyaandrew"},"content":"        internalList.add(schedule);","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"rickyaandrew"},"content":"    public void setSchedules(UniqueScheduleList replacement) {","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"rickyaandrew"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"rickyaandrew"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"rickyaandrew"},"content":"     * Replaces the contents of this list with {@code schedules}. {@code schedules}","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"rickyaandrew"},"content":"     * must not contain duplicate schedules.","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"rickyaandrew"},"content":"    public void setSchedules(List\u003cSchedule\u003e schedules) {","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"rickyaandrew"},"content":"        requireAllNonNull(schedules);","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"rickyaandrew"},"content":"        if (!schedulesAreUnique(schedules)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"rickyaandrew"},"content":"            throw new DuplicateScheduleException();","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"rickyaandrew"},"content":"        internalList.setAll(schedules);","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"rickyaandrew"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"rickyaandrew"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"rickyaandrew"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"rickyaandrew"},"content":"    public void setSchedule(Schedule target, Schedule editedSchedule) {","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"rickyaandrew"},"content":"        requireAllNonNull(target, editedSchedule);","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"rickyaandrew"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"rickyaandrew"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"rickyaandrew"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"rickyaandrew"},"content":"        if (!target.isSameSchedule(editedSchedule) \u0026\u0026 contains(editedSchedule)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"rickyaandrew"},"content":"            throw new DuplicateScheduleException();","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"rickyaandrew"},"content":"        internalList.set(index, editedSchedule);","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"rickyaandrew"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"rickyaandrew"},"content":"    public ObservableList\u003cSchedule\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"rickyaandrew"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"rickyaandrew"},"content":"     * Removes the equivalent schedule from the list. The todo must exist in the","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"rickyaandrew"},"content":"     * list.","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"rickyaandrew"},"content":"    public void remove(Schedule toRemove) {","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"rickyaandrew"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"rickyaandrew"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"rickyaandrew"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":103,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"rickyaandrew"},"content":"    public Iterator\u003cSchedule\u003e iterator() {","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"rickyaandrew"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"rickyaandrew"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"rickyaandrew"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"rickyaandrew"},"content":"                || (other instanceof UniqueScheduleList // instanceof handles nulls","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"rickyaandrew"},"content":"                        \u0026\u0026 internalList.equals(((UniqueScheduleList) other).internalList));","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"rickyaandrew"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"rickyaandrew"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"rickyaandrew"},"content":"     * Returns true if {@code schedules} contains only unique schedules.","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"rickyaandrew"},"content":"    private boolean schedulesAreUnique(List\u003cSchedule\u003e schedule) {","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"rickyaandrew"},"content":"        for (int i \u003d 0; i \u003c schedule.size() - 1; i++) {","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"rickyaandrew"},"content":"            for (int j \u003d i + 1; j \u003c schedule.size(); j++) {","lastModifiedDate":"2021-10-11"},{"lineNumber":126,"author":{"gitId":"rickyaandrew"},"content":"                if (schedule.get(i).equals(schedule.get(j))) {","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"rickyaandrew"},"content":"                    return false;","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"rickyaandrew"},"content":"                }","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"rickyaandrew"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":130,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":131,"author":{"gitId":"rickyaandrew"},"content":"        return true;","lastModifiedDate":"2021-10-11"},{"lineNumber":132,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":133,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":134,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":135,"author":{"gitId":"rickyaandrew"},"content":"     * Checks if there is any clashes in the given {@code Schedule}.","lastModifiedDate":"2021-10-13"},{"lineNumber":136,"author":{"gitId":"rickyaandrew"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":137,"author":{"gitId":"rickyaandrew"},"content":"     * @param currTask is the {@code Schedule} which will be added into the list of","lastModifiedDate":"2021-10-13"},{"lineNumber":138,"author":{"gitId":"rickyaandrew"},"content":"     *                 {@code Schedule}.","lastModifiedDate":"2021-10-13"},{"lineNumber":139,"author":{"gitId":"rickyaandrew"},"content":"     * @return boolean if the {@code Schedule} has a lash with the list of","lastModifiedDate":"2021-10-13"},{"lineNumber":140,"author":{"gitId":"rickyaandrew"},"content":"     *         {@code Schedule}.","lastModifiedDate":"2021-10-13"},{"lineNumber":141,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":142,"author":{"gitId":"rickyaandrew"},"content":"    public boolean isClash(Schedule currTask) {","lastModifiedDate":"2021-10-13"},{"lineNumber":143,"author":{"gitId":"rickyaandrew"},"content":"        int currTimeFrom \u003d currTask.getTimeFrom();","lastModifiedDate":"2021-10-13"},{"lineNumber":144,"author":{"gitId":"rickyaandrew"},"content":"        int currTimeTo \u003d currTask.getTimeTo();","lastModifiedDate":"2021-10-13"},{"lineNumber":145,"author":{"gitId":"rickyaandrew"},"content":"        LocalDate currDate \u003d currTask.getTaskDateTimeFrom().toLocalDate();","lastModifiedDate":"2021-10-20"},{"lineNumber":146,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":147,"author":{"gitId":"rickyaandrew"},"content":"        ArrayList\u003cSchedule\u003e clashList \u003d new ArrayList\u003cSchedule\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":148,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":149,"author":{"gitId":"rickyaandrew"},"content":"        this.internalList.stream()","lastModifiedDate":"2021-10-13"},{"lineNumber":150,"author":{"gitId":"rickyaandrew"},"content":"                .filter(task -\u003e currDate.equals(task.getTaskDateTimeFrom().toLocalDate())","lastModifiedDate":"2021-10-20"},{"lineNumber":151,"author":{"gitId":"rickyaandrew"},"content":"                        \u0026\u0026 ((currTimeFrom \u003e task.getTimeFrom() \u0026\u0026 currTimeFrom \u003c task.getTimeTo())","lastModifiedDate":"2021-10-13"},{"lineNumber":152,"author":{"gitId":"rickyaandrew"},"content":"                                || (currTimeTo \u003e task.getTimeFrom() \u0026\u0026 currTimeTo \u003c task.getTimeTo())","lastModifiedDate":"2021-10-13"},{"lineNumber":153,"author":{"gitId":"rickyaandrew"},"content":"                                || (currTimeFrom \u003c task.getTimeFrom() \u0026\u0026 currTimeTo \u003e task.getTimeTo())","lastModifiedDate":"2021-10-20"},{"lineNumber":154,"author":{"gitId":"rickyaandrew"},"content":"                                || (task.getTimeFrom() \u003d\u003d currTimeFrom) || (task.getTimeTo() \u003d\u003d currTimeTo)))","lastModifiedDate":"2021-10-13"},{"lineNumber":155,"author":{"gitId":"rickyaandrew"},"content":"                .forEach(task -\u003e clashList.add(task));","lastModifiedDate":"2021-10-13"},{"lineNumber":156,"author":{"gitId":"rickyaandrew"},"content":"        return clashList.size() !\u003d 0;","lastModifiedDate":"2021-10-13"},{"lineNumber":157,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":158,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":159,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":160,"author":{"gitId":"rickyaandrew"},"content":"     * Sorts the {@code List} from the ealiest to the latest order.","lastModifiedDate":"2021-10-13"},{"lineNumber":161,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":162,"author":{"gitId":"rickyaandrew"},"content":"    public void sort() {","lastModifiedDate":"2021-10-13"},{"lineNumber":163,"author":{"gitId":"rickyaandrew"},"content":"        this.internalList.sort(getScheduleComparator());","lastModifiedDate":"2021-10-13"},{"lineNumber":164,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":165,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":166,"author":{"gitId":"rickyaandrew"},"content":"    public void view() {","lastModifiedDate":"2021-10-29"},{"lineNumber":167,"author":{"gitId":"rickyaandrew"},"content":"        this.internalList.removeIf(schedule -\u003e schedule.getTaskDateTimeTo().compareTo(LocalDateTime.now()) \u003c 0);","lastModifiedDate":"2021-10-29"},{"lineNumber":168,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":169,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":170,"author":{"gitId":"rickyaandrew"},"content":"    private Comparator\u003cSchedule\u003e getScheduleComparator() {","lastModifiedDate":"2021-10-13"},{"lineNumber":171,"author":{"gitId":"rickyaandrew"},"content":"        return new Comparator\u003cSchedule\u003e() {","lastModifiedDate":"2021-10-13"},{"lineNumber":172,"author":{"gitId":"rickyaandrew"},"content":"            @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":173,"author":{"gitId":"rickyaandrew"},"content":"            public int compare(Schedule firstTask, Schedule secondTask) {","lastModifiedDate":"2021-10-13"},{"lineNumber":174,"author":{"gitId":"rickyaandrew"},"content":"                return firstTask.getTaskDateTimeFrom().compareTo(secondTask.getTaskDateTimeFrom());","lastModifiedDate":"2021-10-20"},{"lineNumber":175,"author":{"gitId":"rickyaandrew"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":176,"author":{"gitId":"rickyaandrew"},"content":"        };","lastModifiedDate":"2021-10-13"},{"lineNumber":177,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":178,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"rickyaandrew":178}},{"path":"src/main/java/seedu/address/model/event/exceptions/DuplicateScheduleException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.address.model.event.exceptions;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"public class DuplicateScheduleException extends RuntimeException {","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"    public DuplicateScheduleException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"        super(\"Operation would result in duplicate schedule\");","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"rickyaandrew":7}},{"path":"src/main/java/seedu/address/model/event/exceptions/EmptyEventException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.address.model.event.exceptions;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"public class EmptyEventException extends RuntimeException {","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"    public EmptyEventException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"        super(\"Event is empty, thus would not be able to delete any event\");","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"rickyaandrew":7}},{"path":"src/main/java/seedu/address/model/event/exceptions/EventClashException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.address.model.event.exceptions;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"public class EventClashException extends RuntimeException {","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"    public EventClashException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"        super(\"Schedule got clashes. Please select a different timeslot.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"rickyaandrew":7}},{"path":"src/main/java/seedu/address/model/event/exceptions/EventNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.address.model.event.exceptions;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"public class EventNotFoundException extends RuntimeException {","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"    public EventNotFoundException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"        super(\"The Event is not found in the table.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"rickyaandrew":7}},{"path":"src/main/java/seedu/address/model/event/exceptions/InvalidTimeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.address.model.event.exceptions;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"public class InvalidTimeException extends RuntimeException {","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"    private final String msg;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"     * Exception for user who have keyed in invalid time format.","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"     * @param msg is the error message.","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"    public InvalidTimeException(String msg) {","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"        super(msg);","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"        this.msg \u003d msg;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"    public String getMsg() {","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"        return this.msg;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"rickyaandrew":19}},{"path":"src/main/java/seedu/address/model/event/predicates/ScheduleContainsDatePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.address.model.event.predicates;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import java.util.List;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.event.Schedule;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"public class ScheduleContainsDatePredicate implements Predicate\u003cSchedule\u003e {","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"    public ScheduleContainsDatePredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"    public boolean test(Schedule schedule) {","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(schedule.getDateTime(), keyword));","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"                || (other instanceof ScheduleContainsDatePredicate // instanceof handles nulls","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"                \u0026\u0026 keywords.equals(((ScheduleContainsDatePredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"rickyaandrew":28}},{"path":"src/main/java/seedu/address/model/event/predicates/ScheduleContainsFromPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.address.model.event.predicates;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import java.util.List;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.event.Schedule;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"public class ScheduleContainsFromPredicate implements Predicate\u003cSchedule\u003e {","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"    public ScheduleContainsFromPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"    public boolean test(Schedule schedule) {","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"        return keywords.stream().anyMatch(keyword -\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"                StringUtil.containsWordIgnoreCase(String.valueOf(schedule.getTimeFrom()), keyword));","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"                || (other instanceof ScheduleContainsFromPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"                        \u0026\u0026 keywords.equals(((ScheduleContainsFromPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"rickyaandrew":28}},{"path":"src/main/java/seedu/address/model/event/predicates/ScheduleContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.address.model.event.predicates;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.event.Schedule;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"public class ScheduleContainsKeywordsPredicate implements Predicate\u003cSchedule\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"    public ScheduleContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"    public boolean test(Schedule schedule) {","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(schedule.getDescription(), keyword));","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"                || (other instanceof ScheduleContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"                \u0026\u0026 keywords.equals(((ScheduleContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"rickyaandrew":28}},{"path":"src/main/java/seedu/address/model/event/predicates/ScheduleContainsToPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.address.model.event.predicates;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import java.util.List;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.event.Schedule;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"public class ScheduleContainsToPredicate implements Predicate\u003cSchedule\u003e {","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"    public ScheduleContainsToPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"    public boolean test(Schedule schedule) {","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"        return keywords.stream().anyMatch(keyword -\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"                StringUtil.containsWordIgnoreCase(String.valueOf(schedule.getTimeTo()), keyword));","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"                || (other instanceof ScheduleContainsToPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"                        \u0026\u0026 keywords.equals(((ScheduleContainsToPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"rickyaandrew":28}},{"path":"src/main/java/seedu/address/model/event/predicates/ScheduleTagContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.address.model.event.predicates;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import java.util.List;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.event.Schedule;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"public class ScheduleTagContainsKeywordsPredicate implements Predicate\u003cSchedule\u003e {","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"    public ScheduleTagContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"    public boolean test(Schedule schedule) {","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"        // all keywords must be present in tag","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"        for (String keyword : keywords) {","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"            boolean hasMatch \u003d schedule.getTags().stream()","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"                    .anyMatch(tag -\u003e tag.getTagName().equalsIgnoreCase(keyword));","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"            if (!hasMatch) {","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"                return false;","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"        return true;","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"                || (other instanceof ScheduleTagContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"                \u0026\u0026 keywords.equals(((ScheduleTagContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"rickyaandrew":35}},{"path":"src/main/java/seedu/address/model/person/ClientState.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"whoisjustinngo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"whoisjustinngo"},"content":"public enum ClientState {","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"whoisjustinngo"},"content":"    FRESH,","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"whoisjustinngo"},"content":"    APPROACHED,","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"whoisjustinngo"},"content":"    PITCHED,","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"whoisjustinngo"},"content":"    NEGOTIATED,","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"whoisjustinngo"},"content":"    CLOSED","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"whoisjustinngo":9}},{"path":"src/main/java/seedu/address/model/person/ClientStub.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"whoisjustinngo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"whoisjustinngo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"whoisjustinngo"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"whoisjustinngo"},"content":"public class ClientStub extends Person {","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"whoisjustinngo"},"content":"    private final StatusStub clientStatus;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"whoisjustinngo"},"content":"     * Stub for client class which inherits from person.","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"whoisjustinngo"},"content":"    public ClientStub(Name name, Relationship relationship, Phone phone, Email email, Address address, Set\u003cTag\u003e tags,","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"whoisjustinngo"},"content":"        StatusStub status) {","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"whoisjustinngo"},"content":"        super(name, relationship, phone, email, address, tags);","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"whoisjustinngo"},"content":"        this.clientStatus \u003d status;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"whoisjustinngo"},"content":"    public ClientState getClientState() {","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"whoisjustinngo"},"content":"        return this.clientStatus.getState();","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"whoisjustinngo"},"content":"    public LocalDateTime getLastUpdated() {","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"whoisjustinngo"},"content":"        return this.clientStatus.getLastUpdated();","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"whoisjustinngo":28}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"mokdarren"},"content":" * Represents a name in the address book.","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":58,"mokdarren":1}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"mokdarren"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"mokdarren"},"content":"    private final Relationship relationship;","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"mokdarren"},"content":"    // Client information","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"mokdarren"},"content":"    private final Set\u003cPolicy\u003e policies \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"mokdarren"},"content":"    private final Status status;","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"mokdarren"},"content":"    private final String notes;","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"mokdarren"},"content":"    private final LocalDateTime lastUpdated;","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"mokdarren"},"content":"     * Every field must be present without client details.","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"mokdarren"},"content":"    public Person(Name name, Relationship relationship, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"mokdarren"},"content":"        this.relationship \u003d relationship;","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"mokdarren"},"content":"        status \u003d Status.FRESH;","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"mokdarren"},"content":"        notes \u003d \"\";","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"mokdarren"},"content":"        lastUpdated \u003d LocalDateTime.now();","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"mokdarren"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"mokdarren"},"content":"    public Person(Name name, Relationship relationship, Phone phone, Email email, Address address, Set\u003cTag\u003e tags,","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"mokdarren"},"content":"                  Set\u003cPolicy\u003e policies, Status status, String notes) {","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"mokdarren"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"mokdarren"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"mokdarren"},"content":"        this.relationship \u003d relationship;","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"mokdarren"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"mokdarren"},"content":"        this.email \u003d email;","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"mokdarren"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"mokdarren"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"mokdarren"},"content":"        this.status \u003d status;","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"mokdarren"},"content":"        this.notes \u003d notes;","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"mokdarren"},"content":"        this.policies.addAll(policies);","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"mokdarren"},"content":"        lastUpdated \u003d LocalDateTime.now();","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":85,"author":{"gitId":"mokdarren"},"content":"    public Relationship getRelationship() {","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"mokdarren"},"content":"        return relationship;","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"mokdarren"},"content":"    public Status getStatus() {","lastModifiedDate":"2021-10-28"},{"lineNumber":90,"author":{"gitId":"mokdarren"},"content":"        return status;","lastModifiedDate":"2021-10-28"},{"lineNumber":91,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":92,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":93,"author":{"gitId":"mokdarren"},"content":"    public String getNotes() {","lastModifiedDate":"2021-10-28"},{"lineNumber":94,"author":{"gitId":"mokdarren"},"content":"        return notes;","lastModifiedDate":"2021-10-28"},{"lineNumber":95,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":105,"author":{"gitId":"mokdarren"},"content":"     * Returns an immutable policy set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-28"},{"lineNumber":106,"author":{"gitId":"mokdarren"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-10-28"},{"lineNumber":107,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":108,"author":{"gitId":"mokdarren"},"content":"    public Set\u003cPolicy\u003e getPolicies() {","lastModifiedDate":"2021-10-28"},{"lineNumber":109,"author":{"gitId":"mokdarren"},"content":"        return Collections.unmodifiableSet(policies);","lastModifiedDate":"2021-10-28"},{"lineNumber":110,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":111,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":112,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":113,"author":{"gitId":"mokdarren"},"content":"     * Returns an datetime the class was last updated","lastModifiedDate":"2021-10-29"},{"lineNumber":114,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":115,"author":{"gitId":"mokdarren"},"content":"    public LocalDateTime getLastUpdated() {","lastModifiedDate":"2021-10-29"},{"lineNumber":116,"author":{"gitId":"mokdarren"},"content":"        return lastUpdated;","lastModifiedDate":"2021-10-29"},{"lineNumber":117,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":147,"author":{"gitId":"mokdarren"},"content":"                \u0026\u0026 otherPerson.getRelationship().equals(getRelationship())","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":164,"author":{"gitId":"mokdarren"},"content":"                .append(\"; Relationship: \")","lastModifiedDate":"2021-10-10"},{"lineNumber":165,"author":{"gitId":"mokdarren"},"content":"                .append(getRelationship())","lastModifiedDate":"2021-10-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":121,"mokdarren":60}},{"path":"src/main/java/seedu/address/model/person/Policy.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mokdarren"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"mokdarren"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"mokdarren"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"mokdarren"},"content":" * Represents a Client\u0027s insurance plan.","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"mokdarren"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"mokdarren"},"content":"public class Policy {","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"mokdarren"},"content":"    public static final String NUMBER_MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"mokdarren"},"content":"            \"Policy number should only contain numbers, and it should be at least 1 digit long\";","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"mokdarren"},"content":"    public static final String INSURER_NAME_MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"mokdarren"},"content":"            \"Policy plans should should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"mokdarren"},"content":"    public static final String POLICY_NAME_MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"mokdarren"},"content":"            \"Policy plans should should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"mokdarren"},"content":"    public static final String COMMISSION_MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"mokdarren"},"content":"            \"Commission should be a floating point number\";","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"mokdarren"},"content":"    public static final String COMMISSION_VALIDATION_REGEX \u003d \"[+-]?([0-9]+([.][0-9]*)?|[.][0-9]+)\";","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"mokdarren"},"content":"    public static final String NAME_VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"mokdarren"},"content":"    public static final String NUMBER_VALIDATION_REGEX \u003d \"^\\\\d+$\";","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"mokdarren"},"content":"    public final Name name;","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"mokdarren"},"content":"    public final Name insurer;","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"mokdarren"},"content":"    public final int number;","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"mokdarren"},"content":"    public final Double commission;","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"mokdarren"},"content":"     * Constructs a {@code Policy}.","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"mokdarren"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"mokdarren"},"content":"     * @param insurer A valid insurer","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"mokdarren"},"content":"     * @param number A valid number.","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"mokdarren"},"content":"     * @param name A valid policy name.","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"mokdarren"},"content":"     * @param commission A valid commission.","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"mokdarren"},"content":"    public Policy(Name insurer, int number, Name name, double commission) {","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"mokdarren"},"content":"        requireAllNonNull(insurer, number, name, commission);","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"mokdarren"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"mokdarren"},"content":"        this.insurer \u003d insurer;","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"mokdarren"},"content":"        this.commission \u003d Double.valueOf(commission);","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"mokdarren"},"content":"        this.number \u003d Integer.valueOf(number);","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"mokdarren"},"content":"    public Name getName() {","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"mokdarren"},"content":"        return name;","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"mokdarren"},"content":"    public Name getInsurer() {","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"mokdarren"},"content":"        return insurer;","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"mokdarren"},"content":"    public int getNumber() {","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"mokdarren"},"content":"        return number;","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"mokdarren"},"content":"    public String getAsNumberString() {","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"mokdarren"},"content":"        return String.valueOf(number);","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"mokdarren"},"content":"    public Double getCommission() {","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"mokdarren"},"content":"        return commission;","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"mokdarren"},"content":"    public String getCommissionAsString() {","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"mokdarren"},"content":"        return String.valueOf(commission);","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"mokdarren"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"mokdarren"},"content":"    public String toString() {","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"mokdarren"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"mokdarren"},"content":"        builder.append(\"Insurer: \")","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"mokdarren"},"content":"                .append(getInsurer())","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"mokdarren"},"content":"                .append(\"; Policy ID: \")","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"mokdarren"},"content":"                .append(getNumber())","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"mokdarren"},"content":"                .append(\"; Policy Name: \")","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"mokdarren"},"content":"                .append(getName())","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"mokdarren"},"content":"                .append(\"; Commission: \")","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"mokdarren"},"content":"                .append(getCommission());","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"mokdarren"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"mokdarren"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"mokdarren"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"mokdarren"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"mokdarren"},"content":"                || (other instanceof Policy // instanceof handles nulls","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"mokdarren"},"content":"                \u0026\u0026 insurer.equals(((Policy) other).insurer))","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"mokdarren"},"content":"                \u0026\u0026 number \u003d\u003d (((Policy) other).number); // state check","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"mokdarren"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"mokdarren"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"mokdarren"},"content":"        return name.hashCode();","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"mokdarren"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"mokdarren":91}},{"path":"src/main/java/seedu/address/model/person/Relationship.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mokdarren"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"mokdarren"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"mokdarren"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"mokdarren"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"mokdarren"},"content":" * Represents a contact Relationship in the address book.","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"mokdarren"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidRelationship(String)}","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"mokdarren"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"mokdarren"},"content":"public class Relationship {","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"mokdarren"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Relationship should either be friend or client\";","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"mokdarren"},"content":"    /*","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"mokdarren"},"content":"     * Either friend or client","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"mokdarren"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(friend|client)$\";","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"mokdarren"},"content":"    public final String value;","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"mokdarren"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"mokdarren"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"mokdarren"},"content":"     * @param address A valid contact relationship.","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"mokdarren"},"content":"    public Relationship(String address) {","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"mokdarren"},"content":"        requireNonNull(address);","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"mokdarren"},"content":"        checkArgument(isValidRelationship(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"mokdarren"},"content":"        value \u003d address;","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"mokdarren"},"content":"     * Returns true if a given string is a valid contact relationship.","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"mokdarren"},"content":"    public static boolean isValidRelationship(String test) {","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"mokdarren"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"mokdarren"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"mokdarren"},"content":"    public String toString() {","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"mokdarren"},"content":"        return value;","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"mokdarren"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"mokdarren"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"mokdarren"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"mokdarren"},"content":"                || (other instanceof Relationship // instanceof handles nulls","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"mokdarren"},"content":"                \u0026\u0026 value.equals(((Relationship) other).value)); // state check","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"mokdarren"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"mokdarren"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"mokdarren"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"mokdarren"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"mokdarren":56}},{"path":"src/main/java/seedu/address/model/person/Status.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mokdarren"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"mokdarren"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"mokdarren"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"mokdarren"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"mokdarren"},"content":" * Represents a client/lead\u0027s status","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"mokdarren"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"mokdarren"},"content":"public enum Status {","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"mokdarren"},"content":"    FRESH,","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"mokdarren"},"content":"    APPROACHED,","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"mokdarren"},"content":"    PITCHED,","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"mokdarren"},"content":"    NEGOTIATED,","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"mokdarren"},"content":"    CLOSED,","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"mokdarren"},"content":"    LOST;","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"mokdarren"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Value is not a valid status!\";","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"mokdarren"},"content":"    private static final Set\u003cString\u003e values \u003d new HashSet\u003cString\u003e(Status.values().length);","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"mokdarren"},"content":"    static {","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"mokdarren"},"content":"        for (Status f: Status.values()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"mokdarren"},"content":"            values.add(f.name());","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"mokdarren"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"mokdarren"},"content":"    public static boolean contains(String value) {","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"mokdarren"},"content":"        return values.contains(value);","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"mokdarren"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"mokdarren":29}},{"path":"src/main/java/seedu/address/model/person/StatusStub.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"whoisjustinngo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"whoisjustinngo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"whoisjustinngo"},"content":"public class StatusStub {","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"whoisjustinngo"},"content":"    private final ClientState state;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"whoisjustinngo"},"content":"    private final LocalDateTime lastUpdated;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"whoisjustinngo"},"content":"    StatusStub(ClientState state) {","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"whoisjustinngo"},"content":"        this.state \u003d state;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"whoisjustinngo"},"content":"        this.lastUpdated \u003d LocalDateTime.now();","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"whoisjustinngo"},"content":"    public ClientState getState() {","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"whoisjustinngo"},"content":"        return state;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"whoisjustinngo"},"content":"    public LocalDateTime getLastUpdated() {","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"whoisjustinngo"},"content":"        return lastUpdated;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"whoisjustinngo":22}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":104,"author":{"gitId":"SpdPnd98"},"content":"        requireNonNull(internalUnmodifiableList);","lastModifiedDate":"2021-10-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":137,"SpdPnd98":1}},{"path":"src/main/java/seedu/address/model/person/predicates/AddressContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mokdarren"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"mokdarren"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"mokdarren"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"mokdarren"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"mokdarren"},"content":" * Tests that a {@code Person}\u0027s {@code Address} matches the keyword given.","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"mokdarren"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"mokdarren"},"content":"public class AddressContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"mokdarren"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"mokdarren"},"content":"    public AddressContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"mokdarren"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"mokdarren"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"mokdarren"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"mokdarren"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"mokdarren"},"content":"                .anyMatch(keyword -\u003e (person.getAddress().value.toLowerCase().contains(keyword.toLowerCase())));","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"mokdarren"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"mokdarren"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"mokdarren"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"mokdarren"},"content":"                || (other instanceof AddressContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"mokdarren"},"content":"                \u0026\u0026 keywords.equals(((AddressContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"mokdarren"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"mokdarren":31}},{"path":"src/main/java/seedu/address/model/person/predicates/EmailContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mokdarren"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"mokdarren"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"mokdarren"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"mokdarren"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"mokdarren"},"content":" * Tests that a {@code Person}\u0027s {@code Email} matches any of the keywords given.","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"mokdarren"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"mokdarren"},"content":"public class EmailContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"mokdarren"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"mokdarren"},"content":"    public EmailContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"mokdarren"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"mokdarren"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"mokdarren"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"mokdarren"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"mokdarren"},"content":"                .anyMatch(keyword -\u003e (person.getEmail().value.contains(keyword)));","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"mokdarren"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"mokdarren"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"mokdarren"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"mokdarren"},"content":"                || (other instanceof EmailContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"mokdarren"},"content":"                \u0026\u0026 keywords.equals(((EmailContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"mokdarren"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"mokdarren":31}},{"path":"src/main/java/seedu/address/model/person/predicates/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mokdarren"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":30,"mokdarren":2}},{"path":"src/main/java/seedu/address/model/person/predicates/PhoneContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mokdarren"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"mokdarren"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"mokdarren"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"mokdarren"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"mokdarren"},"content":" * Tests that a {@code Person}\u0027s {@code Phone} matches the keyword given.","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"mokdarren"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"mokdarren"},"content":"public class PhoneContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"mokdarren"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"mokdarren"},"content":"    public PhoneContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"mokdarren"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"mokdarren"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"mokdarren"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"mokdarren"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"mokdarren"},"content":"                .anyMatch(keyword -\u003e (person.getPhone().value.contains(keyword)));","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"mokdarren"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"mokdarren"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"mokdarren"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"mokdarren"},"content":"                || (other instanceof PhoneContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"mokdarren"},"content":"                \u0026\u0026 keywords.equals(((PhoneContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"mokdarren"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"mokdarren":31}},{"path":"src/main/java/seedu/address/model/person/predicates/RelationshipContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mokdarren"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"mokdarren"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"mokdarren"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"mokdarren"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"mokdarren"},"content":" * Tests that a {@code Person}\u0027s {@code Relationship} matches any of the keywords given.","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"mokdarren"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"mokdarren"},"content":"public class RelationshipContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"mokdarren"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"mokdarren"},"content":"    public RelationshipContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"mokdarren"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"mokdarren"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"mokdarren"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"mokdarren"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"mokdarren"},"content":"                .anyMatch(keyword -\u003e (person.getRelationship().value.toLowerCase().contains(keyword.toLowerCase())));","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"mokdarren"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"mokdarren"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"mokdarren"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"mokdarren"},"content":"                || (other instanceof RelationshipContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"mokdarren"},"content":"                \u0026\u0026 keywords.equals(((RelationshipContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"mokdarren"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"mokdarren":31}},{"path":"src/main/java/seedu/address/model/person/predicates/TagsContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mokdarren"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"mokdarren"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"mokdarren"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"mokdarren"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"mokdarren"},"content":" * Tests that a {@code Person}\u0027s {@code Tags} matches any of the keywords given.","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"mokdarren"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"mokdarren"},"content":"public class TagsContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"mokdarren"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"mokdarren"},"content":"    public TagsContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"mokdarren"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"mokdarren"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"mokdarren"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"        if (keywords.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"            return false;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"mokdarren"},"content":"        // all keywords must be present in tag","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"mokdarren"},"content":"        for (String keyword : keywords) {","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"mokdarren"},"content":"            boolean hasMatch \u003d person.getTags().stream()","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"mokdarren"},"content":"                    .anyMatch(tag -\u003e tag.getTagName().equalsIgnoreCase(keyword));","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"mokdarren"},"content":"            if (!hasMatch) {","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"mokdarren"},"content":"                return false;","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"mokdarren"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"mokdarren"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"mokdarren"},"content":"        return true;","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"mokdarren"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"mokdarren"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"mokdarren"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"mokdarren"},"content":"                || (other instanceof TagsContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"mokdarren"},"content":"                \u0026\u0026 keywords.equals(((TagsContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"mokdarren"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"kslui99":4,"mokdarren":39}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"mokdarren"},"content":"     * Format state as text checking","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"mokdarren"},"content":"    public String getTagName() {","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"mokdarren"},"content":"        return tagName;","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":54,"mokdarren":7}},{"path":"src/main/java/seedu/address/model/todo/Todo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package seedu.address.model.todo;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":" * Represents a task to be done.","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":" * Guarantees: immutable","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"public class Todo {","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"    private final String description;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"    private final boolean isDone;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"     * Every field except isDone must be present and not null. isDone is automatically set to false.","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"    public Todo(String description, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"        requireAllNonNull(description, tags);","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"    public Todo(String description, Set\u003cTag\u003e tags, boolean isDone) {","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"        requireAllNonNull(description, tags);","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"kslui99"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"kslui99"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"kslui99"},"content":"        return description;","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"kslui99"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"kslui99"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"kslui99"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"kslui99"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"kslui99"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"kslui99"},"content":"        return isDone;","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"kslui99"},"content":"     * Creates and returns a {@code Todo} with the same details but is marked as done.","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"kslui99"},"content":"    public Todo getDoneVersion() {","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"kslui99"},"content":"        return new Todo(description, tags, true);","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"kslui99"},"content":"    public String toString() {","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"kslui99"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"kslui99"},"content":"        builder.append(getDescription());","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"kslui99"},"content":"        if (isDone) {","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"kslui99"},"content":"            builder.append(\" [done]\");","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"kslui99"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"kslui99"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"kslui99"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"kslui99"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"kslui99"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"kslui99"},"content":"     * Returns true if both Todos have the same description.","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"kslui99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"kslui99"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"kslui99"},"content":"            return true;","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"kslui99"},"content":"        if (!(other instanceof Todo)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"kslui99"},"content":"            return false;","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"kslui99"},"content":"        Todo otherTodo \u003d (Todo) other;","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"kslui99"},"content":"        return otherTodo.description.equals(description);","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"kslui99"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"kslui99"},"content":"        return Objects.hash(description, tags, isDone);","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"kslui99":102}},{"path":"src/main/java/seedu/address/model/todo/UniqueTodoList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package seedu.address.model.todo;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.exceptions.DuplicateTodoException;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.exceptions.TodoNotFoundException;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":" * A list of todos that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":" * A todo is considered unique by comparing using {@code Todo#equals(Object)}. As such, adding and updating of","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":" * todos uses Todo#equals(Object) for equality so as to ensure that the todo being added or updated is","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"whoisjustinngo"},"content":" * unique in the UniqueTodoList. Also, the removal of a todo uses Todo#equals(Object) so","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":" * as to ensure that the todo with exactly the same fields will be removed.","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":" *","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":" *","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":" * @see Todo#equals(Object)","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"public class UniqueTodoList implements Iterable\u003cTodo\u003e {","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"    private final ObservableList\u003cTodo\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"    private final ObservableList\u003cTodo\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"     * Returns true if the list contains an equivalent todo as the given argument.","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"    public boolean contains(Todo toCheck) {","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"kslui99"},"content":"     * Adds a Todo to the list.","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"kslui99"},"content":"     * The Todo must not already exist in the list.","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"kslui99"},"content":"    public void add(Todo toAdd) {","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"kslui99"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"kslui99"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"kslui99"},"content":"            throw new DuplicateTodoException();","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"kslui99"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"kslui99"},"content":"     * Replaces the todo {@code target} in the list with {@code editedTodo}.","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"kslui99"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"kslui99"},"content":"     * The {@code editedTodo} must not be the same as another existing todo in the list.","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"kslui99"},"content":"    public void setTodo(Todo target, Todo editedTodo) {","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"kslui99"},"content":"        requireAllNonNull(target, editedTodo);","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"kslui99"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"kslui99"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"kslui99"},"content":"            throw new TodoNotFoundException();","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"kslui99"},"content":"        if (!target.equals(editedTodo) \u0026\u0026 contains(editedTodo)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"kslui99"},"content":"            throw new DuplicateTodoException();","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"kslui99"},"content":"        internalList.set(index, editedTodo);","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"kslui99"},"content":"     * Removes the equivalent todo from the list.","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"kslui99"},"content":"     * The todo must exist in the list.","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"kslui99"},"content":"    public void remove(Todo toRemove) {","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"kslui99"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"kslui99"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"kslui99"},"content":"            throw new TodoNotFoundException();","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"kslui99"},"content":"    public void setTodos(UniqueTodoList replacement) {","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"kslui99"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"kslui99"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"kslui99"},"content":"     * Replaces the contents of this list with {@code todos}.","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"kslui99"},"content":"     * {@code todos} must not contain duplicate todos.","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"kslui99"},"content":"    public void setTodos(List\u003cTodo\u003e todos) {","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"kslui99"},"content":"        requireAllNonNull(todos);","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"kslui99"},"content":"        if (!todosAreUnique(todos)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"kslui99"},"content":"            throw new DuplicateTodoException();","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"kslui99"},"content":"        internalList.setAll(todos);","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"kslui99"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"kslui99"},"content":"    public ObservableList\u003cTodo\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"kslui99"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"kslui99"},"content":"    public Iterator\u003cTodo\u003e iterator() {","lastModifiedDate":"2021-10-09"},{"lineNumber":109,"author":{"gitId":"kslui99"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-09"},{"lineNumber":110,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":111,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":112,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":113,"author":{"gitId":"kslui99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-09"},{"lineNumber":114,"author":{"gitId":"kslui99"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-09"},{"lineNumber":115,"author":{"gitId":"kslui99"},"content":"                || (other instanceof UniqueTodoList // instanceof handles nulls","lastModifiedDate":"2021-10-09"},{"lineNumber":116,"author":{"gitId":"kslui99"},"content":"                        \u0026\u0026 internalList.equals(((UniqueTodoList) other).internalList));","lastModifiedDate":"2021-10-09"},{"lineNumber":117,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":118,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":119,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":120,"author":{"gitId":"kslui99"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-09"},{"lineNumber":121,"author":{"gitId":"kslui99"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-10-09"},{"lineNumber":122,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":123,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"kslui99"},"content":"     * Returns true if {@code todos} contains only unique todos.","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"kslui99"},"content":"    private boolean todosAreUnique(List\u003cTodo\u003e todos) {","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"kslui99"},"content":"        for (int i \u003d 0; i \u003c todos.size() - 1; i++) {","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"kslui99"},"content":"            for (int j \u003d i + 1; j \u003c todos.size(); j++) {","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"kslui99"},"content":"                if (todos.get(i).equals(todos.get(j))) {","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"kslui99"},"content":"                    return false;","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"kslui99"},"content":"                }","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"kslui99"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":134,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":135,"author":{"gitId":"kslui99"},"content":"        return true;","lastModifiedDate":"2021-10-10"},{"lineNumber":136,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":137,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"whoisjustinngo":1,"kslui99":136}},{"path":"src/main/java/seedu/address/model/todo/exceptions/DuplicateTodoException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package seedu.address.model.todo.exceptions;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":" * Signals that the operation will result in duplicate Todos (Todos are considered duplicates if they have the same","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":" * description).","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"public class DuplicateTodoException extends RuntimeException {","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"    public DuplicateTodoException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"        super(\"Operation would result in duplicate todos\");","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"kslui99":11}},{"path":"src/main/java/seedu/address/model/todo/exceptions/TodoNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package seedu.address.model.todo.exceptions;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":" * Signals that the operation is unable to find the specified todo.","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"public class TodoNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"kslui99":6}},{"path":"src/main/java/seedu/address/model/todo/predicates/DescriptionContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package seedu.address.model.todo.predicates;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.Todo;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":" * Tests that a {@code Todo}\u0027s {@code description} matches any of the keywords given.","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"public class DescriptionContainsKeywordsPredicate implements Predicate\u003cTodo\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"    public DescriptionContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"    public boolean test(Todo todo) {","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(todo.getDescription(), keyword));","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"                || (other instanceof DescriptionContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"                \u0026\u0026 keywords.equals(((DescriptionContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"kslui99":32}},{"path":"src/main/java/seedu/address/model/todo/predicates/TagsContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package seedu.address.model.todo.predicates;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.Todo;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":" * Tests that a {@code Todo}\u0027s {@code Tags} matches any of the keywords given.","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"public class TagsContainsKeywordsPredicate implements Predicate\u003cTodo\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"    public TagsContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"    public boolean test(Todo todo) {","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"        if (keywords.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"            return false;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"        for (String keyword : keywords) {","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"            boolean hasMatch \u003d todo.getTags().stream()","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"                    .anyMatch(tag -\u003e StringUtil.containsWordIgnoreCase(tag.getTagName(), keyword));","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"            if (!hasMatch) {","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"                return false;","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"        return true;","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"kslui99"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"                || (other instanceof TagsContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"                \u0026\u0026 keywords.equals(((TagsContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"kslui99":42}},{"path":"src/main/java/seedu/address/model/todo/predicates/TodoIsDonePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package seedu.address.model.todo.predicates;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.Todo;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":" * Tests whether a Todo is marked as done.","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"public class TodoIsDonePredicate implements Predicate\u003cTodo\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"    public TodoIsDonePredicate() {","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"    public boolean test(Todo todo) {","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"        return todo.isDone();","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"                || (other instanceof TodoIsDonePredicate); // instanceof handles nulls","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"kslui99":26}},{"path":"src/main/java/seedu/address/model/todo/predicates/TodoIsNotDonePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package seedu.address.model.todo.predicates;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.Todo;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":" * Tests whether a Todo is not marked as done.","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"public class TodoIsNotDonePredicate implements Predicate\u003cTodo\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"    public TodoIsNotDonePredicate() {","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"    public boolean test(Todo todo) {","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"        return !todo.isDone();","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"                || (other instanceof TodoIsNotDonePredicate); // instanceof handles nulls","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"kslui99":26}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Relationship;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"mokdarren"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Relationship(\"client\"), new Phone(\"87438807\"),","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"mokdarren"},"content":"                    new Email(\"alexyeoh@example.com\"), new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"mokdarren"},"content":"            new Person(new Name(\"Bernice Yu\"), new Relationship(\"client\"), new Phone(\"99272758\"),","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"mokdarren"},"content":"                    new Email(\"berniceyu@example.com\"), new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"mokdarren"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Relationship(\"client\"), new Phone(\"93210283\"),","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"mokdarren"},"content":"                    new Email(\"charlotte@example.com\"), new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"mokdarren"},"content":"            new Person(new Name(\"David Li\"), new Relationship(\"friend\"), new Phone(\"91031282\"),","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"mokdarren"},"content":"                    new Email(\"lidavid@example.com\"), new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"mokdarren"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Relationship(\"friend\"), new Phone(\"92492021\"),","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"mokdarren"},"content":"                    new Email(\"irfan@example.com\"), new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"mokdarren"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Relationship(\"friend\"), new Phone(\"92624417\"),","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"mokdarren"},"content":"                    new Email(\"royb@example.com\"), new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"-":48,"SpdPnd98":1,"mokdarren":13}},{"path":"src/main/java/seedu/address/storage/IcsAdaptedSchedule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SpdPnd98"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"SpdPnd98"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"SpdPnd98"},"content":"import java.time.Instant;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"SpdPnd98"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"SpdPnd98"},"content":"import java.time.ZoneId;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"SpdPnd98"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"SpdPnd98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"SpdPnd98"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"SpdPnd98"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"SpdPnd98"},"content":"import java.util.List;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"SpdPnd98"},"content":"import net.fortuna.ical4j.model.Component;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"SpdPnd98"},"content":"import net.fortuna.ical4j.model.DateTime;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"SpdPnd98"},"content":"import net.fortuna.ical4j.model.Property;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"SpdPnd98"},"content":"import net.fortuna.ical4j.model.property.ExDate;","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"SpdPnd98"},"content":"import net.fortuna.ical4j.model.property.RRule;","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"SpdPnd98"},"content":"import seedu.address.model.event.Schedule;","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"SpdPnd98"},"content":"public class IcsAdaptedSchedule {","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"SpdPnd98"},"content":"    private Component schedule;","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"SpdPnd98"},"content":"    private int repeatNumberOfTimes \u003d 1;","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"SpdPnd98"},"content":"    // Logically, these are public holidays","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"SpdPnd98"},"content":"    private List\u003cLocalDate\u003e excludedDates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"SpdPnd98"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"SpdPnd98"},"content":"     * Represents a schedule in ics.","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"SpdPnd98"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"SpdPnd98"},"content":"     * @param event a component that represents a schedule","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"SpdPnd98"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"SpdPnd98"},"content":"    public IcsAdaptedSchedule(Component event) {","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"SpdPnd98"},"content":"        this.schedule \u003d event;","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"SpdPnd98"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"SpdPnd98"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"SpdPnd98"},"content":"     * Converts Schedules as ics component into Schedule model.","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"SpdPnd98"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"SpdPnd98"},"content":"     * @return a Schedule object","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"SpdPnd98"},"content":"     * @throws java.text.ParseException","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"SpdPnd98"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"SpdPnd98"},"content":"    public Schedule toModel() throws java.text.ParseException {","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"SpdPnd98"},"content":"        Property summary \u003d this.schedule.getProperty(Property.SUMMARY);","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"SpdPnd98"},"content":"        Property dtstartProperty \u003d this.schedule.getProperty(Property.DTSTART);","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"SpdPnd98"},"content":"        Property dtendProperty \u003d this.schedule.getProperty(Property.DTEND);","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"SpdPnd98"},"content":"        requireAllNonNull(summary, dtstartProperty, dtendProperty);","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"SpdPnd98"},"content":"        String description \u003d summary.getValue();","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"SpdPnd98"},"content":"        String dtStartString \u003d dtstartProperty.getValue();","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"SpdPnd98"},"content":"        DateTime dtStart \u003d new DateTime(dtStartString);","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"SpdPnd98"},"content":"        String dtEndString \u003d dtendProperty.getValue();","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"SpdPnd98"},"content":"        DateTime dtEnd \u003d new DateTime(dtEndString);","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"SpdPnd98"},"content":"        requireAllNonNull(description, dtStartString, dtEndString);","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"SpdPnd98"},"content":"        String date \u003d Instant.ofEpochMilli(dtStart.getTime()).atZone(ZoneId.systemDefault())","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"SpdPnd98"},"content":"                .toLocalDate().format(DateTimeFormatter.ofPattern(\"dd-MM-YYYY\"));","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"SpdPnd98"},"content":"        String from \u003d Instant.ofEpochMilli(dtStart.getTime()).atZone(ZoneId.systemDefault())","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"SpdPnd98"},"content":"                .toLocalTime().format(DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"SpdPnd98"},"content":"        String to \u003d Instant.ofEpochMilli(dtEnd.getTime()).atZone(ZoneId.systemDefault())","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"SpdPnd98"},"content":"                .toLocalTime().format(DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"SpdPnd98"},"content":"        RRule repeatRule \u003d (RRule) this.schedule.getProperty(Property.RRULE);","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"SpdPnd98"},"content":"        List\u003cExDate\u003e exDates \u003d this.schedule.getProperties(Property.EXDATE);","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"SpdPnd98"},"content":"        for (Iterator i \u003d exDates.iterator(); i.hasNext();) {","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"SpdPnd98"},"content":"            ExDate exDate \u003d (ExDate) i.next();","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"SpdPnd98"},"content":"            DateTime dtExDate \u003d (new DateTime(exDate.getValue()));","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"SpdPnd98"},"content":"            excludedDates.add(Instant.ofEpochMilli(dtExDate.getTime()).atZone(ZoneId.systemDefault()).toLocalDate());","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"SpdPnd98"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"SpdPnd98"},"content":"        if (repeatRule \u003d\u003d null) {","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"SpdPnd98"},"content":"            this.repeatNumberOfTimes \u003d 1;","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"SpdPnd98"},"content":"        } else {","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"SpdPnd98"},"content":"            this.repeatNumberOfTimes \u003d repeatRule.getRecur().getCount();","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"SpdPnd98"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"SpdPnd98"},"content":"        return new Schedule(description, date, from, to, false, new HashSet\u003c\u003e(),","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"SpdPnd98"},"content":"                \"N\", \"\");","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"SpdPnd98"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":81,"author":{"gitId":"SpdPnd98"},"content":"    public int getRepeatNumberOfTimes() {","lastModifiedDate":"2021-10-28"},{"lineNumber":82,"author":{"gitId":"SpdPnd98"},"content":"        return this.repeatNumberOfTimes;","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"SpdPnd98"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"SpdPnd98"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":86,"author":{"gitId":"SpdPnd98"},"content":"     * Checks if the schedule is to be excluded from the list.","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"SpdPnd98"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":88,"author":{"gitId":"SpdPnd98"},"content":"     * @param schedule","lastModifiedDate":"2021-10-28"},{"lineNumber":89,"author":{"gitId":"SpdPnd98"},"content":"     * @return","lastModifiedDate":"2021-10-28"},{"lineNumber":90,"author":{"gitId":"SpdPnd98"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":91,"author":{"gitId":"SpdPnd98"},"content":"    public boolean isInExcluded(Schedule schedule) {","lastModifiedDate":"2021-10-28"},{"lineNumber":92,"author":{"gitId":"SpdPnd98"},"content":"        return excludedDates.stream()","lastModifiedDate":"2021-10-28"},{"lineNumber":93,"author":{"gitId":"SpdPnd98"},"content":"                .anyMatch(localDate -\u003e localDate.format(DateTimeFormatter.ofPattern(\"dd-MM-YYYY\"))","lastModifiedDate":"2021-10-28"},{"lineNumber":94,"author":{"gitId":"SpdPnd98"},"content":"                .equals(schedule.getDate()));","lastModifiedDate":"2021-10-28"},{"lineNumber":95,"author":{"gitId":"SpdPnd98"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":96,"author":{"gitId":"SpdPnd98"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"SpdPnd98":96}},{"path":"src/main/java/seedu/address/storage/IcsScheduleStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SpdPnd98"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"SpdPnd98"},"content":"import java.io.File;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"SpdPnd98"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"SpdPnd98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"SpdPnd98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"SpdPnd98"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"SpdPnd98"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"SpdPnd98"},"content":"import java.util.List;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"SpdPnd98"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"SpdPnd98"},"content":"import net.fortuna.ical4j.data.CalendarBuilder;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"SpdPnd98"},"content":"import net.fortuna.ical4j.data.ParserException;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"SpdPnd98"},"content":"import net.fortuna.ical4j.model.Calendar;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"SpdPnd98"},"content":"import net.fortuna.ical4j.model.Component;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"SpdPnd98"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"SpdPnd98"},"content":"import seedu.address.model.event.Schedule;","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"SpdPnd98"},"content":"import seedu.address.model.event.exceptions.InvalidTimeException;","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"SpdPnd98"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"SpdPnd98"},"content":"public class IcsScheduleStorage implements ScheduleStorage {","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"SpdPnd98"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"SpdPnd98"},"content":"    public List\u003cSchedule\u003e importSchedule(File file) throws IOException, ParseException {","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"SpdPnd98"},"content":"        // get ics","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"SpdPnd98"},"content":"        FileInputStream fileInputStream \u003d new FileInputStream(file);","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"SpdPnd98"},"content":"        CalendarBuilder calendarBuilder \u003d new CalendarBuilder();","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"SpdPnd98"},"content":"        Calendar calendar; //ical4j Calendar object","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"SpdPnd98"},"content":"        try {","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"SpdPnd98"},"content":"            calendar \u003d calendarBuilder.build(fileInputStream);","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"SpdPnd98"},"content":"        } catch (ParserException e) {","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"SpdPnd98"},"content":"            throw new ParseException(\"Calendar is not well formed!\");","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"SpdPnd98"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"SpdPnd98"},"content":"        // create schedules","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"SpdPnd98"},"content":"        List\u003cSchedule\u003e allSchedules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"SpdPnd98"},"content":"        for (Iterator i \u003d calendar.getComponents().iterator(); i.hasNext();) {","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"SpdPnd98"},"content":"            try {","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"SpdPnd98"},"content":"                IcsAdaptedSchedule icsAdaptedSchedule \u003d new IcsAdaptedSchedule((Component) i.next());","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"SpdPnd98"},"content":"                List\u003cSchedule\u003e schedules \u003d this.createSchedule(icsAdaptedSchedule.toModel(),","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"SpdPnd98"},"content":"                        icsAdaptedSchedule.getRepeatNumberOfTimes());","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"SpdPnd98"},"content":"                // remove from list of excluded","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"SpdPnd98"},"content":"                schedules.stream().filter(schedule -\u003e !icsAdaptedSchedule.isInExcluded(schedule));","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"SpdPnd98"},"content":"                allSchedules.addAll(schedules);","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"SpdPnd98"},"content":"            } catch (InvalidTimeException | java.text.ParseException e) {","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"SpdPnd98"},"content":"                throw new ParseException(e.getMessage());","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"SpdPnd98"},"content":"            }","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"SpdPnd98"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"SpdPnd98"},"content":"        return allSchedules;","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"SpdPnd98"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"SpdPnd98"},"content":"    private List\u003cSchedule\u003e createSchedule(Schedule schedule, Integer repeatTimes) {","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"SpdPnd98"},"content":"        List\u003cSchedule\u003e schedulesList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"SpdPnd98"},"content":"        if (repeatTimes \u003d\u003d 1) {","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"SpdPnd98"},"content":"            Set\u003cTag\u003e tagList \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"SpdPnd98"},"content":"            tagList.addAll(schedule.getTags());","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"SpdPnd98"},"content":"            tagList.add(new Tag(\"exam\"));","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"SpdPnd98"},"content":"            schedule \u003d new Schedule(schedule.getDescription(), schedule.getDate(),","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"SpdPnd98"},"content":"                    String.valueOf(schedule.getTimeFrom()), String.valueOf(schedule.getTimeTo()), schedule.isDone(),","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"SpdPnd98"},"content":"                    tagList, schedule.getRecurrType(), schedule.getRecurrDate());","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"SpdPnd98"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"SpdPnd98"},"content":"        for (int ind \u003d 0; ind \u003c repeatTimes; ind++) {","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"SpdPnd98"},"content":"            schedulesList.add(schedule);","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"SpdPnd98"},"content":"            // TODO: increment the schedule by a week","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"SpdPnd98"},"content":"            schedule \u003d schedule.addOneWeek();","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"SpdPnd98"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"SpdPnd98"},"content":"        return schedulesList;","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"SpdPnd98"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"SpdPnd98"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"SpdPnd98":68}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedCustomGoal.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"whoisjustinngo"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"whoisjustinngo"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"whoisjustinngo"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.model.customGoal.CustomGoal;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"whoisjustinngo"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"whoisjustinngo"},"content":" * Jackson-friendly version of {@link seedu.address.model.customGoal.CustomGoal}.","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"whoisjustinngo"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"whoisjustinngo"},"content":"class JsonAdaptedCustomGoal {","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"whoisjustinngo"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"CustomGoal has fields missing!\";","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"whoisjustinngo"},"content":"    private final String goalDescription;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"whoisjustinngo"},"content":"    private final float goal;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"whoisjustinngo"},"content":"    private final float progress;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"whoisjustinngo"},"content":"    private final String dateAdded;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"whoisjustinngo"},"content":"    private final String endDate;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"whoisjustinngo"},"content":"    private final String timeAdded;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"whoisjustinngo"},"content":"    private final String endTime;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"whoisjustinngo"},"content":"     * Constructs a {@code JsonAdaptedCustomGoal} with the given details.","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"whoisjustinngo"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"whoisjustinngo"},"content":"    public JsonAdaptedCustomGoal(@JsonProperty(\"goalDescription\") String goalDescription,","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"whoisjustinngo"},"content":"                                 @JsonProperty(\"goal\") float goal,","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"whoisjustinngo"},"content":"                                 @JsonProperty(\"progress\") float progress,","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"whoisjustinngo"},"content":"                                 @JsonProperty(\"dateAdded\") String dateAdded,","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"whoisjustinngo"},"content":"                                 @JsonProperty(\"endDate\") String endDate,","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"whoisjustinngo"},"content":"                                 @JsonProperty(\"timeAdded\") String timeAdded,","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"whoisjustinngo"},"content":"                                 @JsonProperty(\"endTime\") String endTime) {","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"whoisjustinngo"},"content":"        this.goalDescription \u003d goalDescription;","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"whoisjustinngo"},"content":"        this.goal \u003d goal;","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"whoisjustinngo"},"content":"        this.progress \u003d progress;","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"whoisjustinngo"},"content":"        this.dateAdded \u003d dateAdded;","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"whoisjustinngo"},"content":"        this.timeAdded \u003d timeAdded;","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"whoisjustinngo"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"whoisjustinngo"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"whoisjustinngo"},"content":"     * Converts a given {@code CustomGoal} into this class for Jackson use.","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"whoisjustinngo"},"content":"    public JsonAdaptedCustomGoal(CustomGoal source) {","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"whoisjustinngo"},"content":"        goalDescription \u003d source.getDescription();","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"whoisjustinngo"},"content":"        goal \u003d source.getGoal();","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"whoisjustinngo"},"content":"        progress \u003d source.getProgress();","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"whoisjustinngo"},"content":"        dateAdded \u003d source.getDateAddedValue();","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"whoisjustinngo"},"content":"        timeAdded \u003d source.getTimeAddedValue();","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"whoisjustinngo"},"content":"        endDate \u003d source.getEndDateValue();","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"whoisjustinngo"},"content":"        endTime \u003d source.getEndTimeValue();","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"whoisjustinngo"},"content":"     * Converts this Jackson-friendly adapted CustomGoal object into the model\u0027s {@code CustomGoal} object.","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"whoisjustinngo"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"whoisjustinngo"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted CustomGoal.","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"whoisjustinngo"},"content":"    public CustomGoal toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"whoisjustinngo"},"content":"        if (goalDescription \u003d\u003d null) {","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"whoisjustinngo"},"content":"            throw new IllegalValueException(MISSING_FIELD_MESSAGE_FORMAT);","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"whoisjustinngo"},"content":"        final String modelGoalDescription \u003d goalDescription;","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"whoisjustinngo"},"content":"        final float modelGoal \u003d goal;","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"whoisjustinngo"},"content":"        final float modelProgress \u003d progress;","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"whoisjustinngo"},"content":"        final String modelDateAdded \u003d dateAdded;","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"whoisjustinngo"},"content":"        final String modelEndDate \u003d endDate;","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"whoisjustinngo"},"content":"        final String modelTimeAdded \u003d timeAdded;","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"whoisjustinngo"},"content":"        final String modelEndTime \u003d endTime;","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"whoisjustinngo"},"content":"        return new CustomGoal(modelGoalDescription,","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"whoisjustinngo"},"content":"                modelGoal,","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"whoisjustinngo"},"content":"                modelProgress,","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"whoisjustinngo"},"content":"                modelDateAdded,","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"whoisjustinngo"},"content":"                modelTimeAdded,","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"whoisjustinngo"},"content":"                modelEndDate,","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"whoisjustinngo"},"content":"                modelEndTime);","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"whoisjustinngo":82}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Policy;","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Relationship;","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"mokdarren"},"content":"    private final String relationship;","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"mokdarren"},"content":"    private final String notes;","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"mokdarren"},"content":"    private final String status;","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"mokdarren"},"content":"    private final List\u003cJsonAdaptedPolicy\u003e policies \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"mokdarren"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name,","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"mokdarren"},"content":"            @JsonProperty(\"relationship\") String relationship, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"mokdarren"},"content":"            @JsonProperty(\"notes\") String notes,","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"mokdarren"},"content":"            @JsonProperty(\"status\") String status,","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"mokdarren"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"mokdarren"},"content":"            @JsonProperty(\"policies\") List\u003cJsonAdaptedPolicy\u003e policies) {","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"mokdarren"},"content":"        this.relationship \u003d relationship;","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"mokdarren"},"content":"        this.notes \u003d notes;","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"mokdarren"},"content":"        this.status \u003d status;","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"mokdarren"},"content":"        if (policies !\u003d null) {","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"mokdarren"},"content":"            this.policies.addAll(policies);","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"mokdarren"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"mokdarren"},"content":"        relationship \u003d source.getRelationship().value;","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"mokdarren"},"content":"        notes \u003d source.getNotes();","lastModifiedDate":"2021-10-29"},{"lineNumber":76,"author":{"gitId":"mokdarren"},"content":"        status \u003d source.getStatus().name();","lastModifiedDate":"2021-10-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"mokdarren"},"content":"        policies.addAll(source.getPolicies().stream()","lastModifiedDate":"2021-10-28"},{"lineNumber":81,"author":{"gitId":"mokdarren"},"content":"                .map(JsonAdaptedPolicy::new)","lastModifiedDate":"2021-10-28"},{"lineNumber":82,"author":{"gitId":"mokdarren"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"mokdarren"},"content":"        final List\u003cPolicy\u003e personPolicies \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"mokdarren"},"content":"        for (JsonAdaptedPolicy policy : policies) {","lastModifiedDate":"2021-10-28"},{"lineNumber":97,"author":{"gitId":"mokdarren"},"content":"            personPolicies.add(policy.toModelType());","lastModifiedDate":"2021-10-28"},{"lineNumber":98,"author":{"gitId":"mokdarren"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"mokdarren"},"content":"        if (relationship \u003d\u003d null) {","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"mokdarren"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"mokdarren"},"content":"                    Relationship.class.getSimpleName()));","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"mokdarren"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"mokdarren"},"content":"        if (!Relationship.isValidRelationship(relationship)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"mokdarren"},"content":"            throw new IllegalValueException(Relationship.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"mokdarren"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"mokdarren"},"content":"        final Relationship modelRelationship \u003d new Relationship(relationship);","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"mokdarren"},"content":"        if (!Status.contains(status)) {","lastModifiedDate":"2021-10-29"},{"lineNumber":142,"author":{"gitId":"mokdarren"},"content":"            throw new IllegalValueException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-29"},{"lineNumber":143,"author":{"gitId":"mokdarren"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":144,"author":{"gitId":"mokdarren"},"content":"        final Status modelStatus \u003d Status.valueOf(status);","lastModifiedDate":"2021-10-29"},{"lineNumber":145,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":146,"author":{"gitId":"mokdarren"},"content":"        if (notes \u003d\u003d null) {","lastModifiedDate":"2021-10-29"},{"lineNumber":147,"author":{"gitId":"mokdarren"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Notes\"));","lastModifiedDate":"2021-10-29"},{"lineNumber":148,"author":{"gitId":"mokdarren"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":150,"author":{"gitId":"mokdarren"},"content":"        final Set\u003cPolicy\u003e modelPolicies \u003d new HashSet\u003c\u003e(personPolicies);","lastModifiedDate":"2021-10-28"},{"lineNumber":151,"author":{"gitId":"mokdarren"},"content":"        return new Person(modelName, modelRelationship, modelPhone, modelEmail, modelAddress, modelTags, modelPolicies,","lastModifiedDate":"2021-10-28"},{"lineNumber":152,"author":{"gitId":"mokdarren"},"content":"                modelStatus, notes);","lastModifiedDate":"2021-10-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":105,"mokdarren":49}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPolicy.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mokdarren"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"mokdarren"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"mokdarren"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"mokdarren"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"mokdarren"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Policy;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"mokdarren"},"content":"/**","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"mokdarren"},"content":" * Jackson-friendly version of {@link seedu.address.model.person.Policy}.","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"mokdarren"},"content":" */","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"mokdarren"},"content":"class JsonAdaptedPolicy {","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"mokdarren"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Policy has fields missing!\";","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"mokdarren"},"content":"    public final String name;","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"mokdarren"},"content":"    public final String insurer;","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"mokdarren"},"content":"    public final int number;","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"mokdarren"},"content":"    public final float commission;","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"mokdarren"},"content":"     * Constructs a {@code JsonAdaptedCustomGoal} with the given details.","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"mokdarren"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"mokdarren"},"content":"    public JsonAdaptedPolicy(@JsonProperty(\"name\") String name,","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"mokdarren"},"content":"                                 @JsonProperty(\"insurer\") String insurer,","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"mokdarren"},"content":"                                 @JsonProperty(\"commission\") float commission,","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"mokdarren"},"content":"                                 @JsonProperty(\"number\") int number) {","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"mokdarren"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"mokdarren"},"content":"        this.insurer \u003d insurer;","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"mokdarren"},"content":"        this.commission \u003d commission;","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"mokdarren"},"content":"        this.number \u003d number;","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"mokdarren"},"content":"     * Converts a given {@code Policy} into this class for Jackson use.","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"mokdarren"},"content":"    public JsonAdaptedPolicy(Policy source) {","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"mokdarren"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"mokdarren"},"content":"        insurer \u003d source.getInsurer().fullName;","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"mokdarren"},"content":"        commission \u003d source.getCommission().floatValue();","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"mokdarren"},"content":"        number \u003d source.getNumber();","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"mokdarren"},"content":"     * Converts this Jackson-friendly adapted CustomGoal object into the model\u0027s {@code Policy} object.","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"mokdarren"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"mokdarren"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted CustomGoal.","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"mokdarren"},"content":"    public Policy toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"mokdarren"},"content":"        if (name \u003d\u003d null || insurer \u003d\u003d null || Objects.isNull(commission) || Objects.isNull(number)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"mokdarren"},"content":"            throw new IllegalValueException(MISSING_FIELD_MESSAGE_FORMAT);","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"mokdarren"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"mokdarren"},"content":"        final Name name \u003d new Name(this.name);","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"mokdarren"},"content":"        final Name insurer \u003d new Name(this.insurer);","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"mokdarren"},"content":"        final float commission \u003d this.commission;","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"mokdarren"},"content":"        final int number \u003d this.number;","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"mokdarren"},"content":"        return new Policy(insurer, number, name, commission);","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"mokdarren"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"mokdarren":67}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedSchedule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"import java.util.List;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.event.Schedule;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"public class JsonAdaptedSchedule {","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Schedule\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"    private final String description;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"    private final String date;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"    private final String from;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"    private final String to;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"    public JsonAdaptedSchedule(@JsonProperty(\"description\") String description, @JsonProperty(\"date\") String date,","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"            @JsonProperty(\"from\") String from, @JsonProperty(\"to\") String to,","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"        this.from \u003d from;","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"        this.to \u003d to;","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"rickyaandrew"},"content":"     * Converts a given {@code Schedule} into this class for Jackson use.","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"rickyaandrew"},"content":"    public JsonAdaptedSchedule(Schedule source) {","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"rickyaandrew"},"content":"        this.description \u003d source.getDescription();","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"rickyaandrew"},"content":"        this.date \u003d source.getDate();","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"rickyaandrew"},"content":"        this.from \u003d String.valueOf(source.getTimeFrom());","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"rickyaandrew"},"content":"        this.to \u003d String.valueOf(source.getTimeTo());","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"rickyaandrew"},"content":"        tagged.addAll(source.getTags().stream().map(JsonAdaptedTag::new).collect(Collectors.toList()));","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"rickyaandrew"},"content":"     * Converts this Jackson-friendly adapted schedule object into the model\u0027s","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"rickyaandrew"},"content":"     * {@code Schedule} object.","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"rickyaandrew"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"rickyaandrew"},"content":"     * @throws IllegalValueException if there were any data constraints violated in","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"rickyaandrew"},"content":"     *                               the adapted schedule.","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"rickyaandrew"},"content":"    public Schedule toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"rickyaandrew"},"content":"        final List\u003cTag\u003e scheduleTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"rickyaandrew"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"rickyaandrew"},"content":"            scheduleTags.add(tag.toModelType());","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"rickyaandrew"},"content":"        if (this.description \u003d\u003d null) {","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"rickyaandrew"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"description\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"rickyaandrew"},"content":"        if (this.date \u003d\u003d null) {","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"rickyaandrew"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"date\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"rickyaandrew"},"content":"        if (this.from \u003d\u003d null) {","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"rickyaandrew"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"from\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"rickyaandrew"},"content":"        if (this.to \u003d\u003d null) {","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"rickyaandrew"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"to\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"rickyaandrew"},"content":"        final String modelDescription \u003d this.description;","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"rickyaandrew"},"content":"        final String modelDate \u003d this.date;","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"rickyaandrew"},"content":"        final String modelFrom \u003d this.from;","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"rickyaandrew"},"content":"        final String modelTo \u003d this.to;","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"rickyaandrew"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(scheduleTags);","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"rickyaandrew"},"content":"        return new Schedule(modelDescription, modelDate, modelFrom, modelTo, false, modelTags, \"N\", \"\");","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"rickyaandrew":84}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedStatus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mokdarren"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"mokdarren"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"mokdarren"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"mokdarren"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"mokdarren"},"content":"/**","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"mokdarren"},"content":" * Jackson-friendly version of {@link Status}.","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"mokdarren"},"content":" */","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"mokdarren"},"content":"class JsonAdaptedStatus {","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"mokdarren"},"content":"    private final String status;","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"mokdarren"},"content":"     * Constructs a {@code JsonAdaptedStatus} with the given {@code status}.","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"mokdarren"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"mokdarren"},"content":"    public JsonAdaptedStatus(String status) {","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"mokdarren"},"content":"        this.status \u003d status;","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"mokdarren"},"content":"     * Converts a given {@code Status} into this class for Jackson use.","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"mokdarren"},"content":"    public JsonAdaptedStatus(Status source) {","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"mokdarren"},"content":"        status \u003d source.toString();","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"mokdarren"},"content":"    @JsonValue","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"mokdarren"},"content":"    public String getStatus() {","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"mokdarren"},"content":"        return status;","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"mokdarren"},"content":"     * Converts this Jackson-friendly adapted status object into the model\u0027s {@code Status} object.","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"mokdarren"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"mokdarren"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted status.","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"mokdarren"},"content":"    public Status toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"mokdarren"},"content":"        if (!Status.contains(status)) {","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"mokdarren"},"content":"            throw new IllegalValueException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"mokdarren"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"mokdarren"},"content":"        return Status.valueOf(status);","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"mokdarren"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"mokdarren":48}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTodo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.Todo;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":" * Jackson-friendly version of {@link Todo}.","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"class JsonAdaptedTodo {","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Todo\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"    private final String description;","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"    private final boolean isDone;","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"     * Constructs a {@code JsonAdaptedTodo} with the given todo details.","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"    public JsonAdaptedTodo(@JsonProperty(\"description\") String description,","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"                           @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"                           @JsonProperty(\"isDone\") boolean isDone) {","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"kslui99"},"content":"     * Converts a given {@code Todo} into this class for Jackson use.","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"kslui99"},"content":"    public JsonAdaptedTodo(Todo source) {","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"kslui99"},"content":"        description \u003d source.getDescription();","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"kslui99"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"kslui99"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"kslui99"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"kslui99"},"content":"        isDone \u003d source.isDone();","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"kslui99"},"content":"     * Converts this Jackson-friendly adapted todo object into the model\u0027s {@code Todo} object.","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"kslui99"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted todo.","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"kslui99"},"content":"    public Todo toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"kslui99"},"content":"        final List\u003cTag\u003e todoTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"kslui99"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"kslui99"},"content":"            todoTags.add(tag.toModelType());","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"kslui99"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"kslui99"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"description\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"kslui99"},"content":"        final String modelDescription \u003d description;","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"kslui99"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(todoTags);","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"kslui99"},"content":"        final boolean modelIsDone \u003d isDone;","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"kslui99"},"content":"        return new Todo(modelDescription, modelTags, modelIsDone);","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"kslui99":75}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.model.customGoal.CustomGoal;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.event.Schedule;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.Todo;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"whoisjustinngo"},"content":"    public static final String MESSAGE_DUPLICATE_GOAL \u003d \"Custom Goals list contains duplicate custom goal(s).\";","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"    public static final String MESSAGE_DUPLICATE_TODO \u003d \"Todos list contains duplicate todo(s).\";","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"    public static final String MESSAGE_DUPLICATE_SCHEDULE \u003d \"Schedule list contains duplicate schedule(s).\";","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"whoisjustinngo"},"content":"    private final List\u003cJsonAdaptedCustomGoal\u003e customGoals \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"    private final List\u003cJsonAdaptedTodo\u003e todos \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"    private final List\u003cJsonAdaptedSchedule\u003e schedules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons and todos.","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"whoisjustinngo"},"content":"                                       @JsonProperty(\"customGoals\") List\u003cJsonAdaptedCustomGoal\u003e customGoals,","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"rickyaandrew"},"content":"                                       @JsonProperty(\"todos\") List\u003cJsonAdaptedTodo\u003e todos,","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"rickyaandrew"},"content":"                                       @JsonProperty(\"schedules\") List\u003cJsonAdaptedSchedule\u003e schedules) {","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"whoisjustinngo"},"content":"        this.customGoals.addAll(customGoals);","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"kslui99"},"content":"        this.todos.addAll(todos);","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"rickyaandrew"},"content":"        this.schedules.addAll(schedules);","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"whoisjustinngo"},"content":"        customGoals.addAll(source.getCustomGoalList().stream().map(JsonAdaptedCustomGoal::new)","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"whoisjustinngo"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"kslui99"},"content":"        todos.addAll(source.getTodoList().stream().map(JsonAdaptedTodo::new).collect(Collectors.toList()));","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"rickyaandrew"},"content":"        schedules.addAll(source.getScheduleList().stream().map(JsonAdaptedSchedule::new).collect(Collectors.toList()));","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"whoisjustinngo"},"content":"        for (JsonAdaptedCustomGoal jsonAdaptedCustomGoal : customGoals) {","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"whoisjustinngo"},"content":"            CustomGoal customGoal \u003d jsonAdaptedCustomGoal.toModelType();","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"whoisjustinngo"},"content":"            if (addressBook.hasCustomGoal(customGoal)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"whoisjustinngo"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_GOAL);","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"whoisjustinngo"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"whoisjustinngo"},"content":"            addressBook.addCustomGoal(customGoal);","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"kslui99"},"content":"        for (JsonAdaptedTodo jsonAdaptedTodo : todos) {","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"kslui99"},"content":"            Todo todo \u003d jsonAdaptedTodo.toModelType();","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"kslui99"},"content":"            if (addressBook.hasTodo(todo)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"kslui99"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_TODO);","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"kslui99"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"kslui99"},"content":"            addressBook.addTodo(todo);","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"rickyaandrew"},"content":"        for (JsonAdaptedSchedule jsonAdaptedSchedule : schedules) {","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"rickyaandrew"},"content":"            Schedule schedule \u003d jsonAdaptedSchedule.toModelType();","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"rickyaandrew"},"content":"            if (addressBook.hasSchedule(schedule)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"rickyaandrew"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_SCHEDULE);","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"rickyaandrew"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"rickyaandrew"},"content":"            addressBook.addSchedule(schedule);","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"whoisjustinngo":15,"kslui99":14,"rickyaandrew":17,"-":58}},{"path":"src/main/java/seedu/address/storage/ScheduleStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SpdPnd98"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"SpdPnd98"},"content":"import java.io.File;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"SpdPnd98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"SpdPnd98"},"content":"import java.util.List;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"SpdPnd98"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"SpdPnd98"},"content":"import seedu.address.model.event.Schedule;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"SpdPnd98"},"content":"/**","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"SpdPnd98"},"content":" * Represents a Schedule Storage, exclusively for ics files","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"SpdPnd98"},"content":" */","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"SpdPnd98"},"content":"public interface ScheduleStorage {","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"SpdPnd98"},"content":"    List\u003cSchedule\u003e importSchedule(File file) throws IOException, ParseException;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"SpdPnd98"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"SpdPnd98":15}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"SpdPnd98"},"content":"    private ScheduleStorage importSchedule;","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":79,"SpdPnd98":1}},{"path":"src/main/java/seedu/address/ui/AnalyticsPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"whoisjustinngo"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"whoisjustinngo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"whoisjustinngo"},"content":"import java.time.temporal.IsoFields;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"whoisjustinngo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"whoisjustinngo"},"content":"import javafx.collections.ListChangeListener;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"whoisjustinngo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"whoisjustinngo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"whoisjustinngo"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"whoisjustinngo"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.model.analytics.ClientAnalytics;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"whoisjustinngo"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"whoisjustinngo"},"content":" * Panel containing the list of CustomGoals.","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"whoisjustinngo"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"whoisjustinngo"},"content":"public class AnalyticsPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"whoisjustinngo"},"content":"    private static final String FXML \u003d \"AnalyticsPanel.fxml\";","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"whoisjustinngo"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(AnalyticsPanel.class);","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"whoisjustinngo"},"content":"    @FXML","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"whoisjustinngo"},"content":"    private Label freshCount;","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"whoisjustinngo"},"content":"    @FXML","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"whoisjustinngo"},"content":"    private Label approachedCount;","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"whoisjustinngo"},"content":"    @FXML","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"whoisjustinngo"},"content":"    private Label pitchedCount;","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"whoisjustinngo"},"content":"    @FXML","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"whoisjustinngo"},"content":"    private Label negotiatedCount;","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"whoisjustinngo"},"content":"    @FXML","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"whoisjustinngo"},"content":"    private Label closedCount;","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"whoisjustinngo"},"content":"    private final ClientAnalytics clientAnalytics;","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"whoisjustinngo"},"content":"    private final ObservableList\u003cInteger\u003e counts;","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"whoisjustinngo"},"content":"     * Creates a {@code AnalyticsPanel} that observes values in the provided {@code Analytics} object.","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"whoisjustinngo"},"content":"    public AnalyticsPanel(ClientAnalytics clientAnalytics) {","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"whoisjustinngo"},"content":"        super(FXML);","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"whoisjustinngo"},"content":"        this.clientAnalytics \u003d clientAnalytics;","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"whoisjustinngo"},"content":"        this.counts \u003d this.clientAnalytics.getValues();","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"whoisjustinngo"},"content":"        this.counts.addListener(new ListChangeListener\u003cInteger\u003e() {","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"whoisjustinngo"},"content":"            @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"whoisjustinngo"},"content":"            public void onChanged(Change\u003c? extends Integer\u003e c) {","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"whoisjustinngo"},"content":"                System.out.println(\"list change detected\");","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"whoisjustinngo"},"content":"                System.out.println(c);","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"whoisjustinngo"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"whoisjustinngo"},"content":"        });","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"whoisjustinngo"},"content":"        updateValues();","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"whoisjustinngo"},"content":"    public static String getHeader() {","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"whoisjustinngo"},"content":"        int currentQuarter \u003d LocalDateTime.now().get(IsoFields.QUARTER_OF_YEAR);","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"whoisjustinngo"},"content":"        return \"Q\" + Integer.toString(currentQuarter) + \" values:\";","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"whoisjustinngo"},"content":"    private void updateValues() {","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"whoisjustinngo"},"content":"        this.freshCount","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"mokdarren"},"content":"                .setText(Integer.toString(this.clientAnalytics.getValueOfTrackedField(Status.FRESH)));","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"whoisjustinngo"},"content":"        this.approachedCount","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"mokdarren"},"content":"                .setText(Integer.toString(this.clientAnalytics.getValueOfTrackedField(Status.APPROACHED)));","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"whoisjustinngo"},"content":"        this.pitchedCount","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"mokdarren"},"content":"                .setText(Integer.toString(this.clientAnalytics.getValueOfTrackedField(Status.PITCHED)));","lastModifiedDate":"2021-10-29"},{"lineNumber":72,"author":{"gitId":"whoisjustinngo"},"content":"        this.negotiatedCount","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"mokdarren"},"content":"                .setText(Integer.toString(this.clientAnalytics.getValueOfTrackedField(Status.NEGOTIATED)));","lastModifiedDate":"2021-10-29"},{"lineNumber":74,"author":{"gitId":"whoisjustinngo"},"content":"        this.closedCount","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"mokdarren"},"content":"                .setText(Integer.toString(this.clientAnalytics.getValueOfTrackedField(Status.CLOSED)));","lastModifiedDate":"2021-10-29"},{"lineNumber":76,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"whoisjustinngo":71,"mokdarren":6}},{"path":"src/main/java/seedu/address/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"SpdPnd98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"SpdPnd98"},"content":"import net.fortuna.ical4j.data.ParserException;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"SpdPnd98"},"content":"        } catch (CommandException | ParseException | ParserException | IOException | java.text.ParseException e) {","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"         * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"SpdPnd98"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException,","lastModifiedDate":"2021-10-28"},{"lineNumber":86,"author":{"gitId":"SpdPnd98"},"content":"                ParserException, IOException, java.text.ParseException;","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"-":83,"SpdPnd98":6}},{"path":"src/main/java/seedu/address/ui/CustomGoalCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"whoisjustinngo"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"whoisjustinngo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"whoisjustinngo"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"whoisjustinngo"},"content":"import javafx.scene.control.ProgressBar;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"whoisjustinngo"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"whoisjustinngo"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.model.customGoal.CustomGoal;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"whoisjustinngo"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"whoisjustinngo"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"whoisjustinngo"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"whoisjustinngo"},"content":"public class CustomGoalCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"whoisjustinngo"},"content":"    private static final String FXML \u003d \"CustomGoalCard.fxml\";","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"whoisjustinngo"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"whoisjustinngo"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"whoisjustinngo"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"whoisjustinngo"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"whoisjustinngo"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"whoisjustinngo"},"content":"    public final CustomGoal customGoal;","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"whoisjustinngo"},"content":"    @FXML","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"whoisjustinngo"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"whoisjustinngo"},"content":"    @FXML","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"whoisjustinngo"},"content":"    private Label id;","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"whoisjustinngo"},"content":"    @FXML","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"whoisjustinngo"},"content":"    private Label description;","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"whoisjustinngo"},"content":"    @FXML","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"whoisjustinngo"},"content":"    private Label progress;","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"whoisjustinngo"},"content":"    @FXML","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"whoisjustinngo"},"content":"    private Label goal;","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"whoisjustinngo"},"content":"    @FXML","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"whoisjustinngo"},"content":"    private Label dateEnd;","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"whoisjustinngo"},"content":"    @FXML","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"whoisjustinngo"},"content":"    private Label timeEnd;","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"whoisjustinngo"},"content":"    @FXML","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"whoisjustinngo"},"content":"    private ProgressBar progressBar;","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"whoisjustinngo"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"whoisjustinngo"},"content":"    public CustomGoalCard(CustomGoal customGoal, int displayedIndex) {","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"whoisjustinngo"},"content":"        super(FXML);","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"whoisjustinngo"},"content":"        this.customGoal \u003d customGoal;","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"whoisjustinngo"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"whoisjustinngo"},"content":"        description.setText(customGoal.getDescription());","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"whoisjustinngo"},"content":"        progress.setText(customGoal.getProgressValue());","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"whoisjustinngo"},"content":"        if (customGoal.isComplete()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"whoisjustinngo"},"content":"            progress.setStyle(\"-fx-text-fill: CHARTREUSE\");","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"whoisjustinngo"},"content":"        if (customGoal.isOverdue()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"whoisjustinngo"},"content":"            dateEnd.setStyle(\"-fx-text-fill: RED\");","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"whoisjustinngo"},"content":"            timeEnd.setStyle(\"-fx-text-fill: RED\");","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"whoisjustinngo"},"content":"        goal.setText(customGoal.getGoalValue());","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"whoisjustinngo"},"content":"        dateEnd.setText(customGoal.getEndDateValue());","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"whoisjustinngo"},"content":"        timeEnd.setText(customGoal.getEndTimeValue());","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"whoisjustinngo"},"content":"        progressBar.setProgress(((float) customGoal.getProgress() / (float) customGoal.getGoal()));","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"whoisjustinngo"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"whoisjustinngo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"whoisjustinngo"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"whoisjustinngo"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"whoisjustinngo"},"content":"            return true;","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"whoisjustinngo"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"whoisjustinngo"},"content":"        if (!(other instanceof CustomGoalCard)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"whoisjustinngo"},"content":"            return false;","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"whoisjustinngo"},"content":"        // state check","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"whoisjustinngo"},"content":"        CustomGoalCard card \u003d (CustomGoalCard) other;","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"whoisjustinngo"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"whoisjustinngo"},"content":"                \u0026\u0026 customGoal.equals(card.customGoal);","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"whoisjustinngo":83}},{"path":"src/main/java/seedu/address/ui/CustomGoalListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"whoisjustinngo"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"whoisjustinngo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"whoisjustinngo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"whoisjustinngo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"whoisjustinngo"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"whoisjustinngo"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"whoisjustinngo"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.model.customGoal.CustomGoal;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"whoisjustinngo"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"whoisjustinngo"},"content":" * Panel containing the list of CustomGoals.","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"whoisjustinngo"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"whoisjustinngo"},"content":"public class CustomGoalListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"whoisjustinngo"},"content":"    private static final String FXML \u003d \"CustomGoalPanel.fxml\";","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"whoisjustinngo"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(CustomGoalListPanel.class);","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"whoisjustinngo"},"content":"    @FXML","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"whoisjustinngo"},"content":"    private ListView\u003cCustomGoal\u003e customGoalListView;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"whoisjustinngo"},"content":"     * Creates a {@code CustomGoalPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"whoisjustinngo"},"content":"    public CustomGoalListPanel(ObservableList\u003cCustomGoal\u003e customGoalList) {","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"whoisjustinngo"},"content":"        super(FXML);","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"whoisjustinngo"},"content":"        customGoalListView.setItems(customGoalList);","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"whoisjustinngo"},"content":"        customGoalListView.setCellFactory(listView -\u003e new CustomGoalListViewCell());","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"whoisjustinngo"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"whoisjustinngo"},"content":"     * Custom {@code ListCell} that displays the details of a {@code CustomGoal} using a {@code CustomGoalCard}.","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"whoisjustinngo"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"whoisjustinngo"},"content":"    class CustomGoalListViewCell extends ListCell\u003cCustomGoal\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"whoisjustinngo"},"content":"        @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"whoisjustinngo"},"content":"        protected void updateItem(CustomGoal customGoal, boolean empty) {","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"whoisjustinngo"},"content":"            super.updateItem(customGoal, empty);","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"whoisjustinngo"},"content":"            if (empty || customGoal \u003d\u003d null) {","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"whoisjustinngo"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"whoisjustinngo"},"content":"                setText(null);","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"whoisjustinngo"},"content":"            } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"whoisjustinngo"},"content":"                setGraphic(new CustomGoalCard(customGoal, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"whoisjustinngo"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"whoisjustinngo":49}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"whoisjustinngo"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s1-cs2103-t14-4.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"whoisjustinngo":1,"-":101}},{"path":"src/main/java/seedu/address/ui/ImportWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SpdPnd98"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"SpdPnd98"},"content":"import java.io.File;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"SpdPnd98"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"SpdPnd98"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"SpdPnd98"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"SpdPnd98"},"content":"import javafx.stage.FileChooser;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"SpdPnd98"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"SpdPnd98"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"SpdPnd98"},"content":"/**","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"SpdPnd98"},"content":" * Controller for the Import page","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"SpdPnd98"},"content":" */","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"SpdPnd98"},"content":"public class ImportWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"SpdPnd98"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"SpdPnd98"},"content":"    private static final String FXML \u003d \"ImportWindow.fxml\";","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"SpdPnd98"},"content":"    private File icsFile;","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"SpdPnd98"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"SpdPnd98"},"content":"    private AnchorPane importWindowAnchorPane;","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"SpdPnd98"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"SpdPnd98"},"content":"     * Creates a new ImportWindow.","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"SpdPnd98"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"SpdPnd98"},"content":"     * @param root Stage to use as the root of the ImportWindow.","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"SpdPnd98"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"SpdPnd98"},"content":"    public ImportWindow(Stage root) {","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"SpdPnd98"},"content":"        super(FXML, root);","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"SpdPnd98"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"SpdPnd98"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"SpdPnd98"},"content":"     * Creates a new ImportWindow.","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"SpdPnd98"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"SpdPnd98"},"content":"    public ImportWindow() {","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"SpdPnd98"},"content":"        this(new Stage());","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"SpdPnd98"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"SpdPnd98"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"SpdPnd98"},"content":"     * Gets the file that is opened","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"SpdPnd98"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"SpdPnd98"},"content":"    public File getIcsFile() {","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"SpdPnd98"},"content":"        return icsFile;","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"SpdPnd98"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"SpdPnd98"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"SpdPnd98"},"content":"     * Shows the help window.","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"SpdPnd98"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"SpdPnd98"},"content":"     * \u003cul\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"SpdPnd98"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"SpdPnd98"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"SpdPnd98"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"SpdPnd98"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"SpdPnd98"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"SpdPnd98"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"SpdPnd98"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"SpdPnd98"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"SpdPnd98"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"SpdPnd98"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"SpdPnd98"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"SpdPnd98"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"SpdPnd98"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"SpdPnd98"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"SpdPnd98"},"content":"    public void show() {","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"SpdPnd98"},"content":"        logger.fine(\"Showing import schedule page.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"SpdPnd98"},"content":"        FileChooser fileChooser \u003d new FileChooser();","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"SpdPnd98"},"content":"        fileChooser.setTitle(\"Import a Schedule\");","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"SpdPnd98"},"content":"        Stage stage \u003d (Stage) importWindowAnchorPane.getScene().getWindow();","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"SpdPnd98"},"content":"        icsFile \u003d fileChooser.showOpenDialog(stage);","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"SpdPnd98"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"SpdPnd98"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"SpdPnd98":73}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"SpdPnd98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"SpdPnd98"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"SpdPnd98"},"content":"import java.util.List;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"whoisjustinngo"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"whoisjustinngo"},"content":"import javafx.scene.control.SplitPane;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"whoisjustinngo"},"content":"import javafx.scene.control.Tab;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"whoisjustinngo"},"content":"import javafx.scene.control.TabPane;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":19,"author":{"gitId":"whoisjustinngo"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"SpdPnd98"},"content":"import net.fortuna.ical4j.data.ParserException;","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"SpdPnd98"},"content":"import seedu.address.model.TabSwitch;","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":" * The Main Window. Provides the basic application layout containing a menu bar","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":" * and space where other JavaFX elements can be placed.","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"whoisjustinngo"},"content":"    private AnalyticsPanel analyticsSection;","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"whoisjustinngo"},"content":"    private CustomGoalListPanel customGoalSection;","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"whoisjustinngo"},"content":"    private ScheduleListPanel dashboardScheduleSection;","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"whoisjustinngo"},"content":"    private TodoListPanel dashboardTodoSection;","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"mokdarren"},"content":"    private PersonDetailedPanel personDetailedPanel;","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"mokdarren"},"content":"    private PolicyListPanel policyListPanel;","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"mokdarren"},"content":"    private NotesPanel notesPanel;","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"kslui99"},"content":"    private TodoListPanel todoListPanel;","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"rickyaandrew"},"content":"    private ScheduleListPanel scheduleListPanel;","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":56,"author":{"gitId":"SpdPnd98"},"content":"    private ImportWindow importWindow;","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"whoisjustinngo"},"content":"    @FXML","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"whoisjustinngo"},"content":"    private TabPane tabs;","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"whoisjustinngo"},"content":"    @FXML","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"whoisjustinngo"},"content":"    private Tab dashboardTab;","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"whoisjustinngo"},"content":"    @FXML","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"whoisjustinngo"},"content":"    private Tab contactsTab;","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"whoisjustinngo"},"content":"    @FXML","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"whoisjustinngo"},"content":"    private Tab scheduleTab;","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"whoisjustinngo"},"content":"    @FXML","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"whoisjustinngo"},"content":"    private Tab todosTab;","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"whoisjustinngo"},"content":"    @FXML","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"whoisjustinngo"},"content":"    private SplitPane topPane;","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":82,"author":{"gitId":"whoisjustinngo"},"content":"    @FXML","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"whoisjustinngo"},"content":"    private VBox dashboardAnalyticsPlaceholder;","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"whoisjustinngo"},"content":"    @FXML","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"whoisjustinngo"},"content":"    private Label analyticsHeader;","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"whoisjustinngo"},"content":"    @FXML","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"whoisjustinngo"},"content":"    private VBox dashboardCustomGoalsPlaceholder;","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"whoisjustinngo"},"content":"    @FXML","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"whoisjustinngo"},"content":"    private VBox dashboardSchedulePlaceholder;","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"whoisjustinngo"},"content":"    @FXML","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"whoisjustinngo"},"content":"    private VBox dashboardTodosPlaceholder;","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"mokdarren"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":101,"author":{"gitId":"whoisjustinngo"},"content":"    private VBox personDetailedPlaceholder;","lastModifiedDate":"2021-10-29"},{"lineNumber":102,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":103,"author":{"gitId":"mokdarren"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":104,"author":{"gitId":"whoisjustinngo"},"content":"    private VBox policyListPanelPlaceholder;","lastModifiedDate":"2021-10-29"},{"lineNumber":105,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":106,"author":{"gitId":"mokdarren"},"content":"    @FXML","lastModifiedDate":"2021-10-29"},{"lineNumber":107,"author":{"gitId":"mokdarren"},"content":"    private VBox notesPlaceholder;","lastModifiedDate":"2021-10-29"},{"lineNumber":108,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":109,"author":{"gitId":"rickyaandrew"},"content":"    @FXML","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"rickyaandrew"},"content":"    private StackPane scheduleListPanelPlaceholder;","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"kslui99"},"content":"    private StackPane todoListPanelPlaceholder;","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":137,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":138,"author":{"gitId":"SpdPnd98"},"content":"        importWindow \u003d new ImportWindow();","lastModifiedDate":"2021-10-28"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":151,"author":{"gitId":"rickyaandrew"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":159,"author":{"gitId":"rickyaandrew"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666 is fixed in later version of","lastModifiedDate":"2021-10-11"},{"lineNumber":160,"author":{"gitId":"rickyaandrew"},"content":"         * SDK.","lastModifiedDate":"2021-10-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":164,"author":{"gitId":"rickyaandrew"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will not","lastModifiedDate":"2021-10-11"},{"lineNumber":165,"author":{"gitId":"rickyaandrew"},"content":"         * work when the focus is in them because the key event is consumed by the","lastModifiedDate":"2021-10-11"},{"lineNumber":166,"author":{"gitId":"rickyaandrew"},"content":"         * TextInputControl(s).","lastModifiedDate":"2021-10-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":169,"author":{"gitId":"rickyaandrew"},"content":"         * help window purposely so to support accelerators even when focus is in","lastModifiedDate":"2021-10-11"},{"lineNumber":170,"author":{"gitId":"rickyaandrew"},"content":"         * CommandBox or ResultDisplay.","lastModifiedDate":"2021-10-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":184,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":185,"author":{"gitId":"whoisjustinngo"},"content":"        analyticsSection \u003d new AnalyticsPanel(logic.getAnalytics());","lastModifiedDate":"2021-10-25"},{"lineNumber":186,"author":{"gitId":"whoisjustinngo"},"content":"        analyticsHeader.setText(AnalyticsPanel.getHeader());","lastModifiedDate":"2021-10-25"},{"lineNumber":187,"author":{"gitId":"whoisjustinngo"},"content":"        dashboardAnalyticsPlaceholder.getChildren().add(analyticsSection.getRoot());","lastModifiedDate":"2021-10-25"},{"lineNumber":188,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":189,"author":{"gitId":"whoisjustinngo"},"content":"        customGoalSection \u003d new CustomGoalListPanel(logic.getFilteredCustomGoalList());","lastModifiedDate":"2021-10-24"},{"lineNumber":190,"author":{"gitId":"whoisjustinngo"},"content":"        dashboardCustomGoalsPlaceholder.getChildren().add(customGoalSection.getRoot());","lastModifiedDate":"2021-10-25"},{"lineNumber":191,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":195,"author":{"gitId":"mokdarren"},"content":"        personDetailedPanel \u003d new PersonDetailedPanel(logic.getSelectedPersonList());","lastModifiedDate":"2021-10-28"},{"lineNumber":196,"author":{"gitId":"mokdarren"},"content":"        personDetailedPlaceholder.getChildren().add(personDetailedPanel.getRoot());","lastModifiedDate":"2021-10-28"},{"lineNumber":197,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":198,"author":{"gitId":"mokdarren"},"content":"        policyListPanel \u003d new PolicyListPanel(logic.getSelectedPersonList());","lastModifiedDate":"2021-10-28"},{"lineNumber":199,"author":{"gitId":"mokdarren"},"content":"        policyListPanelPlaceholder.getChildren().add(policyListPanel.getRoot());","lastModifiedDate":"2021-10-28"},{"lineNumber":200,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":201,"author":{"gitId":"mokdarren"},"content":"        notesPanel \u003d new NotesPanel(logic.getSelectedPersonList());","lastModifiedDate":"2021-10-29"},{"lineNumber":202,"author":{"gitId":"mokdarren"},"content":"        notesPlaceholder.getChildren().add(notesPanel.getRoot());","lastModifiedDate":"2021-10-29"},{"lineNumber":203,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":204,"author":{"gitId":"kslui99"},"content":"        todoListPanel \u003d new TodoListPanel(logic.getFilteredTodoList());","lastModifiedDate":"2021-10-10"},{"lineNumber":205,"author":{"gitId":"kslui99"},"content":"        todoListPanelPlaceholder.getChildren().add(todoListPanel.getRoot());","lastModifiedDate":"2021-10-10"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":207,"author":{"gitId":"rickyaandrew"},"content":"        scheduleListPanel \u003d new ScheduleListPanel(logic.getFilteredScheduleList());","lastModifiedDate":"2021-10-11"},{"lineNumber":208,"author":{"gitId":"rickyaandrew"},"content":"        scheduleListPanelPlaceholder.getChildren().add(scheduleListPanel.getRoot());","lastModifiedDate":"2021-10-11"},{"lineNumber":209,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":210,"author":{"gitId":"whoisjustinngo"},"content":"        dashboardScheduleSection \u003d new ScheduleListPanel(logic.getFilteredScheduleList());","lastModifiedDate":"2021-10-11"},{"lineNumber":211,"author":{"gitId":"whoisjustinngo"},"content":"        dashboardTodoSection \u003d new TodoListPanel(logic.getFilteredTodoList());","lastModifiedDate":"2021-10-11"},{"lineNumber":212,"author":{"gitId":"whoisjustinngo"},"content":"        dashboardSchedulePlaceholder.getChildren().add(dashboardScheduleSection.getRoot());","lastModifiedDate":"2021-10-25"},{"lineNumber":213,"author":{"gitId":"whoisjustinngo"},"content":"        dashboardTodosPlaceholder.getChildren().add(dashboardTodoSection.getRoot());","lastModifiedDate":"2021-10-25"},{"lineNumber":214,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":223,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":224,"author":{"gitId":"whoisjustinngo"},"content":"        topPane.setDividerPosition(0, 0.2);","lastModifiedDate":"2021-10-27"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":240,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":241,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":251,"author":{"gitId":"SpdPnd98"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":252,"author":{"gitId":"SpdPnd98"},"content":"     * Opens the OS\u0027s default file browser and allows user to select an ics file of their choice.","lastModifiedDate":"2021-10-28"},{"lineNumber":253,"author":{"gitId":"SpdPnd98"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":254,"author":{"gitId":"SpdPnd98"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":255,"author":{"gitId":"SpdPnd98"},"content":"    public void handleImport() {","lastModifiedDate":"2021-10-28"},{"lineNumber":256,"author":{"gitId":"SpdPnd98"},"content":"        try {","lastModifiedDate":"2021-10-28"},{"lineNumber":257,"author":{"gitId":"SpdPnd98"},"content":"            importWindow.show();","lastModifiedDate":"2021-10-28"},{"lineNumber":258,"author":{"gitId":"SpdPnd98"},"content":"            logic.importSchedule(importWindow.getIcsFile());","lastModifiedDate":"2021-10-28"},{"lineNumber":259,"author":{"gitId":"SpdPnd98"},"content":"            resultDisplay.setFeedbackToUser(\"Successfully imported schedule!\");","lastModifiedDate":"2021-10-28"},{"lineNumber":260,"author":{"gitId":"SpdPnd98"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-28"},{"lineNumber":261,"author":{"gitId":"SpdPnd98"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2021-10-28"},{"lineNumber":262,"author":{"gitId":"SpdPnd98"},"content":"        } catch (ParserException | ParseException | java.text.ParseException e) {","lastModifiedDate":"2021-10-28"},{"lineNumber":263,"author":{"gitId":"SpdPnd98"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2021-10-28"},{"lineNumber":264,"author":{"gitId":"SpdPnd98"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2021-10-28"},{"lineNumber":265,"author":{"gitId":"SpdPnd98"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2021-10-28"},{"lineNumber":266,"author":{"gitId":"SpdPnd98"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":267,"author":{"gitId":"SpdPnd98"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":268,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":274,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":275,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2021-10-10"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2021-10-10"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":289,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":290,"author":{"gitId":"SpdPnd98"},"content":"    @FXML","lastModifiedDate":"2021-10-10"},{"lineNumber":291,"author":{"gitId":"SpdPnd98"},"content":"    private void handleSwitchTab(TabSwitch.Tab tabId) {","lastModifiedDate":"2021-10-10"},{"lineNumber":292,"author":{"gitId":"SpdPnd98"},"content":"        tabs.getSelectionModel().select(tabId.getIndex());","lastModifiedDate":"2021-10-10"},{"lineNumber":293,"author":{"gitId":"SpdPnd98"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":294,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":295,"author":{"gitId":"kslui99"},"content":"    public TodoListPanel getTodoListPanel() {","lastModifiedDate":"2021-10-10"},{"lineNumber":296,"author":{"gitId":"kslui99"},"content":"        return todoListPanel;","lastModifiedDate":"2021-10-10"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":299,"author":{"gitId":"rickyaandrew"},"content":"    public ScheduleListPanel getScheduleListPanel() {","lastModifiedDate":"2021-10-11"},{"lineNumber":300,"author":{"gitId":"rickyaandrew"},"content":"        return scheduleListPanel;","lastModifiedDate":"2021-10-11"},{"lineNumber":301,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":302,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":304,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":305,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":306,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":307,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":308,"author":{"gitId":"SpdPnd98"},"content":"    private CommandResult executeCommand(String commandText)","lastModifiedDate":"2021-10-28"},{"lineNumber":309,"author":{"gitId":"SpdPnd98"},"content":"            throws CommandException, ParseException {","lastModifiedDate":"2021-10-28"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":311,"author":{"gitId":"whoisjustinngo"},"content":"            String currentTab \u003d this.getSelectedPane();","lastModifiedDate":"2021-10-09"},{"lineNumber":312,"author":{"gitId":"SpdPnd98"},"content":"            List\u003cCommandResult\u003e commandResults \u003d logic.execute(currentTab + \" \" + commandText);","lastModifiedDate":"2021-10-29"},{"lineNumber":313,"author":{"gitId":"SpdPnd98"},"content":"            CommandResult commandResult \u003d commandResults.get(0); // we can assume there will always be at least 1","lastModifiedDate":"2021-10-29"},{"lineNumber":314,"author":{"gitId":"SpdPnd98"},"content":"            for (Iterator\u003cCommandResult\u003e i \u003d commandResults.iterator(); i.hasNext();) {","lastModifiedDate":"2021-10-29"},{"lineNumber":315,"author":{"gitId":"SpdPnd98"},"content":"                commandResult \u003d i.next();","lastModifiedDate":"2021-10-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"                logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":317,"author":{"gitId":"-"},"content":"                resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":319,"author":{"gitId":"-"},"content":"                if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":320,"author":{"gitId":"-"},"content":"                    handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":321,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-12-09"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":323,"author":{"gitId":"-"},"content":"                if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":324,"author":{"gitId":"-"},"content":"                    handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":325,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-12-09"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":327,"author":{"gitId":"SpdPnd98"},"content":"                if (commandResult.isSwitchTab()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":328,"author":{"gitId":"SpdPnd98"},"content":"                    handleSwitchTab(commandResult.getTabId());","lastModifiedDate":"2021-10-10"},{"lineNumber":329,"author":{"gitId":"SpdPnd98"},"content":"                }","lastModifiedDate":"2021-10-10"},{"lineNumber":330,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-10-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":332,"author":{"gitId":"SpdPnd98"},"content":"            if (commandResult.isShowImport()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":333,"author":{"gitId":"SpdPnd98"},"content":"                handleImport();","lastModifiedDate":"2021-10-28"},{"lineNumber":334,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-10-28"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":336,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":338,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":339,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":340,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":343,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":344,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":345,"author":{"gitId":"whoisjustinngo"},"content":"    public String getSelectedPane() {","lastModifiedDate":"2021-10-09"},{"lineNumber":346,"author":{"gitId":"whoisjustinngo"},"content":"        return tabs.getSelectionModel().getSelectedItem().getId();","lastModifiedDate":"2021-10-09"},{"lineNumber":347,"author":{"gitId":"whoisjustinngo"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":348,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"whoisjustinngo":63,"kslui99":7,"rickyaandrew":21,"-":195,"SpdPnd98":43,"mokdarren":19}},{"path":"src/main/java/seedu/address/ui/NotesPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mokdarren"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"mokdarren"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"mokdarren"},"content":"import javafx.collections.ListChangeListener;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"mokdarren"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"mokdarren"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"mokdarren"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"mokdarren"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"mokdarren"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"mokdarren"},"content":"/**","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"mokdarren"},"content":" * Panel containing the list of CustomGoals.","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"mokdarren"},"content":" */","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"mokdarren"},"content":"public class NotesPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"mokdarren"},"content":"    private static final String FXML \u003d \"NotesPanel.fxml\";","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"mokdarren"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PolicyListPanel.class);","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"mokdarren"},"content":"    @FXML","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"mokdarren"},"content":"    private TextArea notesDisplay;","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"mokdarren"},"content":"    private ObservableList\u003cPerson\u003e selectedPersons;","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"mokdarren"},"content":"     * Creates a {@code NotesPanel} with the given {@code selectedPersons}.","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"mokdarren"},"content":"    public NotesPanel(ObservableList\u003cPerson\u003e selectedPersons) {","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"mokdarren"},"content":"        super(FXML);","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"mokdarren"},"content":"        this.selectedPersons \u003d selectedPersons;","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"mokdarren"},"content":"        this.selectedPersons.addListener(new ListChangeListener\u003cPerson\u003e() {","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"mokdarren"},"content":"            @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"mokdarren"},"content":"            public void onChanged(Change\u003c? extends Person\u003e c) {","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"mokdarren"},"content":"                updateValues();","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"mokdarren"},"content":"            }","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"mokdarren"},"content":"        });","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"mokdarren"},"content":"        updateValues();","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"mokdarren"},"content":"    private void updateValues() {","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"SpdPnd98"},"content":"        String toDisplay \u003d selectedPersons.size() \u003d\u003d 0 ? \"\" : selectedPersons.get(0).getNotes();","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"SpdPnd98"},"content":"        notesDisplay.setText(toDisplay);","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"mokdarren"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"SpdPnd98":2,"mokdarren":40}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"mokdarren"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"mokdarren"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"mokdarren"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"mokdarren"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"mokdarren"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"mokdarren"},"content":"    private Label relationship;","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"mokdarren"},"content":"    @FXML","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"mokdarren"},"content":"        relationship.setText(person.getRelationship().value);","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"mokdarren"},"content":"        Label status \u003d new Label(person.getStatus().name());","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"mokdarren"},"content":"        status.setBackground(new Background(new BackgroundFill(Color.rgb(33, 22, 80, 0.7),","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"mokdarren"},"content":"                new CornerRadii(5.0), new Insets(-5.0))));","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"mokdarren"},"content":"        if (person.getRelationship().value.equals(\"client\")) {","lastModifiedDate":"2021-10-29"},{"lineNumber":69,"author":{"gitId":"mokdarren"},"content":"            tags.getChildren().add(status);","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"mokdarren"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"-":77,"mokdarren":16}},{"path":"src/main/java/seedu/address/ui/PersonDetailedPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mokdarren"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"mokdarren"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"mokdarren"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"mokdarren"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"mokdarren"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"mokdarren"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"mokdarren"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"mokdarren"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"mokdarren"},"content":"/**","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"mokdarren"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"mokdarren"},"content":" */","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"mokdarren"},"content":"public class PersonDetailedPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"mokdarren"},"content":"    private static final String FXML \u003d \"PersonDetailedPanel.fxml\";","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"mokdarren"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"mokdarren"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"mokdarren"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"mokdarren"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"mokdarren"},"content":"    public PersonDetailedPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"mokdarren"},"content":"        super(FXML);","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"mokdarren"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"mokdarren"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"mokdarren"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"mokdarren"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"mokdarren"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"mokdarren"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"mokdarren"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"mokdarren"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"mokdarren"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"mokdarren"},"content":"                setText(null);","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"mokdarren"},"content":"            } else {","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"mokdarren"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"mokdarren"},"content":"            }","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"mokdarren"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"mokdarren"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"mokdarren":48}},{"path":"src/main/java/seedu/address/ui/PolicyListCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mokdarren"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"mokdarren"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"mokdarren"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"mokdarren"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"mokdarren"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Policy;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"mokdarren"},"content":"/**","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"mokdarren"},"content":" * An UI component that displays information of a {@code Policy}.","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"mokdarren"},"content":" */","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"mokdarren"},"content":"public class PolicyListCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"mokdarren"},"content":"    private static final String FXML \u003d \"PolicyListCard.fxml\";","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"mokdarren"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"mokdarren"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"mokdarren"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"mokdarren"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"mokdarren"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"mokdarren"},"content":"    public final Policy policy;","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"mokdarren"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"mokdarren"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"mokdarren"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"mokdarren"},"content":"    private Label insurer;","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"mokdarren"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"mokdarren"},"content":"    private Label policyName;","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"mokdarren"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"mokdarren"},"content":"    private Label id;","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"mokdarren"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"mokdarren"},"content":"    private Label policyNumber;","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"mokdarren"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"mokdarren"},"content":"    private Label commission;","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"mokdarren"},"content":"     * Creates a {@code PolicyCode} with the given {@code Policy} and index to display.","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"mokdarren"},"content":"    public PolicyListCard(Policy policy, int displayedIndex) {","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"mokdarren"},"content":"        super(FXML);","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"mokdarren"},"content":"        this.policy \u003d policy;","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"mokdarren"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"mokdarren"},"content":"        insurer.setText(policy.getInsurer().fullName);","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"mokdarren"},"content":"        policyName.setText(policy.getName().fullName);","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"mokdarren"},"content":"        policyNumber.setText(policy.getAsNumberString());","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"mokdarren"},"content":"        commission.setText(policy.getCommissionAsString());","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"mokdarren"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"mokdarren"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"mokdarren"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"mokdarren"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"mokdarren"},"content":"            return true;","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"mokdarren"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"mokdarren"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"mokdarren"},"content":"        if (!(other instanceof PolicyListCard)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"mokdarren"},"content":"            return false;","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"mokdarren"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"mokdarren"},"content":"        // state check","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"mokdarren"},"content":"        PolicyListCard card \u003d (PolicyListCard) other;","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"mokdarren"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"mokdarren"},"content":"                \u0026\u0026 policy.equals(card.policy);","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"mokdarren"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"mokdarren":69}},{"path":"src/main/java/seedu/address/ui/PolicyListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mokdarren"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"mokdarren"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"SpdPnd98"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"mokdarren"},"content":"import java.util.List;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"mokdarren"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"mokdarren"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"mokdarren"},"content":"import javafx.collections.ListChangeListener;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"mokdarren"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"mokdarren"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"mokdarren"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"mokdarren"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"mokdarren"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"mokdarren"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Policy;","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"mokdarren"},"content":"/**","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"mokdarren"},"content":" * Panel containing the list of CustomGoals.","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"mokdarren"},"content":" */","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"mokdarren"},"content":"public class PolicyListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"mokdarren"},"content":"    private static final String FXML \u003d \"PolicyPanel.fxml\";","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"mokdarren"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PolicyListPanel.class);","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"mokdarren"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"mokdarren"},"content":"    private ListView\u003cPolicy\u003e policiesListView;","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"mokdarren"},"content":"    private ObservableList\u003cPerson\u003e selectedPersons;","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"mokdarren"},"content":"    private ObservableList\u003cPolicy\u003eobservablePolicies;","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"mokdarren"},"content":"    private List\u003cPolicy\u003e policies;","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"mokdarren"},"content":"     * Creates a {@code PolicyPanel} with the given {@code selectedList}.","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"mokdarren"},"content":"    public PolicyListPanel(ObservableList\u003cPerson\u003e selectedPersons) {","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"mokdarren"},"content":"        super(FXML);","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"mokdarren"},"content":"        this.selectedPersons \u003d selectedPersons;","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"mokdarren"},"content":"        this.selectedPersons.addListener(new ListChangeListener\u003cPerson\u003e() {","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"mokdarren"},"content":"            @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"mokdarren"},"content":"            public void onChanged(Change\u003c? extends Person\u003e c) {","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"mokdarren"},"content":"                updateValues();","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"mokdarren"},"content":"            }","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"mokdarren"},"content":"        });","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"mokdarren"},"content":"        updateValues();","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"mokdarren"},"content":"    private void updateValues() {","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"SpdPnd98"},"content":"        HashSet\u003cPolicy\u003e noPolicy \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"SpdPnd98"},"content":"        this.policies \u003d new ArrayList\u003cPolicy\u003e(selectedPersons.size() \u003e 0","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"SpdPnd98"},"content":"                ? selectedPersons.get(0).getPolicies()","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"SpdPnd98"},"content":"                : noPolicy);","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"mokdarren"},"content":"        this.observablePolicies \u003d FXCollections.observableList(policies);","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"mokdarren"},"content":"        policiesListView.setItems(observablePolicies);","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"mokdarren"},"content":"        policiesListView.setCellFactory(listView -\u003e new PolicyListViewCell());","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"mokdarren"},"content":"     * Custom {@code ListCell} that displays the details of a {@code Policy} using a {@code PolicyListCard}.","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"mokdarren"},"content":"    class PolicyListViewCell extends ListCell\u003cPolicy\u003e {","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"mokdarren"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"mokdarren"},"content":"        protected void updateItem(Policy policy, boolean empty) {","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"mokdarren"},"content":"            super.updateItem(policy, empty);","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"mokdarren"},"content":"            if (empty || policy \u003d\u003d null) {","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"mokdarren"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"mokdarren"},"content":"                setText(null);","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"mokdarren"},"content":"            } else {","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"mokdarren"},"content":"                setGraphic(new PolicyListCard(policy, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"mokdarren"},"content":"            }","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"mokdarren"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"mokdarren"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"SpdPnd98":5,"mokdarren":66}},{"path":"src/main/java/seedu/address/ui/ScheduleCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.event.Schedule;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":" * An UI component that displays information of a {@code Schedule}.","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"public class ScheduleCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"    private static final String FXML \u003d \"ScheduleListCard.fxml\";","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"     * keywords in JavaFX. As a consequence, UI elements\u0027 variable names cannot be","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"     * set to such keywords or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"     *      issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"    public final Schedule schedule;","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"    @FXML","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"    @FXML","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"    private Label id;","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"    @FXML","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"    private Label description;","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"    @FXML","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"    private Label date;","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"    @FXML","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"    private Label time;","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"    @FXML","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"    private FlowPane tags;","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"rickyaandrew"},"content":"     * Creates a {@code ScheduleCard} with the given {@code Schedule} and index to","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"rickyaandrew"},"content":"     * display.","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"rickyaandrew"},"content":"    public ScheduleCard(Schedule schedule, int displayedIndex) {","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"rickyaandrew"},"content":"        super(FXML);","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"rickyaandrew"},"content":"        this.schedule \u003d schedule;","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"rickyaandrew"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"rickyaandrew"},"content":"        description.setText(schedule.getDescription());","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"rickyaandrew"},"content":"        date.setText(schedule.getDate());","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"rickyaandrew"},"content":"        time.setText(String.format(\"%04d - %04d\", schedule.getTimeFrom(), schedule.getTimeTo()));","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"rickyaandrew"},"content":"        schedule.getTags().stream()","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"rickyaandrew"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"rickyaandrew"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"rickyaandrew"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"rickyaandrew"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"rickyaandrew"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"rickyaandrew"},"content":"            return true;","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"rickyaandrew"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"rickyaandrew"},"content":"        if (!(other instanceof TodoCard)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"rickyaandrew"},"content":"            return false;","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"rickyaandrew"},"content":"        // state check","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"rickyaandrew"},"content":"        ScheduleCard card \u003d (ScheduleCard) other;","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"rickyaandrew"},"content":"        return id.getText().equals(card.id.getText()) \u0026\u0026 schedule.equals(card.schedule);","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"rickyaandrew":74}},{"path":"src/main/java/seedu/address/ui/ScheduleListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.event.Schedule;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":" * Panel containing the list of schedules.","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"public class ScheduleListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"    private static final String FXML \u003d \"ScheduleListPanel.fxml\";","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ScheduleListPanel.class);","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"    @FXML","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"    private ListView\u003cSchedule\u003e scheduleListView;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"     * Creates a {@code ScheduleListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"    public ScheduleListPanel(ObservableList\u003cSchedule\u003e scheduleList) {","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"        super(FXML);","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"        scheduleListView.setItems(scheduleList);","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"        scheduleListView.setCellFactory(listView -\u003e new ScheduleListViewCell());","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Schedule} using a {@code ScheduleCard}.","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"    class ScheduleListViewCell extends ListCell\u003cSchedule\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"        protected void updateItem(Schedule schedule, boolean empty) {","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"            super.updateItem(schedule, empty);","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"            if (empty || schedule \u003d\u003d null) {","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"rickyaandrew"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"rickyaandrew"},"content":"                setText(null);","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"rickyaandrew"},"content":"            } else {","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"rickyaandrew"},"content":"                setGraphic(new ScheduleCard(schedule, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"rickyaandrew"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"rickyaandrew":48}},{"path":"src/main/java/seedu/address/ui/TodoCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.Todo;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":" * An UI component that displays information of a {@code Todo}.","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"public class TodoCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"    private static final String FXML \u003d \"TodoListCard.fxml\";","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"    public final Todo todo;","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"    @FXML","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"    @FXML","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"    private Label id;","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"    @FXML","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"    private Label description;","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"    @FXML","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"    private FlowPane tags;","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"kslui99"},"content":"    @FXML","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"    private HBox todoContentHBox;","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"kslui99"},"content":"     * Creates a {@code TodoCard} with the given {@code Todo} and index to display.","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"kslui99"},"content":"    public TodoCard(Todo todo, int displayedIndex) {","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"kslui99"},"content":"        super(FXML);","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"kslui99"},"content":"        this.todo \u003d todo;","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"kslui99"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"kslui99"},"content":"        description.setText(todo.getDescription());","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"kslui99"},"content":"        todo.getTags().stream()","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"kslui99"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"kslui99"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"kslui99"},"content":"        if (todo.isDone()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"kslui99"},"content":"            Label isDoneLabel \u003d new Label(\"done!\");","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"kslui99"},"content":"            isDoneLabel.setId(\"isDoneLabel\");","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"kslui99"},"content":"            todoContentHBox.getChildren().add(isDoneLabel);","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"kslui99"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"kslui99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"kslui99"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"kslui99"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"kslui99"},"content":"            return true;","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"kslui99"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"kslui99"},"content":"        if (!(other instanceof TodoCard)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"kslui99"},"content":"            return false;","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"kslui99"},"content":"        // state check","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"kslui99"},"content":"        TodoCard card \u003d (TodoCard) other;","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"kslui99"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"kslui99"},"content":"                \u0026\u0026 todo.equals(card.todo);","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"kslui99":75}},{"path":"src/main/java/seedu/address/ui/TodoListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.Todo;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":" * Panel containing the list of todos.","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"public class TodoListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"    private static final String FXML \u003d \"TodoListPanel.fxml\";","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TodoListPanel.class);","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"    @FXML","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"    private ListView\u003cTodo\u003e todoListView;","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"     * Creates a {@code TodoListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"    public TodoListPanel(ObservableList\u003cTodo\u003e todoList) {","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"        super(FXML);","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"        todoListView.setItems(todoList);","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"        todoListView.setCellFactory(listView -\u003e new TodoListViewCell());","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Todo} using a {@code TodoCard}.","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"    class TodoListViewCell extends ListCell\u003cTodo\u003e {","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"kslui99"},"content":"        protected void updateItem(Todo todo, boolean empty) {","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"            super.updateItem(todo, empty);","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"kslui99"},"content":"            if (empty || todo \u003d\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"kslui99"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"kslui99"},"content":"                setText(null);","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"kslui99"},"content":"            } else {","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"kslui99"},"content":"                setGraphic(new TodoCard(todo, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"kslui99"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"kslui99":49}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"whoisjustinngo"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/AdvyzeTheme.css\");","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"whoisjustinngo":1,"-":88}},{"path":"src/main/resources/ical4j.properties","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SpdPnd98"},"content":"#","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"SpdPnd98"},"content":"# Licensed to Apereo under one or more contributor license","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"SpdPnd98"},"content":"# agreements. See the NOTICE file distributed with this work","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"SpdPnd98"},"content":"# for additional information regarding copyright ownership.","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"SpdPnd98"},"content":"# Apereo licenses this file to you under the Apache License,","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"SpdPnd98"},"content":"# Version 2.0 (the \"License\"); you may not use this file","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"SpdPnd98"},"content":"# except in compliance with the License.  You may obtain a","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"SpdPnd98"},"content":"# copy of the License at the following location:","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"SpdPnd98"},"content":"#","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"SpdPnd98"},"content":"#   http://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"SpdPnd98"},"content":"#","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"SpdPnd98"},"content":"# Unless required by applicable law or agreed to in writing,","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"SpdPnd98"},"content":"# software distributed under the License is distributed on an","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"SpdPnd98"},"content":"# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"SpdPnd98"},"content":"# KIND, either express or implied.  See the License for the","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"SpdPnd98"},"content":"# specific language governing permissions and limitations","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"SpdPnd98"},"content":"# under the License.","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"SpdPnd98"},"content":"#","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"SpdPnd98"},"content":"# Known optional properties for ical4j:","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"SpdPnd98"},"content":"#net.fortuna.ical4j.parser\u003dnet.fortuna.ical4j.data.HCalendarParserFactory","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"SpdPnd98"},"content":"#net.fortuna.ical4j.timezone.registry\u003dnet.fortuna.ical4j.model.DefaultTimeZoneRegistryFactory","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"SpdPnd98"},"content":"#net.fortuna.ical4j.timezone.update.enabled\u003d{true|false}","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"SpdPnd98"},"content":"#net.fortuna.ical4j.timezone.date.floating\u003d{true|false}","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"SpdPnd98"},"content":"#net.fortuna.ical4j.factory.decoder\u003dnet.fortuna.ical4j.util.DefaultDecoderFactory","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"SpdPnd98"},"content":"#net.fortuna.ical4j.factory.encoder\u003dnet.fortuna.ical4j.util.DefaultEncoderFactory","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"SpdPnd98"},"content":"#net.fortuna.ical4j.recur.maxincrementcount\u003d1000","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"SpdPnd98"},"content":"#ical4j.unfolding.relaxed\u003d{true|false}","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"SpdPnd98"},"content":"#ical4j.parsing.relaxed\u003d{true|false}","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"SpdPnd98"},"content":"#ical4j.validation.relaxed\u003d{true|false}","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"SpdPnd98"},"content":"#ical4j.compatibility.outlook\u003d{true|false}","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"SpdPnd98"},"content":"#ical4j.compatibility.notes\u003d{true|false}","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"SpdPnd98"},"content":"# Values...","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"SpdPnd98"},"content":"ical4j.unfolding.relaxed\u003dtrue","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"SpdPnd98"},"content":"ical4j.compatibility.outlook\u003dtrue","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"SpdPnd98"},"content":"ical4j.compatibility.notes\u003dtrue","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"SpdPnd98"},"content":"ical4j.parsing.relaxed\u003dtrue","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"SpdPnd98"},"content":"ical4j.validation.relaxed\u003dtrue","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"SpdPnd98":39}},{"path":"src/main/resources/view/AdvyzeTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"whoisjustinngo"},"content":".root {","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-font-family: \"Linux Libertine\";","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"whoisjustinngo"},"content":".background {","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-background-color: #F2E9E4;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"whoisjustinngo"},"content":"    background-color: #F2E9E4;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"whoisjustinngo"},"content":".background-with-border {","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-background-color: #F2E9E4;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-border-width: 4px;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-border-color: #7D7E75;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"whoisjustinngo"},"content":".background-with-border-dark {","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-background-color: #7D7E75;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-border-width: 4px;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-border-color: #7D7E75;","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"whoisjustinngo"},"content":".pane-with-border {","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-background-color: #F2E9E4;","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-border-width: 4px;","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-border-color: #7D7E75;","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"whoisjustinngo"},"content":".tab-button {","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-font-family: \"Linux Libertine Semibold\";","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-background-color: #F2E9E4;","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-text-fill: #F2E9E4;","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-background-radius: 30pt;","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"whoisjustinngo"},"content":".tab-button :selected { // TODO","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-font-family: \"Linux Libertine Semibold\";","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-background-color: #7D7E75;","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-text-fill: #CFD6EA;","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"whoisjustinngo"},"content":".tab-header-background {","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-background-color:transparent","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"whoisjustinngo"},"content":".tab-pane{","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-padding: 0 -1 -1 0","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"whoisjustinngo"},"content":".tab-pane-focused :focused {","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-focus-color: #4F5D2F;","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"whoisjustinngo"},"content":".section-header {","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-font-family: \"Linux Libertine Bold\";","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-background-color: #7D7E75;","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-text-fill: #F2E9E4;","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"whoisjustinngo"},"content":".table-header {","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-font-family: \"Linux Libertine Semibold\";","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-background-color: #605C4E;","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-text-fill: #F2E9E4;","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-padding: 0pt, 5pt, 0pt, 5pt;","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"whoisjustinngo"},"content":"    /*-fx-border-color: #7D7E75;*/","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"whoisjustinngo"},"content":".menu-bar {","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-font-family: \"Linux Libertine Semibold\";","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-background-color: #7D7E75;","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"whoisjustinngo"},"content":".rounded-cell {","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-font-family: \"Linux Libertine Semibold\";","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-background-radius: 20pt;","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-border-radius: 20pt;","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-background-color: #F2E9E4;","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-text-fill: #605C4E;","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"whoisjustinngo"},"content":".command-window {","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-font-family: \"Linux Libertine Semibold\";","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-background-color: #F2E9E4;","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-text-fill: #605C4E;","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"whoisjustinngo"},"content":".result-window {","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-font-family: \"Linux Libertine Semibold\";","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"whoisjustinngo"},"content":"    /*-fx-background-radius: 20pt;*/","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"whoisjustinngo"},"content":"    /*-fx-border-radius: 20pt;*/","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-background-color: #B0B2B8;","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-text-fill: #605C4E;","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"whoisjustinngo"},"content":".result-text-display {","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-font-family: \"Linux Libertine\";","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-text-fill: #605C4E;","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":109,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"whoisjustinngo"},"content":".status-bar {","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-font-family: \"Linux Libertine Semibold\";","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-background-radius: 20pt;","lastModifiedDate":"2021-10-27"},{"lineNumber":114,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-border-radius: 20pt;","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-background-color: #F2E9E4;","lastModifiedDate":"2021-10-27"},{"lineNumber":116,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-text-fill: #605C4E;","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-label-padding: 10, 5, 5, 0;","lastModifiedDate":"2021-10-27"},{"lineNumber":118,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":119,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":120,"author":{"gitId":"whoisjustinngo"},"content":".light_text {","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-font-family: \"Linux Libertine Semibold\";","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-text-fill: #F2E9E4;","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"whoisjustinngo"},"content":".dark_text {","lastModifiedDate":"2021-10-27"},{"lineNumber":128,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-font-family: \"Linux Libertine Semibold\";","lastModifiedDate":"2021-10-27"},{"lineNumber":129,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2021-10-27"},{"lineNumber":130,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-text-fill: #423629;","lastModifiedDate":"2021-10-27"},{"lineNumber":131,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-27"},{"lineNumber":132,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":133,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":134,"author":{"gitId":"whoisjustinngo"},"content":".dark_text_header {","lastModifiedDate":"2021-10-27"},{"lineNumber":135,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-font-family: \"Linux Libertine Bold\";","lastModifiedDate":"2021-10-27"},{"lineNumber":136,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2021-10-27"},{"lineNumber":137,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-text-fill: #423629;","lastModifiedDate":"2021-10-27"},{"lineNumber":138,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-27"},{"lineNumber":139,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":140,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":141,"author":{"gitId":"whoisjustinngo"},"content":".text-area {","lastModifiedDate":"2021-10-27"},{"lineNumber":142,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-27"},{"lineNumber":143,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-font-family: \"Linux Libertine\";","lastModifiedDate":"2021-10-27"},{"lineNumber":144,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2021-10-27"},{"lineNumber":145,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-text-fill: #605C4E;","lastModifiedDate":"2021-10-27"},{"lineNumber":146,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":147,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":148,"author":{"gitId":"whoisjustinngo"},"content":".text-area .scroll-pane {","lastModifiedDate":"2021-10-27"},{"lineNumber":149,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-27"},{"lineNumber":150,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-font-family: \"Linux Libertine\";","lastModifiedDate":"2021-10-27"},{"lineNumber":151,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2021-10-27"},{"lineNumber":152,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-text-fill: #605C4E;","lastModifiedDate":"2021-10-27"},{"lineNumber":153,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":154,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":155,"author":{"gitId":"whoisjustinngo"},"content":".text-area .scroll-pane .viewport{","lastModifiedDate":"2021-10-27"},{"lineNumber":156,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-27"},{"lineNumber":157,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-font-family: \"Linux Libertine\";","lastModifiedDate":"2021-10-27"},{"lineNumber":158,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2021-10-27"},{"lineNumber":159,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-text-fill: #605C4E;","lastModifiedDate":"2021-10-27"},{"lineNumber":160,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":161,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":162,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":163,"author":{"gitId":"whoisjustinngo"},"content":".text-area .scroll-pane .content{","lastModifiedDate":"2021-10-27"},{"lineNumber":164,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-27"},{"lineNumber":165,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-font-family: \"Linux Libertine\";","lastModifiedDate":"2021-10-27"},{"lineNumber":166,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2021-10-27"},{"lineNumber":167,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-text-fill: #605C4E;","lastModifiedDate":"2021-10-27"},{"lineNumber":168,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":169,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":170,"author":{"gitId":"whoisjustinngo"},"content":".list-view {","lastModifiedDate":"2021-10-27"},{"lineNumber":171,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2021-10-27"},{"lineNumber":172,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-padding: 0;","lastModifiedDate":"2021-10-27"},{"lineNumber":173,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-background-color: #B0B2B8;","lastModifiedDate":"2021-10-27"},{"lineNumber":174,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":175,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":176,"author":{"gitId":"whoisjustinngo"},"content":".list-cell {","lastModifiedDate":"2021-10-27"},{"lineNumber":177,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2021-10-27"},{"lineNumber":178,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2021-10-27"},{"lineNumber":179,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2021-10-27"},{"lineNumber":180,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":181,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":182,"author":{"gitId":"whoisjustinngo"},"content":".list-cell:filled:even {","lastModifiedDate":"2021-10-27"},{"lineNumber":183,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-background-color: derive(#B0B2B8, 20%);","lastModifiedDate":"2021-10-27"},{"lineNumber":184,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-text-fill: #605C4E;","lastModifiedDate":"2021-10-27"},{"lineNumber":185,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":186,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":187,"author":{"gitId":"whoisjustinngo"},"content":".list-cell:filled:odd {","lastModifiedDate":"2021-10-27"},{"lineNumber":188,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-background-color: #B0B2B8;","lastModifiedDate":"2021-10-27"},{"lineNumber":189,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-text-fill: #7D7E75;","lastModifiedDate":"2021-10-27"},{"lineNumber":190,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":191,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":192,"author":{"gitId":"whoisjustinngo"},"content":".list-cell:filled:selected {","lastModifiedDate":"2021-10-27"},{"lineNumber":193,"author":{"gitId":"whoisjustinngo"},"content":"    /*-fx-background-color: #B0B2B8;*/","lastModifiedDate":"2021-10-27"},{"lineNumber":194,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":195,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":196,"author":{"gitId":"whoisjustinngo"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2021-10-27"},{"lineNumber":197,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-border-color: #B0B2B8;","lastModifiedDate":"2021-10-27"},{"lineNumber":198,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-10-27"},{"lineNumber":199,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":200,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":201,"author":{"gitId":"whoisjustinngo"},"content":".list-cell .label {","lastModifiedDate":"2021-10-27"},{"lineNumber":202,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-text-fill: #423629;","lastModifiedDate":"2021-10-27"},{"lineNumber":203,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2021-10-27"},{"lineNumber":204,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-font-family: \"Linux Libertine Semibold\";","lastModifiedDate":"2021-10-27"},{"lineNumber":205,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":206,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":207,"author":{"gitId":"whoisjustinngo"},"content":".scroll-pane \u003e .viewport {","lastModifiedDate":"2021-10-27"},{"lineNumber":208,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-27"},{"lineNumber":209,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":210,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":211,"author":{"gitId":"whoisjustinngo"},"content":".scroll-bar {","lastModifiedDate":"2021-10-27"},{"lineNumber":212,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2021-10-27"},{"lineNumber":213,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":214,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":215,"author":{"gitId":"whoisjustinngo"},"content":".scroll-bar .thumb {","lastModifiedDate":"2021-10-27"},{"lineNumber":216,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2021-10-27"},{"lineNumber":217,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2021-10-27"},{"lineNumber":218,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":219,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":220,"author":{"gitId":"whoisjustinngo"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2021-10-27"},{"lineNumber":221,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-27"},{"lineNumber":222,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2021-10-27"},{"lineNumber":223,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":224,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":225,"author":{"gitId":"whoisjustinngo"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2021-10-27"},{"lineNumber":226,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2021-10-27"},{"lineNumber":227,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":228,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":229,"author":{"gitId":"whoisjustinngo"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2021-10-27"},{"lineNumber":230,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2021-10-27"},{"lineNumber":231,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":232,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":233,"author":{"gitId":"whoisjustinngo"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2021-10-27"},{"lineNumber":234,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2021-10-27"},{"lineNumber":235,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":236,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":237,"author":{"gitId":"whoisjustinngo"},"content":"/*from darktheme to be changed as necessary*/","lastModifiedDate":"2021-10-27"},{"lineNumber":238,"author":{"gitId":"whoisjustinngo"},"content":"#cardPane {","lastModifiedDate":"2021-10-27"},{"lineNumber":239,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-27"},{"lineNumber":240,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2021-10-27"},{"lineNumber":241,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":242,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":243,"author":{"gitId":"whoisjustinngo"},"content":"#commandTypeLabel {","lastModifiedDate":"2021-10-27"},{"lineNumber":244,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2021-10-27"},{"lineNumber":245,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2021-10-27"},{"lineNumber":246,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":247,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":248,"author":{"gitId":"whoisjustinngo"},"content":"/*#commandTextField {*/","lastModifiedDate":"2021-10-27"},{"lineNumber":249,"author":{"gitId":"whoisjustinngo"},"content":"/*    -fx-background-color: transparent #383838 transparent #383838;*/","lastModifiedDate":"2021-10-27"},{"lineNumber":250,"author":{"gitId":"whoisjustinngo"},"content":"/*    -fx-background-insets: 0;*/","lastModifiedDate":"2021-10-27"},{"lineNumber":251,"author":{"gitId":"whoisjustinngo"},"content":"/*    -fx-border-color: #383838 #383838 #ffffff #383838;*/","lastModifiedDate":"2021-10-27"},{"lineNumber":252,"author":{"gitId":"whoisjustinngo"},"content":"/*    -fx-border-insets: 0;*/","lastModifiedDate":"2021-10-27"},{"lineNumber":253,"author":{"gitId":"whoisjustinngo"},"content":"/*    -fx-border-width: 1;*/","lastModifiedDate":"2021-10-27"},{"lineNumber":254,"author":{"gitId":"whoisjustinngo"},"content":"/*    -fx-font-family: \"Open Sans Light\";*/","lastModifiedDate":"2021-10-27"},{"lineNumber":255,"author":{"gitId":"whoisjustinngo"},"content":"/*    -fx-font-size: 13pt;*/","lastModifiedDate":"2021-10-27"},{"lineNumber":256,"author":{"gitId":"whoisjustinngo"},"content":"/*    -fx-text-fill: white;*/","lastModifiedDate":"2021-10-27"},{"lineNumber":257,"author":{"gitId":"whoisjustinngo"},"content":"/*}*/","lastModifiedDate":"2021-10-27"},{"lineNumber":258,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":259,"author":{"gitId":"whoisjustinngo"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2021-10-27"},{"lineNumber":260,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2021-10-27"},{"lineNumber":261,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":262,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":263,"author":{"gitId":"whoisjustinngo"},"content":"/*#resultDisplay .content {*/","lastModifiedDate":"2021-10-27"},{"lineNumber":264,"author":{"gitId":"whoisjustinngo"},"content":"/*    -fx-background-color: transparent, #383838, transparent, #383838;*/","lastModifiedDate":"2021-10-27"},{"lineNumber":265,"author":{"gitId":"whoisjustinngo"},"content":"/*    -fx-background-radius: 0;*/","lastModifiedDate":"2021-10-27"},{"lineNumber":266,"author":{"gitId":"whoisjustinngo"},"content":"/*}*/","lastModifiedDate":"2021-10-27"},{"lineNumber":267,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":268,"author":{"gitId":"whoisjustinngo"},"content":"#tags {","lastModifiedDate":"2021-10-27"},{"lineNumber":269,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2021-10-27"},{"lineNumber":270,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2021-10-27"},{"lineNumber":271,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":272,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":273,"author":{"gitId":"whoisjustinngo"},"content":"#tags .label {","lastModifiedDate":"2021-10-27"},{"lineNumber":274,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-27"},{"lineNumber":275,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2021-10-27"},{"lineNumber":276,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2021-10-27"},{"lineNumber":277,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2021-10-27"},{"lineNumber":278,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2021-10-27"},{"lineNumber":279,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2021-10-27"},{"lineNumber":280,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":281,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":282,"author":{"gitId":"whoisjustinngo"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2021-10-27"},{"lineNumber":283,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2021-10-27"},{"lineNumber":284,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2021-10-27"},{"lineNumber":285,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-box-border: transparent;","lastModifiedDate":"2021-10-27"},{"lineNumber":286,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":287,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":288,"author":{"gitId":"whoisjustinngo"},"content":".split-pane:vertical .split-pane-divider {","lastModifiedDate":"2021-10-27"},{"lineNumber":289,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2021-10-27"},{"lineNumber":290,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2021-10-27"},{"lineNumber":291,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-box-border: transparent;","lastModifiedDate":"2021-10-27"},{"lineNumber":292,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"whoisjustinngo":292}},{"path":"src/main/resources/view/AnalyticsPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"whoisjustinngo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"whoisjustinngo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"whoisjustinngo"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"whoisjustinngo"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"whoisjustinngo"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"whoisjustinngo"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"whoisjustinngo"},"content":"\u003cGridPane maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" styleClass\u003d\"background\" stylesheets\u003d\"@AdvyzeTheme.css\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"whoisjustinngo"},"content":"  \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"whoisjustinngo"},"content":"    \u003cColumnConstraints hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"whoisjustinngo"},"content":"    \u003cColumnConstraints halignment\u003d\"LEFT\" hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"whoisjustinngo"},"content":"  \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"whoisjustinngo"},"content":"  \u003crowConstraints\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"whoisjustinngo"},"content":"      \u003cRowConstraints vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"whoisjustinngo"},"content":"    \u003cRowConstraints vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"whoisjustinngo"},"content":"    \u003cRowConstraints vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"whoisjustinngo"},"content":"    \u003cRowConstraints vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"whoisjustinngo"},"content":"      \u003cRowConstraints vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"whoisjustinngo"},"content":"      \u003cRowConstraints vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"whoisjustinngo"},"content":"  \u003c/rowConstraints\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"whoisjustinngo"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"whoisjustinngo"},"content":"      \u003cLabel styleClass\u003d\"dark_text_header\" stylesheets\u003d\"@AdvyzeTheme.css\" text\u003d\"Type\" GridPane.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"whoisjustinngo"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"whoisjustinngo"},"content":"      \u003c/Label\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"whoisjustinngo"},"content":"      \u003cLabel styleClass\u003d\"dark_text_header\" stylesheets\u003d\"@AdvyzeTheme.css\" text\u003d\"Count\" GridPane.columnIndex\u003d\"1\" GridPane.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"whoisjustinngo"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"whoisjustinngo"},"content":"      \u003c/Label\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"whoisjustinngo"},"content":"      \u003cLabel styleClass\u003d\"dark_text\" stylesheets\u003d\"@AdvyzeTheme.css\" text\u003d\"Fresh Leads\" GridPane.rowIndex\u003d\"1\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"whoisjustinngo"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"whoisjustinngo"},"content":"      \u003c/Label\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"whoisjustinngo"},"content":"      \u003cLabel styleClass\u003d\"dark_text\" stylesheets\u003d\"@AdvyzeTheme.css\" text\u003d\"Approached\" GridPane.rowIndex\u003d\"2\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cGridPane.margin\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"whoisjustinngo"},"content":"         \u003c/GridPane.margin\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"whoisjustinngo"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"whoisjustinngo"},"content":"      \u003c/Label\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"whoisjustinngo"},"content":"      \u003cLabel styleClass\u003d\"dark_text\" stylesheets\u003d\"@AdvyzeTheme.css\" text\u003d\"Pitched\" GridPane.rowIndex\u003d\"3\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cGridPane.margin\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"whoisjustinngo"},"content":"         \u003c/GridPane.margin\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"whoisjustinngo"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"whoisjustinngo"},"content":"      \u003c/Label\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"whoisjustinngo"},"content":"      \u003cLabel styleClass\u003d\"dark_text\" stylesheets\u003d\"@AdvyzeTheme.css\" text\u003d\"Negotiated\" GridPane.rowIndex\u003d\"4\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"whoisjustinngo"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"whoisjustinngo"},"content":"      \u003c/Label\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"whoisjustinngo"},"content":"      \u003cLabel styleClass\u003d\"dark_text\" stylesheets\u003d\"@AdvyzeTheme.css\" text\u003d\"Closed\" GridPane.rowIndex\u003d\"5\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"whoisjustinngo"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"whoisjustinngo"},"content":"      \u003c/Label\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"whoisjustinngo"},"content":"      \u003cLabel fx:id\u003d\"freshCount\" maxWidth\u003d\"1.7976931348623157E308\" styleClass\u003d\"dark_text\" stylesheets\u003d\"@AdvyzeTheme.css\" text\u003d\"\\$freshCount\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"1\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"whoisjustinngo"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"whoisjustinngo"},"content":"      \u003c/Label\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"whoisjustinngo"},"content":"      \u003cLabel fx:id\u003d\"approachedCount\" layoutX\u003d\"304.0\" layoutY\u003d\"40.0\" maxWidth\u003d\"1.7976931348623157E308\" styleClass\u003d\"dark_text\" stylesheets\u003d\"@AdvyzeTheme.css\" text\u003d\"\\$approachedCount\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"2\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"whoisjustinngo"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"whoisjustinngo"},"content":"      \u003c/Label\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"whoisjustinngo"},"content":"      \u003cLabel fx:id\u003d\"pitchedCount\" layoutX\u003d\"10.0\" layoutY\u003d\"40.0\" maxWidth\u003d\"1.7976931348623157E308\" styleClass\u003d\"dark_text\" stylesheets\u003d\"@AdvyzeTheme.css\" text\u003d\"\\$pitchedCount\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"3\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"whoisjustinngo"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"whoisjustinngo"},"content":"      \u003c/Label\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"whoisjustinngo"},"content":"      \u003cLabel fx:id\u003d\"negotiatedCount\" layoutX\u003d\"10.0\" layoutY\u003d\"40.0\" maxWidth\u003d\"1.7976931348623157E308\" styleClass\u003d\"dark_text\" stylesheets\u003d\"@AdvyzeTheme.css\" text\u003d\"\\$negotiatedCount\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"4\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"whoisjustinngo"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"whoisjustinngo"},"content":"      \u003c/Label\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"whoisjustinngo"},"content":"      \u003cLabel fx:id\u003d\"closedCount\" layoutX\u003d\"10.0\" layoutY\u003d\"40.0\" maxWidth\u003d\"1.7976931348623157E308\" styleClass\u003d\"dark_text\" stylesheets\u003d\"@AdvyzeTheme.css\" text\u003d\"\\$closedCount\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"5\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"whoisjustinngo"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"whoisjustinngo"},"content":"      \u003c/Label\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"whoisjustinngo"},"content":"   \u003c/children\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"whoisjustinngo"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"whoisjustinngo":90}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"whoisjustinngo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"whoisjustinngo"},"content":"\u003cStackPane styleClass\u003d\"command-window\" stylesheets\u003d\"@AdvyzeTheme.css\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"whoisjustinngo"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\" styleClass\u003d\"text-area\" stylesheets\u003d\"@AdvyzeTheme.css\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"whoisjustinngo"},"content":"      \u003cStackPane.margin\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"whoisjustinngo"},"content":"      \u003c/StackPane.margin\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"whoisjustinngo"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cInsets bottom\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"whoisjustinngo"},"content":"      \u003c/padding\u003e\u003c/TextField\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"whoisjustinngo":9,"-":6}},{"path":"src/main/resources/view/CustomGoalCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"whoisjustinngo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"whoisjustinngo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"whoisjustinngo"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"whoisjustinngo"},"content":"\u003c?import javafx.scene.control.ProgressBar?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"whoisjustinngo"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"whoisjustinngo"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"whoisjustinngo"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"whoisjustinngo"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"whoisjustinngo"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" fillHeight\u003d\"false\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"whoisjustinngo"},"content":"  \u003cGridPane stylesheets\u003d\"@AdvyzeTheme.css\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"whoisjustinngo"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"whoisjustinngo"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" percentWidth\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" percentWidth\u003d\"20.0\" /\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" percentWidth\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" percentWidth\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" percentWidth\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" percentWidth\u003d\"20.0\" /\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" percentWidth\u003d\"20.0\" /\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"whoisjustinngo"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"whoisjustinngo"},"content":"      \u003cLabel fx:id\u003d\"id\" stylesheets\u003d\"@AdvyzeTheme.css\" text\u003d\"\\$id\" GridPane.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"whoisjustinngo"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cGridPane.margin\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"whoisjustinngo"},"content":"         \u003c/GridPane.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"whoisjustinngo"},"content":"   \u003cLabel fx:id\u003d\"description\" stylesheets\u003d\"@AdvyzeTheme.css\" text\u003d\"\\$description\" wrapText\u003d\"true\" GridPane.columnIndex\u003d\"1\" GridPane.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cGridPane.margin\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"whoisjustinngo"},"content":"         \u003c/GridPane.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"whoisjustinngo"},"content":"   \u003cLabel fx:id\u003d\"progress\" stylesheets\u003d\"@AdvyzeTheme.css\" text\u003d\"\\$progress\" GridPane.columnIndex\u003d\"2\" GridPane.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"whoisjustinngo"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cGridPane.margin\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"whoisjustinngo"},"content":"         \u003c/GridPane.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"whoisjustinngo"},"content":"      \u003cProgressBar fx:id\u003d\"progressBar\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" progress\u003d\"0.0\" styleClass\u003d\"rounded-cell\" stylesheets\u003d\"@AdvyzeTheme.css\" GridPane.columnIndex\u003d\"3\" GridPane.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"whoisjustinngo"},"content":"         \u003copaqueInsets\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"whoisjustinngo"},"content":"         \u003c/opaqueInsets\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cGridPane.margin\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"whoisjustinngo"},"content":"         \u003c/GridPane.margin\u003e\u003c/ProgressBar\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"whoisjustinngo"},"content":"   \u003cLabel fx:id\u003d\"goal\" stylesheets\u003d\"@AdvyzeTheme.css\" text\u003d\"\\$goal\" wrapText\u003d\"true\" GridPane.columnIndex\u003d\"4\" GridPane.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"whoisjustinngo"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cGridPane.margin\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"whoisjustinngo"},"content":"         \u003c/GridPane.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"whoisjustinngo"},"content":"   \u003cLabel fx:id\u003d\"dateEnd\" stylesheets\u003d\"@AdvyzeTheme.css\" text\u003d\"\\$dateEnd\" wrapText\u003d\"true\" GridPane.columnIndex\u003d\"5\" GridPane.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cGridPane.margin\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"whoisjustinngo"},"content":"         \u003c/GridPane.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"whoisjustinngo"},"content":"      \u003cLabel fx:id\u003d\"timeEnd\" stylesheets\u003d\"@AdvyzeTheme.css\" text\u003d\"\\$timeEnd\" GridPane.columnIndex\u003d\"6\" GridPane.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cGridPane.margin\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"whoisjustinngo"},"content":"         \u003c/GridPane.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"whoisjustinngo"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cRowConstraints vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"whoisjustinngo"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"whoisjustinngo"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"whoisjustinngo"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"whoisjustinngo":66}},{"path":"src/main/resources/view/CustomGoalPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"whoisjustinngo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"whoisjustinngo"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"whoisjustinngo"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"whoisjustinngo"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"whoisjustinngo"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"whoisjustinngo"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"whoisjustinngo"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"whoisjustinngo"},"content":"\u003cVBox styleClass\u003d\"background\" stylesheets\u003d\"@AdvyzeTheme.css\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"whoisjustinngo"},"content":"   \u003cGridPane maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" prefHeight\u003d\"27.0\" styleClass\u003d\"table-header\" stylesheets\u003d\"@AdvyzeTheme.css\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"whoisjustinngo"},"content":"     \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"whoisjustinngo"},"content":"       \u003cColumnConstraints percentWidth\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cColumnConstraints percentWidth\u003d\"20.0\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"whoisjustinngo"},"content":"       \u003cColumnConstraints percentWidth\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cColumnConstraints percentWidth\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cColumnConstraints percentWidth\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cColumnConstraints percentWidth\u003d\"20.0\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cColumnConstraints percentWidth\u003d\"20.0\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"whoisjustinngo"},"content":"     \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"whoisjustinngo"},"content":"     \u003crowConstraints\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"whoisjustinngo"},"content":"       \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"40.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"whoisjustinngo"},"content":"     \u003c/rowConstraints\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"whoisjustinngo"},"content":"      \u003cchildren\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cLabel styleClass\u003d\"light_text\" stylesheets\u003d\"@AdvyzeTheme.css\" text\u003d\"Description\" textAlignment\u003d\"CENTER\" GridPane.columnIndex\u003d\"1\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cLabel styleClass\u003d\"light_text\" stylesheets\u003d\"@AdvyzeTheme.css\" text\u003d\"Progress\" textAlignment\u003d\"CENTER\" GridPane.columnIndex\u003d\"2\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cLabel styleClass\u003d\"light_text\" stylesheets\u003d\"@AdvyzeTheme.css\" textAlignment\u003d\"CENTER\" GridPane.columnIndex\u003d\"3\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cLabel styleClass\u003d\"light_text\" stylesheets\u003d\"@AdvyzeTheme.css\" text\u003d\"Goal\" GridPane.columnIndex\u003d\"4\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cLabel styleClass\u003d\"light_text\" stylesheets\u003d\"@AdvyzeTheme.css\" text\u003d\"End Date\" textAlignment\u003d\"CENTER\" GridPane.columnIndex\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cLabel styleClass\u003d\"light_text\" stylesheets\u003d\"@AdvyzeTheme.css\" text\u003d\"End Time\" GridPane.columnIndex\u003d\"6\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"whoisjustinngo"},"content":"      \u003c/children\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"whoisjustinngo"},"content":"   \u003c/GridPane\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"whoisjustinngo"},"content":"  \u003cListView fx:id\u003d\"customGoalListView\" stylesheets\u003d\"@AdvyzeTheme.css\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"whoisjustinngo"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"whoisjustinngo":34}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"whoisjustinngo"},"content":".scroll-pane \u003e .viewport {","lastModifiedDate":"2021-10-09"},{"lineNumber":150,"author":{"gitId":"whoisjustinngo"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-09"},{"lineNumber":151,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-09"},{"lineNumber":152,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"mokdarren"},"content":".table-header {","lastModifiedDate":"2021-10-09"},{"lineNumber":165,"author":{"gitId":"mokdarren"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-10-09"},{"lineNumber":166,"author":{"gitId":"mokdarren"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-09"},{"lineNumber":167,"author":{"gitId":"mokdarren"},"content":"    -fx-font-size: 16pt;","lastModifiedDate":"2021-10-09"},{"lineNumber":168,"author":{"gitId":"mokdarren"},"content":"}","lastModifiedDate":"2021-10-09"},{"lineNumber":169,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":285,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":312,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":316,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":350,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":362,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":363,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":364,"author":{"gitId":"kslui99"},"content":"#isDoneLabel {","lastModifiedDate":"2021-10-24"},{"lineNumber":365,"author":{"gitId":"kslui99"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-24"},{"lineNumber":366,"author":{"gitId":"kslui99"},"content":"    -fx-background-color: #006400;","lastModifiedDate":"2021-10-24"},{"lineNumber":367,"author":{"gitId":"kslui99"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2021-10-24"},{"lineNumber":368,"author":{"gitId":"kslui99"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2021-10-24"},{"lineNumber":369,"author":{"gitId":"kslui99"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2021-10-24"},{"lineNumber":370,"author":{"gitId":"kslui99"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2021-10-24"},{"lineNumber":371,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"whoisjustinngo":4,"kslui99":9,"-":352,"mokdarren":6}},{"path":"src/main/resources/view/Fonts.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    font-family: \"Open Sans\";","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    src: url(\"/fonts/open-sans/OpenSans-Regular.ttf\");","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    font-family: \"Open Sans SemiBold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    src: url(\"/fonts/open-sans/OpenSans-SemiBold.ttf\");","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    src: url(\"/fonts/open-sans/OpenSans-Light.ttf\");","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    font-family: \"Open Sans Bold Italic\";","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    src: url(\"/fonts/open-sans/OpenSans-BoldItalic.ttf\");","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    font-family: \"Open Sans Extra Bold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    src: url(\"/fonts/open-sans/OpenSans-ExtraBold.ttf\");","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    font-family: \"Open Sans Extra Bold Italic\";","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    src: url(\"/fonts/open-sans/OpenSans-ExtraBoldItalic.ttf\");","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    font-family: \"Open Sans Italic\";","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    src: url(\"/fonts/open-sans/OpenSans-Italic.ttf\");","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    font-family: \"Open Sans Light Italic\";","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    src: url(\"/fonts/open-sans/OpenSans-LightItalic.ttf\");","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    font-family: \"Open Sans SemiBold Italic\";","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    src: url(\"/fonts/open-sans/OpenSans-SemiBoldItalic.ttf\");","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"whoisjustinngo"},"content":"/* for linux libertine fonts - import as necessary*/","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"whoisjustinngo"},"content":"@font-face {","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"whoisjustinngo"},"content":"    font-family: \"Linux Libertine\";","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"whoisjustinngo"},"content":"    src: url(\"/fonts/linuxLibertine/LinLibertine_R.ttf\");","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"whoisjustinngo"},"content":"@font-face {","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"whoisjustinngo"},"content":"    font-family: \"Linux Libertine Semibold\";","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"whoisjustinngo"},"content":"    src: url(\"/fonts/linuxLibertine/LinLibertine_RZ.ttf\");","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"whoisjustinngo"},"content":"@font-face {","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"whoisjustinngo"},"content":"    font-family: \"Linux Libertine Bold\";","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"whoisjustinngo"},"content":"    src: url(\"/fonts/linuxLibertine/LinLibertine_RB.ttf\");","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"whoisjustinngo"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"whoisjustinngo":17,"-":44}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"whoisjustinngo"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cHBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"whoisjustinngo"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" stylesheets\u003d\"@AdvyzeTheme.css\" text\u003d\"Label\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"whoisjustinngo":2,"-":43}},{"path":"src/main/resources/view/ImportWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SpdPnd98"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"SpdPnd98"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"SpdPnd98"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"SpdPnd98"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"SpdPnd98"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Import\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"SpdPnd98"},"content":"    \u003cicons\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"SpdPnd98"},"content":"        \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"SpdPnd98"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"SpdPnd98"},"content":"    \u003cscene\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"SpdPnd98"},"content":"        \u003cScene\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"SpdPnd98"},"content":"            \u003cAnchorPane fx:id\u003d\"importWindowAnchorPane\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"SpdPnd98"},"content":"            \u003c/AnchorPane\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"SpdPnd98"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"SpdPnd98"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"SpdPnd98"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"SpdPnd98":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"whoisjustinngo"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"whoisjustinngo"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"whoisjustinngo"},"content":"\u003c?import javafx.scene.control.Tab?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"whoisjustinngo"},"content":"\u003c?import javafx.scene.control.TabPane?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"whoisjustinngo"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":18,"author":{"gitId":"whoisjustinngo"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"mokdarren"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Advyze\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"whoisjustinngo"},"content":"        \u003cURL value\u003d\"@AdvyzeTheme.css\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":32,"author":{"gitId":"whoisjustinngo"},"content":"      \u003cVBox styleClass\u003d\"background-with-border-dark\" stylesheets\u003d\"@AdvyzeTheme.css\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"whoisjustinngo"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" styleClass\u003d\"rounded-cell\" stylesheets\u003d\"@AdvyzeTheme.css\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"SpdPnd98"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleImport\" text\u003d\"Import Schedule\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"whoisjustinngo"},"content":"               \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"whoisjustinngo"},"content":"                  \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"whoisjustinngo"},"content":"               \u003c/VBox.margin\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cTabPane id\u003d\"tabs\" fx:id\u003d\"tabs\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" stylesheets\u003d\"@AdvyzeTheme.css\" tabClosingPolicy\u003d\"UNAVAILABLE\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"whoisjustinngo"},"content":"              \u003ctabs\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"whoisjustinngo"},"content":"                \u003cTab id\u003d\"dashboardTab\" fx:id\u003d\"dashboardTab\" closable\u003d\"false\" styleClass\u003d\"tab-button\" text\u003d\"Dashboard\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"whoisjustinngo"},"content":"                     \u003ccontent\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"whoisjustinngo"},"content":"                        \u003cSplitPane dividerPositions\u003d\"0.33, 0.66\" orientation\u003d\"VERTICAL\" styleClass\u003d\"pane-with-border\" stylesheets\u003d\"@AdvyzeTheme.css\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"whoisjustinngo"},"content":"                           \u003citems\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"whoisjustinngo"},"content":"                              \u003cAnchorPane maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" style\u003d\"-fx-background-color: transparent;\" styleClass\u003d\"background-with-border-dark\" stylesheets\u003d\"@AdvyzeTheme.css\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"whoisjustinngo"},"content":"                                 \u003cchildren\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"whoisjustinngo"},"content":"                                    \u003cSplitPane fx:id\u003d\"topPane\" dividerPositions\u003d\"0.2\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" style\u003d\"-fx-background-color: transparent;\" stylesheets\u003d\"@AdvyzeTheme.css\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"whoisjustinngo"},"content":"                                       \u003citems\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"whoisjustinngo"},"content":"                                          \u003cVBox fx:id\u003d\"dashboardAnalyticsPlaceholder\" prefHeight\u003d\"200.0\" styleClass\u003d\"background\" stylesheets\u003d\"@AdvyzeTheme.css\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"whoisjustinngo"},"content":"                                             \u003cchildren\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"whoisjustinngo"},"content":"                                                \u003cLabel fx:id\u003d\"analyticsHeader\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" styleClass\u003d\"section-header\" stylesheets\u003d\"@AdvyzeTheme.css\" text\u003d\"\\\\$analyticsHeader\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"whoisjustinngo"},"content":"                                                   \u003cpadding\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"whoisjustinngo"},"content":"                                                      \u003cInsets bottom\u003d\"5.0\" left\u003d\"20.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"whoisjustinngo"},"content":"                                                   \u003c/padding\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"whoisjustinngo"},"content":"                                                \u003c/Label\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"whoisjustinngo"},"content":"                                             \u003c/children\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"whoisjustinngo"},"content":"                                          \u003c/VBox\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"whoisjustinngo"},"content":"                                          \u003cVBox fx:id\u003d\"dashboardCustomGoalsPlaceholder\" prefHeight\u003d\"200.0\" prefWidth\u003d\"100.0\" stylesheets\u003d\"@AdvyzeTheme.css\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"whoisjustinngo"},"content":"                                             \u003cchildren\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"whoisjustinngo"},"content":"                                                \u003cLabel maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" styleClass\u003d\"section-header\" stylesheets\u003d\"@AdvyzeTheme.css\" text\u003d\"Here are some of your goals:\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"whoisjustinngo"},"content":"                                                   \u003cpadding\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"whoisjustinngo"},"content":"                                                      \u003cInsets bottom\u003d\"5.0\" left\u003d\"20.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"whoisjustinngo"},"content":"                                                   \u003c/padding\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"whoisjustinngo"},"content":"                                                \u003c/Label\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"whoisjustinngo"},"content":"                                             \u003c/children\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"whoisjustinngo"},"content":"                                          \u003c/VBox\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"whoisjustinngo"},"content":"                                       \u003c/items\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"whoisjustinngo"},"content":"                                    \u003c/SplitPane\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"whoisjustinngo"},"content":"                                 \u003c/children\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"whoisjustinngo"},"content":"                              \u003c/AnchorPane\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"whoisjustinngo"},"content":"                              \u003cScrollPane fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" prefHeight\u003d\"200.0\" prefWidth\u003d\"200.0\" style\u003d\"-fx-background-color: transparent;\" styleClass\u003d\"background-with-border-dark\" stylesheets\u003d\"@AdvyzeTheme.css\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"whoisjustinngo"},"content":"                                 \u003ccontent\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"whoisjustinngo"},"content":"                                    \u003cVBox fx:id\u003d\"dashboardSchedulePlaceholder\" styleClass\u003d\"background\" stylesheets\u003d\"@AdvyzeTheme.css\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"whoisjustinngo"},"content":"                                       \u003cchildren\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"mokdarren"},"content":"                                          \u003cLabel maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"488.0\" styleClass\u003d\"section-header\" stylesheets\u003d\"@AdvyzeTheme.css\" text\u003d\"Here is your upcoming schedule:\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":82,"author":{"gitId":"whoisjustinngo"},"content":"                                             \u003cpadding\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"whoisjustinngo"},"content":"                                                \u003cInsets bottom\u003d\"5.0\" left\u003d\"20.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"whoisjustinngo"},"content":"                                             \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"whoisjustinngo"},"content":"                                       \u003c/children\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"whoisjustinngo"},"content":"                                    \u003c/VBox\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"whoisjustinngo"},"content":"                                 \u003c/content\u003e\u003c/ScrollPane\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"whoisjustinngo"},"content":"                              \u003cScrollPane fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" layoutX\u003d\"10.0\" layoutY\u003d\"10.0\" prefHeight\u003d\"200.0\" prefWidth\u003d\"200.0\" style\u003d\"-fx-background-color: transparent;\" styleClass\u003d\"background-with-border-dark\" stylesheets\u003d\"@AdvyzeTheme.css\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"whoisjustinngo"},"content":"                                 \u003ccontent\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"whoisjustinngo"},"content":"                                    \u003cVBox fx:id\u003d\"dashboardTodosPlaceholder\" styleClass\u003d\"background\" stylesheets\u003d\"@AdvyzeTheme.css\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"whoisjustinngo"},"content":"                                       \u003cchildren\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"whoisjustinngo"},"content":"                                          \u003cLabel maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" styleClass\u003d\"section-header\" stylesheets\u003d\"@AdvyzeTheme.css\" text\u003d\"Here are some things you need to do:\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"whoisjustinngo"},"content":"                                             \u003cpadding\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"whoisjustinngo"},"content":"                                                \u003cInsets bottom\u003d\"5.0\" left\u003d\"20.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"whoisjustinngo"},"content":"                                             \u003c/padding\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"whoisjustinngo"},"content":"                                          \u003c/Label\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"whoisjustinngo"},"content":"                                       \u003c/children\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"whoisjustinngo"},"content":"                                    \u003c/VBox\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"whoisjustinngo"},"content":"                                 \u003c/content\u003e\u003c/ScrollPane\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"whoisjustinngo"},"content":"                           \u003c/items\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"whoisjustinngo"},"content":"                        \u003c/SplitPane\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"whoisjustinngo"},"content":"                     \u003c/content\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"whoisjustinngo"},"content":"                \u003c/Tab\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"whoisjustinngo"},"content":"                \u003cTab id\u003d\"contactsTab\" fx:id\u003d\"contactsTab\" closable\u003d\"false\" styleClass\u003d\"tab-button\" text\u003d\"Contacts\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"whoisjustinngo"},"content":"                  \u003ccontent\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"whoisjustinngo"},"content":"                    \u003cAnchorPane\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"whoisjustinngo"},"content":"                           \u003cchildren\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"whoisjustinngo"},"content":"                         \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":109,"author":{"gitId":"whoisjustinngo"},"content":"                           \u003c/children\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"whoisjustinngo"},"content":"                        \u003c/AnchorPane\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"whoisjustinngo"},"content":"                  \u003c/content\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"whoisjustinngo"},"content":"                \u003c/Tab\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"mokdarren"},"content":"                  \u003cTab id\u003d\"detailsTab\" fx:id\u003d\"detailsTab\" closable\u003d\"false\" styleClass\u003d\"tab-button\" text\u003d\"Details\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":114,"author":{"gitId":"mokdarren"},"content":"                     \u003ccontent\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":115,"author":{"gitId":"whoisjustinngo"},"content":"                        \u003cVBox stylesheets\u003d\"@AdvyzeTheme.css\"\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":116,"author":{"gitId":"mokdarren"},"content":"                           \u003cchildren\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":117,"author":{"gitId":"whoisjustinngo"},"content":"                              \u003cVBox fx:id\u003d\"personDetailedPlaceholder\" styleClass\u003d\"background-with-border\" stylesheets\u003d\"@AdvyzeTheme.css\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":118,"author":{"gitId":"mokdarren"},"content":"                              \u003cSplitPane dividerPositions\u003d\"0.96\" maxHeight\u003d\"1.7976931348623157E308\" stylesheets\u003d\"@AdvyzeTheme.css\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":119,"author":{"gitId":"mokdarren"},"content":"                                 \u003citems\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":120,"author":{"gitId":"mokdarren"},"content":"                                    \u003cVBox fx:id\u003d\"policyListPanelPlaceholder\" prefHeight\u003d\"200.0\" prefWidth\u003d\"200.0\" styleClass\u003d\"background-with-border\" stylesheets\u003d\"@AdvyzeTheme.css\" /\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":121,"author":{"gitId":"mokdarren"},"content":"                                    \u003cVBox fx:id\u003d\"notesPlaceholder\" prefHeight\u003d\"200.0\" prefWidth\u003d\"30.0\" styleClass\u003d\"background-with-border\" stylesheets\u003d\"@AdvyzeTheme.css\" /\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":122,"author":{"gitId":"mokdarren"},"content":"                                 \u003c/items\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":123,"author":{"gitId":"mokdarren"},"content":"                              \u003c/SplitPane\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":124,"author":{"gitId":"mokdarren"},"content":"                           \u003c/children\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":125,"author":{"gitId":"whoisjustinngo"},"content":"                        \u003c/VBox\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":126,"author":{"gitId":"mokdarren"},"content":"                     \u003c/content\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":127,"author":{"gitId":"mokdarren"},"content":"                  \u003c/Tab\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":128,"author":{"gitId":"whoisjustinngo"},"content":"                \u003cTab id\u003d\"scheduleTab\" fx:id\u003d\"scheduleTab\" closable\u003d\"false\" styleClass\u003d\"tab-button\" text\u003d\"Schedule\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":129,"author":{"gitId":"whoisjustinngo"},"content":"                  \u003ccontent\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"rickyaandrew"},"content":"                    \u003cAnchorPane\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":131,"author":{"gitId":"rickyaandrew"},"content":"                           \u003cchildren\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":132,"author":{"gitId":"rickyaandrew"},"content":"                              \u003cStackPane fx:id\u003d\"scheduleListPanelPlaceholder\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":133,"author":{"gitId":"rickyaandrew"},"content":"                           \u003c/children\u003e\u003c/AnchorPane\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":134,"author":{"gitId":"whoisjustinngo"},"content":"                  \u003c/content\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"whoisjustinngo"},"content":"                \u003c/Tab\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"whoisjustinngo"},"content":"                \u003cTab id\u003d\"todosTab\" fx:id\u003d\"todosTab\" closable\u003d\"false\" styleClass\u003d\"tab-button\" text\u003d\"Todos\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":137,"author":{"gitId":"whoisjustinngo"},"content":"                  \u003ccontent\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":138,"author":{"gitId":"whoisjustinngo"},"content":"                    \u003cAnchorPane styleClass\u003d\"background-with-border-dark\" stylesheets\u003d\"@AdvyzeTheme.css\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":139,"author":{"gitId":"kslui99"},"content":"                      \u003cchildren\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"kslui99"},"content":"                        \u003cStackPane fx:id\u003d\"todoListPanelPlaceholder\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":141,"author":{"gitId":"kslui99"},"content":"                      \u003c/children\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":142,"author":{"gitId":"kslui99"},"content":"                    \u003c/AnchorPane\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":143,"author":{"gitId":"whoisjustinngo"},"content":"                  \u003c/content\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":144,"author":{"gitId":"whoisjustinngo"},"content":"                \u003c/Tab\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":145,"author":{"gitId":"whoisjustinngo"},"content":"              \u003c/tabs\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":146,"author":{"gitId":"whoisjustinngo"},"content":"            \u003c/TabPane\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":148,"author":{"gitId":"whoisjustinngo"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"background-with-border-dark\" stylesheets\u003d\"@AdvyzeTheme.css\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":154,"author":{"gitId":"whoisjustinngo"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"70.0\" minHeight\u003d\"100.0\" minWidth\u003d\"450.0\" prefHeight\u003d\"100\" styleClass\u003d\"background-with-border-dark\" stylesheets\u003d\"@AdvyzeTheme.css\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":159,"author":{"gitId":"whoisjustinngo"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" styleClass\u003d\"status-bar\" stylesheets\u003d\"@AdvyzeTheme.css\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"whoisjustinngo":98,"kslui99":4,"rickyaandrew":4,"-":42,"SpdPnd98":1,"mokdarren":14}},{"path":"src/main/resources/view/NotesPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mokdarren"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"mokdarren"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"mokdarren"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"mokdarren"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"mokdarren"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"mokdarren"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"mokdarren"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"mokdarren"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"mokdarren"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"mokdarren"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"result-window\" stylesheets\u003d\"@AdvyzeTheme.css\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"mokdarren"},"content":"   \u003cVBox prefHeight\u003d\"3571.0\" prefWidth\u003d\"1838.0\"\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"mokdarren"},"content":"      \u003cchildren\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"mokdarren"},"content":"         \u003cGridPane minHeight\u003d\"-Infinity\" prefHeight\u003d\"40.0\" styleClass\u003d\"table-header\" stylesheets\u003d\"@AdvyzeTheme.css\"\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"mokdarren"},"content":"            \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"mokdarren"},"content":"               \u003cColumnConstraints hgrow\u003d\"ALWAYS\" minWidth\u003d\"10.0\" percentWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"mokdarren"},"content":"            \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"mokdarren"},"content":"            \u003crowConstraints\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"mokdarren"},"content":"               \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"40.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"mokdarren"},"content":"            \u003c/rowConstraints\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"mokdarren"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"mokdarren"},"content":"               \u003cLabel styleClass\u003d\"light_text\" stylesheets\u003d\"@AdvyzeTheme.css\" text\u003d\"Notes\" textAlignment\u003d\"CENTER\" GridPane.halignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"mokdarren"},"content":"                  \u003copaqueInsets\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"mokdarren"},"content":"                     \u003cInsets /\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"mokdarren"},"content":"                  \u003c/opaqueInsets\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"mokdarren"},"content":"               \u003c/Label\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"mokdarren"},"content":"            \u003c/children\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"mokdarren"},"content":"         \u003c/GridPane\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"mokdarren"},"content":"        \u003cTextArea fx:id\u003d\"notesDisplay\" editable\u003d\"false\" prefHeight\u003d\"2414.0\" prefWidth\u003d\"443.0\" styleClass\u003d\"result-text-display\" stylesheets\u003d\"@AdvyzeTheme.css\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"mokdarren"},"content":"            \u003copaqueInsets\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"mokdarren"},"content":"               \u003cInsets /\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"mokdarren"},"content":"            \u003c/opaqueInsets\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"mokdarren"},"content":"         \u003c/TextArea\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"mokdarren"},"content":"      \u003c/children\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"mokdarren"},"content":"   \u003c/VBox\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"mokdarren"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"mokdarren":37}},{"path":"src/main/resources/view/PersonDetailedPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mokdarren"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"mokdarren"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"mokdarren"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"mokdarren"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"mokdarren"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"mokdarren"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"mokdarren"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"mokdarren"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"whoisjustinngo"},"content":"\u003cVBox maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" styleClass\u003d\"background-with-border\" stylesheets\u003d\"@AdvyzeTheme.css\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"whoisjustinngo"},"content":"    \u003cGridPane minHeight\u003d\"-Infinity\" prefHeight\u003d\"40.0\" styleClass\u003d\"table-header\" stylesheets\u003d\"@AdvyzeTheme.css\"\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"mokdarren"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cColumnConstraints minWidth\u003d\"10.0\" percentWidth\u003d\"20.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cColumnConstraints minWidth\u003d\"10.0\" percentWidth\u003d\"15.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cColumnConstraints minWidth\u003d\"10.0\" percentWidth\u003d\"15.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cColumnConstraints minWidth\u003d\"10.0\" percentWidth\u003d\"30.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cColumnConstraints minWidth\u003d\"10.0\" percentWidth\u003d\"20.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"mokdarren"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"mokdarren"},"content":"        \u003crowConstraints\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"mokdarren"},"content":"            \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"40.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"mokdarren"},"content":"        \u003c/rowConstraints\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"mokdarren"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cLabel styleClass\u003d\"light_text\" stylesheets\u003d\"@AdvyzeTheme.css\" text\u003d\"Name\" textAlignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"mokdarren"},"content":"                \u003copaqueInsets\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"mokdarren"},"content":"                    \u003cInsets /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"mokdarren"},"content":"                \u003c/opaqueInsets\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"mokdarren"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"mokdarren"},"content":"                    \u003cInsets left\u003d\"30.0\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"mokdarren"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"mokdarren"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cLabel styleClass\u003d\"light_text\" stylesheets\u003d\"@AdvyzeTheme.css\" text\u003d\"Phone\" textAlignment\u003d\"CENTER\" GridPane.columnIndex\u003d\"2\" /\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cLabel styleClass\u003d\"light_text\" stylesheets\u003d\"@AdvyzeTheme.css\" text\u003d\"Address\" textAlignment\u003d\"CENTER\" GridPane.columnIndex\u003d\"3\" /\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cLabel styleClass\u003d\"light_text\" stylesheets\u003d\"@AdvyzeTheme.css\" text\u003d\"Email\" textAlignment\u003d\"CENTER\" GridPane.columnIndex\u003d\"4\" /\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cLabel styleClass\u003d\"light_text\" stylesheets\u003d\"@AdvyzeTheme.css\" text\u003d\"Type\" textAlignment\u003d\"CENTER\" GridPane.columnIndex\u003d\"1\" /\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"mokdarren"},"content":"        \u003c/children\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"mokdarren"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"whoisjustinngo"},"content":"    \u003cListView fx:id\u003d\"personListView\" maxHeight\u003d\"80.0\" stylesheets\u003d\"@AdvyzeTheme.css\" /\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"mokdarren"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"whoisjustinngo":13,"mokdarren":26}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"mokdarren"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"whoisjustinngo"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"mokdarren"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" percentWidth\u003d\"20.0\" prefWidth\u003d\"150.0\" /\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"mokdarren"},"content":"         \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"146.0\" minWidth\u003d\"10.0\" percentWidth\u003d\"15.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"mokdarren"},"content":"         \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"146.0\" minWidth\u003d\"10.0\" percentWidth\u003d\"15.0\" prefWidth\u003d\"94.0\" /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"mokdarren"},"content":"         \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" maxWidth\u003d\"206.0\" minWidth\u003d\"10.0\" percentWidth\u003d\"30.0\" prefWidth\u003d\"206.0\" /\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"mokdarren"},"content":"         \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" percentWidth\u003d\"20.0\" prefWidth\u003d\"150.0\" /\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"mokdarren"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"80.0\" prefHeight\u003d\"80.0\" prefWidth\u003d\"150.0\"\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"mokdarren"},"content":"        \u003cInsets bottom\u003d\"5.0\" left\u003d\"15.0\" right\u003d\"5.0\" top\u003d\"20.0\" /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"mokdarren"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"mokdarren"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"mokdarren"},"content":"   \u003cLabel fx:id\u003d\"relationship\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$relationship\" wrapText\u003d\"true\" GridPane.columnIndex\u003d\"1\" /\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"mokdarren"},"content":"   \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" wrapText\u003d\"true\" GridPane.columnIndex\u003d\"2\" /\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"mokdarren"},"content":"   \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" wrapText\u003d\"true\" GridPane.columnIndex\u003d\"3\" /\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"mokdarren"},"content":"   \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" wrapText\u003d\"true\" GridPane.columnIndex\u003d\"4\" /\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"mokdarren"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"mokdarren"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"mokdarren"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"whoisjustinngo":1,"-":27,"mokdarren":18}},{"path":"src/main/resources/view/PersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"mokdarren"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"mokdarren"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"mokdarren"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"mokdarren"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"mokdarren"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":11,"author":{"gitId":"whoisjustinngo"},"content":"\u003cVBox styleClass\u003d\"background-with-border-dark\" stylesheets\u003d\"@AdvyzeTheme.css\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"whoisjustinngo"},"content":"   \u003cGridPane styleClass\u003d\"table-header\" stylesheets\u003d\"@AdvyzeTheme.css\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"mokdarren"},"content":"     \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"mokdarren"},"content":"       \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" percentWidth\u003d\"20.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"mokdarren"},"content":"         \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" percentWidth\u003d\"15.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"mokdarren"},"content":"       \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" percentWidth\u003d\"15.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"mokdarren"},"content":"         \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" percentWidth\u003d\"30.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"mokdarren"},"content":"         \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" percentWidth\u003d\"20.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"mokdarren"},"content":"     \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"mokdarren"},"content":"     \u003crowConstraints\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"whoisjustinngo"},"content":"       \u003cRowConstraints minHeight\u003d\"30.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"mokdarren"},"content":"     \u003c/rowConstraints\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"mokdarren"},"content":"      \u003cchildren\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cLabel styleClass\u003d\"light_text\" stylesheets\u003d\"@AdvyzeTheme.css\" text\u003d\"Name\" textAlignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"mokdarren"},"content":"            \u003copaqueInsets\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"mokdarren"},"content":"               \u003cInsets /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"mokdarren"},"content":"            \u003c/opaqueInsets\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"mokdarren"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"whoisjustinngo"},"content":"               \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"mokdarren"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cGridPane.margin\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"whoisjustinngo"},"content":"               \u003cInsets /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"whoisjustinngo"},"content":"            \u003c/GridPane.margin\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"mokdarren"},"content":"         \u003c/Label\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cLabel styleClass\u003d\"light_text\" stylesheets\u003d\"@AdvyzeTheme.css\" text\u003d\"Phone\" textAlignment\u003d\"CENTER\" GridPane.columnIndex\u003d\"2\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cGridPane.margin\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"whoisjustinngo"},"content":"               \u003cInsets /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"whoisjustinngo"},"content":"            \u003c/GridPane.margin\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"whoisjustinngo"},"content":"               \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"whoisjustinngo"},"content":"            \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cLabel styleClass\u003d\"light_text\" stylesheets\u003d\"@AdvyzeTheme.css\" text\u003d\"Address\" textAlignment\u003d\"CENTER\" GridPane.columnIndex\u003d\"3\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cGridPane.margin\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"whoisjustinngo"},"content":"               \u003cInsets /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"whoisjustinngo"},"content":"            \u003c/GridPane.margin\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"whoisjustinngo"},"content":"               \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"whoisjustinngo"},"content":"            \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cLabel styleClass\u003d\"light_text\" stylesheets\u003d\"@AdvyzeTheme.css\" text\u003d\"Email\" textAlignment\u003d\"CENTER\" GridPane.columnIndex\u003d\"4\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cGridPane.margin\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"whoisjustinngo"},"content":"               \u003cInsets /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"whoisjustinngo"},"content":"            \u003c/GridPane.margin\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"whoisjustinngo"},"content":"               \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"whoisjustinngo"},"content":"            \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cLabel styleClass\u003d\"light_text\" stylesheets\u003d\"@AdvyzeTheme.css\" text\u003d\"Type\" textAlignment\u003d\"CENTER\" GridPane.columnIndex\u003d\"1\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cGridPane.margin\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"whoisjustinngo"},"content":"               \u003cInsets /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"whoisjustinngo"},"content":"            \u003c/GridPane.margin\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"whoisjustinngo"},"content":"               \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"whoisjustinngo"},"content":"            \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"mokdarren"},"content":"      \u003c/children\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"mokdarren"},"content":"   \u003c/GridPane\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"whoisjustinngo"},"content":"  \u003cListView fx:id\u003d\"personListView\" stylesheets\u003d\"@AdvyzeTheme.css\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"whoisjustinngo":37,"-":6,"mokdarren":23}},{"path":"src/main/resources/view/PolicyListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mokdarren"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"mokdarren"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"mokdarren"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"mokdarren"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"mokdarren"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"mokdarren"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"mokdarren"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"mokdarren"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"mokdarren"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"mokdarren"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"mokdarren"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"mokdarren"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" percentWidth\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"mokdarren"},"content":"         \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" percentWidth\u003d\"20.0\" /\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"mokdarren"},"content":"         \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" percentWidth\u003d\"25.0\" /\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"mokdarren"},"content":"         \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" percentWidth\u003d\"20.0\" /\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"mokdarren"},"content":"         \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" percentWidth\u003d\"20.0\" /\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"mokdarren"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"mokdarren"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"80.0\" prefHeight\u003d\"80.0\" prefWidth\u003d\"150.0\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"mokdarren"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"mokdarren"},"content":"        \u003cInsets bottom\u003d\"5.0\" left\u003d\"15.0\" right\u003d\"5.0\" top\u003d\"20.0\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"mokdarren"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"mokdarren"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"mokdarren"},"content":"      \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$id\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"mokdarren"},"content":"   \u003cLabel fx:id\u003d\"insurer\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$insurer\" wrapText\u003d\"true\" GridPane.columnIndex\u003d\"1\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"mokdarren"},"content":"   \u003cLabel fx:id\u003d\"policyName\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$policyName\" wrapText\u003d\"true\" GridPane.columnIndex\u003d\"2\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"mokdarren"},"content":"   \u003cLabel fx:id\u003d\"policyNumber\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$policyNumber\" wrapText\u003d\"true\" GridPane.columnIndex\u003d\"3\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"mokdarren"},"content":"   \u003cLabel fx:id\u003d\"commission\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$commission\" wrapText\u003d\"true\" GridPane.columnIndex\u003d\"4\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"mokdarren"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"mokdarren"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"mokdarren"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"mokdarren"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"mokdarren"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"mokdarren":34}},{"path":"src/main/resources/view/PolicyPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mokdarren"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"mokdarren"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"mokdarren"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"mokdarren"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"mokdarren"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"mokdarren"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"mokdarren"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"mokdarren"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"mokdarren"},"content":"\u003cVBox styleClass\u003d\"background-with-border-dark\" stylesheets\u003d\"@AdvyzeTheme.css\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"whoisjustinngo"},"content":"    \u003cGridPane minHeight\u003d\"-Infinity\" prefHeight\u003d\"40.0\" styleClass\u003d\"table-header\" stylesheets\u003d\"@AdvyzeTheme.css\"\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"mokdarren"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"mokdarren"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" percentWidth\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"mokdarren"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" percentWidth\u003d\"20.0\" /\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"mokdarren"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" percentWidth\u003d\"25.0\" /\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"mokdarren"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" percentWidth\u003d\"20.0\" /\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"mokdarren"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" percentWidth\u003d\"20.0\" /\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"mokdarren"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"mokdarren"},"content":"        \u003crowConstraints\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"mokdarren"},"content":"            \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"40.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"mokdarren"},"content":"        \u003c/rowConstraints\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"mokdarren"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cLabel styleClass\u003d\"light_text\" stylesheets\u003d\"@AdvyzeTheme.css\" text\u003d\"ID\" textAlignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"mokdarren"},"content":"                \u003copaqueInsets\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"mokdarren"},"content":"                    \u003cInsets /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"mokdarren"},"content":"                \u003c/opaqueInsets\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"mokdarren"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"mokdarren"},"content":"                    \u003cInsets left\u003d\"30.0\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"mokdarren"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"mokdarren"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cLabel styleClass\u003d\"light_text\" stylesheets\u003d\"@AdvyzeTheme.css\" text\u003d\"Policy Name\" textAlignment\u003d\"CENTER\" GridPane.columnIndex\u003d\"2\" /\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cLabel styleClass\u003d\"light_text\" stylesheets\u003d\"@AdvyzeTheme.css\" text\u003d\"Policy Number\" textAlignment\u003d\"CENTER\" GridPane.columnIndex\u003d\"3\" /\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cLabel styleClass\u003d\"light_text\" stylesheets\u003d\"@AdvyzeTheme.css\" text\u003d\"Commission\" textAlignment\u003d\"CENTER\" GridPane.columnIndex\u003d\"4\" /\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cLabel styleClass\u003d\"light_text\" stylesheets\u003d\"@AdvyzeTheme.css\" text\u003d\"Insurer\" textAlignment\u003d\"CENTER\" GridPane.columnIndex\u003d\"1\" /\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"mokdarren"},"content":"        \u003c/children\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"mokdarren"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"mokdarren"},"content":"    \u003cListView fx:id\u003d\"policiesListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"mokdarren"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"whoisjustinngo":6,"mokdarren":33}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"whoisjustinngo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"mokdarren"},"content":"\u003cStackPane fx:id\u003d\"notesPlaceholder\" styleClass\u003d\"result-window\" stylesheets\u003d\"@AdvyzeTheme.css\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"whoisjustinngo"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-text-display\" stylesheets\u003d\"@AdvyzeTheme.css\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"whoisjustinngo"},"content":"      \u003cStackPane.margin\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"whoisjustinngo"},"content":"      \u003c/StackPane.margin\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"whoisjustinngo"},"content":"      \u003copaqueInsets\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cInsets /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"whoisjustinngo"},"content":"      \u003c/opaqueInsets\u003e\u003c/TextArea\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"whoisjustinngo":8,"-":6,"mokdarren":1}},{"path":"src/main/resources/view/ScheduleListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"         \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"150.0\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"         \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"150.0\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"50\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"           \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"             \u003cminWidth\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"               \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"               \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"             \u003c/minWidth\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"           \u003c/Label\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"               \u003cLabel fx:id\u003d\"description\" text\u003d\"\\$description\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"            \u003c/children\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"         \u003cFlowPane fx:id\u003d\"tags\" prefHeight\u003d\"10.0\" prefWidth\u003d\"130.0\" /\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"      \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$date\" GridPane.columnIndex\u003d\"1\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"  \u003cLabel fx:id\u003d\"time\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$time\" GridPane.columnIndex\u003d\"2\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"rickyaandrew"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"rickyaandrew"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"rickyaandrew"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"rickyaandrew":43}},{"path":"src/main/resources/view/ScheduleListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"whoisjustinngo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"whoisjustinngo"},"content":"\u003cVBox styleClass\u003d\"background-with-border-dark\" stylesheets\u003d\"@AdvyzeTheme.css\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"whoisjustinngo"},"content":"   \u003cGridPane maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" prefHeight\u003d\"27.0\" styleClass\u003d\"table-header\" stylesheets\u003d\"@AdvyzeTheme.css\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"     \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"         \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"       \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"       \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"     \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"     \u003crowConstraints\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"       \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"     \u003c/rowConstraints\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"      \u003cchildren\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cLabel styleClass\u003d\"light_text\" stylesheets\u003d\"@AdvyzeTheme.css\" text\u003d\"Description\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"whoisjustinngo"},"content":"               \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"whoisjustinngo"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cGridPane.margin\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"whoisjustinngo"},"content":"               \u003cInsets /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"whoisjustinngo"},"content":"            \u003c/GridPane.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cLabel styleClass\u003d\"light_text\" stylesheets\u003d\"@AdvyzeTheme.css\" text\u003d\"Date\" GridPane.columnIndex\u003d\"1\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cGridPane.margin\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"whoisjustinngo"},"content":"               \u003cInsets /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"whoisjustinngo"},"content":"            \u003c/GridPane.margin\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"whoisjustinngo"},"content":"               \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"whoisjustinngo"},"content":"            \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"whoisjustinngo"},"content":"         \u003cLabel styleClass\u003d\"light_text\" stylesheets\u003d\"@AdvyzeTheme.css\" text\u003d\"Time\" GridPane.columnIndex\u003d\"2\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cGridPane.margin\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"whoisjustinngo"},"content":"               \u003cInsets /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"whoisjustinngo"},"content":"            \u003c/GridPane.margin\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"whoisjustinngo"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"whoisjustinngo"},"content":"               \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"whoisjustinngo"},"content":"            \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"rickyaandrew"},"content":"      \u003c/children\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"rickyaandrew"},"content":"   \u003c/GridPane\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"whoisjustinngo"},"content":"  \u003cListView fx:id\u003d\"scheduleListView\" stylesheets\u003d\"@AdvyzeTheme.css\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"rickyaandrew"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"whoisjustinngo":25,"rickyaandrew":21}},{"path":"src/main/resources/view/StatusBarFooter.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"whoisjustinngo"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"whoisjustinngo"},"content":"\u003cGridPane alignment\u003d\"CENTER\" styleClass\u003d\"background-with-border-dark\" stylesheets\u003d\"@AdvyzeTheme.css\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" /\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"whoisjustinngo"},"content":"  \u003cLabel fx:id\u003d\"saveLocationStatus\" alignment\u003d\"CENTER\" styleClass\u003d\"light_text\" stylesheets\u003d\"@AdvyzeTheme.css\" GridPane.halignment\u003d\"CENTER\" GridPane.valignment\u003d\"CENTER\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"whoisjustinngo"},"content":"   \u003crowConstraints\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"whoisjustinngo"},"content":"      \u003cRowConstraints /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"whoisjustinngo"},"content":"   \u003c/rowConstraints\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2016-08-26"}],"authorContributionMap":{"whoisjustinngo":6,"-":10}},{"path":"src/main/resources/view/TodoListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"50\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"      \u003cHBox fx:id\u003d\"todoContentHBox\" spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"        \u003cLabel fx:id\u003d\"description\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"kslui99":33}},{"path":"src/main/resources/view/TodoListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"whoisjustinngo"},"content":"\u003cVBox styleClass\u003d\"background-with-border-dark\" stylesheets\u003d\"@AdvyzeTheme.css\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"whoisjustinngo"},"content":"  \u003cListView fx:id\u003d\"todoListView\" stylesheets\u003d\"@AdvyzeTheme.css\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"whoisjustinngo":2,"kslui99":6}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidAndValidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Valid Person\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"mokdarren"},"content":"    \"relationship\": \"client\",","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \"name\": \"Person With Invalid Phone Field\",","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"mokdarren"},"content":"    \"relationship\": \"client\",","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"phone\": \"948asdf2424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":13,"mokdarren":2}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidAndValidTodoAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"{","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"  \"todos\": [ {","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"    \"description\": \"Valid Todo\"","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"  }, {","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"  } ]","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"kslui99":6}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"mokdarren"},"content":"    \"relationship\": \"client\",","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":8,"mokdarren":1}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidTodoAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"{","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"  \"todos\": [ {","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"  } ]","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"kslui99":4}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicatePersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"mokdarren"},"content":"    \"relationship\": \"client\",","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"mokdarren"},"content":"    \"notes\" : \"\",","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"mokdarren"},"content":"    \"status\" : \"FRESH\",","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"mokdarren"},"content":"    \"tagged\": [ \"friends\" ],","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"mokdarren"},"content":"    \"policies\" : [ ]","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"mokdarren"},"content":"    \"relationship\": \"client\",","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \"email\": \"pauline@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"mokdarren"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"mokdarren"},"content":"    \"notes\" : \"\",","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"mokdarren"},"content":"    \"status\" : \"FRESH\",","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"mokdarren"},"content":"    \"policies\" : [ ]","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"  } ],","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"  \"todos\" : [ ],","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"whoisjustinngo"},"content":"  \"schedules\" : [ ],","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"whoisjustinngo"},"content":"  \"customGoals\" : []","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"whoisjustinngo":2,"kslui99":1,"rickyaandrew":1,"-":11,"mokdarren":10}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicateTodoAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"{","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"  \"persons\": [ ],","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"  \"todos\" : [ {","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"    \"description\": \"read book\"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"  }, {","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"    \"description\": \"read book\"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"  } ],","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"whoisjustinngo"},"content":"  \"schedules\" : [ ],","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"whoisjustinngo"},"content":"  \"customGoals\" : []","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"whoisjustinngo":2,"kslui99":7,"rickyaandrew":1}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Hans Muster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"mokdarren"},"content":"    \"relationship\": \"client\",","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\": \"invalid@email!3e\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"  } ],","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"  \"todos\" : [ ],","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"whoisjustinngo"},"content":"  \"schedules\" : [ ],","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"whoisjustinngo"},"content":"  \"customGoals\" : []","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"whoisjustinngo":2,"kslui99":1,"rickyaandrew":1,"-":7,"mokdarren":1}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidTodoAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"{","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"  \"persons\": [ ],","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"  \"todos\" : [ {","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"  } ],","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"whoisjustinngo"},"content":"  \"schedules\" : [ ],","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"whoisjustinngo"},"content":"  \"customGoals\" : []","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"whoisjustinngo":2,"kslui99":4,"rickyaandrew":1}},{"path":"src/test/data/JsonSerializableAddressBookTest/typicalPersonsAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"_comment\": \"AddressBook save file which contains the same Person values as in TypicalPersons#getTypicalAddressBook()\",","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \"persons\" : [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"mokdarren"},"content":"    \"relationship\": \"client\",","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"email\" : \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \"address\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"mokdarren"},"content":"    \"notes\" : \"\",","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"mokdarren"},"content":"    \"status\" : \"FRESH\",","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"mokdarren"},"content":"    \"tagged\" : [ \"friends\" ],","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"mokdarren"},"content":"    \"policies\" : []","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"mokdarren"},"content":"    \"relationship\": \"client\",","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \"phone\" : \"98765432\",","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \"email\" : \"johnd@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \"address\" : \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"mokdarren"},"content":"    \"notes\" : \"\",","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"mokdarren"},"content":"    \"status\" : \"FRESH\",","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"mokdarren"},"content":"    \"tagged\" : [ \"owesMoney\", \"friends\" ],","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"mokdarren"},"content":"    \"policies\" : []","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"mokdarren"},"content":"    \"relationship\": \"friend\",","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \"phone\" : \"95352563\",","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \"email\" : \"heinz@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \"address\" : \"wall street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"mokdarren"},"content":"    \"notes\" : \"\",","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"mokdarren"},"content":"    \"status\" : \"FRESH\",","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"mokdarren"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"mokdarren"},"content":"    \"policies\" : []","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"mokdarren"},"content":"    \"relationship\": \"client\",","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \"email\" : \"cornelia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \"address\" : \"10th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"mokdarren"},"content":"    \"notes\" : \"\",","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"mokdarren"},"content":"    \"status\" : \"FRESH\",","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"mokdarren"},"content":"    \"tagged\" : [ \"friends\" ],","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"mokdarren"},"content":"    \"policies\" : []","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"mokdarren"},"content":"    \"relationship\": \"client\",","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482224\",","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \"email\" : \"werner@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    \"address\" : \"michegan ave\",","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"mokdarren"},"content":"    \"notes\" : \"\",","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"mokdarren"},"content":"    \"status\" : \"FRESH\",","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"mokdarren"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"mokdarren"},"content":"    \"policies\" : []","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"mokdarren"},"content":"    \"relationship\": \"client\",","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482427\",","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \"email\" : \"lydia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \"address\" : \"little tokyo\",","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"mokdarren"},"content":"    \"notes\" : \"\",","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"mokdarren"},"content":"    \"status\" : \"FRESH\",","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"mokdarren"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"mokdarren"},"content":"    \"policies\" : []","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"mokdarren"},"content":"    \"relationship\": \"client\",","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482442\",","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    \"email\" : \"anna@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    \"address\" : \"4th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"mokdarren"},"content":"    \"notes\" : \"\",","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"mokdarren"},"content":"    \"status\" : \"FRESH\",","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"mokdarren"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-10-29"},{"lineNumber":72,"author":{"gitId":"mokdarren"},"content":"    \"policies\" : []","lastModifiedDate":"2021-10-29"},{"lineNumber":73,"author":{"gitId":"kslui99"},"content":"  } ],","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"rickyaandrew"},"content":"  \"todos\" : [ ],","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"whoisjustinngo"},"content":"  \"schedules\" : [ ],","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"whoisjustinngo"},"content":"  \"customGoals\" : []","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"whoisjustinngo":2,"kslui99":1,"rickyaandrew":1,"-":38,"mokdarren":35}},{"path":"src/test/data/JsonSerializableAddressBookTest/typicalTodosAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"{","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"  \"_comment\": \"AddressBook save file which contains the same Todo values as in TypicalTodos#getTypicalAddressBook()\",","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"  \"persons\" : [ ],","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"  \"todos\" : [ {","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"    \"description\" : \"read\"","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"  }, {","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"    \"description\" : \"travel\"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"  } ],","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"whoisjustinngo"},"content":"  \"schedules\" : [ ],","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"whoisjustinngo"},"content":"  \"customGoals\" : []","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"whoisjustinngo":2,"kslui99":8,"rickyaandrew":1}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"mokdarren"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RELATIONSHIP_DESC_AMY;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"SpdPnd98"},"content":"import static seedu.address.model.TabSwitch.Tab.CONTACTS;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"SpdPnd98"},"content":"import java.util.List;","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"SpdPnd98"},"content":"        assertCommandException(CONTACTS.getLabel() + \" \", deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"SpdPnd98"},"content":"    public void execute_validListContactsCommand_success() throws Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"SpdPnd98"},"content":"        assertCommandSuccess(CONTACTS.getLabel() + \" \", listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"mokdarren"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + RELATIONSHIP_DESC_AMY","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"mokdarren"},"content":"                + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"SpdPnd98"},"content":"        assertCommandFailure(CONTACTS.getLabel() + \" \", addCommand, CommandException.class,","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"SpdPnd98"},"content":"            expectedMessage, expectedModel);","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"SpdPnd98"},"content":"     * Assumes that the command is not tab-specific. \u003cbr\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"SpdPnd98"},"content":"        List\u003cCommandResult\u003e results \u003d logic.execute(CONTACTS.getLabel() + \" \" + inputCommand);","lastModifiedDate":"2021-10-29"},{"lineNumber":111,"author":{"gitId":"SpdPnd98"},"content":"        assertEquals(2, results.size());","lastModifiedDate":"2021-10-29"},{"lineNumber":112,"author":{"gitId":"SpdPnd98"},"content":"        assertEquals(expectedMessage, results.get(1).getFeedbackToUser());","lastModifiedDate":"2021-10-29"},{"lineNumber":113,"author":{"gitId":"SpdPnd98"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"SpdPnd98"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"SpdPnd98"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"SpdPnd98"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"SpdPnd98"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"SpdPnd98"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"SpdPnd98"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"SpdPnd98"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"SpdPnd98"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"SpdPnd98"},"content":"    private void assertCommandSuccess(String tabId, String inputCommand, String expectedMessage,","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"SpdPnd98"},"content":"                                      Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"SpdPnd98"},"content":"        List\u003cCommandResult\u003e results \u003d logic.execute(tabId + inputCommand);","lastModifiedDate":"2021-10-29"},{"lineNumber":126,"author":{"gitId":"SpdPnd98"},"content":"        assertEquals(2, results.size());","lastModifiedDate":"2021-10-29"},{"lineNumber":127,"author":{"gitId":"SpdPnd98"},"content":"        assertEquals(expectedMessage, results.get(1).getFeedbackToUser());","lastModifiedDate":"2021-10-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"SpdPnd98"},"content":"     * Assumes that the command is not tab-specific.","lastModifiedDate":"2021-10-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":140,"author":{"gitId":"SpdPnd98"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":141,"author":{"gitId":"SpdPnd98"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2021-10-10"},{"lineNumber":142,"author":{"gitId":"SpdPnd98"},"content":"     * @see #assertCommandFailure(String, String, Class, String, Model)","lastModifiedDate":"2021-10-10"},{"lineNumber":143,"author":{"gitId":"SpdPnd98"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"SpdPnd98"},"content":"    private void assertParseException(String tabId, String inputCommand, String expectedMessage) {","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"SpdPnd98"},"content":"        assertCommandFailure(tabId, ParseException.class, expectedMessage);","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"SpdPnd98"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":150,"author":{"gitId":"SpdPnd98"},"content":"     * Assumes that the command is not tab-specific.","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":157,"author":{"gitId":"SpdPnd98"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":158,"author":{"gitId":"SpdPnd98"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2021-10-10"},{"lineNumber":159,"author":{"gitId":"SpdPnd98"},"content":"     * @see #assertCommandFailure(String, String, Class, String, Model)","lastModifiedDate":"2021-10-10"},{"lineNumber":160,"author":{"gitId":"SpdPnd98"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":161,"author":{"gitId":"SpdPnd98"},"content":"    private void assertCommandException(String tabId, String inputCommand, String expectedMessage) {","lastModifiedDate":"2021-10-10"},{"lineNumber":162,"author":{"gitId":"SpdPnd98"},"content":"        assertCommandFailure(tabId, inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2021-10-10"},{"lineNumber":163,"author":{"gitId":"SpdPnd98"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":164,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":167,"author":{"gitId":"SpdPnd98"},"content":"     * Assumes that the command is not tab-specific.","lastModifiedDate":"2021-10-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":176,"author":{"gitId":"SpdPnd98"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":177,"author":{"gitId":"SpdPnd98"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2021-10-10"},{"lineNumber":178,"author":{"gitId":"SpdPnd98"},"content":"     * @see #assertCommandFailure(String, String, Class, String, Model)","lastModifiedDate":"2021-10-10"},{"lineNumber":179,"author":{"gitId":"SpdPnd98"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":180,"author":{"gitId":"SpdPnd98"},"content":"    private void assertCommandFailure(String tabId, String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2021-10-10"},{"lineNumber":181,"author":{"gitId":"SpdPnd98"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2021-10-10"},{"lineNumber":182,"author":{"gitId":"SpdPnd98"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":183,"author":{"gitId":"SpdPnd98"},"content":"        assertCommandFailure(tabId, inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-10"},{"lineNumber":184,"author":{"gitId":"SpdPnd98"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":185,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":191,"author":{"gitId":"SpdPnd98"},"content":"     * Assumes that the command is not tab-specific. \u003cbr\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":196,"author":{"gitId":"SpdPnd98"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(CONTACTS.getLabel()","lastModifiedDate":"2021-10-10"},{"lineNumber":197,"author":{"gitId":"SpdPnd98"},"content":"                + \" \" + inputCommand));","lastModifiedDate":"2021-10-10"},{"lineNumber":198,"author":{"gitId":"SpdPnd98"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2021-10-10"},{"lineNumber":199,"author":{"gitId":"SpdPnd98"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":200,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":201,"author":{"gitId":"SpdPnd98"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":202,"author":{"gitId":"SpdPnd98"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2021-10-10"},{"lineNumber":203,"author":{"gitId":"SpdPnd98"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":204,"author":{"gitId":"SpdPnd98"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":205,"author":{"gitId":"SpdPnd98"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":206,"author":{"gitId":"SpdPnd98"},"content":"     * @see #assertCommandSuccess(String, String, String, Model)","lastModifiedDate":"2021-10-10"},{"lineNumber":207,"author":{"gitId":"SpdPnd98"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":208,"author":{"gitId":"SpdPnd98"},"content":"    private void assertCommandFailure(String tabId, String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2021-10-10"},{"lineNumber":209,"author":{"gitId":"SpdPnd98"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2021-10-10"},{"lineNumber":210,"author":{"gitId":"SpdPnd98"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(tabId + inputCommand));","lastModifiedDate":"2021-10-10"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"-":153,"SpdPnd98":71,"mokdarren":3}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"SpdPnd98"},"content":"import java.io.File;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"SpdPnd98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"SpdPnd98"},"content":"import java.util.List;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"SpdPnd98"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.model.analytics.ClientAnalytics;","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.model.customGoal.CustomGoal;","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.event.Schedule;","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.Todo;","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"kslui99"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"kslui99"},"content":"        public void addTodo(Todo todo) {","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"kslui99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"kslui99"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"kslui99"},"content":"        public boolean hasTodo(Todo todo) {","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"kslui99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":149,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":150,"author":{"gitId":"whoisjustinngo"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":151,"author":{"gitId":"whoisjustinngo"},"content":"        public boolean hasCustomGoal(CustomGoal toAdd) {","lastModifiedDate":"2021-10-25"},{"lineNumber":152,"author":{"gitId":"whoisjustinngo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":153,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":154,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"kslui99"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":161,"author":{"gitId":"kslui99"},"content":"        public void deleteTodo(Todo target) {","lastModifiedDate":"2021-10-10"},{"lineNumber":162,"author":{"gitId":"kslui99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":163,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":164,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"whoisjustinngo"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":171,"author":{"gitId":"whoisjustinngo"},"content":"        public ClientAnalytics getAnalytics() {","lastModifiedDate":"2021-10-25"},{"lineNumber":172,"author":{"gitId":"whoisjustinngo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":173,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":174,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":175,"author":{"gitId":"kslui99"},"content":"        @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":176,"author":{"gitId":"kslui99"},"content":"        public void setTodo(Todo target, Todo editedTodo) {","lastModifiedDate":"2021-10-22"},{"lineNumber":177,"author":{"gitId":"kslui99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-22"},{"lineNumber":178,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":179,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"mokdarren"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":186,"author":{"gitId":"mokdarren"},"content":"        public ObservableList\u003cPerson\u003e getSelectedPersonList() {","lastModifiedDate":"2021-10-29"},{"lineNumber":187,"author":{"gitId":"mokdarren"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":188,"author":{"gitId":"mokdarren"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":189,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":190,"author":{"gitId":"kslui99"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":191,"author":{"gitId":"kslui99"},"content":"        public ObservableList\u003cTodo\u003e getFilteredTodoList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":192,"author":{"gitId":"kslui99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":193,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":194,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"mokdarren"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":200,"author":{"gitId":"mokdarren"},"content":"        public void updateSelectedPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-29"},{"lineNumber":201,"author":{"gitId":"mokdarren"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":202,"author":{"gitId":"mokdarren"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":203,"author":{"gitId":"rickyaandrew"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":204,"author":{"gitId":"rickyaandrew"},"content":"        public void addSchedule(Schedule schedule) {","lastModifiedDate":"2021-10-11"},{"lineNumber":205,"author":{"gitId":"rickyaandrew"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-11"},{"lineNumber":206,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":207,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":208,"author":{"gitId":"rickyaandrew"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":209,"author":{"gitId":"rickyaandrew"},"content":"        public ObservableList\u003cSchedule\u003e getFilteredScheduleList() {","lastModifiedDate":"2021-10-11"},{"lineNumber":210,"author":{"gitId":"rickyaandrew"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-11"},{"lineNumber":211,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":212,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":213,"author":{"gitId":"whoisjustinngo"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":214,"author":{"gitId":"whoisjustinngo"},"content":"        public ObservableList\u003cCustomGoal\u003e getFilteredCustomGoalList() {","lastModifiedDate":"2021-10-25"},{"lineNumber":215,"author":{"gitId":"whoisjustinngo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":216,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":217,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":218,"author":{"gitId":"kslui99"},"content":"        public void updateFilteredTodoList(Predicate\u003cTodo\u003e predicate) {","lastModifiedDate":"2021-10-10"},{"lineNumber":219,"author":{"gitId":"kslui99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":220,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":221,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":222,"author":{"gitId":"rickyaandrew"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":223,"author":{"gitId":"rickyaandrew"},"content":"        public void deleteSchedule(Schedule target) {","lastModifiedDate":"2021-10-13"},{"lineNumber":224,"author":{"gitId":"rickyaandrew"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":225,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":226,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":227,"author":{"gitId":"whoisjustinngo"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":228,"author":{"gitId":"whoisjustinngo"},"content":"        public void addCustomGoal(CustomGoal toAdd) {","lastModifiedDate":"2021-10-25"},{"lineNumber":229,"author":{"gitId":"whoisjustinngo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":230,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":231,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":232,"author":{"gitId":"rickyaandrew"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":233,"author":{"gitId":"rickyaandrew"},"content":"        public void updateFilteredScheduleList(Predicate\u003cSchedule\u003e predicate) {","lastModifiedDate":"2021-10-13"},{"lineNumber":234,"author":{"gitId":"rickyaandrew"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":235,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":236,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":237,"author":{"gitId":"whoisjustinngo"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":238,"author":{"gitId":"whoisjustinngo"},"content":"        public void updateCustomGoal(Index goalToUpdate, float valueToUpdateBy) {","lastModifiedDate":"2021-10-25"},{"lineNumber":239,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":240,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":241,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":242,"author":{"gitId":"whoisjustinngo"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":243,"author":{"gitId":"whoisjustinngo"},"content":"        public int getNumOfCustomGoals() {","lastModifiedDate":"2021-10-25"},{"lineNumber":244,"author":{"gitId":"whoisjustinngo"},"content":"            return 0;","lastModifiedDate":"2021-10-25"},{"lineNumber":245,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":246,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":247,"author":{"gitId":"whoisjustinngo"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":248,"author":{"gitId":"whoisjustinngo"},"content":"        public void deleteCustomGoal(Index goalToDelete) {","lastModifiedDate":"2021-10-25"},{"lineNumber":249,"author":{"gitId":"whoisjustinngo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":250,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":251,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":252,"author":{"gitId":"SpdPnd98"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":253,"author":{"gitId":"SpdPnd98"},"content":"        public List\u003cSchedule\u003e importSchedule(File file) throws IOException, ParseException {","lastModifiedDate":"2021-10-28"},{"lineNumber":254,"author":{"gitId":"SpdPnd98"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":255,"author":{"gitId":"SpdPnd98"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":256,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":257,"author":{"gitId":"rickyaandrew"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":258,"author":{"gitId":"rickyaandrew"},"content":"        public boolean hasSchedule(Schedule schedule) {","lastModifiedDate":"2021-10-13"},{"lineNumber":259,"author":{"gitId":"rickyaandrew"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":260,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":261,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":262,"author":{"gitId":"rickyaandrew"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":263,"author":{"gitId":"rickyaandrew"},"content":"        public boolean hasScheduleClash(Schedule schedule) {","lastModifiedDate":"2021-10-13"},{"lineNumber":264,"author":{"gitId":"rickyaandrew"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":265,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":266,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":267,"author":{"gitId":"rickyaandrew"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":268,"author":{"gitId":"rickyaandrew"},"content":"        public void setSchedule(Schedule target, Schedule editedSchedule) {","lastModifiedDate":"2021-10-21"},{"lineNumber":269,"author":{"gitId":"rickyaandrew"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-21"},{"lineNumber":270,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":274,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":275,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":281,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":287,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":292,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":299,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":300,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":306,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":311,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"whoisjustinngo":38,"kslui99":29,"rickyaandrew":36,"-":194,"SpdPnd98":9,"mokdarren":9}},{"path":"src/test/java/seedu/address/logic/commands/AddTodoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"SpdPnd98"},"content":"import java.io.File;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"SpdPnd98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"SpdPnd98"},"content":"import java.util.List;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"SpdPnd98"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.model.analytics.ClientAnalytics;","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.model.customGoal.CustomGoal;","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.event.Schedule;","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.Todo;","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"import seedu.address.testutil.TodoBuilder;","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"class AddTodoCommandTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"    public void constructor_nullTodo_throwsNullPointerException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddTodoCommand(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"kslui99"},"content":"    public void execute_todoAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"kslui99"},"content":"        AddTodoCommandTest.ModelStubAcceptingTodoAdded modelStub \u003d new AddTodoCommandTest.ModelStubAcceptingTodoAdded();","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"kslui99"},"content":"        Todo validTodo \u003d new TodoBuilder().build();","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"kslui99"},"content":"        CommandResult commandResult \u003d new AddTodoCommand(validTodo).execute(modelStub);","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"kslui99"},"content":"        assertEquals(String.format(AddTodoCommand.MESSAGE_SUCCESS, validTodo), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"kslui99"},"content":"        assertEquals(Arrays.asList(validTodo), modelStub.todosAdded);","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"kslui99"},"content":"    public void execute_duplicateTodo_throwsCommandException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"kslui99"},"content":"        Todo validTodo \u003d new TodoBuilder().build();","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"kslui99"},"content":"        AddTodoCommand addTodoCommand \u003d new AddTodoCommand(validTodo);","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"kslui99"},"content":"        AddTodoCommandTest.ModelStub modelStub \u003d new AddTodoCommandTest.ModelStubWithTodo(validTodo);","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"rickyaandrew"},"content":"        assertThrows(CommandException.class, AddTodoCommand.MESSAGE_DUPLICATE_TODO, () -\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"rickyaandrew"},"content":"                addTodoCommand.execute(modelStub));","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"kslui99"},"content":"    public void equals() {","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"kslui99"},"content":"        Todo read \u003d new TodoBuilder().withDescription(\"read\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"kslui99"},"content":"        Todo travel \u003d new TodoBuilder().withDescription(\"travel\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"kslui99"},"content":"        AddTodoCommand addReadCommand \u003d new AddTodoCommand(read);","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"kslui99"},"content":"        AddTodoCommand addTravelCommand \u003d new AddTodoCommand(travel);","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"kslui99"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"kslui99"},"content":"        assertTrue(addReadCommand.equals(addReadCommand));","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"kslui99"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"kslui99"},"content":"        AddTodoCommand addReadCommandCopy \u003d new AddTodoCommand(read);","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"kslui99"},"content":"        assertTrue(addReadCommand.equals(addReadCommandCopy));","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"kslui99"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"kslui99"},"content":"        assertFalse(addReadCommand.equals(1));","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"kslui99"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"kslui99"},"content":"        assertFalse(addReadCommand.equals(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"kslui99"},"content":"        // different todo -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"kslui99"},"content":"        assertFalse(addReadCommand.equals(addTravelCommand));","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"kslui99"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"kslui99"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"kslui99"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"kslui99"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"kslui99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"kslui99"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"kslui99"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"kslui99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"kslui99"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"kslui99"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"kslui99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"kslui99"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"kslui99"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"kslui99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"kslui99"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"kslui99"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"kslui99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"kslui99"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"kslui99"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"kslui99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"kslui99"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"kslui99"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"kslui99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"mokdarren"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":127,"author":{"gitId":"mokdarren"},"content":"        public void updateSelectedPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-29"},{"lineNumber":128,"author":{"gitId":"mokdarren"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":129,"author":{"gitId":"mokdarren"},"content":"        };","lastModifiedDate":"2021-10-29"},{"lineNumber":130,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":131,"author":{"gitId":"mokdarren"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":132,"author":{"gitId":"mokdarren"},"content":"        public ObservableList\u003cPerson\u003e getSelectedPersonList() {","lastModifiedDate":"2021-10-29"},{"lineNumber":133,"author":{"gitId":"mokdarren"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":134,"author":{"gitId":"mokdarren"},"content":"        };","lastModifiedDate":"2021-10-29"},{"lineNumber":135,"author":{"gitId":"kslui99"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":136,"author":{"gitId":"kslui99"},"content":"        public void addTodo(Todo todo) {","lastModifiedDate":"2021-10-10"},{"lineNumber":137,"author":{"gitId":"kslui99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"kslui99"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":141,"author":{"gitId":"kslui99"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2021-10-10"},{"lineNumber":142,"author":{"gitId":"kslui99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":143,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"kslui99"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"kslui99"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"kslui99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":149,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":150,"author":{"gitId":"kslui99"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"kslui99"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"kslui99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":154,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":155,"author":{"gitId":"kslui99"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":156,"author":{"gitId":"kslui99"},"content":"        public boolean hasTodo(Todo todo) {","lastModifiedDate":"2021-10-10"},{"lineNumber":157,"author":{"gitId":"kslui99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":158,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":159,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":160,"author":{"gitId":"whoisjustinngo"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":161,"author":{"gitId":"whoisjustinngo"},"content":"        public boolean hasCustomGoal(CustomGoal toAdd) {","lastModifiedDate":"2021-10-25"},{"lineNumber":162,"author":{"gitId":"whoisjustinngo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":163,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":164,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":165,"author":{"gitId":"kslui99"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":166,"author":{"gitId":"kslui99"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2021-10-10"},{"lineNumber":167,"author":{"gitId":"kslui99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":168,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":169,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":170,"author":{"gitId":"kslui99"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":171,"author":{"gitId":"kslui99"},"content":"        public void deleteTodo(Todo target) {","lastModifiedDate":"2021-10-11"},{"lineNumber":172,"author":{"gitId":"kslui99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-11"},{"lineNumber":173,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":174,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":175,"author":{"gitId":"kslui99"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":176,"author":{"gitId":"kslui99"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2021-10-10"},{"lineNumber":177,"author":{"gitId":"kslui99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":178,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":179,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":180,"author":{"gitId":"whoisjustinngo"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":181,"author":{"gitId":"whoisjustinngo"},"content":"        public ClientAnalytics getAnalytics() {","lastModifiedDate":"2021-10-25"},{"lineNumber":182,"author":{"gitId":"whoisjustinngo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":183,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":184,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":185,"author":{"gitId":"kslui99"},"content":"        @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":186,"author":{"gitId":"kslui99"},"content":"        public void setTodo(Todo target, Todo editedTodo) {","lastModifiedDate":"2021-10-22"},{"lineNumber":187,"author":{"gitId":"kslui99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-22"},{"lineNumber":188,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":189,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":190,"author":{"gitId":"kslui99"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":191,"author":{"gitId":"kslui99"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":192,"author":{"gitId":"kslui99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":193,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":194,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":195,"author":{"gitId":"kslui99"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":196,"author":{"gitId":"kslui99"},"content":"        public ObservableList\u003cTodo\u003e getFilteredTodoList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":197,"author":{"gitId":"kslui99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":198,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":199,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":200,"author":{"gitId":"kslui99"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":201,"author":{"gitId":"kslui99"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-10"},{"lineNumber":202,"author":{"gitId":"kslui99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":203,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":204,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":205,"author":{"gitId":"kslui99"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":206,"author":{"gitId":"kslui99"},"content":"        public void updateFilteredTodoList(Predicate\u003cTodo\u003e predicate) {","lastModifiedDate":"2021-10-11"},{"lineNumber":207,"author":{"gitId":"kslui99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-11"},{"lineNumber":208,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":209,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":210,"author":{"gitId":"rickyaandrew"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":211,"author":{"gitId":"rickyaandrew"},"content":"        public void addSchedule(Schedule schedule) {","lastModifiedDate":"2021-10-11"},{"lineNumber":212,"author":{"gitId":"rickyaandrew"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-11"},{"lineNumber":213,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":214,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":215,"author":{"gitId":"rickyaandrew"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":216,"author":{"gitId":"rickyaandrew"},"content":"        public ObservableList\u003cSchedule\u003e getFilteredScheduleList() {","lastModifiedDate":"2021-10-11"},{"lineNumber":217,"author":{"gitId":"rickyaandrew"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-11"},{"lineNumber":218,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":219,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":220,"author":{"gitId":"whoisjustinngo"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":221,"author":{"gitId":"whoisjustinngo"},"content":"        public ObservableList\u003cCustomGoal\u003e getFilteredCustomGoalList() {","lastModifiedDate":"2021-10-25"},{"lineNumber":222,"author":{"gitId":"whoisjustinngo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":223,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":224,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":225,"author":{"gitId":"rickyaandrew"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":226,"author":{"gitId":"rickyaandrew"},"content":"        public void deleteSchedule(Schedule target) {","lastModifiedDate":"2021-10-13"},{"lineNumber":227,"author":{"gitId":"rickyaandrew"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":228,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":229,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":230,"author":{"gitId":"whoisjustinngo"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":231,"author":{"gitId":"whoisjustinngo"},"content":"        public void addCustomGoal(CustomGoal toAdd) {","lastModifiedDate":"2021-10-25"},{"lineNumber":232,"author":{"gitId":"whoisjustinngo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":233,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":234,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":235,"author":{"gitId":"rickyaandrew"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":236,"author":{"gitId":"rickyaandrew"},"content":"        public void updateFilteredScheduleList(Predicate\u003cSchedule\u003e predicate) {","lastModifiedDate":"2021-10-13"},{"lineNumber":237,"author":{"gitId":"rickyaandrew"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":238,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":239,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":240,"author":{"gitId":"whoisjustinngo"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":241,"author":{"gitId":"whoisjustinngo"},"content":"        public void updateCustomGoal(Index goalToUpdate, float valueToUpdateBy) {","lastModifiedDate":"2021-10-25"},{"lineNumber":242,"author":{"gitId":"whoisjustinngo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":243,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":244,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":245,"author":{"gitId":"whoisjustinngo"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":246,"author":{"gitId":"whoisjustinngo"},"content":"        public int getNumOfCustomGoals() {","lastModifiedDate":"2021-10-25"},{"lineNumber":247,"author":{"gitId":"whoisjustinngo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":248,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":249,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":250,"author":{"gitId":"whoisjustinngo"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":251,"author":{"gitId":"whoisjustinngo"},"content":"        public void deleteCustomGoal(Index goalToDelete) {","lastModifiedDate":"2021-10-25"},{"lineNumber":252,"author":{"gitId":"whoisjustinngo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":253,"author":{"gitId":"whoisjustinngo"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":254,"author":{"gitId":"whoisjustinngo"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":255,"author":{"gitId":"SpdPnd98"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":256,"author":{"gitId":"SpdPnd98"},"content":"        public List\u003cSchedule\u003e importSchedule(File file) throws IOException, ParseException {","lastModifiedDate":"2021-10-28"},{"lineNumber":257,"author":{"gitId":"SpdPnd98"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":258,"author":{"gitId":"SpdPnd98"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":259,"author":{"gitId":"SpdPnd98"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":260,"author":{"gitId":"rickyaandrew"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":261,"author":{"gitId":"rickyaandrew"},"content":"        public boolean hasSchedule(Schedule schedule) {","lastModifiedDate":"2021-10-13"},{"lineNumber":262,"author":{"gitId":"rickyaandrew"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":263,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":264,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":265,"author":{"gitId":"rickyaandrew"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":266,"author":{"gitId":"rickyaandrew"},"content":"        public boolean hasScheduleClash(Schedule schedule) {","lastModifiedDate":"2021-10-13"},{"lineNumber":267,"author":{"gitId":"rickyaandrew"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":268,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":269,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":270,"author":{"gitId":"rickyaandrew"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":271,"author":{"gitId":"rickyaandrew"},"content":"        public void setSchedule(Schedule target, Schedule editedSchedule) {","lastModifiedDate":"2021-10-21"},{"lineNumber":272,"author":{"gitId":"rickyaandrew"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-21"},{"lineNumber":273,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":274,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":275,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":276,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":277,"author":{"gitId":"kslui99"},"content":"     * A Model stub that contains a single todo.","lastModifiedDate":"2021-10-10"},{"lineNumber":278,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":279,"author":{"gitId":"kslui99"},"content":"    private class ModelStubWithTodo extends AddTodoCommandTest.ModelStub {","lastModifiedDate":"2021-10-10"},{"lineNumber":280,"author":{"gitId":"kslui99"},"content":"        private final Todo todo;","lastModifiedDate":"2021-10-10"},{"lineNumber":281,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":282,"author":{"gitId":"kslui99"},"content":"        ModelStubWithTodo(Todo todo) {","lastModifiedDate":"2021-10-10"},{"lineNumber":283,"author":{"gitId":"kslui99"},"content":"            requireNonNull(todo);","lastModifiedDate":"2021-10-10"},{"lineNumber":284,"author":{"gitId":"kslui99"},"content":"            this.todo \u003d todo;","lastModifiedDate":"2021-10-10"},{"lineNumber":285,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":286,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":287,"author":{"gitId":"kslui99"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":288,"author":{"gitId":"kslui99"},"content":"        public boolean hasTodo(Todo todo) {","lastModifiedDate":"2021-10-10"},{"lineNumber":289,"author":{"gitId":"kslui99"},"content":"            requireNonNull(todo);","lastModifiedDate":"2021-10-10"},{"lineNumber":290,"author":{"gitId":"kslui99"},"content":"            return this.todo.equals(todo);","lastModifiedDate":"2021-10-10"},{"lineNumber":291,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":292,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":293,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":294,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":295,"author":{"gitId":"kslui99"},"content":"     * A Model stub that always accept the todo being added.","lastModifiedDate":"2021-10-10"},{"lineNumber":296,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":297,"author":{"gitId":"kslui99"},"content":"    private class ModelStubAcceptingTodoAdded extends AddTodoCommandTest.ModelStub {","lastModifiedDate":"2021-10-10"},{"lineNumber":298,"author":{"gitId":"kslui99"},"content":"        final ArrayList\u003cTodo\u003e todosAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":299,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":300,"author":{"gitId":"kslui99"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":301,"author":{"gitId":"kslui99"},"content":"        public boolean hasTodo(Todo todo) {","lastModifiedDate":"2021-10-10"},{"lineNumber":302,"author":{"gitId":"kslui99"},"content":"            requireNonNull(todo);","lastModifiedDate":"2021-10-10"},{"lineNumber":303,"author":{"gitId":"kslui99"},"content":"            return todosAdded.stream().anyMatch(todo::equals);","lastModifiedDate":"2021-10-10"},{"lineNumber":304,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":305,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":306,"author":{"gitId":"kslui99"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":307,"author":{"gitId":"kslui99"},"content":"        public void addTodo(Todo todo) {","lastModifiedDate":"2021-10-10"},{"lineNumber":308,"author":{"gitId":"kslui99"},"content":"            requireNonNull(todo);","lastModifiedDate":"2021-10-10"},{"lineNumber":309,"author":{"gitId":"kslui99"},"content":"            todosAdded.add(todo);","lastModifiedDate":"2021-10-10"},{"lineNumber":310,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":311,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":312,"author":{"gitId":"kslui99"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":313,"author":{"gitId":"kslui99"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-10"},{"lineNumber":314,"author":{"gitId":"kslui99"},"content":"            return new AddressBook();","lastModifiedDate":"2021-10-10"},{"lineNumber":315,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":316,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":317,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":318,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"whoisjustinngo":38,"kslui99":224,"rickyaandrew":38,"SpdPnd98":9,"mokdarren":9}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"mokdarren"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RELATIONSHIP;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.Todo;","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.predicates.DescriptionContainsKeywordsPredicate;","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"import seedu.address.testutil.EditTodoDescriptorBuilder;","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"mokdarren"},"content":"    public static final String VALID_RELATIONSHIP_AMY \u003d \"client\";","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"mokdarren"},"content":"    public static final String VALID_RELATIONSHIP_BOB \u003d \"client\";","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"mokdarren"},"content":"    public static final String RELATIONSHIP_DESC_AMY \u003d \" \" + PREFIX_RELATIONSHIP + VALID_RELATIONSHIP_AMY;","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"mokdarren"},"content":"    public static final String RELATIONSHIP_DESC_BOB \u003d \" \" + PREFIX_RELATIONSHIP + VALID_RELATIONSHIP_BOB;","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"mokdarren"},"content":"    public static final String INVALID_RELATIONSHIP_DESC \u003d \" \" + PREFIX_RELATIONSHIP + \"dog\"; // only client and friend","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"kslui99"},"content":"    public static final EditTodoCommand.EditTodoDescriptor DESC_READ;","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"kslui99"},"content":"    public static final EditTodoCommand.EditTodoDescriptor DESC_TRAVEL;","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"kslui99"},"content":"    public static final String VALID_DESCRIPTION_READ \u003d \"read\";","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"kslui99"},"content":"    public static final String VALID_DESCRIPTION_TRAVEL \u003d \"travel\";","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"kslui99"},"content":"    public static final String VALID_TAG_LEARNING \u003d \"learning\";","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"kslui99"},"content":"    public static final String VALID_TAG_LEISURE \u003d \"leisure\";","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"kslui99"},"content":"    public static final String DESCRIPTION_READ \u003d \" \" + PREFIX_DESCRIPTION + VALID_DESCRIPTION_READ;","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"kslui99"},"content":"    public static final String DESCRIPTION_TRAVEL \u003d \" \" + PREFIX_DESCRIPTION + VALID_DESCRIPTION_TRAVEL;","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"kslui99"},"content":"    public static final String TAG_DESC_LEARNING \u003d \" \" + PREFIX_TAG + VALID_TAG_LEARNING;","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"kslui99"},"content":"    public static final String TAG_DESC_LEISURE \u003d \" \" + PREFIX_TAG + VALID_TAG_LEISURE;","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"kslui99"},"content":"        DESC_READ \u003d new EditTodoDescriptorBuilder().withDescription(VALID_DESCRIPTION_READ).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"kslui99"},"content":"        DESC_TRAVEL \u003d new EditTodoDescriptorBuilder().withDescription(VALID_DESCRIPTION_TRAVEL).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":153,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":154,"author":{"gitId":"kslui99"},"content":"     * Updates {@code model}\u0027s filtered list to show only the todo at the given {@code targetIndex} in the","lastModifiedDate":"2021-10-24"},{"lineNumber":155,"author":{"gitId":"kslui99"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2021-10-24"},{"lineNumber":156,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":157,"author":{"gitId":"kslui99"},"content":"    public static void showTodoAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-10-24"},{"lineNumber":158,"author":{"gitId":"kslui99"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredTodoList().size());","lastModifiedDate":"2021-10-24"},{"lineNumber":159,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":160,"author":{"gitId":"kslui99"},"content":"        Todo todo \u003d model.getFilteredTodoList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-24"},{"lineNumber":161,"author":{"gitId":"kslui99"},"content":"        final String[] splitDescription \u003d todo.getDescription().split(\"\\\\s+\");","lastModifiedDate":"2021-10-24"},{"lineNumber":162,"author":{"gitId":"kslui99"},"content":"        model.updateFilteredTodoList(","lastModifiedDate":"2021-10-24"},{"lineNumber":163,"author":{"gitId":"kslui99"},"content":"                new DescriptionContainsKeywordsPredicate(Arrays.asList(splitDescription[0])));","lastModifiedDate":"2021-10-24"},{"lineNumber":164,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":165,"author":{"gitId":"kslui99"},"content":"        assertEquals(1, model.getFilteredTodoList().size());","lastModifiedDate":"2021-10-24"},{"lineNumber":166,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"kslui99":32,"-":128,"mokdarren":7}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"kslui99"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"kslui99"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"kslui99"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"kslui99"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"kslui99"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"kslui99"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"kslui99"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND);","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"kslui99"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"kslui99":12,"-":97}},{"path":"src/test/java/seedu/address/logic/commands/DeleteTodoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"import static seedu.address.testutil.TypicalTodos.getTypicalAddressBook;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.Todo;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":" * {@code DeleteTodoCommand}.","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"public class DeleteTodoCommandTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"        Todo todoToDelete \u003d model.getFilteredTodoList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"        DeleteTodoCommand deleteTodoCommand \u003d new DeleteTodoCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"        String expectedMessage \u003d String.format(DeleteTodoCommand.MESSAGE_DELETE_TODO_SUCCESS, todoToDelete);","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"        expectedModel.deleteTodo(todoToDelete);","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"        assertCommandSuccess(deleteTodoCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"kslui99"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"kslui99"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTodoList().size() + 1);","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"kslui99"},"content":"        DeleteTodoCommand deleteTodoCommand \u003d new DeleteTodoCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"kslui99"},"content":"        assertCommandFailure(deleteTodoCommand, model, Messages.MESSAGE_INVALID_TODO_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"kslui99"},"content":"    public void equals() {","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"kslui99"},"content":"        DeleteTodoCommand deleteFirstCommand \u003d new DeleteTodoCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"kslui99"},"content":"        DeleteTodoCommand deleteSecondCommand \u003d new DeleteTodoCommand(INDEX_SECOND);","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"kslui99"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"kslui99"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"kslui99"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"kslui99"},"content":"        DeleteTodoCommand deleteFirstCommandCopy \u003d new DeleteTodoCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"kslui99"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"kslui99"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"kslui99"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"kslui99"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"kslui99"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"kslui99"},"content":"        // different command -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"kslui99"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"kslui99":70}},{"path":"src/test/java/seedu/address/logic/commands/DoneTodoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"import static seedu.address.testutil.TypicalTodos.getTypicalAddressBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.Todo;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":" * Contains integration tests (interaction with the Model) and unit tests for DoneTodoCommand.","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"public class DoneTodoCommandTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"        Todo todoToMark \u003d model.getFilteredTodoList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"        Todo markedTodo \u003d todoToMark.getDoneVersion();","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"        DoneTodoCommand doneTodoCommand \u003d new DoneTodoCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"        String expectedMessage \u003d String.format(DoneTodoCommand.MESSAGE_DONE_TODO_SUCCESS, markedTodo);","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"        expectedModel.setTodo(model.getFilteredTodoList().get(0), markedTodo);","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"        assertCommandSuccess(doneTodoCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"kslui99"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"kslui99"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTodoList().size() + 1);","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"kslui99"},"content":"        DoneTodoCommand doneTodoCommand \u003d new DoneTodoCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"kslui99"},"content":"        assertCommandFailure(doneTodoCommand, model, Messages.MESSAGE_INVALID_TODO_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"kslui99"},"content":"    public void equals() {","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"kslui99"},"content":"        DoneTodoCommand doneFirstCommand \u003d new DoneTodoCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"kslui99"},"content":"        DoneTodoCommand doneSecondCommand \u003d new DoneTodoCommand(INDEX_SECOND);","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"kslui99"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"kslui99"},"content":"        assertTrue(doneFirstCommand.equals(doneFirstCommand));","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"kslui99"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"kslui99"},"content":"        DoneTodoCommand doneFirstCommandCopy \u003d new DoneTodoCommand(INDEX_FIRST);","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"kslui99"},"content":"        assertTrue(doneFirstCommand.equals(doneFirstCommandCopy));","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"kslui99"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"kslui99"},"content":"        assertFalse(doneFirstCommand.equals(1));","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"kslui99"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"kslui99"},"content":"        assertFalse(doneFirstCommand.equals(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"kslui99"},"content":"        // different command -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"kslui99"},"content":"        assertFalse(doneFirstCommand.equals(doneSecondCommand));","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"kslui99":70}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"kslui99"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST, descriptor);","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"kslui99"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST, new EditPersonDescriptor());","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"kslui99"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"kslui99"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"kslui99"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"kslui99"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST,","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"kslui99"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"kslui99"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND, descriptor);","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"kslui99"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"kslui99"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND.getZeroBased());","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"kslui99"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST,","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"kslui99"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"kslui99"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"kslui99"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST, DESC_AMY);","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"kslui99"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST, copyDescriptor);","lastModifiedDate":"2021-10-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"kslui99"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND, DESC_AMY)));","lastModifiedDate":"2021-10-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"kslui99"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST, DESC_BOB)));","lastModifiedDate":"2021-10-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"kslui99":19,"-":154}},{"path":"src/test/java/seedu/address/logic/commands/EditTodoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_READ;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_TRAVEL;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_TRAVEL;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"import static seedu.address.testutil.TypicalTodos.getTypicalAddressBook;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"import seedu.address.logic.commands.EditTodoCommand.EditTodoDescriptor;","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.Todo;","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"import seedu.address.testutil.EditTodoDescriptorBuilder;","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"import seedu.address.testutil.TodoBuilder;","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditTodoCommand.","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"public class EditTodoCommandTest {","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"        Todo editedTodo \u003d new TodoBuilder().build();","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"kslui99"},"content":"        EditTodoDescriptor descriptor \u003d new EditTodoDescriptorBuilder(editedTodo).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"        EditTodoCommand editTodoCommand \u003d new EditTodoCommand(INDEX_FIRST, descriptor);","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"kslui99"},"content":"        String expectedMessage \u003d String.format(EditTodoCommand.MESSAGE_EDIT_TODO_SUCCESS, editedTodo);","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"kslui99"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"kslui99"},"content":"        expectedModel.setTodo(model.getFilteredTodoList().get(0), editedTodo);","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"kslui99"},"content":"        assertCommandSuccess(editTodoCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"kslui99"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"kslui99"},"content":"        Index indexLastTodo \u003d Index.fromOneBased(model.getFilteredTodoList().size());","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"kslui99"},"content":"        Todo lastTodo \u003d model.getFilteredTodoList().get(indexLastTodo.getZeroBased());","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"kslui99"},"content":"        TodoBuilder todoInList \u003d new TodoBuilder(lastTodo);","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"kslui99"},"content":"        Todo editedTodo \u003d todoInList.withDescription(VALID_DESCRIPTION_TRAVEL).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"kslui99"},"content":"        EditTodoDescriptor descriptor \u003d new EditTodoDescriptorBuilder().withDescription(VALID_DESCRIPTION_TRAVEL)","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"kslui99"},"content":"                .build();","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"kslui99"},"content":"        EditTodoCommand editTodoCommand \u003d new EditTodoCommand(indexLastTodo, descriptor);","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"kslui99"},"content":"        String expectedMessage \u003d String.format(EditTodoCommand.MESSAGE_EDIT_TODO_SUCCESS, editedTodo);","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"kslui99"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"kslui99"},"content":"        expectedModel.setTodo(lastTodo, editedTodo);","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"kslui99"},"content":"        assertCommandSuccess(editTodoCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"kslui99"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"kslui99"},"content":"        EditTodoCommand editTodoCommand \u003d new EditTodoCommand(INDEX_FIRST, new EditTodoDescriptor());","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"kslui99"},"content":"        Todo editedTodo \u003d model.getFilteredTodoList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"kslui99"},"content":"        String expectedMessage \u003d String.format(EditTodoCommand.MESSAGE_EDIT_TODO_SUCCESS, editedTodo);","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"kslui99"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"kslui99"},"content":"        assertCommandSuccess(editTodoCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"kslui99"},"content":"    public void execute_duplicateTodoUnfilteredList_failure() {","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"kslui99"},"content":"        Todo firstTodo \u003d model.getFilteredTodoList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"kslui99"},"content":"        EditTodoDescriptor descriptor \u003d new EditTodoDescriptorBuilder(firstTodo).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"kslui99"},"content":"        EditTodoCommand editTodoCommand \u003d new EditTodoCommand(INDEX_SECOND, descriptor);","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"kslui99"},"content":"        assertCommandFailure(editTodoCommand, model, EditTodoCommand.MESSAGE_DUPLICATE_TODO);","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"kslui99"},"content":"    public void execute_invalidTodoIndexUnfilteredList_failure() {","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"kslui99"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTodoList().size() + 1);","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"kslui99"},"content":"        EditTodoDescriptor descriptor \u003d new EditTodoDescriptorBuilder().withDescription(VALID_DESCRIPTION_TRAVEL)","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"kslui99"},"content":"                .build();","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"kslui99"},"content":"        EditTodoCommand editTodoCommand \u003d new EditTodoCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"kslui99"},"content":"        assertCommandFailure(editTodoCommand, model, Messages.MESSAGE_INVALID_TODO_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":99,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":100,"author":{"gitId":"kslui99"},"content":"    public void equals() {","lastModifiedDate":"2021-10-22"},{"lineNumber":101,"author":{"gitId":"kslui99"},"content":"        final EditTodoCommand standardCommand \u003d new EditTodoCommand(INDEX_FIRST, DESC_READ);","lastModifiedDate":"2021-10-22"},{"lineNumber":102,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":103,"author":{"gitId":"kslui99"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-22"},{"lineNumber":104,"author":{"gitId":"kslui99"},"content":"        EditTodoDescriptor copyDescriptor \u003d new EditTodoDescriptor(DESC_READ);","lastModifiedDate":"2021-10-22"},{"lineNumber":105,"author":{"gitId":"kslui99"},"content":"        EditTodoCommand commandWithSameValues \u003d new EditTodoCommand(INDEX_FIRST, copyDescriptor);","lastModifiedDate":"2021-10-22"},{"lineNumber":106,"author":{"gitId":"kslui99"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-10-22"},{"lineNumber":107,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":108,"author":{"gitId":"kslui99"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-22"},{"lineNumber":109,"author":{"gitId":"kslui99"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-10-22"},{"lineNumber":110,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":111,"author":{"gitId":"kslui99"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-22"},{"lineNumber":112,"author":{"gitId":"kslui99"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-10-22"},{"lineNumber":113,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":114,"author":{"gitId":"kslui99"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-22"},{"lineNumber":115,"author":{"gitId":"kslui99"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2021-10-22"},{"lineNumber":116,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":117,"author":{"gitId":"kslui99"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-10-22"},{"lineNumber":118,"author":{"gitId":"kslui99"},"content":"        assertFalse(standardCommand.equals(new EditTodoCommand(INDEX_SECOND, DESC_READ)));","lastModifiedDate":"2021-10-22"},{"lineNumber":119,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":120,"author":{"gitId":"kslui99"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2021-10-22"},{"lineNumber":121,"author":{"gitId":"kslui99"},"content":"        assertFalse(standardCommand.equals(new EditTodoCommand(INDEX_FIRST, DESC_TRAVEL)));","lastModifiedDate":"2021-10-22"},{"lineNumber":122,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":123,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":124,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"kslui99":124}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":82,"mokdarren":1}},{"path":"src/test/java/seedu/address/logic/commands/FindTodoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_TODOS_LISTED_OVERVIEW;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"import static seedu.address.testutil.TypicalTodos.APPEAL;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"import static seedu.address.testutil.TypicalTodos.BAKE;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"import static seedu.address.testutil.TypicalTodos.EAT;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"import static seedu.address.testutil.TypicalTodos.getTypicalAddressBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.predicates.DescriptionContainsKeywordsPredicate;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":" * Contains integration tests (interaction with the Model) for {@code FindTodoCommand}.","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"public class FindTodoCommandTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"    public void equals() {","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"        DescriptionContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"                new DescriptionContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"        DescriptionContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"                new DescriptionContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"kslui99"},"content":"        FindTodoCommand findFirstCommand \u003d new FindTodoCommand(firstPredicate);","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"        FindTodoCommand findSecondCommand \u003d new FindTodoCommand(secondPredicate);","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"kslui99"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"kslui99"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"kslui99"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"kslui99"},"content":"        FindTodoCommand findFirstCommandCopy \u003d new FindTodoCommand(firstPredicate);","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"kslui99"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"kslui99"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"kslui99"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"kslui99"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"kslui99"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"kslui99"},"content":"        // different command -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"kslui99"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"kslui99"},"content":"    public void execute_zeroKeywords_noTodoFound() {","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"kslui99"},"content":"        String expectedMessage \u003d String.format(MESSAGE_TODOS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"kslui99"},"content":"        DescriptionContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"kslui99"},"content":"        FindTodoCommand command \u003d new FindTodoCommand(predicate);","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"kslui99"},"content":"        expectedModel.updateFilteredTodoList(predicate);","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"kslui99"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"kslui99"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredTodoList());","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"kslui99"},"content":"    public void execute_multipleKeywords_multipleTodosFound() {","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"kslui99"},"content":"        String expectedMessage \u003d String.format(MESSAGE_TODOS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"kslui99"},"content":"        DescriptionContainsKeywordsPredicate predicate \u003d preparePredicate(\"Appeal bake Eat\");","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"kslui99"},"content":"        FindTodoCommand command \u003d new FindTodoCommand(predicate);","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"kslui99"},"content":"        expectedModel.updateFilteredTodoList(predicate);","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"kslui99"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"kslui99"},"content":"        assertEquals(Arrays.asList(APPEAL, BAKE, EAT), model.getFilteredTodoList());","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"kslui99"},"content":"     * Parses {@code userInput} into a {@code DescriptionContainsKeywordsPredicate}.","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"kslui99"},"content":"    private DescriptionContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"kslui99"},"content":"        return new DescriptionContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"kslui99":83}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"kslui99":2,"-":37}},{"path":"src/test/java/seedu/address/logic/commands/ListTodosCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showTodoAtIndex;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"import static seedu.address.testutil.TypicalTodos.getTypicalAddressBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListTodoCommand.","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"public class ListTodosCommandTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"    private Model model;","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"        assertCommandSuccess(new ListTodosCommand(), model, ListTodosCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"        showTodoAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"kslui99"},"content":"        assertCommandSuccess(new ListTodosCommand(), model, ListTodosCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"kslui99":39}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"mokdarren"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_RELATIONSHIP_DESC;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":20,"author":{"gitId":"mokdarren"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RELATIONSHIP_DESC_AMY;","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"mokdarren"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RELATIONSHIP_DESC_BOB;","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"mokdarren"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RELATIONSHIP_BOB;","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Relationship;","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"mokdarren"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + RELATIONSHIP_DESC_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"mokdarren"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"mokdarren"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + RELATIONSHIP_DESC_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"mokdarren"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"mokdarren"},"content":"        // multiple relationships - last name accepted","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"mokdarren"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + RELATIONSHIP_DESC_AMY + RELATIONSHIP_DESC_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"mokdarren"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"mokdarren"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + RELATIONSHIP_DESC_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"mokdarren"},"content":"                + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"mokdarren"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + RELATIONSHIP_DESC_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"mokdarren"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"mokdarren"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + RELATIONSHIP_DESC_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"mokdarren"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":85,"author":{"gitId":"mokdarren"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + RELATIONSHIP_DESC_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"mokdarren"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2017-12-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":94,"author":{"gitId":"mokdarren"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + RELATIONSHIP_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"mokdarren"},"content":"                        + EMAIL_DESC_AMY + ADDRESS_DESC_AMY, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"mokdarren"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + RELATIONSHIP_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"mokdarren"},"content":"        // missing relationship prefix","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"mokdarren"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_RELATIONSHIP_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"mokdarren"},"content":"                        + ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"mokdarren"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + RELATIONSHIP_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"mokdarren"},"content":"                        + ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"mokdarren"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + RELATIONSHIP_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"mokdarren"},"content":"                        + ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"mokdarren"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + RELATIONSHIP_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"mokdarren"},"content":"                        + VALID_ADDRESS_BOB, expectedMessage);","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"mokdarren"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_RELATIONSHIP_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"mokdarren"},"content":"                        + VALID_ADDRESS_BOB, expectedMessage);","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"mokdarren"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + RELATIONSHIP_DESC_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"mokdarren"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":134,"author":{"gitId":"mokdarren"},"content":"        // invalid relationship","lastModifiedDate":"2021-10-10"},{"lineNumber":135,"author":{"gitId":"mokdarren"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_RELATIONSHIP_DESC","lastModifiedDate":"2021-10-10"},{"lineNumber":136,"author":{"gitId":"mokdarren"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":137,"author":{"gitId":"mokdarren"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Relationship.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"mokdarren"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + RELATIONSHIP_DESC_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":141,"author":{"gitId":"mokdarren"},"content":"                + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"mokdarren"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + RELATIONSHIP_DESC_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"mokdarren"},"content":"                + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"mokdarren"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + RELATIONSHIP_DESC_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"mokdarren"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":155,"author":{"gitId":"mokdarren"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + RELATIONSHIP_DESC_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":156,"author":{"gitId":"mokdarren"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"mokdarren"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + RELATIONSHIP_DESC_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":161,"author":{"gitId":"mokdarren"},"content":"                        + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2021-10-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":165,"author":{"gitId":"mokdarren"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + RELATIONSHIP_DESC_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":166,"author":{"gitId":"mokdarren"},"content":"                        + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"-":116,"mokdarren":54}},{"path":"src/test/java/seedu/address/logic/parser/AddTodoCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESCRIPTION_READ;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESCRIPTION_TRAVEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_LEARNING;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_LEISURE;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_READ;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_LEARNING;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_LEISURE;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"import static seedu.address.testutil.TypicalTodos.READ;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"import static seedu.address.testutil.TypicalTodos.TRAVEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"import seedu.address.logic.commands.AddTodoCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.Todo;","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"import seedu.address.testutil.TodoBuilder;","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"public class AddTodoCommandParserTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"    private AddTodoCommandParser parser \u003d new AddTodoCommandParser();","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"        Todo expectedTodo \u003d new TodoBuilder(TRAVEL).withTags(VALID_TAG_LEISURE).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"        // whitespace only preamble","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + DESCRIPTION_TRAVEL + TAG_DESC_LEISURE,","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"                new AddTodoCommand(expectedTodo));","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"kslui99"},"content":"        // multiple descriptions - last description accepted","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"        assertParseSuccess(parser, DESCRIPTION_READ + DESCRIPTION_TRAVEL, new AddTodoCommand(expectedTodo));","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"kslui99"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"kslui99"},"content":"        Todo expectedTodoMultipleTags \u003d new TodoBuilder(TRAVEL).withTags(VALID_TAG_LEARNING, VALID_TAG_LEISURE)","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"kslui99"},"content":"                .build();","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"kslui99"},"content":"        assertParseSuccess(parser, DESCRIPTION_TRAVEL","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"kslui99"},"content":"                + TAG_DESC_LEARNING + TAG_DESC_LEISURE, new AddTodoCommand(expectedTodoMultipleTags));","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"kslui99"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"kslui99"},"content":"        // zero tags","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"kslui99"},"content":"        Todo expectedTodo \u003d new TodoBuilder(READ).withTags().build();","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"kslui99"},"content":"        assertParseSuccess(parser, DESCRIPTION_READ, new AddTodoCommand(expectedTodo));","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"kslui99"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"kslui99"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTodoCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"kslui99"},"content":"        // missing description prefix","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"kslui99"},"content":"        assertParseFailure(parser, VALID_DESCRIPTION_READ,","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"kslui99"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"kslui99"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"kslui99"},"content":"        // invalid tag","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"kslui99"},"content":"        assertParseFailure(parser, DESCRIPTION_TRAVEL","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"kslui99"},"content":"                + INVALID_TAG_DESC + VALID_TAG_LEISURE, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"kslui99"},"content":"        // non-empty preamble","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"kslui99"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + DESCRIPTION_READ,","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"kslui99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTodoCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"kslui99":73}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"SpdPnd98"},"content":"import static seedu.address.model.TabSwitch.Tab.CONTACTS;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"SpdPnd98"},"content":"import static seedu.address.model.TabSwitch.Tab.DASHBOARD;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"SpdPnd98"},"content":"import static seedu.address.model.TabSwitch.Tab.TODOS;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"import seedu.address.logic.commands.AddTodoCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"import seedu.address.logic.commands.DeleteTodoCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"import seedu.address.logic.commands.DoneTodoCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"import seedu.address.logic.commands.EditTodoCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"import seedu.address.logic.commands.EditTodoCommand.EditTodoDescriptor;","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"import seedu.address.logic.commands.FindTodoCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"import seedu.address.logic.commands.ListTodosCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.Todo;","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.predicates.DescriptionContainsKeywordsPredicate;","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"kslui99"},"content":"import seedu.address.testutil.EditTodoDescriptorBuilder;","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"kslui99"},"content":"import seedu.address.testutil.TodoBuilder;","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"kslui99"},"content":"import seedu.address.testutil.TodoUtil;","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"kslui99"},"content":"    public void parseCommand_addContact() throws Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"SpdPnd98"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(CONTACTS.getLabel()","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"kslui99"},"content":"                + PersonUtil.getAddCommand(person));","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"kslui99"},"content":"    public void parseCommand_addTodo() throws Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"kslui99"},"content":"        Todo todo \u003d new TodoBuilder().build();","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"SpdPnd98"},"content":"        AddTodoCommand command \u003d (AddTodoCommand) parser.parseCommand(TODOS.getLabel()","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"kslui99"},"content":"                + TodoUtil.getAddTodoCommand(todo));","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"kslui99"},"content":"        assertEquals(new AddTodoCommand(todo), command);","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"kslui99"},"content":"    public void parseCommand_clearContact() throws Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"SpdPnd98"},"content":"        assertTrue(parser.parseCommand(CONTACTS.getLabel() + \" \"","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"SpdPnd98"},"content":"                + ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"SpdPnd98"},"content":"        assertTrue(parser.parseCommand(CONTACTS.getLabel() + \" \"","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"SpdPnd98"},"content":"                + ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"kslui99"},"content":"    public void parseCommand_deleteContact() throws Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"SpdPnd98"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(CONTACTS.getLabel() + \" \"","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"kslui99"},"content":"                + DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST.getOneBased());","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"kslui99"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST), command);","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"kslui99"},"content":"    public void parseCommand_deleteTodo() throws Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"kslui99"},"content":"        DeleteTodoCommand command \u003d (DeleteTodoCommand) parser.parseCommand(TODOS.getLabel() + \" \"","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"kslui99"},"content":"                + DeleteTodoCommand.COMMAND_WORD + \" \" + INDEX_FIRST.getOneBased());","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"kslui99"},"content":"        assertEquals(new DeleteTodoCommand(INDEX_FIRST), command);","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"kslui99"},"content":"    public void parseCommand_editContact() throws Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"SpdPnd98"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(CONTACTS.getLabel() + \" \"","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"kslui99"},"content":"                + EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"kslui99"},"content":"                + INDEX_FIRST.getOneBased() + \" \"","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"SpdPnd98"},"content":"                + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"kslui99"},"content":"        assertEquals(new EditCommand(INDEX_FIRST, descriptor), command);","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":100,"author":{"gitId":"kslui99"},"content":"    public void parseCommand_editTodo() throws Exception {","lastModifiedDate":"2021-10-22"},{"lineNumber":101,"author":{"gitId":"kslui99"},"content":"        Todo todo \u003d new TodoBuilder().build();","lastModifiedDate":"2021-10-22"},{"lineNumber":102,"author":{"gitId":"kslui99"},"content":"        EditTodoDescriptor descriptor \u003d new EditTodoDescriptorBuilder(todo).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":103,"author":{"gitId":"kslui99"},"content":"        EditTodoCommand command \u003d (EditTodoCommand) parser.parseCommand(TODOS.getLabel() + \" \"","lastModifiedDate":"2021-10-22"},{"lineNumber":104,"author":{"gitId":"kslui99"},"content":"                + EditTodoCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-22"},{"lineNumber":105,"author":{"gitId":"kslui99"},"content":"                + INDEX_FIRST.getOneBased() + \" \"","lastModifiedDate":"2021-10-22"},{"lineNumber":106,"author":{"gitId":"kslui99"},"content":"                + TodoUtil.getEditTodoDescriptorDetails(descriptor));","lastModifiedDate":"2021-10-22"},{"lineNumber":107,"author":{"gitId":"kslui99"},"content":"        assertEquals(new EditTodoCommand(INDEX_FIRST, descriptor), command);","lastModifiedDate":"2021-10-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"SpdPnd98"},"content":"        assertTrue(parser.parseCommand(DASHBOARD.getLabel()","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"SpdPnd98"},"content":"                + \" \" + ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"SpdPnd98"},"content":"        assertTrue(parser.parseCommand(DASHBOARD.getLabel()","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"SpdPnd98"},"content":"                + \" \" + ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"kslui99"},"content":"    public void parseCommand_findContact() throws Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":121,"author":{"gitId":"SpdPnd98"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(CONTACTS.getLabel() + \" \"","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"kslui99"},"content":"                + FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"kslui99"},"content":"    public void parseCommand_findTodo() throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"kslui99"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"kslui99"},"content":"        FindTodoCommand command \u003d (FindTodoCommand) parser.parseCommand(TODOS.getLabel() + \" \"","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"kslui99"},"content":"                + FindTodoCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"kslui99"},"content":"        assertEquals(new FindTodoCommand(new DescriptionContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":136,"author":{"gitId":"SpdPnd98"},"content":"        assertTrue(parser.parseCommand(DASHBOARD.getLabel() + \" \"","lastModifiedDate":"2021-10-10"},{"lineNumber":137,"author":{"gitId":"SpdPnd98"},"content":"                + HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"SpdPnd98"},"content":"        assertTrue(parser.parseCommand(DASHBOARD.getLabel() + \" \"","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"SpdPnd98"},"content":"                + HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":143,"author":{"gitId":"kslui99"},"content":"    public void parseCommand_listContacts() throws Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"SpdPnd98"},"content":"        assertTrue(parser.parseCommand(CONTACTS.getLabel() + \" \"","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"SpdPnd98"},"content":"                + ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"SpdPnd98"},"content":"        assertTrue(parser.parseCommand(CONTACTS.getLabel() + \" \"","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"SpdPnd98"},"content":"                + ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":150,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"kslui99"},"content":"    public void parseCommand_listTodos() throws Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"kslui99"},"content":"        assertTrue(parser.parseCommand(","lastModifiedDate":"2021-10-11"},{"lineNumber":153,"author":{"gitId":"kslui99"},"content":"                TODOS.getLabel() + \" \" + ListTodosCommand.COMMAND_WORD) instanceof ListTodosCommand);","lastModifiedDate":"2021-10-11"},{"lineNumber":154,"author":{"gitId":"kslui99"},"content":"        assertTrue(parser.parseCommand(TODOS.getLabel() + \" \" + ListTodosCommand.COMMAND_WORD + \" 3\")","lastModifiedDate":"2021-10-11"},{"lineNumber":155,"author":{"gitId":"kslui99"},"content":"                instanceof ListTodosCommand);","lastModifiedDate":"2021-10-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":159,"author":{"gitId":"kslui99"},"content":"    public void parseCommand_doneTodo() throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":160,"author":{"gitId":"kslui99"},"content":"        Todo todo \u003d new TodoBuilder().build();","lastModifiedDate":"2021-10-24"},{"lineNumber":161,"author":{"gitId":"kslui99"},"content":"        DoneTodoCommand command \u003d (DoneTodoCommand) parser.parseCommand(TODOS.getLabel() + \" \"","lastModifiedDate":"2021-10-24"},{"lineNumber":162,"author":{"gitId":"kslui99"},"content":"                + DoneTodoCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-24"},{"lineNumber":163,"author":{"gitId":"kslui99"},"content":"                + INDEX_FIRST.getOneBased());","lastModifiedDate":"2021-10-24"},{"lineNumber":164,"author":{"gitId":"kslui99"},"content":"        assertEquals(new DoneTodoCommand(INDEX_FIRST), command);","lastModifiedDate":"2021-10-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":175,"author":{"gitId":"kslui99"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(","lastModifiedDate":"2021-10-10"},{"lineNumber":176,"author":{"gitId":"SpdPnd98"},"content":"                DASHBOARD.getLabel() + \" unknownCommand\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"kslui99":66,"-":85,"SpdPnd98":26,"mokdarren":1}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST));","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"kslui99":2,"-":30}},{"path":"src/test/java/seedu/address/logic/parser/DeleteTodoCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"import seedu.address.logic.commands.DeleteTodoCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":" * outside of the DeleteTodoCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":" * same path through the DeleteTodoCommand, and therefore we test only one of them.","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"public class DeleteTodoCommandParserTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"    private DeleteTodoCommandParser parser \u003d new DeleteTodoCommandParser();","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"    public void parse_validArgs_returnsDeleteTodoCommand() {","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"        assertParseSuccess(parser, \"1\", new DeleteTodoCommand(INDEX_FIRST));","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"                DeleteTodoCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"kslui99":33}},{"path":"src/test/java/seedu/address/logic/parser/DoneTodoCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"import seedu.address.logic.commands.DoneTodoCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":" * outside of the DoneTodoCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":" * same path through the DoneTodoCommand, and therefore we test only one of them.","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"public class DoneTodoCommandParserTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"    private DoneTodoCommandParser parser \u003d new DoneTodoCommandParser();","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"    public void parse_validArgs_returnsDoneTodoCommand() {","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"        assertParseSuccess(parser, \"1\", new DoneTodoCommand(INDEX_FIRST));","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"                DoneTodoCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"kslui99":33}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"kslui99"},"content":"        Index targetIndex \u003d INDEX_SECOND;","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"kslui99"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"kslui99"},"content":"        Index targetIndex \u003d INDEX_THIRD;","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":170,"author":{"gitId":"kslui99"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2021-10-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"kslui99"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2021-10-10"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":203,"author":{"gitId":"kslui99"},"content":"        Index targetIndex \u003d INDEX_THIRD;","lastModifiedDate":"2021-10-10"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"kslui99":9,"-":202}},{"path":"src/test/java/seedu/address/logic/parser/EditTodoCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESCRIPTION_READ;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESCRIPTION_TRAVEL;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_LEARNING;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_LEISURE;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_READ;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_TRAVEL;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_LEARNING;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_LEISURE;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"import seedu.address.logic.commands.EditTodoCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"import seedu.address.logic.commands.EditTodoCommand.EditTodoDescriptor;","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"import seedu.address.testutil.EditTodoDescriptorBuilder;","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"public class EditTodoCommandParserTest {","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditTodoCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"    private EditTodoCommandParser parser \u003d new EditTodoCommandParser();","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"        // no index specified","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"kslui99"},"content":"        assertParseFailure(parser, VALID_DESCRIPTION_READ, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"kslui99"},"content":"        // no field specified","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"kslui99"},"content":"        assertParseFailure(parser, \"1\", EditTodoCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"kslui99"},"content":"        // no index and no field specified","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"kslui99"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"kslui99"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"kslui99"},"content":"        // negative index","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"kslui99"},"content":"        assertParseFailure(parser, \"-5\" + DESCRIPTION_READ, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"kslui99"},"content":"        // zero index","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"kslui99"},"content":"        assertParseFailure(parser, \"0\" + DESCRIPTION_READ, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"kslui99"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"kslui99"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"kslui99"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"kslui99"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"kslui99"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"kslui99"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"kslui99"},"content":"        // invalid tag followed by valid description","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"kslui99"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC + DESCRIPTION_READ, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"kslui99"},"content":"        // valid description followed by valid tag followed by invalid tag.","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"kslui99"},"content":"        assertParseFailure(parser, \"1\" + DESCRIPTION_READ","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"kslui99"},"content":"                + VALID_TAG_LEARNING + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"kslui99"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Todo} being edited,","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"kslui99"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"kslui99"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_LEISURE + TAG_DESC_LEARNING + TAG_EMPTY,","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"kslui99"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"kslui99"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_LEISURE + TAG_EMPTY + TAG_DESC_LEARNING,","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"kslui99"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"kslui99"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_LEISURE + TAG_DESC_LEARNING,","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"kslui99"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"kslui99"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"kslui99"},"content":"        Index targetIndex \u003d INDEX_SECOND;","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"kslui99"},"content":"        String userInput \u003d targetIndex.getOneBased() + DESCRIPTION_READ + TAG_DESC_LEARNING + TAG_DESC_LEISURE;","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"kslui99"},"content":"        EditTodoDescriptor descriptor \u003d new EditTodoDescriptorBuilder().withDescription(VALID_DESCRIPTION_READ)","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"kslui99"},"content":"                .withTags(VALID_TAG_LEARNING, VALID_TAG_LEISURE).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"kslui99"},"content":"        EditTodoCommand expectedCommand \u003d new EditTodoCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"kslui99"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"kslui99"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"kslui99"},"content":"        // description","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"kslui99"},"content":"        Index targetIndex \u003d INDEX_THIRD;","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"kslui99"},"content":"        String userInput \u003d targetIndex.getOneBased() + DESCRIPTION_READ;","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"kslui99"},"content":"        EditTodoCommand.EditTodoDescriptor descriptor \u003d new EditTodoDescriptorBuilder()","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"kslui99"},"content":"                .withDescription(VALID_DESCRIPTION_READ).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"kslui99"},"content":"        EditTodoCommand expectedCommand \u003d new EditTodoCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-22"},{"lineNumber":105,"author":{"gitId":"kslui99"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":107,"author":{"gitId":"kslui99"},"content":"        // tags","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"kslui99"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_LEISURE;","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"kslui99"},"content":"        descriptor \u003d new EditTodoDescriptorBuilder().withTags(VALID_TAG_LEISURE).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"kslui99"},"content":"        expectedCommand \u003d new EditTodoCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"kslui99"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-22"},{"lineNumber":112,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":113,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":114,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":115,"author":{"gitId":"kslui99"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2021-10-22"},{"lineNumber":116,"author":{"gitId":"kslui99"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2021-10-22"},{"lineNumber":117,"author":{"gitId":"kslui99"},"content":"        String userInput \u003d targetIndex.getOneBased() + DESCRIPTION_READ + TAG_DESC_LEARNING + DESCRIPTION_TRAVEL","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"kslui99"},"content":"                + TAG_DESC_LEARNING + TAG_DESC_LEISURE;","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":120,"author":{"gitId":"kslui99"},"content":"        EditTodoDescriptor descriptor \u003d new EditTodoDescriptorBuilder().withDescription(VALID_DESCRIPTION_TRAVEL)","lastModifiedDate":"2021-10-22"},{"lineNumber":121,"author":{"gitId":"kslui99"},"content":"                .withTags(VALID_TAG_LEARNING, VALID_TAG_LEISURE).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"kslui99"},"content":"        EditTodoCommand expectedCommand \u003d new EditTodoCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"kslui99"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"kslui99"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"kslui99"},"content":"        Index targetIndex \u003d INDEX_THIRD;","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"kslui99"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"kslui99"},"content":"        EditTodoCommand.EditTodoDescriptor descriptor \u003d new EditTodoDescriptorBuilder().withTags().build();","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"kslui99"},"content":"        EditTodoCommand expectedCommand \u003d new EditTodoCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-22"},{"lineNumber":134,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":135,"author":{"gitId":"kslui99"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-22"},{"lineNumber":136,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":137,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"kslui99":137}},{"path":"src/test/java/seedu/address/logic/parser/FilterTodoCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"import seedu.address.logic.commands.FilterTodoCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"public class FilterTodoCommandParserTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"    private FilterTodoCommandParser parser \u003d new FilterTodoCommandParser();","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterTodoCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"kslui99":19}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"-":33,"mokdarren":1}},{"path":"src/test/java/seedu/address/logic/parser/FindTodoCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"import seedu.address.logic.commands.FindTodoCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.predicates.DescriptionContainsKeywordsPredicate;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"public class FindTodoCommandParserTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"    private FindTodoCommandParser parser \u003d new FindTodoCommandParser();","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"                FindTodoCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"    public void parse_validArgs_returnsFindTodoCommand() {","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"        FindTodoCommand expectedFindTodoCommand \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"                new FindTodoCommand(new DescriptionContainsKeywordsPredicate(Arrays.asList(\"Appeal\", \"travel\")));","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"        assertParseSuccess(parser, \"Appeal travel\", expectedFindTodoCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"        assertParseSuccess(parser, \" \\n Appeal \\n \\t travel  \\t\", expectedFindTodoCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"kslui99":35}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"kslui99"},"content":"        assertEquals(INDEX_FIRST, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"kslui99"},"content":"        assertEquals(INDEX_FIRST, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"kslui99":3,"-":193}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_READ;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"import static seedu.address.testutil.TypicalTodos.READ;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"whoisjustinngo"},"content":"import seedu.address.model.customGoal.CustomGoal;","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"import seedu.address.model.event.Schedule;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.Todo;","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.exceptions.DuplicateTodoException;","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"import seedu.address.testutil.TodoBuilder;","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"kslui99"},"content":"        List\u003cTodo\u003e newTodos \u003d Arrays.asList(READ);","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"kslui99"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons, newTodos);","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":65,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"kslui99"},"content":"    public void resetData_withDuplicateTodos_throwsDuplicateTodoException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"kslui99"},"content":"        // Two todos with the same description","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"kslui99"},"content":"        Todo editedRead \u003d new TodoBuilder(READ).withDescription(VALID_DESCRIPTION_READ).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"kslui99"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE);","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"kslui99"},"content":"        List\u003cTodo\u003e newTodos \u003d Arrays.asList(READ, editedRead);","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"kslui99"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons, newTodos);","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"kslui99"},"content":"        assertThrows(DuplicateTodoException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"kslui99"},"content":"    public void hasTodo_nullTodo_throwsNullPointerException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"kslui99"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasTodo(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"kslui99"},"content":"    public void hasTodo_todoNotInAddressBook_returnsFalse() {","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"kslui99"},"content":"        assertFalse(addressBook.hasTodo(READ));","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"kslui99"},"content":"    public void hasTodo_todoInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"kslui99"},"content":"        addressBook.addTodo(READ);","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"kslui99"},"content":"        assertTrue(addressBook.hasTodo(READ));","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"kslui99"},"content":"    public void hasTodo_todoWithSameDescriptionInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"kslui99"},"content":"        addressBook.addTodo(READ);","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"kslui99"},"content":"        Todo editedRead \u003d new TodoBuilder(READ).withDescription(VALID_DESCRIPTION_READ).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"kslui99"},"content":"        assertTrue(addressBook.hasTodo(editedRead));","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":128,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"kslui99"},"content":"    public void getTodoList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"kslui99"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getTodoList().remove(0));","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":134,"author":{"gitId":"kslui99"},"content":"     * A stub ReadOnlyAddressBook whose persons list and todos list can violate interface constraints.","lastModifiedDate":"2021-10-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":138,"author":{"gitId":"kslui99"},"content":"        private final ObservableList\u003cTodo\u003e todos \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"rickyaandrew"},"content":"        private final ObservableList\u003cSchedule\u003e schedules \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-11"},{"lineNumber":140,"author":{"gitId":"whoisjustinngo"},"content":"        private final ObservableList\u003cCustomGoal\u003e customGoals \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":142,"author":{"gitId":"kslui99"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons, Collection\u003cTodo\u003e todos) {","lastModifiedDate":"2021-10-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":144,"author":{"gitId":"kslui99"},"content":"            this.todos.setAll(todos);","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":147,"author":{"gitId":"whoisjustinngo"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":148,"author":{"gitId":"whoisjustinngo"},"content":"        public ObservableList\u003cCustomGoal\u003e getCustomGoalList() {","lastModifiedDate":"2021-10-25"},{"lineNumber":149,"author":{"gitId":"whoisjustinngo"},"content":"            return customGoals;","lastModifiedDate":"2021-10-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":156,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":157,"author":{"gitId":"kslui99"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":158,"author":{"gitId":"kslui99"},"content":"        public ObservableList\u003cTodo\u003e getTodoList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":159,"author":{"gitId":"kslui99"},"content":"            return todos;","lastModifiedDate":"2021-10-10"},{"lineNumber":160,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":161,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":162,"author":{"gitId":"rickyaandrew"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":163,"author":{"gitId":"rickyaandrew"},"content":"        public ObservableList\u003cSchedule\u003e getScheduleList() {","lastModifiedDate":"2021-10-11"},{"lineNumber":164,"author":{"gitId":"rickyaandrew"},"content":"            return schedules;","lastModifiedDate":"2021-10-11"},{"lineNumber":165,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"whoisjustinngo":5,"kslui99":55,"rickyaandrew":7,"-":101}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TODOS;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"import static seedu.address.testutil.TypicalTodos.READ;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"import static seedu.address.testutil.TypicalTodos.TRAVEL;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.predicates.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.predicates.DescriptionContainsKeywordsPredicate;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"kslui99"},"content":"    public void hasTodo_nullTodo_throwsNullPointerException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"kslui99"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasTodo(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"kslui99"},"content":"    public void hasTodo_todoNotInAddressBook_returnsFalse() {","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"kslui99"},"content":"        assertFalse(modelManager.hasTodo(READ));","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"kslui99"},"content":"    public void hasTodo_todoInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"kslui99"},"content":"        modelManager.addTodo(READ);","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"kslui99"},"content":"        assertTrue(modelManager.hasTodo(READ));","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"kslui99"},"content":"    public void getFilteredTodoList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"kslui99"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredTodoList().remove(0));","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":123,"author":{"gitId":"kslui99"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON)","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"kslui99"},"content":"                .withTodo(READ).withTodo(TRAVEL).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"kslui99"},"content":"        // different filteredPersonList -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":150,"author":{"gitId":"kslui99"},"content":"        // different filteredTodoList -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":151,"author":{"gitId":"kslui99"},"content":"        String[] todoKeywords \u003d READ.getDescription().split(\"\\\\s+\");","lastModifiedDate":"2021-10-24"},{"lineNumber":152,"author":{"gitId":"kslui99"},"content":"        modelManager.updateFilteredTodoList(","lastModifiedDate":"2021-10-24"},{"lineNumber":153,"author":{"gitId":"kslui99"},"content":"                new DescriptionContainsKeywordsPredicate(Arrays.asList(todoKeywords)));","lastModifiedDate":"2021-10-24"},{"lineNumber":154,"author":{"gitId":"kslui99"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2021-10-24"},{"lineNumber":155,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":158,"author":{"gitId":"kslui99"},"content":"        modelManager.updateFilteredTodoList(PREDICATE_SHOW_ALL_TODOS);","lastModifiedDate":"2021-10-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"kslui99":35,"-":129,"mokdarren":1}},{"path":"src/test/java/seedu/address/model/person/predicates/AddressContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mokdarren"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"mokdarren"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"mokdarren"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"mokdarren"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"mokdarren"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"mokdarren"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"mokdarren"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"mokdarren"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"mokdarren"},"content":"class AddressContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"mokdarren"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"mokdarren"},"content":"    public void equals() {","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"mokdarren"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"family\");","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"mokdarren"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"friend\", \"criminal\");","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"mokdarren"},"content":"        AddressContainsKeywordsPredicate firstPredicate \u003d new AddressContainsKeywordsPredicate(","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"mokdarren"},"content":"                                                                                        firstPredicateKeywordList);","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"mokdarren"},"content":"        AddressContainsKeywordsPredicate secondPredicate \u003d new AddressContainsKeywordsPredicate(","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"mokdarren"},"content":"                                                                                        secondPredicateKeywordList);","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"mokdarren"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"mokdarren"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"mokdarren"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"mokdarren"},"content":"        AddressContainsKeywordsPredicate firstPredicateCopy \u003d new AddressContainsKeywordsPredicate(","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"mokdarren"},"content":"                                                                                        firstPredicateKeywordList);","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"mokdarren"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"mokdarren"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"mokdarren"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"mokdarren"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"mokdarren"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"mokdarren"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"mokdarren"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"mokdarren"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"mokdarren"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"mokdarren"},"content":"        // One keyword exact","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"mokdarren"},"content":"        AddressContainsKeywordsPredicate predicate \u003d new AddressContainsKeywordsPredicate(","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"mokdarren"},"content":"                Collections.singletonList(\"home\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"mokdarren"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAddress(\"home\").build()));","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"mokdarren"},"content":"        // One keyword not exact","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"mokdarren"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(Collections.singletonList(\"Istana\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"mokdarren"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAddress(\"Istana Building 1\").build()));","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"mokdarren"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"mokdarren"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(Arrays.asList(\"nUs\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"mokdarren"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAddress(\"nus\").build()));","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"mokdarren"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"mokdarren"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"mokdarren"},"content":"        // Zero keywords","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"mokdarren"},"content":"        AddressContainsKeywordsPredicate predicate \u003d new AddressContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"mokdarren"},"content":"        assertFalse(predicate.test(new PersonBuilder().withAddress(\"Bukit Batok Street 11\").build()));","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"mokdarren"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"mokdarren"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(Arrays.asList(\"Sentosa\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"mokdarren"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Bukit Panjang\").build()));","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"mokdarren"},"content":"        // Keywords match phone, email and address, but does not match addr","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"mokdarren"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"mokdarren"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"mokdarren"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"High Street\").build()));","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"mokdarren"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"mokdarren":74}},{"path":"src/test/java/seedu/address/model/person/predicates/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mokdarren"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":74,"mokdarren":1}},{"path":"src/test/java/seedu/address/model/person/predicates/PhoneContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mokdarren"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"mokdarren"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"mokdarren"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"mokdarren"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"mokdarren"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"mokdarren"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"mokdarren"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"mokdarren"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"mokdarren"},"content":"class PhoneContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"mokdarren"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"mokdarren"},"content":"    public void equals() {","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"mokdarren"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"9123\");","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"mokdarren"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"8312\", \"3333\");","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"mokdarren"},"content":"        PhoneContainsKeywordsPredicate firstPredicate \u003d new PhoneContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"mokdarren"},"content":"        PhoneContainsKeywordsPredicate secondPredicate \u003d new PhoneContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"mokdarren"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"mokdarren"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"mokdarren"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"mokdarren"},"content":"        PhoneContainsKeywordsPredicate firstPredicateCopy \u003d new PhoneContainsKeywordsPredicate(","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"mokdarren"},"content":"                                                                                firstPredicateKeywordList);","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"mokdarren"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"mokdarren"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"mokdarren"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"mokdarren"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"mokdarren"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"mokdarren"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"mokdarren"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"mokdarren"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"mokdarren"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"mokdarren"},"content":"        // One keyword exact","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"mokdarren"},"content":"        PhoneContainsKeywordsPredicate predicate \u003d new PhoneContainsKeywordsPredicate(","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"mokdarren"},"content":"                Collections.singletonList(\"81234567\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"mokdarren"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPhone(\"81234567\").build()));","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"mokdarren"},"content":"        // One keyword not exact","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"mokdarren"},"content":"        predicate \u003d new PhoneContainsKeywordsPredicate(Collections.singletonList(\"8123\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"mokdarren"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPhone(\"81234567\").build()));","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"mokdarren"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPhone(\"81233333\").build()));","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"mokdarren"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"mokdarren"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"mokdarren"},"content":"        // Zero keywords","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"mokdarren"},"content":"        PhoneContainsKeywordsPredicate predicate \u003d new PhoneContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"mokdarren"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPhone(\"81234567\").build()));","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"mokdarren"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"mokdarren"},"content":"        predicate \u003d new PhoneContainsKeywordsPredicate(Arrays.asList(\"8123\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"mokdarren"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPhone(\"999\").build()));","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"mokdarren"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"mokdarren":64}},{"path":"src/test/java/seedu/address/model/person/predicates/RelationshipContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mokdarren"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"mokdarren"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"mokdarren"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"mokdarren"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"mokdarren"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"mokdarren"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"mokdarren"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"mokdarren"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"mokdarren"},"content":"class RelationshipContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"mokdarren"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"mokdarren"},"content":"    public void equals() {","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"mokdarren"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"client\");","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"mokdarren"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"friend\", \"client\");","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"mokdarren"},"content":"        RelationshipContainsKeywordsPredicate firstPredicate \u003d new RelationshipContainsKeywordsPredicate(","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"mokdarren"},"content":"                                                                                firstPredicateKeywordList);","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"mokdarren"},"content":"        RelationshipContainsKeywordsPredicate secondPredicate \u003d new RelationshipContainsKeywordsPredicate(","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"mokdarren"},"content":"                                                                                secondPredicateKeywordList);","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"mokdarren"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"mokdarren"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"mokdarren"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"mokdarren"},"content":"        RelationshipContainsKeywordsPredicate firstPredicateCopy \u003d new RelationshipContainsKeywordsPredicate(","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"mokdarren"},"content":"                                                                                firstPredicateKeywordList);","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"mokdarren"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"mokdarren"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"mokdarren"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"mokdarren"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"mokdarren"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"mokdarren"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"mokdarren"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"mokdarren"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"mokdarren"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"mokdarren"},"content":"        // One keyword exact","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"mokdarren"},"content":"        RelationshipContainsKeywordsPredicate predicate \u003d new RelationshipContainsKeywordsPredicate(","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"mokdarren"},"content":"                Collections.singletonList(\"client\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"mokdarren"},"content":"        assertTrue(predicate.test(new PersonBuilder().withRelationship(\"client\").build()));","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"mokdarren"},"content":"        // One keyword not exact","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"mokdarren"},"content":"        predicate \u003d new RelationshipContainsKeywordsPredicate(Collections.singletonList(\"cli\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"mokdarren"},"content":"        assertTrue(predicate.test(new PersonBuilder().withRelationship(\"client\").build()));","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"mokdarren"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"mokdarren"},"content":"        predicate \u003d new RelationshipContainsKeywordsPredicate(Arrays.asList(\"cliEnt\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"mokdarren"},"content":"        assertTrue(predicate.test(new PersonBuilder().withRelationship(\"client\").build()));","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"mokdarren"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"mokdarren"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"mokdarren"},"content":"        // Zero keywords","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"mokdarren"},"content":"        RelationshipContainsKeywordsPredicate predicate \u003d new RelationshipContainsKeywordsPredicate(","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"mokdarren"},"content":"                                                                                    Collections.emptyList());","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"mokdarren"},"content":"        assertFalse(predicate.test(new PersonBuilder().withAddress(\"client\").build()));","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"mokdarren"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"mokdarren"},"content":"        predicate \u003d new RelationshipContainsKeywordsPredicate(Arrays.asList(\"mom\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"mokdarren"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"friend\").build()));","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"mokdarren"},"content":"        // Keywords match phone, email and address, but does not match relationship","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"mokdarren"},"content":"        predicate \u003d new RelationshipContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"mokdarren"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"mokdarren"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").withRelationship(\"client\").build()));","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"mokdarren"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"mokdarren":77}},{"path":"src/test/java/seedu/address/model/person/predicates/TagsContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mokdarren"},"content":"package seedu.address.model.person.predicates;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"mokdarren"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"mokdarren"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"mokdarren"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"mokdarren"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"mokdarren"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"mokdarren"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"mokdarren"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"mokdarren"},"content":"public class TagsContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"mokdarren"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"mokdarren"},"content":"    public void equals() {","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"mokdarren"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"family\");","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"mokdarren"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"friend\", \"criminal\");","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"mokdarren"},"content":"        TagsContainsKeywordsPredicate firstPredicate \u003d new TagsContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"mokdarren"},"content":"        TagsContainsKeywordsPredicate secondPredicate \u003d new TagsContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"mokdarren"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"mokdarren"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"mokdarren"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"mokdarren"},"content":"        TagsContainsKeywordsPredicate firstPredicateCopy \u003d new TagsContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"mokdarren"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"mokdarren"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"mokdarren"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"mokdarren"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"mokdarren"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"mokdarren"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"mokdarren"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"mokdarren"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"mokdarren"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"mokdarren"},"content":"        // One keyword","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"mokdarren"},"content":"        TagsContainsKeywordsPredicate predicate \u003d new TagsContainsKeywordsPredicate(Collections.singletonList(\"Sis\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"mokdarren"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"Sis\").build()));","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"mokdarren"},"content":"        // Multiple keywords only filter the more specific one","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"mokdarren"},"content":"        predicate \u003d new TagsContainsKeywordsPredicate(Arrays.asList(\"Family\", \"Criminal\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"mokdarren"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"Family\", \"Criminal\").build()));","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"mokdarren"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"Criminal\", \"Family\").build()));","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"mokdarren"},"content":"        // Only one tag, multiple filters","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"mokdarren"},"content":"        predicate \u003d new TagsContainsKeywordsPredicate(Arrays.asList(\"Family\", \"Criminal\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"mokdarren"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"Family\").build()));","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"mokdarren"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"mokdarren"},"content":"        predicate \u003d new TagsContainsKeywordsPredicate(Arrays.asList(\"fRienD\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"mokdarren"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"friend\").build()));","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"mokdarren"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"mokdarren"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"mokdarren"},"content":"        // Zero keywords","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"mokdarren"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"mokdarren"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"mokdarren"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"mokdarren"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"mokdarren"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"mokdarren"},"content":"        // Keywords match phone, email and address, but does not match tag","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"mokdarren"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"mokdarren"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"mokdarren"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"mokdarren"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"mokdarren":76}},{"path":"src/test/java/seedu/address/model/todo/TodoTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package seedu.address.model.todo;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_TRAVEL;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_LEARNING;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"import static seedu.address.testutil.TypicalTodos.READ;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"import static seedu.address.testutil.TypicalTodos.TRAVEL;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"import seedu.address.testutil.TodoBuilder;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"public class TodoTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"        Todo todo \u003d new TodoBuilder().build();","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e todo.getTags().remove(0));","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"    public void equals() {","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"        Todo readCopy \u003d new TodoBuilder(READ).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"        assertTrue(READ.equals(readCopy));","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"        assertTrue(READ.equals(READ));","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"        assertFalse(READ.equals(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"        assertFalse(READ.equals(5));","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"        // different todo -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"        assertFalse(READ.equals(TRAVEL));","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"kslui99"},"content":"        // different description -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"kslui99"},"content":"        Todo editedRead \u003d new TodoBuilder(READ).withDescription(VALID_DESCRIPTION_TRAVEL).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"kslui99"},"content":"        assertFalse(READ.equals(editedRead));","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"kslui99"},"content":"        // different tags -\u003e returns true","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"kslui99"},"content":"        editedRead \u003d new TodoBuilder(READ).withTags(VALID_TAG_LEARNING).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"kslui99"},"content":"        assertTrue(READ.equals(editedRead));","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"kslui99":49}},{"path":"src/test/java/seedu/address/model/todo/UniqueTodoListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package seedu.address.model.todo;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"import static seedu.address.testutil.TypicalTodos.READ;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"import static seedu.address.testutil.TypicalTodos.TRAVEL;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.exceptions.DuplicateTodoException;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.exceptions.TodoNotFoundException;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"public class UniqueTodoListTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"    private final UniqueTodoList uniqueTodoList \u003d new UniqueTodoList();","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"    public void contains_nullTodo_throwsNullPointerException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTodoList.contains(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"    public void contains_todoNotInList_returnsFalse() {","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"        assertFalse(uniqueTodoList.contains(READ));","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"    public void contains_todoInList_returnsTrue() {","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"        uniqueTodoList.add(READ);","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"        assertTrue(uniqueTodoList.contains(READ));","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"kslui99"},"content":"    public void add_nullTodo_throwsNullPointerException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"kslui99"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTodoList.add(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"kslui99"},"content":"    public void add_duplicateTodo_throwsDuplicateTodoException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"kslui99"},"content":"        uniqueTodoList.add(READ);","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"kslui99"},"content":"        assertThrows(DuplicateTodoException.class, () -\u003e uniqueTodoList.add(READ));","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"kslui99"},"content":"    public void setTodo_nullTargetTodo_throwsNullPointerException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"kslui99"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTodoList.setTodo(null, READ));","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"kslui99"},"content":"    public void setTodo_nullEditedTodo_throwsNullPointerException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"kslui99"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTodoList.setTodo(READ, null));","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"kslui99"},"content":"    public void setTodo_targetTodoNotInList_throwsTodoNotFoundException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"kslui99"},"content":"        assertThrows(TodoNotFoundException.class, () -\u003e uniqueTodoList.setTodo(READ, READ));","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"kslui99"},"content":"    public void setTodo_editedTodoIsSameTodo_success() {","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"kslui99"},"content":"        uniqueTodoList.add(READ);","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"kslui99"},"content":"        uniqueTodoList.setTodo(READ, READ);","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"kslui99"},"content":"        UniqueTodoList expectedUniqueTodoList \u003d new UniqueTodoList();","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"kslui99"},"content":"        expectedUniqueTodoList.add(READ);","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"kslui99"},"content":"        assertEquals(expectedUniqueTodoList, uniqueTodoList);","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"kslui99"},"content":"    public void remove_nullTodo_throwsNullPointerException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"kslui99"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTodoList.remove(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"kslui99"},"content":"    public void remove_todoDoesNotExist_throwsTodoNotFoundException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"kslui99"},"content":"        assertThrows(TodoNotFoundException.class, () -\u003e uniqueTodoList.remove(READ));","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"kslui99"},"content":"    public void remove_existingTodo_removesTodo() {","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"kslui99"},"content":"        uniqueTodoList.add(READ);","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"kslui99"},"content":"        uniqueTodoList.remove(READ);","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"kslui99"},"content":"        UniqueTodoList expectedUniqueTodoList \u003d new UniqueTodoList();","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"kslui99"},"content":"        assertEquals(expectedUniqueTodoList, uniqueTodoList);","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"kslui99"},"content":"    public void setTodos_nullUniqueTodoList_throwsNullPointerException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"kslui99"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTodoList.setTodos((UniqueTodoList) null));","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"kslui99"},"content":"    public void setTodos_uniqueTodoList_replacesOwnListWithProvidedUniqueTodoList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"kslui99"},"content":"        uniqueTodoList.add(READ);","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"kslui99"},"content":"        UniqueTodoList expectedUniqueTodoList \u003d new UniqueTodoList();","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"kslui99"},"content":"        expectedUniqueTodoList.add(TRAVEL);","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"kslui99"},"content":"        uniqueTodoList.setTodos(expectedUniqueTodoList);","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"kslui99"},"content":"        assertEquals(expectedUniqueTodoList, uniqueTodoList);","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"kslui99"},"content":"    public void setTodos_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"kslui99"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTodoList.setTodos((List\u003cTodo\u003e) null));","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"kslui99"},"content":"    public void setTodos_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"kslui99"},"content":"        uniqueTodoList.add(READ);","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"kslui99"},"content":"        List\u003cTodo\u003e todoList \u003d Collections.singletonList(TRAVEL);","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"kslui99"},"content":"        uniqueTodoList.setTodos(todoList);","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"kslui99"},"content":"        UniqueTodoList expectedUniqueTodoList \u003d new UniqueTodoList();","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"kslui99"},"content":"        expectedUniqueTodoList.add(TRAVEL);","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"kslui99"},"content":"        assertEquals(expectedUniqueTodoList, uniqueTodoList);","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"kslui99"},"content":"    public void setTodos_listWithDuplicateTodos_throwsDuplicateTodoException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"kslui99"},"content":"        List\u003cTodo\u003e listWithDuplicateTodos \u003d Arrays.asList(READ, READ);","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"kslui99"},"content":"        assertThrows(DuplicateTodoException.class, () -\u003e uniqueTodoList.setTodos(listWithDuplicateTodos));","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"kslui99"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"kslui99"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"kslui99"},"content":"            -\u003e uniqueTodoList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"kslui99":132}},{"path":"src/test/java/seedu/address/model/todo/predicates/DescriptionContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package seedu.address.model.todo.predicates;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"import seedu.address.testutil.TodoBuilder;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"public class DescriptionContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"    public void equals() {","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"        DescriptionContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"                new DescriptionContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"        DescriptionContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"                new DescriptionContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"        DescriptionContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"                new DescriptionContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"kslui99"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"kslui99"},"content":"        // different object -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"kslui99"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"kslui99"},"content":"    public void test_descriptionContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"kslui99"},"content":"        // One keyword","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"kslui99"},"content":"        DescriptionContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"kslui99"},"content":"                new DescriptionContainsKeywordsPredicate(Collections.singletonList(\"Appeal\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"kslui99"},"content":"        assertTrue(predicate.test(new TodoBuilder().withDescription(\"Appeal Travel\").build()));","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"kslui99"},"content":"        // Multiple keywords","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"kslui99"},"content":"        predicate \u003d new DescriptionContainsKeywordsPredicate(Arrays.asList(\"Appeal\", \"Travel\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"kslui99"},"content":"        assertTrue(predicate.test(new TodoBuilder().withDescription(\"Appeal Travel\").build()));","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"kslui99"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"kslui99"},"content":"        predicate \u003d new DescriptionContainsKeywordsPredicate(Arrays.asList(\"Travel\", \"Shop\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"kslui99"},"content":"        assertTrue(predicate.test(new TodoBuilder().withDescription(\"Appeal Shop\").build()));","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"kslui99"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"kslui99"},"content":"        predicate \u003d new DescriptionContainsKeywordsPredicate(Arrays.asList(\"aPPeAl\", \"tRAvEl\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"kslui99"},"content":"        assertTrue(predicate.test(new TodoBuilder().withDescription(\"Appeal Travel\").build()));","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"kslui99"},"content":"    public void test_descriptionDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"kslui99"},"content":"        // Zero keywords","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"kslui99"},"content":"        DescriptionContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"kslui99"},"content":"                new DescriptionContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"kslui99"},"content":"        assertFalse(predicate.test(new TodoBuilder().withDescription(\"Appeal\").build()));","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"kslui99"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"kslui99"},"content":"        predicate \u003d new DescriptionContainsKeywordsPredicate(Arrays.asList(\"Shop\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"kslui99"},"content":"        assertFalse(predicate.test(new TodoBuilder().withDescription(\"Appeal Travel\").build()));","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"kslui99":75}},{"path":"src/test/java/seedu/address/model/todo/predicates/TagsContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package seedu.address.model.todo.predicates;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"import seedu.address.testutil.TodoBuilder;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"public class TagsContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"    public void equals() {","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"        TagsContainsKeywordsPredicate firstPredicate \u003d new TagsContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"        TagsContainsKeywordsPredicate secondPredicate \u003d new TagsContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"        TagsContainsKeywordsPredicate firstPredicateCopy \u003d new TagsContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"kslui99"},"content":"        // different object -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"kslui99"},"content":"    public void test_tagsContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"kslui99"},"content":"        // One keyword","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"kslui99"},"content":"        TagsContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"kslui99"},"content":"                new TagsContainsKeywordsPredicate(Collections.singletonList(\"learning\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"kslui99"},"content":"        assertTrue(predicate.test(new TodoBuilder().withTags(\"learning\", \"leisure\").build()));","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"kslui99"},"content":"        // Multiple keywords, only one matches","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"kslui99"},"content":"        predicate \u003d new TagsContainsKeywordsPredicate(Arrays.asList(\"learning\", \"leisure\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"kslui99"},"content":"        assertFalse(predicate.test(new TodoBuilder().withTags(\"learning\", \"personalDevelopment\").build()));","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"kslui99"},"content":"        assertFalse(predicate.test(new TodoBuilder().withTags(\"personalDevelopment\", \"learning\").build()));","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"kslui99"},"content":"        assertFalse(predicate.test(new TodoBuilder().withTags(\"learning\").build()));","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"kslui99"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"kslui99"},"content":"        predicate \u003d new TagsContainsKeywordsPredicate(Arrays.asList(\"lEaRNing\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"kslui99"},"content":"        assertTrue(predicate.test(new TodoBuilder().withTags(\"learning\").build()));","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"kslui99"},"content":"    public void test_tagsDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"kslui99"},"content":"        // Zero keywords","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"kslui99"},"content":"        TagsContainsKeywordsPredicate predicate \u003d new TagsContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"kslui99"},"content":"        assertFalse(predicate.test(new TodoBuilder().withTags(\"learning\").build()));","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"kslui99"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"kslui99"},"content":"        predicate \u003d new TagsContainsKeywordsPredicate(Arrays.asList(\"development\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"kslui99"},"content":"        assertFalse(predicate.test(new TodoBuilder().withTags(\"learning\", \"leisure\").build()));","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"kslui99"},"content":"        // Keywords match description, but does not match tag","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"kslui99"},"content":"        predicate \u003d new TagsContainsKeywordsPredicate(Arrays.asList(\"read\", \"travel\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"kslui99"},"content":"        assertFalse(predicate.test(new TodoBuilder().withDescription(\"read\").build()));","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"kslui99":73}},{"path":"src/test/java/seedu/address/model/todo/predicates/TodoIsDonePredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package seedu.address.model.todo.predicates;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"import seedu.address.testutil.TodoBuilder;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"public class TodoIsDonePredicateTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"    public void test_todoIsDone_returnsTrue() {","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"        TodoIsDonePredicate predicate \u003d new TodoIsDonePredicate();","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"        assertTrue(predicate.test(new TodoBuilder().withDone().build()));","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"    public void test_todoIsNotDone_returnsFalse() {","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"        TodoIsDonePredicate predicate \u003d new TodoIsDonePredicate();","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"        assertFalse(predicate.test(new TodoBuilder().build()));","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"kslui99":23}},{"path":"src/test/java/seedu/address/model/todo/predicates/TodoIsNotDonePredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package seedu.address.model.todo.predicates;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"import seedu.address.testutil.TodoBuilder;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"public class TodoIsNotDonePredicateTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"    public void test_todoIsNotDone_returnsTrue() {","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"        TodoIsNotDonePredicate predicate \u003d new TodoIsNotDonePredicate();","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"        assertTrue(predicate.test(new TodoBuilder().build()));","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"    public void test_todoIsDone_returnsFalse() {","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"        TodoIsNotDonePredicate predicate \u003d new TodoIsNotDonePredicate();","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"        assertFalse(predicate.test(new TodoBuilder().withDone().build()));","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"kslui99":23}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Relationship;","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"mokdarren"},"content":"    private static final String INVALID_RELATIONSHIP \u003d \"dog\";","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"mokdarren"},"content":"    private static final String INVALID_STATUS \u003d \"destroyed\";","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"mokdarren"},"content":"    private static final String VALID_RELATIONSHIP \u003d BENSON.getRelationship().toString();","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"mokdarren"},"content":"    private static final String VALID_NOTES \u003d BENSON.getNotes();","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"mokdarren"},"content":"    private static final String VALID_STATUS \u003d BENSON.getStatus().toString();","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"mokdarren"},"content":"    private static final List\u003cJsonAdaptedPolicy\u003e VALID_POLICIES \u003d BENSON.getPolicies().stream()","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"mokdarren"},"content":"            .map(JsonAdaptedPolicy::new)","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"mokdarren"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"mokdarren"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_RELATIONSHIP, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"mokdarren"},"content":"                        VALID_ADDRESS, VALID_STATUS, VALID_NOTES, VALID_TAGS, VALID_POLICIES);","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"mokdarren"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_RELATIONSHIP, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"mokdarren"},"content":"                VALID_ADDRESS, VALID_STATUS, VALID_NOTES, VALID_TAGS, VALID_POLICIES);","lastModifiedDate":"2021-10-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"mokdarren"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"mokdarren"},"content":"    public void toModelType_invalidRelationship_throwsIllegalValueException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"mokdarren"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"mokdarren"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_RELATIONSHIP, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"mokdarren"},"content":"                        VALID_ADDRESS, VALID_STATUS, VALID_NOTES, VALID_TAGS, VALID_POLICIES);","lastModifiedDate":"2021-10-29"},{"lineNumber":72,"author":{"gitId":"mokdarren"},"content":"        String expectedMessage \u003d Relationship.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"mokdarren"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"mokdarren"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"mokdarren"},"content":"    public void toModelType_nullRelationship_throwsIllegalValueException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"mokdarren"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_PHONE,","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"mokdarren"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_STATUS, VALID_NOTES, VALID_TAGS, VALID_POLICIES);","lastModifiedDate":"2021-10-29"},{"lineNumber":80,"author":{"gitId":"mokdarren"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Relationship.class.getSimpleName());","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"mokdarren"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"mokdarren"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_RELATIONSHIP, INVALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"mokdarren"},"content":"                        VALID_ADDRESS, VALID_STATUS, VALID_NOTES, VALID_TAGS, VALID_POLICIES);","lastModifiedDate":"2021-10-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"mokdarren"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_RELATIONSHIP, null, VALID_EMAIL,","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"mokdarren"},"content":"                VALID_ADDRESS, VALID_STATUS, VALID_NOTES, VALID_TAGS, VALID_POLICIES);","lastModifiedDate":"2021-10-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"mokdarren"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_RELATIONSHIP, VALID_PHONE, INVALID_EMAIL,","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"mokdarren"},"content":"                        VALID_ADDRESS, VALID_STATUS, VALID_NOTES, VALID_TAGS, VALID_POLICIES);","lastModifiedDate":"2021-10-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"mokdarren"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_RELATIONSHIP, VALID_PHONE, null,","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"mokdarren"},"content":"                VALID_ADDRESS, VALID_STATUS, VALID_NOTES, VALID_TAGS, VALID_POLICIES);","lastModifiedDate":"2021-10-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"mokdarren"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_RELATIONSHIP, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"mokdarren"},"content":"                        INVALID_ADDRESS, VALID_STATUS, VALID_NOTES, VALID_TAGS, VALID_POLICIES);","lastModifiedDate":"2021-10-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"mokdarren"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_RELATIONSHIP, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"mokdarren"},"content":"                null, VALID_STATUS, VALID_NOTES, VALID_TAGS, VALID_POLICIES);","lastModifiedDate":"2021-10-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"mokdarren"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_RELATIONSHIP, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"mokdarren"},"content":"                        VALID_ADDRESS, VALID_STATUS, VALID_NOTES, invalidTags, VALID_POLICIES);","lastModifiedDate":"2021-10-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":101,"mokdarren":43}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedTodoTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"import static seedu.address.storage.JsonAdaptedTodo.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"import static seedu.address.testutil.TypicalTodos.BAKE;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"public class JsonAdaptedTodoTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"    private static final String VALID_DESCRIPTION \u003d BAKE.getDescription();","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BAKE.getTags().stream()","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"    public void toModelType_validTodoDetails_returnsTodo() throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"        JsonAdaptedTodo todo \u003d new JsonAdaptedTodo(BAKE);","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"        assertEquals(BAKE, todo.toModelType());","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"    public void toModelType_nullDescription_throwsIllegalValueException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"        JsonAdaptedTodo todo \u003d new JsonAdaptedTodo(null, VALID_TAGS, false);","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, \"description\");","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, todo::toModelType);","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"kslui99"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"kslui99"},"content":"        JsonAdaptedTodo todo \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"kslui99"},"content":"                new JsonAdaptedTodo(VALID_DESCRIPTION, invalidTags, false);","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"kslui99"},"content":"        assertThrows(IllegalValueException.class, todo::toModelType);","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"kslui99":46}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"import static seedu.address.testutil.TypicalTodos.EAT;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"import static seedu.address.testutil.TypicalTodos.SHOP;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"kslui99"},"content":"    public void readAddressBook_invalidTodoAddressBook_throwDataConversionException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"kslui99"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidTodoAddressBook.json\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"kslui99"},"content":"    public void readAddressBook_invalidAndValidTodoAddressBook_throwDataConversionException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"kslui99"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidTodoAddressBook.json\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"kslui99"},"content":"        original.addTodo(SHOP);","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"kslui99"},"content":"        original.addTodo(EAT);","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"kslui99":14,"-":110}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"import seedu.address.testutil.TypicalTodos;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"    private static final Path TYPICAL_TODOS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalTodosAddressBook.json\");","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"    private static final Path INVALID_TODO_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidTodoAddressBook.json\");","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"    private static final Path DUPLICATE_TODO_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateTodoAddressBook.json\");","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"kslui99"},"content":"    public void toModelType_typicalTodosFile_success() throws Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"kslui99"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_TODOS_FILE,","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"kslui99"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"kslui99"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"kslui99"},"content":"        AddressBook typicalTodosAddressBook \u003d TypicalTodos.getTypicalAddressBook();","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"kslui99"},"content":"        assertEquals(addressBookFromFile, typicalTodosAddressBook);","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"kslui99"},"content":"    public void toModelType_invalidTodoFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"kslui99"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_TODO_FILE,","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"kslui99"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"kslui99"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"kslui99"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"kslui99"},"content":"    public void toModelType_duplicateTodos_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"kslui99"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_TODO_FILE,","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"kslui99"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"kslui99"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_TODO,","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"kslui99"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"kslui99":28,"-":47}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.Todo;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2016-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"     * Adds a new {@code Todo} to the {@code AddressBook} that we are building.","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"    public AddressBookBuilder withTodo(Todo todo) {","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"        addressBook.addTodo(todo);","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"kslui99"},"content":"        return this;","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kslui99":9,"-":34}},{"path":"src/test/java/seedu/address/testutil/EditTodoDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"import seedu.address.logic.commands.EditTodoCommand.EditTodoDescriptor;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.Todo;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":" * A utility class to help with building EditTodoDescriptor objects.","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"public class EditTodoDescriptorBuilder {","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"    private EditTodoDescriptor descriptor;","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"    public EditTodoDescriptorBuilder() {","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"        descriptor \u003d new EditTodoDescriptor();","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"    public EditTodoDescriptorBuilder(EditTodoDescriptor descriptor) {","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"        this.descriptor \u003d new EditTodoDescriptor(descriptor);","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"     * Returns an {@code EditTodoDescriptor} with fields containing {@code todo}\u0027s details","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"    public EditTodoDescriptorBuilder(Todo todo) {","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"        descriptor \u003d new EditTodoDescriptor();","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"        descriptor.setDescription(todo.getDescription());","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"        descriptor.setTags(todo.getTags());","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"     * Sets the {@code description} of the {@code EditTodoDescriptor} that we are building.","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"    public EditTodoDescriptorBuilder withDescription(String description) {","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"        descriptor.setDescription(description);","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"kslui99"},"content":"        return this;","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"kslui99"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditTodoDescriptor}","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"kslui99"},"content":"     * that we are building.","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"kslui99"},"content":"    public EditTodoDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"kslui99"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"kslui99"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"kslui99"},"content":"        return this;","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"kslui99"},"content":"    public EditTodoDescriptor build() {","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"kslui99"},"content":"        return descriptor;","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"kslui99":56}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Relationship;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"mokdarren"},"content":"import seedu.address.model.person.Status;","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"mokdarren"},"content":"    public static final String DEFAULT_RELATIONSHIP \u003d \"client\";","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":25,"author":{"gitId":"mokdarren"},"content":"    public static final String DEFAULT_STATUS \u003d \"FRESH\";","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"mokdarren"},"content":"    private Relationship relationship;","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"mokdarren"},"content":"    private Status status;","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"mokdarren"},"content":"        relationship \u003d new Relationship(DEFAULT_RELATIONSHIP);","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"mokdarren"},"content":"        status \u003d Status.valueOf(DEFAULT_STATUS);","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"mokdarren"},"content":"        relationship \u003d personToCopy.getRelationship();","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"mokdarren"},"content":"        status \u003d personToCopy.getStatus();","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"mokdarren"},"content":"     * Sets the {@code Relationship} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"mokdarren"},"content":"    public PersonBuilder withRelationship(String relationship) {","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"mokdarren"},"content":"        this.relationship \u003d new Relationship(relationship);","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"mokdarren"},"content":"        return this;","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"mokdarren"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":102,"author":{"gitId":"mokdarren"},"content":"     * Sets the {@code Status} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-29"},{"lineNumber":103,"author":{"gitId":"mokdarren"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":104,"author":{"gitId":"mokdarren"},"content":"    public PersonBuilder withStatus(String status) {","lastModifiedDate":"2021-10-29"},{"lineNumber":105,"author":{"gitId":"mokdarren"},"content":"        this.status \u003d Status.valueOf(status);","lastModifiedDate":"2021-10-29"},{"lineNumber":106,"author":{"gitId":"mokdarren"},"content":"        return this;","lastModifiedDate":"2021-10-29"},{"lineNumber":107,"author":{"gitId":"mokdarren"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":108,"author":{"gitId":"mokdarren"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":118,"author":{"gitId":"mokdarren"},"content":"        return new Person(name, relationship, phone, email, address, tags, new HashSet\u003c\u003e(), status, \"\");","lastModifiedDate":"2021-10-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"-":95,"mokdarren":26}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"mokdarren"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RELATIONSHIP;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"SpdPnd98"},"content":"        return \" \" + AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"mokdarren"},"content":"        sb.append(PREFIX_RELATIONSHIP + person.getRelationship().value + \" \");","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"-":61,"SpdPnd98":1,"mokdarren":2}},{"path":"src/test/java/seedu/address/testutil/TodoBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.Todo;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":" * A utility class to help with building Todo objects.","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"public class TodoBuilder {","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"read\";","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"    private String description;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"     * Creates a {@code TodoBuilder} with the default details.","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"    public TodoBuilder() {","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"        description \u003d DEFAULT_DESCRIPTION;","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"     * Initializes the TodoBuilder with the data of {@code todoToCopy}.","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"    public TodoBuilder(Todo todoToCopy) {","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"        description \u003d todoToCopy.getDescription();","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"        tags \u003d new HashSet\u003c\u003e(todoToCopy.getTags());","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"     * Sets the description of the {@code Todo} that we are building.","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"kslui99"},"content":"    public TodoBuilder withDescription(String description) {","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"kslui99"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"kslui99"},"content":"        return this;","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"kslui99"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Todo} that we are building.","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"kslui99"},"content":"    public TodoBuilder withTags(String ... tags) {","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"kslui99"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"kslui99"},"content":"        return this;","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"kslui99"},"content":"     * Marks the todo that we are building as done.","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"kslui99"},"content":"    public TodoBuilder withDone() {","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"kslui99"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"kslui99"},"content":"        return this;","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"kslui99"},"content":"    public Todo build() {","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"kslui99"},"content":"        return new Todo(description, tags, isDone);","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"kslui99":66}},{"path":"src/test/java/seedu/address/testutil/TodoUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"import seedu.address.logic.commands.AddTodoCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"import seedu.address.logic.commands.EditTodoCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.Todo;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":" * A utility class for Todo.","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":"public class TodoUtil {","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"     * Returns an add command string for adding the {@code todo}.","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"    public static String getAddTodoCommand(Todo todo) {","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"SpdPnd98"},"content":"        return \" \" + AddTodoCommand.COMMAND_WORD + \" \" + getTodoDetails(todo);","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"     * Returns a filter command string for filtering {@code todo}s.","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"    public static String getFilterTodoCommand(Todo todo) {","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"        return \" \" + AddTodoCommand.COMMAND_WORD + \" \" + getTodoDetails(todo);","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"     * Returns the part of command string for the given {@code todo}\u0027s details.","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"    public static String getTodoDetails(Todo todo) {","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"kslui99"},"content":"        sb.append(PREFIX_DESCRIPTION + todo.getDescription());","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"        todo.getTags().stream().forEach(s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \"));","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"        return sb.toString();","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"kslui99"},"content":"     * Returns the part of command string for the given {@code EditTodoDescriptor}\u0027s details.","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"kslui99"},"content":"    public static String getEditTodoDescriptorDetails(EditTodoCommand.EditTodoDescriptor descriptor) {","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"kslui99"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"kslui99"},"content":"        descriptor.getDescription()","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"kslui99"},"content":"                .ifPresent(description -\u003e sb.append(PREFIX_DESCRIPTION).append(description).append(\" \"));","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"kslui99"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"kslui99"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"kslui99"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"kslui99"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"kslui99"},"content":"            } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"kslui99"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"kslui99"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"kslui99"},"content":"        return sb.toString();","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"kslui99":58,"SpdPnd98":1}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"    public static final Index INDEX_FIRST \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"    public static final Index INDEX_SECOND \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"    public static final Index INDEX_THIRD \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"kslui99":3,"-":9}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"mokdarren"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\").withRelationship(\"client\")","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"mokdarren"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\").withRelationship(\"client\")","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":32,"author":{"gitId":"mokdarren"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\").withStatus(\"FRESH\")","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"mokdarren"},"content":"            .withRelationship(\"friend\").withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"mokdarren"},"content":"            .withRelationship(\"client\").withEmail(\"cornelia@example.com\").withAddress(\"10th street\")","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"mokdarren"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"mokdarren"},"content":"            .withRelationship(\"client\").withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"mokdarren"},"content":"            .withRelationship(\"client\").withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"mokdarren"},"content":"            .withRelationship(\"client\").withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"mokdarren"},"content":"            .withRelationship(\"client\").withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"mokdarren"},"content":"            .withRelationship(\"client\").withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"mokdarren"},"content":"            .withRelationship(\"client\").withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"mokdarren"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"mokdarren"},"content":"            .withRelationship(\"client\").withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"mokdarren"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"-":63,"mokdarren":15}},{"path":"src/test/java/seedu/address/testutil/TypicalTodos.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kslui99"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_READ;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_TRAVEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_LEARNING;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kslui99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_LEISURE;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kslui99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"kslui99"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"kslui99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"kslui99"},"content":"import seedu.address.model.todo.Todo;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"kslui99"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"kslui99"},"content":" * A utility class containing a list of {@code Todo} objects to be used in tests.","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"kslui99"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"kslui99"},"content":"public class TypicalTodos {","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"kslui99"},"content":"    public static final Todo APPEAL \u003d new TodoBuilder().withDescription(\"appeal\")","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"kslui99"},"content":"            .withTags(\"legal\").build();","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"kslui99"},"content":"    public static final Todo BAKE \u003d new TodoBuilder().withDescription(\"bake\")","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"kslui99"},"content":"            .withTags(\"cooking\").build();","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"kslui99"},"content":"    public static final Todo SHOP \u003d new TodoBuilder().withDescription(\"shop\")","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"kslui99"},"content":"            .withTags(\"fun\").build();","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"kslui99"},"content":"    public static final Todo EAT \u003d new TodoBuilder().withDescription(\"eat\")","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"kslui99"},"content":"            .withTags(\"fun\").build();","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"kslui99"},"content":"    // Manually added - Todo\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"kslui99"},"content":"    public static final Todo READ \u003d new TodoBuilder().withDescription(VALID_DESCRIPTION_READ)","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"kslui99"},"content":"            .withTags(VALID_TAG_LEARNING).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"kslui99"},"content":"    public static final Todo TRAVEL \u003d new TodoBuilder().withDescription(VALID_DESCRIPTION_TRAVEL)","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"kslui99"},"content":"            .withTags(VALID_TAG_LEISURE).build();;","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"kslui99"},"content":"    private TypicalTodos() {} // prevents instantiation","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"kslui99"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"kslui99"},"content":"     * Returns an {@code AddressBook} with all the typical todos.","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"kslui99"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"kslui99"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"kslui99"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"kslui99"},"content":"        for (Todo todo : getTypicalTodos()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"kslui99"},"content":"            ab.addTodo(todo);","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"kslui99"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"kslui99"},"content":"        return ab;","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"kslui99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"kslui99"},"content":"    public static List\u003cTodo\u003e getTypicalTodos() {","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"kslui99"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(APPEAL, BAKE, SHOP, EAT));","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"kslui99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"kslui99"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"kslui99":51}}]
