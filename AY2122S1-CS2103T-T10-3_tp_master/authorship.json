[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"samyipsh"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-T10-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-T10-3/tp/actions)","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"samyipsh"},"content":"NetworkUs is an contact book application that helps **Computer Science students** maintain a list of contacts of people they meet in school.","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"jeromewjj"},"content":"NetworkUs allows students to store their friends\u0027 Github and LinkedIn account so that they can collaborate on project in future.","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"jeromewjj"},"content":"Features:","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"jeromewjj"},"content":"* Store list of contacts of people you have met","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"jeromewjj"},"content":"* Find friends who have similar interest for project collaboration","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"jeromewjj"},"content":"* Search contact based on module","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"jeromewjj"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"samyipsh":2,"jeromewjj":8,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"jeromewjj"},"content":"run {","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"jeromewjj"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"jeromewjj"},"content":"}","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"e0543403"},"content":"    archiveName \u003d \u0027networkus.jar\u0027","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"e0543403":1,"jeromewjj":4,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"DystoriaX"},"content":"### Dasco Gabriel","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"DystoriaX"},"content":"\u003cimg src\u003d\"images/dystoriax.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"DystoriaX"},"content":"[[github](https://github.com/dystoriax)]","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"DystoriaX"},"content":"[[portfolio](team/dystoriax.md)]","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"DystoriaX"},"content":"* Role: Developer","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"DystoriaX"},"content":"* Responsibilities: Logic","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"e0543403"},"content":"### Hester James Douglas","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"e0543403"},"content":"\u003cimg src\u003d\"images/e0543403.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"e0543403"},"content":"[[github](http://github.com/e0543403)]","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"e0543403"},"content":"[[portfolio](team/e0543403.md)]","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"jeromewjj"},"content":"### Jerome Wong Jia Jin","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"jeromewjj"},"content":"\u003cimg src\u003d\"images/jeromewjj.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"jeromewjj"},"content":"[[github](http://github.com/jeromewjj)] [[portfolio](team/jeromewjj.md)]","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"samyipsh"},"content":"### Samuel Yip","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"samyipsh"},"content":"\u003cimg src\u003d\"images/samyipsh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"samyipsh"},"content":"[[github](https://github.com/samyipsh)]","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"samyipsh"},"content":"[[portfolio](team/samyipsh.md)]","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"samyipsh"},"content":"* Responsibilities: Dev Ops + Storage","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"CommanderW324"},"content":"### Winston Cahya","lastModifiedDate":"2021-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"CommanderW324"},"content":"\u003cimg src\u003d\"images/commanderw324.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"CommanderW324"},"content":"[[github](http://github.com/commanderw324)]","lastModifiedDate":"2021-09-25"},{"lineNumber":56,"author":{"gitId":"CommanderW324"},"content":"[[portfolio](team/commanderw324.md)]","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"CommanderW324"},"content":"* Responsibilities: UI \u0026 Model","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"samyipsh":5,"e0543403":4,"CommanderW324":5,"jeromewjj":3,"-":36,"DystoriaX":6}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"e0543403"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"jeromewjj"},"content":"## Introduction of guide","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"jeromewjj"},"content":"This guide aims to provide understanding of the technical details of NetworkUS. It is targeted towards developers as it contains technical documentation. It includes well-documented diagrams, indepth explanation of components and features, and details on NetworkUS specific project workflows (eg. Logging / Testing / Setting Up).","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"jeromewjj"},"content":"Use this guide if you want to","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"jeromewjj"},"content":"* Improve on the specific project by adding to its code base","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"jeromewjj"},"content":"* Adapt NetworkUS for your own use","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"jeromewjj"},"content":"* Learn from specific implementations of features/components","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"jeromewjj"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"jeromewjj"},"content":"## How to use this guide","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"jeromewjj"},"content":"Refer to the **Table of Content** at the start of this guide or ctrl-f keywords to find relevant sections.","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"jeromewjj"},"content":"A general grouping and a brief description of sections in this guide are provided below.","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"jeromewjj"},"content":"* Setting up the development environment for NetworkUS: [quick start](SettingUp.md)","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"jeromewjj"},"content":"* Overarching architectural implementation and component relations: [design](#design)","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"jeromewjj"},"content":"* Feature specific design and considerations: [implementation](#implementation-of-features)","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"jeromewjj"},"content":"* NetworkUS idea conceptualization details (value proposition, NFR, use cases and user stories): [Appendix: Requirements](#appendix-requirements)","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"jeromewjj"},"content":"* Instructions for manual testing of NetworkUS: [testing](#appendix-instructions-for-manual-testing)","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"jeromewjj"},"content":"* NetworkUS specific workflows and configuration (documentation, logging, testing, developer operations): [workflows and configuration](#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"jeromewjj"},"content":"## Acknowledgements","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":41,"author":{"gitId":"jeromewjj"},"content":"* This project is based on the AddressBook Level 3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"jeromewjj"},"content":"## Setting up NetworkUS","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"jeromewjj"},"content":"To set up your development environment for NetworkUS, refer to this guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"e0543403"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"e0543403"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2122S1-CS2103T-T10-3/tp/tree/master/docs/diagrams) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"CommanderW324"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2122S1-CS2103T-T10-3/tp/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2122S1-CS2103T-T10-3/tp/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":95,"author":{"gitId":"jeromewjj"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":96,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"jeromewjj"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":104,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"CommanderW324"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2122S1-CS2103T-T10-3/tp/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-09-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"CommanderW324"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2122S1-CS2103T-T10-3/tp/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2122S1-CS2103T-T10-3/tp/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-09-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"jeromewjj"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":123,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"CommanderW324"},"content":"**API** : [`Logic.java`](https://github.com/AY2122S1-CS2103T-T10-3/tp/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-09-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"samyipsh"},"content":"1. When `Logic` is called upon to execute a command, it uses the `ContactBookParser` class to parse the user command.","lastModifiedDate":"2021-11-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-09-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-09-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-09-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"e0543403"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":143,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":144,"author":{"gitId":"e0543403"},"content":":information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-11-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":152,"author":{"gitId":"samyipsh"},"content":"* When called upon to parse a user command, the `ContactBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `ContactBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-11-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"jeromewjj"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":156,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":158,"author":{"gitId":"CommanderW324"},"content":"**API** : [`Model.java`](https://github.com/AY2122S1-CS2103T-T10-3/tp/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2021-09-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"CommanderW324"},"content":"* stores the user\u0027s contacts i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-09-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":169,"author":{"gitId":"jeromewjj"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"e0543403"},"content":"**API** : [`Storage.java`](https://github.com/AY2122S1-CS2103T-T10-3/tp/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2021-11-06"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"CommanderW324"},"content":"* can save both contacts data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-09-27"},{"lineNumber":179,"author":{"gitId":"samyipsh"},"content":"* inherits from both `ContactBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-11-05"},{"lineNumber":180,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"jeromewjj"},"content":"Classes used by multiple components are in the `seedu.address.commons` package.","lastModifiedDate":"2021-11-07"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"e0543403"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":188,"author":{"gitId":"jeromewjj"},"content":"## **Implementation of features**","lastModifiedDate":"2021-11-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"e0543403"},"content":"### Find tag feature","lastModifiedDate":"2021-10-20"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":194,"author":{"gitId":"e0543403"},"content":"#### Implementation","lastModifiedDate":"2021-10-20"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":196,"author":{"gitId":"e0543403"},"content":"The find tag mechanism builds on the find name feature and is facilitated by `FoundInNameOrTagsPredicate` which implements `Predicate\u003cPerson\u003e` and is created when `FindCommandParser` inputs the userinput keywords into its constructor as a `List\u003cString\u003e`. \u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":197,"author":{"gitId":"e0543403"},"content":"It implements the following operation:","lastModifiedDate":"2021-10-20"},{"lineNumber":198,"author":{"gitId":"e0543403"},"content":"* `FoundInNameOrTagsPredicate#test(Person person)` - tests whether the input `Person` object has a name or tag which matches any of the keywords.","lastModifiedDate":"2021-11-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":200,"author":{"gitId":"e0543403"},"content":"The predicate is then used by `Model#updateFilteredPersonList(Predicate\u003cPerson\u003e)`  to change the _filtered_ list in the `Model` component exposed as and observed by the UI component as an unmodifiable `ObservableList\u003cPerson\u003e` to display to the user.","lastModifiedDate":"2021-10-20"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":202,"author":{"gitId":"e0543403"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"find programmer\")` API call.","lastModifiedDate":"2021-11-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":204,"author":{"gitId":"e0543403"},"content":"![Interactions Inside the Logic Component for the `find programmer` Command](images/FindTagSequenceDiagram.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":206,"author":{"gitId":"e0543403"},"content":"#### Design considerations:","lastModifiedDate":"2021-10-20"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":208,"author":{"gitId":"e0543403"},"content":"How find matches tags and keywords:","lastModifiedDate":"2021-10-20"},{"lineNumber":209,"author":{"gitId":"e0543403"},"content":"* Alternative 1 (Current choice): Word match","lastModifiedDate":"2021-10-20"},{"lineNumber":210,"author":{"gitId":"e0543403"},"content":"    * Pros: Easy to implement and fast performance","lastModifiedDate":"2021-10-20"},{"lineNumber":211,"author":{"gitId":"e0543403"},"content":"    * Cons: Less flexibility for valid user inputs","lastModifiedDate":"2021-10-20"},{"lineNumber":212,"author":{"gitId":"e0543403"},"content":"* Alternative 2 : Substring match","lastModifiedDate":"2021-10-20"},{"lineNumber":213,"author":{"gitId":"e0543403"},"content":"    * Pros: More flexibility for valid user inputs","lastModifiedDate":"2021-10-20"},{"lineNumber":214,"author":{"gitId":"e0543403"},"content":"    * Cons: May have performance issues for speed","lastModifiedDate":"2021-10-20"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"e0543403"},"content":"### Tag person feature","lastModifiedDate":"2021-11-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":218,"author":{"gitId":"e0543403"},"content":"#### Implementation","lastModifiedDate":"2021-11-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":220,"author":{"gitId":"e0543403"},"content":"The tag person mechanism is facilitated by `ParserUtil#parseTag(String tag)` and `ParserUtil#parseIndex(String oneBasedIndex)`. \u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":221,"author":{"gitId":"e0543403"},"content":"`ParserUtil#parseTag(String tag)` checks whether the input conforms to the restrictions of a `Tag` and if so returns a `Tag` with the input as its value. \u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":222,"author":{"gitId":"e0543403"},"content":"`ParserUtil#parseIndex(String oneBasedIndex)` checks whether the input can be an unsigned non-zero integer and if so returns an `Index` with the integer as the value. \u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":224,"author":{"gitId":"e0543403"},"content":"The `Tag` and multiple `Index` are used to find multiple `Person` objects from `filteredPersons`. \u003cbr\u003e ","lastModifiedDate":"2021-11-04"},{"lineNumber":225,"author":{"gitId":"e0543403"},"content":"They are then replaced with `Person` objects with the `Tag` using `model#setPerson(Person target, Person editedPerson)`.","lastModifiedDate":"2021-11-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":227,"author":{"gitId":"e0543403"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"tag 1 2 programmer\")` API call.","lastModifiedDate":"2021-11-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":229,"author":{"gitId":"e0543403"},"content":"![Interactions Inside the Logic Component for the `tag 1 2 programmer` Command](images/TagSequenceDiagram.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":231,"author":{"gitId":"e0543403"},"content":"The Activity Diagram below summarizes what happens when the user executes a Tag command. ","lastModifiedDate":"2021-11-06"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":233,"author":{"gitId":"e0543403"},"content":"![TagActivityDiagram](images/TagActivityDiagram.png)","lastModifiedDate":"2021-11-06"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":235,"author":{"gitId":"e0543403"},"content":"#### Design consideration","lastModifiedDate":"2021-11-04"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":237,"author":{"gitId":"e0543403"},"content":"What the specified indexes refer to:","lastModifiedDate":"2021-11-04"},{"lineNumber":238,"author":{"gitId":"e0543403"},"content":"* Alternative 1 (Current choice): Using `filteredList` to specify what `Index` refers to.","lastModifiedDate":"2021-11-04"},{"lineNumber":239,"author":{"gitId":"e0543403"},"content":"    * Pros: Ability to tag visible persons","lastModifiedDate":"2021-11-04"},{"lineNumber":240,"author":{"gitId":"e0543403"},"content":"    * Cons: Inability to tag not visible persons","lastModifiedDate":"2021-11-04"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":242,"author":{"gitId":"e0543403"},"content":"* Alternative 2 : Using list of all persons to specify what `Index` refers to.","lastModifiedDate":"2021-11-04"},{"lineNumber":243,"author":{"gitId":"e0543403"},"content":"    * Pros: Ability to tag persons regardless of filter","lastModifiedDate":"2021-11-04"},{"lineNumber":244,"author":{"gitId":"e0543403"},"content":"    * Cons: Requires knowledge of person\u0027s unfiltered list index to tag accurately ","lastModifiedDate":"2021-11-04"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":246,"author":{"gitId":"e0543403"},"content":"Whether invalid indexes should be addressed:","lastModifiedDate":"2021-11-04"},{"lineNumber":247,"author":{"gitId":"e0543403"},"content":"* Alternative 1 (Current choice): Invalid indexes are pointed out.","lastModifiedDate":"2021-11-04"},{"lineNumber":248,"author":{"gitId":"e0543403"},"content":"    * Pros: Ability to know when incorrect indexes are used","lastModifiedDate":"2021-11-04"},{"lineNumber":249,"author":{"gitId":"e0543403"},"content":"    * Cons: More restrictive and unable to progress due to a potentially inconsequential mistake","lastModifiedDate":"2021-11-04"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":251,"author":{"gitId":"e0543403"},"content":"* Alternative 2 : Invalid indexes are ignored.","lastModifiedDate":"2021-11-04"},{"lineNumber":252,"author":{"gitId":"e0543403"},"content":"    * Pros: Ability to tag persons flexibly","lastModifiedDate":"2021-11-04"},{"lineNumber":253,"author":{"gitId":"e0543403"},"content":"    * Cons: May result in users believing the function behaves differently than it actually does","lastModifiedDate":"2021-11-04"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":256,"author":{"gitId":"jeromewjj"},"content":"### Replace Tag feature","lastModifiedDate":"2021-10-20"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":258,"author":{"gitId":"jeromewjj"},"content":"#### Implementation","lastModifiedDate":"2021-10-20"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":260,"author":{"gitId":"jeromewjj"},"content":"The replace tag mechanism is facilitated by `TagPresentPredicate` which implements `Predicate\u003cPerson\u003e` and is created","lastModifiedDate":"2021-10-20"},{"lineNumber":261,"author":{"gitId":"jeromewjj"},"content":"when arguments is pass to `ReplaceTagCommandParser`. \u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":262,"author":{"gitId":"jeromewjj"},"content":"`TagPresentPredicate` checks whether person has `Tag` to be replaced and is used to filter the list of `person` in `Model`.","lastModifiedDate":"2021-10-20"},{"lineNumber":263,"author":{"gitId":"jeromewjj"},"content":"From the filtered list of `person`, each `person` is replaced with a new `person` with the new replaced `tag`.","lastModifiedDate":"2021-11-06"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":265,"author":{"gitId":"jeromewjj"},"content":"#### Implementation Rationale","lastModifiedDate":"2021-11-06"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":267,"author":{"gitId":"jeromewjj"},"content":"ReplaceTag command is one of the few commands added to allow easier and quicker tag manipulation. Replace Tag allows user to","lastModifiedDate":"2021-11-06"},{"lineNumber":268,"author":{"gitId":"jeromewjj"},"content":" update their tag without having to enter each index. This will become especially useful when contact\u0027s size is large.","lastModifiedDate":"2021-11-06"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":270,"author":{"gitId":"jeromewjj"},"content":"#### Design consideration","lastModifiedDate":"2021-10-20"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":272,"author":{"gitId":"jeromewjj"},"content":"How the specified tag is filtered:","lastModifiedDate":"2021-10-20"},{"lineNumber":273,"author":{"gitId":"jeromewjj"},"content":"* Alternative 1 (Current choice): Using `TagPresentPredicate` to filter the list of `person`","lastModifiedDate":"2021-10-20"},{"lineNumber":274,"author":{"gitId":"jeromewjj"},"content":"    * Pros: Easy to implement","lastModifiedDate":"2021-10-20"},{"lineNumber":275,"author":{"gitId":"jeromewjj"},"content":"    * Cons: Inefficient (need to search through the list of `person`)","lastModifiedDate":"2021-10-20"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":277,"author":{"gitId":"jeromewjj"},"content":"* Alternative 2 : Unique Tag list","lastModifiedDate":"2021-10-20"},{"lineNumber":278,"author":{"gitId":"jeromewjj"},"content":"    * Pros: Easier to search for the specified tag","lastModifiedDate":"2021-10-20"},{"lineNumber":279,"author":{"gitId":"jeromewjj"},"content":"    * Cons: Required change of implementation of `Tag` which could affect the rest of the commands","lastModifiedDate":"2021-11-06"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":281,"author":{"gitId":"jeromewjj"},"content":"The Sequence Diagram below illustrates the interactions within the Logic component for the execute(\"replacetag friend enemy\") API call.","lastModifiedDate":"2021-11-06"},{"lineNumber":282,"author":{"gitId":"jeromewjj"},"content":"![Interactions Inside the Logic Component for the `replacetag friend enemy` Command](images/ReplaceTagSequenceDiagram.png)","lastModifiedDate":"2021-11-06"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":284,"author":{"gitId":"jeromewjj"},"content":"The following activity diagrams summarise what happens when a user executes Replace Tag command:","lastModifiedDate":"2021-11-06"},{"lineNumber":285,"author":{"gitId":"jeromewjj"},"content":"![Activity Diagram for ReplaceTagCommand](images/ReplaceTagCommandActivityDiagram.png)","lastModifiedDate":"2021-11-06"},{"lineNumber":286,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":287,"author":{"gitId":"jeromewjj"},"content":"### Empty Field","lastModifiedDate":"2021-11-06"},{"lineNumber":288,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":289,"author":{"gitId":"jeromewjj"},"content":"#### Implementation","lastModifiedDate":"2021-11-06"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"jeromewjj"},"content":"The `Phone`, `Email`, `Github` and `LinkedIn` fields for `person` are optional. The empty field mechanism is facilitated","lastModifiedDate":"2021-11-06"},{"lineNumber":292,"author":{"gitId":"jeromewjj"},"content":"by `ParserUtil`. `ParserUtil` is modified to check whether input is an empty string which it would then return an empty","lastModifiedDate":"2021-11-06"},{"lineNumber":293,"author":{"gitId":"jeromewjj"},"content":"object for the respective field. `AddCommandParser#parse(String args)` is also modified to only check whether prefix name is present.","lastModifiedDate":"2021-11-06"},{"lineNumber":294,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":295,"author":{"gitId":"jeromewjj"},"content":"#### Implementation Rationale","lastModifiedDate":"2021-11-06"},{"lineNumber":296,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":297,"author":{"gitId":"jeromewjj"},"content":"Empty field provides more flexibility in what user add in contact. User may not have all the information required to","lastModifiedDate":"2021-11-06"},{"lineNumber":298,"author":{"gitId":"jeromewjj"},"content":"save in contacts. This may discourage user from saving contacts whom they are not close with.","lastModifiedDate":"2021-11-06"},{"lineNumber":299,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":300,"author":{"gitId":"jeromewjj"},"content":"#### Design consideration","lastModifiedDate":"2021-11-06"},{"lineNumber":301,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":302,"author":{"gitId":"jeromewjj"},"content":"How empty field is represented:","lastModifiedDate":"2021-11-06"},{"lineNumber":303,"author":{"gitId":"jeromewjj"},"content":"* Alternative 1 (Current choice): Instantiate a static object as default empty object","lastModifiedDate":"2021-11-06"},{"lineNumber":304,"author":{"gitId":"jeromewjj"},"content":"    * Pros: Avoid confusion on whether a certain field is empty","lastModifiedDate":"2021-11-06"},{"lineNumber":305,"author":{"gitId":"jeromewjj"},"content":"    * Cons: Longer implementation","lastModifiedDate":"2021-11-06"},{"lineNumber":306,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":307,"author":{"gitId":"jeromewjj"},"content":"* Alternative 2: Using empty string to represent value in respective field","lastModifiedDate":"2021-11-06"},{"lineNumber":308,"author":{"gitId":"jeromewjj"},"content":"    * Pros: Easy to implement","lastModifiedDate":"2021-11-06"},{"lineNumber":309,"author":{"gitId":"jeromewjj"},"content":"    * Cons: Create possible confusion on whether a certain field is empty","lastModifiedDate":"2021-11-06"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"samyipsh"},"content":"### Open Field feature","lastModifiedDate":"2021-10-25"},{"lineNumber":312,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":313,"author":{"gitId":"samyipsh"},"content":"#### Implementation","lastModifiedDate":"2021-10-25"},{"lineNumber":314,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":315,"author":{"gitId":"samyipsh"},"content":"The Open Field mechanism is facilitated by `openUrl` helper function which calls the desired generated url from the persons\u0027 field details (Github / LinkedIn). It is created when arguments are pass to `OpenFieldCommandParser`. \u003cbr\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":316,"author":{"gitId":"samyipsh"},"content":"`OpenFieldCommand` checks whether the field parsed in is valid. If valid, it checks if the field of the user is not empty. If not empty, it then opens the desired user profile in the user\u0027s browser.","lastModifiedDate":"2021-10-25"},{"lineNumber":317,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":318,"author":{"gitId":"samyipsh"},"content":"#### Design consideration","lastModifiedDate":"2021-10-25"},{"lineNumber":319,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":320,"author":{"gitId":"samyipsh"},"content":"How the URL is opened:","lastModifiedDate":"2021-10-25"},{"lineNumber":321,"author":{"gitId":"samyipsh"},"content":"* Alternative 1 (Current choice): Using `java.awt.Desktop.browse(URI)` to open it in the user\u0027s browser","lastModifiedDate":"2021-10-25"},{"lineNumber":322,"author":{"gitId":"samyipsh"},"content":"    * Pros: Easy to implement","lastModifiedDate":"2021-10-25"},{"lineNumber":323,"author":{"gitId":"samyipsh"},"content":"    * Pros: User default browser carries extensive tools for continuing his search from the desired page","lastModifiedDate":"2021-10-25"},{"lineNumber":324,"author":{"gitId":"samyipsh"},"content":"    * Cons: Directs traffic away from desktop application","lastModifiedDate":"2021-10-25"},{"lineNumber":325,"author":{"gitId":"samyipsh"},"content":"    * Cons: User might dislike NetworkUS application intruding into their browser application","lastModifiedDate":"2021-10-25"},{"lineNumber":326,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":327,"author":{"gitId":"samyipsh"},"content":"* Alternative 2 : Using JavaFX to open it as another popup / inbuilt pane","lastModifiedDate":"2021-10-25"},{"lineNumber":328,"author":{"gitId":"samyipsh"},"content":"    * Pros: Allows for same interface of desktop application and similar stylings","lastModifiedDate":"2021-10-25"},{"lineNumber":329,"author":{"gitId":"samyipsh"},"content":"    * Cons: Required `javafx-web` which increases Jar space by nearly 7 folds","lastModifiedDate":"2021-10-25"},{"lineNumber":330,"author":{"gitId":"samyipsh"},"content":"    * Cons: Slower loading time","lastModifiedDate":"2021-10-25"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":332,"author":{"gitId":"samyipsh"},"content":"The Sequence Diagram below illustrates the interactions within the Logic component for the execute(\"open 1 2 github\") API call.","lastModifiedDate":"2021-11-07"},{"lineNumber":333,"author":{"gitId":"samyipsh"},"content":"![Interactions Inside the Logic Component for the `open 1 2 github` Command](images/OpenFieldSequenceDiagram.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":335,"author":{"gitId":"samyipsh"},"content":"The following activity diagrams summarise what happens when a user executes an Open Field command:","lastModifiedDate":"2021-11-07"},{"lineNumber":336,"author":{"gitId":"samyipsh"},"content":"![Activity Diagram for OpenFieldCommand](images/OpenFieldCommandActivityDiagram.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":338,"author":{"gitId":"DystoriaX"},"content":"### Alias feature","lastModifiedDate":"2021-10-27"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":340,"author":{"gitId":"DystoriaX"},"content":"#### Implementation","lastModifiedDate":"2021-10-27"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":342,"author":{"gitId":"DystoriaX"},"content":"The alias feature is facilitated by `AliasTable` which stores the key-value pairs of aliases and commands. It is stored in the `Model` package which manages the user preferences setting. All added aliases will be stored in json file and will be loaded every time NetworkUS boots up.\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":343,"author":{"gitId":"DystoriaX"},"content":"The alias command will take in the alias and the command to be aliased. The aliased command must be a valid command. The alias must not be the existing command.\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":344,"author":{"gitId":"DystoriaX"},"content":"When the `AliasCommand` executed, it simply adds a new entry to the `AliasTable` via `Model` interface. It displays the result of the command\u0027s execution.","lastModifiedDate":"2021-10-27"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":346,"author":{"gitId":"DystoriaX"},"content":"Each time the users key in the command for NetworkUS to execute, `ContactBookParser` will attempt to replace the alias that is found in the user\u0027s command with the corresponding aliased command by calling `ContactBookParser#replaceAlias(String)`. It will only replace the matching **prefix word(s)**. A word is defined as a substring whose character that comes after (if any) and before (if any) the word is a space. Example: `tag -A` matches the prefix word of the string `tag -A OS`, but it doesn\u0027t match the prefix word of the string `tag -AD OS`, even though `tag -A` matches the prefix of the words `tag -AD`. Replacement is done once, and it replaces the longest matching alias.","lastModifiedDate":"2021-11-07"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":348,"author":{"gitId":"DystoriaX"},"content":"The following are sequence diagram of how NetworkUS will create `tag -A` as an alias for the command `tagall`. In this diagram, we assume that the user has not created any aliases yet.","lastModifiedDate":"2021-11-07"},{"lineNumber":349,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":350,"author":{"gitId":"DystoriaX"},"content":"![Sequence Diagram for Alias Command](images/AliasSequenceDiagram.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":351,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":352,"author":{"gitId":"DystoriaX"},"content":"The following are sequence diagram of how NetworkUS will replace user\u0027s command with their existing aliases. We assume that the user has created the alias `tag -A` for the command `tagall`.","lastModifiedDate":"2021-11-07"},{"lineNumber":353,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":354,"author":{"gitId":"DystoriaX"},"content":"![Sequence Diagram for Working Flow of Replacing User\u0027s Command\u0027s Alias](images/ReplaceAliasSequenceDiagram.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":355,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":356,"author":{"gitId":"DystoriaX"},"content":"The following are summarized activity diagram of replacing the user\u0027s command.","lastModifiedDate":"2021-11-07"},{"lineNumber":357,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":358,"author":{"gitId":"DystoriaX"},"content":"![Activity Diagram for Working Flow of Replacing User\u0027s Command\u0027s Alias](images/ReplaceAliasActivityDiagram.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":359,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":360,"author":{"gitId":"DystoriaX"},"content":"#### Design consideration","lastModifiedDate":"2021-10-27"},{"lineNumber":361,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":362,"author":{"gitId":"DystoriaX"},"content":"How aliases should be managed:","lastModifiedDate":"2021-10-27"},{"lineNumber":363,"author":{"gitId":"DystoriaX"},"content":"* Alternative 1 (Current choice): We put constraint on the alias to not take existing command","lastModifiedDate":"2021-10-27"},{"lineNumber":364,"author":{"gitId":"DystoriaX"},"content":"    * Pros: It is safer for user to use alias","lastModifiedDate":"2021-10-27"},{"lineNumber":365,"author":{"gitId":"DystoriaX"},"content":"    * Cons: Constraint is not rigorous enough to cover all other cases that can mess up with the app","lastModifiedDate":"2021-10-27"},{"lineNumber":366,"author":{"gitId":"DystoriaX"},"content":"* Alternative 2: We don\u0027t put any constraint on the alias command","lastModifiedDate":"2021-10-27"},{"lineNumber":367,"author":{"gitId":"DystoriaX"},"content":"    * Pros: Easier to implement","lastModifiedDate":"2021-10-27"},{"lineNumber":368,"author":{"gitId":"DystoriaX"},"content":"    * Cons: More dangerous to use the alias command","lastModifiedDate":"2021-10-27"},{"lineNumber":369,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":370,"author":{"gitId":"jeromewjj"},"content":"### Show Feature","lastModifiedDate":"2021-11-06"},{"lineNumber":371,"author":{"gitId":"CommanderW324"},"content":"Shows a contact with the specified Index in a new window. It gets the index from the `modelManager` class that contains the `ReadOnlyAddressBook` and gets the contact with the specified index.","lastModifiedDate":"2021-10-29"},{"lineNumber":372,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":373,"author":{"gitId":"CommanderW324"},"content":"#### Design consideration","lastModifiedDate":"2021-10-29"},{"lineNumber":374,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":375,"author":{"gitId":"CommanderW324"},"content":"How the specified contact should be shown:","lastModifiedDate":"2021-10-29"},{"lineNumber":376,"author":{"gitId":"CommanderW324"},"content":"* Alternative 1 (Current choice): Shows the specified user in a new window","lastModifiedDate":"2021-10-29"},{"lineNumber":377,"author":{"gitId":"CommanderW324"},"content":"    * Pros: Much more customizable in the future, Does not clutter the main list view","lastModifiedDate":"2021-10-29"},{"lineNumber":378,"author":{"gitId":"CommanderW324"},"content":"    * Cons: User might be overwhelmed by the number of windows","lastModifiedDate":"2021-10-29"},{"lineNumber":379,"author":{"gitId":"CommanderW324"},"content":"* Alternative 2: Overwrite the current view to show the specified person","lastModifiedDate":"2021-10-29"},{"lineNumber":380,"author":{"gitId":"CommanderW324"},"content":"    * Pros: Not many windows are opened","lastModifiedDate":"2021-10-29"},{"lineNumber":381,"author":{"gitId":"CommanderW324"},"content":"    * Cons: Hard to see current list of contacts and executes the command (User needs to go back to the previous view)","lastModifiedDate":"2021-10-29"},{"lineNumber":382,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":383,"author":{"gitId":"jeromewjj"},"content":"### ShowAlias Feature","lastModifiedDate":"2021-11-06"},{"lineNumber":384,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":385,"author":{"gitId":"CommanderW324"},"content":"Shows the mapping of aliases in a window similar to help.","lastModifiedDate":"2021-10-29"},{"lineNumber":386,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":387,"author":{"gitId":"CommanderW324"},"content":"#### Implementation","lastModifiedDate":"2021-11-08"},{"lineNumber":388,"author":{"gitId":"CommanderW324"},"content":"The feature is facilitated through `CommandResult` which contains a boolean to show whether the command requests to show the alias window. ","lastModifiedDate":"2021-11-08"},{"lineNumber":389,"author":{"gitId":"CommanderW324"},"content":"If the user executes a show alias command, it will utilize the `handleShowAlias` to show the window. Currently, the window is refreshed everytime a Command is being called to update the table values. This allows for user to add an Alias and view them directly on the table. The F2 Key can also be used to access this Feature, though it is not considered a Command but a UI Component.","lastModifiedDate":"2021-11-08"},{"lineNumber":390,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":391,"author":{"gitId":"CommanderW324"},"content":"The Following is a Sequence Diagram encompassing the usage of `showalias` Command.","lastModifiedDate":"2021-11-08"},{"lineNumber":392,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":393,"author":{"gitId":"CommanderW324"},"content":"![Sequence Diagram for ShowAlias Command](images/ShowAliasSequenceDiagram.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":394,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":395,"author":{"gitId":"CommanderW324"},"content":"The Following is a summary of activity diagram of a user utilizing the Show Alias Feature.","lastModifiedDate":"2021-11-08"},{"lineNumber":396,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":397,"author":{"gitId":"CommanderW324"},"content":"![Activity Diagram for Alias Command](images/ShowAliasActivityDiagram.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":398,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":399,"author":{"gitId":"jeromewjj"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":400,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":401,"author":{"gitId":"CommanderW324"},"content":"#### Design consideration","lastModifiedDate":"2021-10-29"},{"lineNumber":402,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":403,"author":{"gitId":"CommanderW324"},"content":"How the GUI gets the data:","lastModifiedDate":"2021-10-29"},{"lineNumber":404,"author":{"gitId":"CommanderW324"},"content":"* Alternative 1 (Current choice): Refreshes everytime the user calls the function","lastModifiedDate":"2021-10-29"},{"lineNumber":405,"author":{"gitId":"CommanderW324"},"content":"    * Pros: Easier to implement, Does not require a specialized ObservableMap Serializer for the JSON.","lastModifiedDate":"2021-10-29"},{"lineNumber":406,"author":{"gitId":"CommanderW324"},"content":"    * Cons: Might be a bit slow, but there can\u0027t be too many mappings.","lastModifiedDate":"2021-10-29"},{"lineNumber":407,"author":{"gitId":"CommanderW324"},"content":"* Alternative 2: Use an ObservableMap","lastModifiedDate":"2021-10-29"},{"lineNumber":408,"author":{"gitId":"CommanderW324"},"content":"    * Pros: The map is only accessed once, remaining changes are automatically updated","lastModifiedDate":"2021-10-29"},{"lineNumber":409,"author":{"gitId":"CommanderW324"},"content":"    * Cons: Hard to implement","lastModifiedDate":"2021-10-29"},{"lineNumber":410,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":411,"author":{"gitId":"CommanderW324"},"content":"### DeleteAlias Feature","lastModifiedDate":"2021-11-08"},{"lineNumber":412,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":413,"author":{"gitId":"CommanderW324"},"content":"#### Implementation","lastModifiedDate":"2021-11-08"},{"lineNumber":414,"author":{"gitId":"CommanderW324"},"content":"This feature is facilitated by the `AliasTable` class similar to the Alias Feature. ","lastModifiedDate":"2021-11-08"},{"lineNumber":415,"author":{"gitId":"CommanderW324"},"content":"The `AliasTable` is stored in the `Model` component and it will utilize the `deleteAlias` method. After the parsing of the alias by the `DeleteAliasCommandParser`, `DeleteAlias` will then be executed and it will check whether the alias specified exists in the `AliasTable`, which will throw a `CommandException` when it does not find it. Otherwise, it will remove the specified alias from the `AliasTable`. This change will only be saved into `preferences.json` upon exit of the program.","lastModifiedDate":"2021-11-08"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":417,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":422,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":423,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":424,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":425,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"e0543403"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":430,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":431,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"samyipsh"},"content":"* NUS CS Undergraduates","lastModifiedDate":"2021-09-26"},{"lineNumber":437,"author":{"gitId":"samyipsh"},"content":"* wants to maintain connections for purpose of networking","lastModifiedDate":"2021-09-26"},{"lineNumber":438,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"samyipsh"},"content":"* prefer lightweight app (concise targeted features over excessive features)","lastModifiedDate":"2021-09-26"},{"lineNumber":441,"author":{"gitId":"samyipsh"},"content":"* prefer local apps to cloud-based online apps","lastModifiedDate":"2021-09-26"},{"lineNumber":442,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":444,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"jeromewjj"},"content":"* has a need to store CS specific fields for contacts like Github","lastModifiedDate":"2021-11-07"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":448,"author":{"gitId":"samyipsh"},"content":"**Value proposition**: manage potential network opportunities for a NUS CS student","lastModifiedDate":"2021-09-26"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":456,"author":{"gitId":"samyipsh"},"content":"| Priority | As a …                                 | I want to …​                                      | So that I can…​                                                     |","lastModifiedDate":"2021-10-21"},{"lineNumber":457,"author":{"gitId":"e0543403"},"content":"| -------- | ------------------------------------------ | ---------------------------------------------------- | ---------------------------------------------------------------------- |","lastModifiedDate":"2021-09-26"},{"lineNumber":458,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                   | see usage instructions                               | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"e0543403"},"content":"| `* * *`  | user                                       | add new contacts                                     |                                                                        |","lastModifiedDate":"2021-09-26"},{"lineNumber":460,"author":{"gitId":"e0543403"},"content":"| `* * *`  | user                                       | delete my existing contacts                          | remove contacts that I no longer need                                  |","lastModifiedDate":"2021-09-26"},{"lineNumber":461,"author":{"gitId":"samyipsh"},"content":"| `* * *`  | user                                       | find a person by name                                | locate contacts without having to go through the entire list           |","lastModifiedDate":"2021-10-21"},{"lineNumber":462,"author":{"gitId":"samyipsh"},"content":"| `* * *`  | user                                       | find people by a tag / group name                    | locate contacts by the category indicated by the tag without having to go through the entire list |","lastModifiedDate":"2021-10-21"},{"lineNumber":463,"author":{"gitId":"e0543403"},"content":"| `* * *`  | user                                       | see all the contacts I have                          |                                                                        |","lastModifiedDate":"2021-09-26"},{"lineNumber":464,"author":{"gitId":"DystoriaX"},"content":"| `* * *`  | experienced user                           | creates custom alias for specific commands           | work efficiently                                                       |","lastModifiedDate":"2021-10-27"},{"lineNumber":465,"author":{"gitId":"jeromewjj"},"content":"| `* *`    | experienced user                           | see all the custom alias I have created              | work efficiently                                                       |","lastModifiedDate":"2021-11-07"},{"lineNumber":466,"author":{"gitId":"jeromewjj"},"content":"| `* *`    | experienced user                           | delete alias that I no longer used                   | avoid mistyping command                                                |","lastModifiedDate":"2021-11-07"},{"lineNumber":467,"author":{"gitId":"e0543403"},"content":"| `* *`    | longstanding user                          | update details of previously added contacts          | keep them up-to-date                                                   |","lastModifiedDate":"2021-09-26"},{"lineNumber":468,"author":{"gitId":"samyipsh"},"content":"| `* *`    | user                                       | add their LinkedIn username                          | professionally network with them through their LinkedIn                |","lastModifiedDate":"2021-10-21"},{"lineNumber":469,"author":{"gitId":"samyipsh"},"content":"| `* *`    | user                                       | add their GitHub username                            | view their github projects and see which areas they are experienced in |","lastModifiedDate":"2021-10-21"},{"lineNumber":470,"author":{"gitId":"jeromewjj"},"content":"| `* *`    | user                                       | rename the tag                                       | keep the tag up-to-date                                                |","lastModifiedDate":"2021-11-07"},{"lineNumber":471,"author":{"gitId":"jeromewjj"},"content":"| `* *`    | user with a long contacts                  | tag a group of people                                | work efficiently                                                       |","lastModifiedDate":"2021-11-07"},{"lineNumber":472,"author":{"gitId":"jeromewjj"},"content":"| `* *`    | user with a long contacts                  | remove a tag from a group of people                  | work efficiently                                                       |","lastModifiedDate":"2021-11-07"},{"lineNumber":473,"author":{"gitId":"e0543403"},"content":"| `* *`    | new user                                   | see some mock contacts                               | test the commands                                                      |","lastModifiedDate":"2021-09-26"},{"lineNumber":474,"author":{"gitId":"e0543403"},"content":"| `* *`    | new user                                   | be able to clear all mock contacts                   | start creating a fresh contact list                                    |","lastModifiedDate":"2021-09-26"},{"lineNumber":475,"author":{"gitId":"e0543403"},"content":"| `* *`    | user                                       | categorize my contacts based on their specialization | find people with a particular area of expertise                        |","lastModifiedDate":"2021-09-26"},{"lineNumber":476,"author":{"gitId":"e0543403"},"content":"| `* *`    | user                                       | find a person by specialization                      | find a person of a particular area of expertise                        |","lastModifiedDate":"2021-09-26"},{"lineNumber":477,"author":{"gitId":"e0543403"},"content":"| `*`      | user                                       | see the number of friends I have                     | gain a sense of confidence                                             |","lastModifiedDate":"2021-09-26"},{"lineNumber":478,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":484,"author":{"gitId":"jeromewjj"},"content":"(For all use cases below, the **System** is the `NetworkUS` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-09-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"jeromewjj"},"content":"**Use case: UC01 Add a person**","lastModifiedDate":"2021-09-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-09-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":490,"author":{"gitId":"jeromewjj"},"content":"1.  User requests to add persons","lastModifiedDate":"2021-09-23"},{"lineNumber":491,"author":{"gitId":"jeromewjj"},"content":"2.  NetworkUS adds the person","lastModifiedDate":"2021-09-23"},{"lineNumber":492,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":493,"author":{"gitId":"jeromewjj"},"content":"    Use case ends.","lastModifiedDate":"2021-09-23"},{"lineNumber":494,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":495,"author":{"gitId":"jeromewjj"},"content":"**Extensions**","lastModifiedDate":"2021-09-23"},{"lineNumber":496,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":497,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":498,"author":{"gitId":"jeromewjj"},"content":"* 1a. The given name and details are duplicated.","lastModifiedDate":"2021-09-23"},{"lineNumber":499,"author":{"gitId":"jeromewjj"},"content":"    * 1a1. NetworkUS shows an error message.","lastModifiedDate":"2021-09-23"},{"lineNumber":500,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":501,"author":{"gitId":"jeromewjj"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-23"},{"lineNumber":502,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":503,"author":{"gitId":"jeromewjj"},"content":"**Use case: UC02 Delete a person**","lastModifiedDate":"2021-09-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"samyipsh"},"content":"1.  User requests to display list of persons","lastModifiedDate":"2021-10-21"},{"lineNumber":508,"author":{"gitId":"jeromewjj"},"content":"2.  NetworkUS shows a list of persons","lastModifiedDate":"2021-09-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"jeromewjj"},"content":"4.  NetworkUS deletes the person","lastModifiedDate":"2021-09-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"jeromewjj"},"content":"    * 3a1. NetworkUS shows an error message.","lastModifiedDate":"2021-09-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"samyipsh"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2021-10-21"},{"lineNumber":518,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":519,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":520,"author":{"gitId":"jeromewjj"},"content":"**Use case: UC03 Find a person**","lastModifiedDate":"2021-09-23"},{"lineNumber":521,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":522,"author":{"gitId":"jeromewjj"},"content":"**MSS**","lastModifiedDate":"2021-09-23"},{"lineNumber":523,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":524,"author":{"gitId":"jeromewjj"},"content":"1.  User requests to search a person","lastModifiedDate":"2021-09-23"},{"lineNumber":525,"author":{"gitId":"jeromewjj"},"content":"2.  NetworkUS shows a list of persons that match the search","lastModifiedDate":"2021-09-23"},{"lineNumber":526,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":527,"author":{"gitId":"jeromewjj"},"content":"    Use case ends.","lastModifiedDate":"2021-09-23"},{"lineNumber":528,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":529,"author":{"gitId":"jeromewjj"},"content":"**Extensions**","lastModifiedDate":"2021-09-23"},{"lineNumber":530,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":531,"author":{"gitId":"jeromewjj"},"content":"* 2a. There is no match and the list is empty.","lastModifiedDate":"2021-09-23"},{"lineNumber":532,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":533,"author":{"gitId":"jeromewjj"},"content":"  Use case ends.","lastModifiedDate":"2021-09-23"},{"lineNumber":534,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":535,"author":{"gitId":"jeromewjj"},"content":"**Use case: UC04 Edit a person\u0027s information**","lastModifiedDate":"2021-09-23"},{"lineNumber":536,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":537,"author":{"gitId":"jeromewjj"},"content":"**MSS**","lastModifiedDate":"2021-09-23"},{"lineNumber":538,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":539,"author":{"gitId":"jeromewjj"},"content":"1.  User requests to list persons","lastModifiedDate":"2021-09-23"},{"lineNumber":540,"author":{"gitId":"jeromewjj"},"content":"2.  NetworkUS shows a list of persons","lastModifiedDate":"2021-09-23"},{"lineNumber":541,"author":{"gitId":"jeromewjj"},"content":"3.  User requests to edit a specific person\u0027s information in the list","lastModifiedDate":"2021-09-23"},{"lineNumber":542,"author":{"gitId":"jeromewjj"},"content":"4.  NetworkUS edit the person\u0027s information","lastModifiedDate":"2021-09-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2021-09-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2021-09-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-09-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2021-09-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-09-23"},{"lineNumber":553,"author":{"gitId":"jeromewjj"},"content":"    * 3a1. NetworkUS shows an error message.","lastModifiedDate":"2021-09-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":555,"author":{"gitId":"jeromewjj"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-23"},{"lineNumber":556,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":557,"author":{"gitId":"e0543403"},"content":"* 3b. The given name and details are duplicated.","lastModifiedDate":"2021-11-06"},{"lineNumber":558,"author":{"gitId":"e0543403"},"content":"    * 3b1. NetworkUS shows an error message.","lastModifiedDate":"2021-11-06"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":560,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-11-06"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":562,"author":{"gitId":"jeromewjj"},"content":"**Use case: UC05 View list of contact**","lastModifiedDate":"2021-09-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":564,"author":{"gitId":"jeromewjj"},"content":"**MSS**","lastModifiedDate":"2021-09-23"},{"lineNumber":565,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":566,"author":{"gitId":"samyipsh"},"content":"1.  User requests to view the list of contacts","lastModifiedDate":"2021-10-21"},{"lineNumber":567,"author":{"gitId":"samyipsh"},"content":"2.  NetworkUS shows the list of persons","lastModifiedDate":"2021-10-21"},{"lineNumber":568,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":569,"author":{"gitId":"samyipsh"},"content":"    Use case ends.","lastModifiedDate":"2021-10-21"},{"lineNumber":570,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":571,"author":{"gitId":"samyipsh"},"content":"**Extensions**","lastModifiedDate":"2021-10-21"},{"lineNumber":572,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":573,"author":{"gitId":"samyipsh"},"content":"* 2a. User has no stored contacts","lastModifiedDate":"2021-10-21"},{"lineNumber":574,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":575,"author":{"gitId":"jeromewjj"},"content":"    Use case ends.","lastModifiedDate":"2021-09-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"e0543403"},"content":"**Use case: UC06 Display help window**","lastModifiedDate":"2021-11-06"},{"lineNumber":578,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":579,"author":{"gitId":"CommanderW324"},"content":"**MSS**","lastModifiedDate":"2021-09-27"},{"lineNumber":580,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":581,"author":{"gitId":"CommanderW324"},"content":"1.  User requests to show help","lastModifiedDate":"2021-09-27"},{"lineNumber":582,"author":{"gitId":"samyipsh"},"content":"2.  NetworkUs directs user to user guide","lastModifiedDate":"2021-10-21"},{"lineNumber":583,"author":{"gitId":"samyipsh"},"content":"3.  User follows directions and views user guide","lastModifiedDate":"2021-10-21"},{"lineNumber":584,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":585,"author":{"gitId":"samyipsh"},"content":"    Use case ends.","lastModifiedDate":"2021-10-21"},{"lineNumber":586,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":587,"author":{"gitId":"samyipsh"},"content":"**Extensions**","lastModifiedDate":"2021-10-21"},{"lineNumber":588,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":589,"author":{"gitId":"samyipsh"},"content":"* 2a. User decides not to view user guide","lastModifiedDate":"2021-10-21"},{"lineNumber":590,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":591,"author":{"gitId":"CommanderW324"},"content":"    Use case ends.","lastModifiedDate":"2021-09-27"},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"e0543403"},"content":"**Use case: UC07 Clear all contacts**","lastModifiedDate":"2021-11-06"},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"CommanderW324"},"content":"1.  User requests to clear contacts list","lastModifiedDate":"2021-09-27"},{"lineNumber":598,"author":{"gitId":"e0543403"},"content":"2.  NetworkUS deletes all the user\u0027s contacts","lastModifiedDate":"2021-11-06"},{"lineNumber":599,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"samyipsh"},"content":"    Use case ends.","lastModifiedDate":"2021-10-21"},{"lineNumber":601,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"e0543403"},"content":"**Use case: UC08 Exit from application**","lastModifiedDate":"2021-11-06"},{"lineNumber":604,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"CommanderW324"},"content":"**MSS**","lastModifiedDate":"2021-09-27"},{"lineNumber":606,"author":{"gitId":"CommanderW324"},"content":"1. User is finished with tasks and requests to exit application","lastModifiedDate":"2021-09-27"},{"lineNumber":607,"author":{"gitId":"e0543403"},"content":"2. NetworkUS close after several seconds","lastModifiedDate":"2021-11-06"},{"lineNumber":608,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":609,"author":{"gitId":"CommanderW324"},"content":"    Use case ends.","lastModifiedDate":"2021-09-27"},{"lineNumber":610,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":611,"author":{"gitId":"jeromewjj"},"content":"**Use case: UC09 View Github/LinkedIn page of the person**","lastModifiedDate":"2021-11-07"},{"lineNumber":612,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":613,"author":{"gitId":"DystoriaX"},"content":"**MSS**","lastModifiedDate":"2021-10-21"},{"lineNumber":614,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":615,"author":{"gitId":"jeromewjj"},"content":"1.  User requests to list persons","lastModifiedDate":"2021-11-07"},{"lineNumber":616,"author":{"gitId":"jeromewjj"},"content":"2.  NetworkUS shows a list of persons","lastModifiedDate":"2021-11-07"},{"lineNumber":617,"author":{"gitId":"jeromewjj"},"content":"3.  User requests to view the Github/LinkedIn page of the person in the list","lastModifiedDate":"2021-11-07"},{"lineNumber":618,"author":{"gitId":"jeromewjj"},"content":"4.  NetworkUS show the Github/LinkedIn page of the person","lastModifiedDate":"2021-11-07"},{"lineNumber":619,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":620,"author":{"gitId":"jeromewjj"},"content":"    Use case ends.","lastModifiedDate":"2021-11-07"},{"lineNumber":621,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":622,"author":{"gitId":"jeromewjj"},"content":"**Extensions**","lastModifiedDate":"2021-11-07"},{"lineNumber":623,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":624,"author":{"gitId":"jeromewjj"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-11-07"},{"lineNumber":625,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":626,"author":{"gitId":"DystoriaX"},"content":"  Use case ends.","lastModifiedDate":"2021-10-27"},{"lineNumber":627,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":628,"author":{"gitId":"jeromewjj"},"content":"* 3a. Github/LinkedIn of the person is empty","lastModifiedDate":"2021-11-07"},{"lineNumber":629,"author":{"gitId":"jeromewjj"},"content":"    * 3a1. NetworkUS does not redirect the user to the web browser","lastModifiedDate":"2021-11-07"},{"lineNumber":630,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":631,"author":{"gitId":"jeromewjj"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-11-07"},{"lineNumber":632,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":633,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":634,"author":{"gitId":"jeromewjj"},"content":"**Use Case: UC10 Show all tags used**","lastModifiedDate":"2021-11-07"},{"lineNumber":635,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":636,"author":{"gitId":"jeromewjj"},"content":"**MSS**","lastModifiedDate":"2021-11-07"},{"lineNumber":637,"author":{"gitId":"jeromewjj"},"content":"1. User request to show all tags in NetworkUS","lastModifiedDate":"2021-11-07"},{"lineNumber":638,"author":{"gitId":"jeromewjj"},"content":"2. NetworkUS returns unique tags to the user","lastModifiedDate":"2021-11-07"},{"lineNumber":639,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":640,"author":{"gitId":"jeromewjj"},"content":"    Use case ends.","lastModifiedDate":"2021-11-07"},{"lineNumber":641,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":642,"author":{"gitId":"e0543403"},"content":"**Use case: UC11 Tag persons**","lastModifiedDate":"2021-11-06"},{"lineNumber":643,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":644,"author":{"gitId":"e0543403"},"content":"**MSS**","lastModifiedDate":"2021-11-06"},{"lineNumber":645,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":646,"author":{"gitId":"e0543403"},"content":"1.  User requests to list persons","lastModifiedDate":"2021-11-06"},{"lineNumber":647,"author":{"gitId":"e0543403"},"content":"2.  NetworkUS shows a list of persons","lastModifiedDate":"2021-11-06"},{"lineNumber":648,"author":{"gitId":"e0543403"},"content":"3.  User requests to tag specific persons in the list with a specific tag","lastModifiedDate":"2021-11-06"},{"lineNumber":649,"author":{"gitId":"e0543403"},"content":"4.  NetworkUS tags the specified persons with the specified tag","lastModifiedDate":"2021-11-06"},{"lineNumber":650,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":651,"author":{"gitId":"e0543403"},"content":"    Use case ends.","lastModifiedDate":"2021-11-06"},{"lineNumber":652,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":653,"author":{"gitId":"e0543403"},"content":"**Extensions**","lastModifiedDate":"2021-11-06"},{"lineNumber":654,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":655,"author":{"gitId":"e0543403"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-11-06"},{"lineNumber":656,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":657,"author":{"gitId":"e0543403"},"content":"  Use case ends.","lastModifiedDate":"2021-11-06"},{"lineNumber":658,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":659,"author":{"gitId":"e0543403"},"content":"* 3a. A given index or the tag is invalid.","lastModifiedDate":"2021-11-06"},{"lineNumber":660,"author":{"gitId":"e0543403"},"content":"    * 3a1. NetworkUS shows an error message.","lastModifiedDate":"2021-11-06"},{"lineNumber":661,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":662,"author":{"gitId":"e0543403"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-11-06"},{"lineNumber":663,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":664,"author":{"gitId":"e0543403"},"content":"**Use case: UC12 Tag all displayed persons**","lastModifiedDate":"2021-11-06"},{"lineNumber":665,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":666,"author":{"gitId":"e0543403"},"content":"**MSS**","lastModifiedDate":"2021-11-06"},{"lineNumber":667,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":668,"author":{"gitId":"e0543403"},"content":"1.  User requests to list persons","lastModifiedDate":"2021-11-06"},{"lineNumber":669,"author":{"gitId":"e0543403"},"content":"2.  NetworkUS shows a list of persons","lastModifiedDate":"2021-11-06"},{"lineNumber":670,"author":{"gitId":"e0543403"},"content":"3.  User requests to tag all persons in the list with a specified tag","lastModifiedDate":"2021-11-06"},{"lineNumber":671,"author":{"gitId":"e0543403"},"content":"4.  NetworkUS tags all persons in the list with the specified tag","lastModifiedDate":"2021-11-06"},{"lineNumber":672,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":673,"author":{"gitId":"e0543403"},"content":"    Use case ends.","lastModifiedDate":"2021-11-06"},{"lineNumber":674,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":675,"author":{"gitId":"e0543403"},"content":"**Extensions**","lastModifiedDate":"2021-11-06"},{"lineNumber":676,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":677,"author":{"gitId":"e0543403"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-11-06"},{"lineNumber":678,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":679,"author":{"gitId":"e0543403"},"content":"  Use case ends.","lastModifiedDate":"2021-11-06"},{"lineNumber":680,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":681,"author":{"gitId":"e0543403"},"content":"* 3a. The given tag is invalid.","lastModifiedDate":"2021-11-06"},{"lineNumber":682,"author":{"gitId":"e0543403"},"content":"    * 3a1. NetworkUS shows an error message.","lastModifiedDate":"2021-11-06"},{"lineNumber":683,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":684,"author":{"gitId":"e0543403"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-11-06"},{"lineNumber":685,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":686,"author":{"gitId":"jeromewjj"},"content":"**Use case: UC13 Untag persons**","lastModifiedDate":"2021-11-07"},{"lineNumber":687,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":688,"author":{"gitId":"jeromewjj"},"content":"**MSS**","lastModifiedDate":"2021-11-07"},{"lineNumber":689,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":690,"author":{"gitId":"jeromewjj"},"content":"1.  User requests to list persons","lastModifiedDate":"2021-11-07"},{"lineNumber":691,"author":{"gitId":"jeromewjj"},"content":"2.  NetworkUS shows a list of persons","lastModifiedDate":"2021-11-07"},{"lineNumber":692,"author":{"gitId":"jeromewjj"},"content":"3.  User requests to untag a specific tag from the specific persons in the list","lastModifiedDate":"2021-11-07"},{"lineNumber":693,"author":{"gitId":"jeromewjj"},"content":"4.  NetworkUS untags a specific tag from the specific persons in the list","lastModifiedDate":"2021-11-07"},{"lineNumber":694,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":695,"author":{"gitId":"jeromewjj"},"content":"    Use case ends.","lastModifiedDate":"2021-11-07"},{"lineNumber":696,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":697,"author":{"gitId":"jeromewjj"},"content":"**Extensions**","lastModifiedDate":"2021-11-07"},{"lineNumber":698,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":699,"author":{"gitId":"jeromewjj"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-11-07"},{"lineNumber":700,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":701,"author":{"gitId":"jeromewjj"},"content":"  Use case ends.","lastModifiedDate":"2021-11-07"},{"lineNumber":702,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":703,"author":{"gitId":"jeromewjj"},"content":"* 3a. A given index or the tag is invalid.","lastModifiedDate":"2021-11-07"},{"lineNumber":704,"author":{"gitId":"jeromewjj"},"content":"    * 3a1. NetworkUS shows an error message.","lastModifiedDate":"2021-11-07"},{"lineNumber":705,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":706,"author":{"gitId":"jeromewjj"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-11-07"},{"lineNumber":707,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":708,"author":{"gitId":"jeromewjj"},"content":"**Use case: UC14 Untag all displayed persons**","lastModifiedDate":"2021-11-07"},{"lineNumber":709,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":710,"author":{"gitId":"jeromewjj"},"content":"**MSS**","lastModifiedDate":"2021-11-07"},{"lineNumber":711,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":712,"author":{"gitId":"jeromewjj"},"content":"1.  User requests to list persons","lastModifiedDate":"2021-11-07"},{"lineNumber":713,"author":{"gitId":"jeromewjj"},"content":"2.  NetworkUS shows a list of persons","lastModifiedDate":"2021-11-07"},{"lineNumber":714,"author":{"gitId":"jeromewjj"},"content":"3.  User requests to untag a specified tag from all persons in the list","lastModifiedDate":"2021-11-07"},{"lineNumber":715,"author":{"gitId":"jeromewjj"},"content":"4.  NetworkUS untags a specified tag from all persons in the list","lastModifiedDate":"2021-11-07"},{"lineNumber":716,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":717,"author":{"gitId":"jeromewjj"},"content":"    Use case ends.","lastModifiedDate":"2021-11-07"},{"lineNumber":718,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":719,"author":{"gitId":"jeromewjj"},"content":"**Extensions**","lastModifiedDate":"2021-11-07"},{"lineNumber":720,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":721,"author":{"gitId":"jeromewjj"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-11-07"},{"lineNumber":722,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":723,"author":{"gitId":"jeromewjj"},"content":"  Use case ends.","lastModifiedDate":"2021-11-07"},{"lineNumber":724,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":725,"author":{"gitId":"jeromewjj"},"content":"* 3a. The given tag is invalid.","lastModifiedDate":"2021-11-07"},{"lineNumber":726,"author":{"gitId":"jeromewjj"},"content":"    * 3a1. NetworkUS shows an error message.","lastModifiedDate":"2021-11-07"},{"lineNumber":727,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":728,"author":{"gitId":"jeromewjj"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-11-07"},{"lineNumber":729,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":730,"author":{"gitId":"jeromewjj"},"content":"* 3b. The given tag is not present.","lastModifiedDate":"2021-11-07"},{"lineNumber":731,"author":{"gitId":"jeromewjj"},"content":"    * 3b1. NetworkUS shows an error message.","lastModifiedDate":"2021-11-07"},{"lineNumber":732,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":733,"author":{"gitId":"jeromewjj"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-11-07"},{"lineNumber":734,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":735,"author":{"gitId":"jeromewjj"},"content":"**Use case: UC15 replace tag for all displayed persons**","lastModifiedDate":"2021-11-07"},{"lineNumber":736,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":737,"author":{"gitId":"jeromewjj"},"content":"**MSS**","lastModifiedDate":"2021-11-07"},{"lineNumber":738,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":739,"author":{"gitId":"jeromewjj"},"content":"1.  User requests to list persons","lastModifiedDate":"2021-11-07"},{"lineNumber":740,"author":{"gitId":"jeromewjj"},"content":"2.  NetworkUS shows a list of persons","lastModifiedDate":"2021-11-07"},{"lineNumber":741,"author":{"gitId":"jeromewjj"},"content":"3.  User requests to replace a specified tag from all persons in the list with a new tag","lastModifiedDate":"2021-11-07"},{"lineNumber":742,"author":{"gitId":"jeromewjj"},"content":"4.  NetworkUS replaces a specified tag from all persons in the list with a new tag","lastModifiedDate":"2021-11-07"},{"lineNumber":743,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":744,"author":{"gitId":"jeromewjj"},"content":"    Use case ends.","lastModifiedDate":"2021-11-07"},{"lineNumber":745,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":746,"author":{"gitId":"jeromewjj"},"content":"**Extensions**","lastModifiedDate":"2021-11-07"},{"lineNumber":747,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":748,"author":{"gitId":"jeromewjj"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-11-07"},{"lineNumber":749,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":750,"author":{"gitId":"jeromewjj"},"content":"  Use case ends.","lastModifiedDate":"2021-11-07"},{"lineNumber":751,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":752,"author":{"gitId":"jeromewjj"},"content":"* 3a. The specified tag to be replaced or new tag is invalid.","lastModifiedDate":"2021-11-07"},{"lineNumber":753,"author":{"gitId":"jeromewjj"},"content":"    * 3a1. NetworkUS shows an error message.","lastModifiedDate":"2021-11-07"},{"lineNumber":754,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":755,"author":{"gitId":"jeromewjj"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-11-07"},{"lineNumber":756,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":757,"author":{"gitId":"jeromewjj"},"content":"* 3b. The specified tag to be replaced is not present.","lastModifiedDate":"2021-11-07"},{"lineNumber":758,"author":{"gitId":"jeromewjj"},"content":"    * 3b1. NetworkUS shows an error message.","lastModifiedDate":"2021-11-07"},{"lineNumber":759,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":760,"author":{"gitId":"jeromewjj"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-11-07"},{"lineNumber":761,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":762,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":763,"author":{"gitId":"jeromewjj"},"content":"**Use Case: UC16 Alias a command**","lastModifiedDate":"2021-11-07"},{"lineNumber":764,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":765,"author":{"gitId":"jeromewjj"},"content":"**MSS**","lastModifiedDate":"2021-11-07"},{"lineNumber":766,"author":{"gitId":"jeromewjj"},"content":"1. User creates alias for a certain command","lastModifiedDate":"2021-11-07"},{"lineNumber":767,"author":{"gitId":"jeromewjj"},"content":"2. NetworkUS saves and stores the alias for the certain command","lastModifiedDate":"2021-11-07"},{"lineNumber":768,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":769,"author":{"gitId":"jeromewjj"},"content":"   Use case ends.","lastModifiedDate":"2021-11-07"},{"lineNumber":770,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":771,"author":{"gitId":"jeromewjj"},"content":"* 2a. The given alias is invalid.","lastModifiedDate":"2021-11-07"},{"lineNumber":772,"author":{"gitId":"jeromewjj"},"content":"    * 2a1. NetworkUS shows an error message.","lastModifiedDate":"2021-11-07"},{"lineNumber":773,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":774,"author":{"gitId":"jeromewjj"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-11-07"},{"lineNumber":775,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":776,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":777,"author":{"gitId":"jeromewjj"},"content":"**Use case: UC17 Delete an alias**","lastModifiedDate":"2021-11-07"},{"lineNumber":778,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":779,"author":{"gitId":"jeromewjj"},"content":"**MSS**","lastModifiedDate":"2021-11-07"},{"lineNumber":780,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":781,"author":{"gitId":"jeromewjj"},"content":"1.  User requests to display list of aliases","lastModifiedDate":"2021-11-07"},{"lineNumber":782,"author":{"gitId":"jeromewjj"},"content":"2.  NetworkUS shows a list of aliases","lastModifiedDate":"2021-11-07"},{"lineNumber":783,"author":{"gitId":"jeromewjj"},"content":"3.  User requests to delete a specific alias","lastModifiedDate":"2021-11-07"},{"lineNumber":784,"author":{"gitId":"jeromewjj"},"content":"4.  NetworkUS deletes the alias","lastModifiedDate":"2021-11-07"},{"lineNumber":785,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":786,"author":{"gitId":"jeromewjj"},"content":"    Use case ends.","lastModifiedDate":"2021-11-07"},{"lineNumber":787,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":788,"author":{"gitId":"jeromewjj"},"content":"* 3a. The given alias is invalid or not present.","lastModifiedDate":"2021-11-07"},{"lineNumber":789,"author":{"gitId":"jeromewjj"},"content":"    * 3a1. NetworkUS shows an error message.","lastModifiedDate":"2021-11-07"},{"lineNumber":790,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":791,"author":{"gitId":"jeromewjj"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2021-11-07"},{"lineNumber":792,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":793,"author":{"gitId":"jeromewjj"},"content":"**Use case: UC18 View list of created aliases**","lastModifiedDate":"2021-11-07"},{"lineNumber":794,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":795,"author":{"gitId":"jeromewjj"},"content":"**MSS**","lastModifiedDate":"2021-11-07"},{"lineNumber":796,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":797,"author":{"gitId":"jeromewjj"},"content":"1.  User requests to view the list of created aliases","lastModifiedDate":"2021-11-07"},{"lineNumber":798,"author":{"gitId":"jeromewjj"},"content":"2.  NetworkUS shows the list of created aliases","lastModifiedDate":"2021-11-07"},{"lineNumber":799,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":800,"author":{"gitId":"jeromewjj"},"content":"    Use case ends.","lastModifiedDate":"2021-11-07"},{"lineNumber":801,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":802,"author":{"gitId":"jeromewjj"},"content":"**Extensions**","lastModifiedDate":"2021-11-07"},{"lineNumber":803,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":804,"author":{"gitId":"jeromewjj"},"content":"* 2a. User has no created any alias.","lastModifiedDate":"2021-11-07"},{"lineNumber":805,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":806,"author":{"gitId":"jeromewjj"},"content":"  Use case ends.","lastModifiedDate":"2021-11-07"},{"lineNumber":807,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":808,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":809,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":810,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":811,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":812,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":813,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":814,"author":{"gitId":"DystoriaX"},"content":"4. Novices should not have big problems when they first use the product.","lastModifiedDate":"2021-09-27"},{"lineNumber":815,"author":{"gitId":"DystoriaX"},"content":"5. Late users should be able to work efficiently.","lastModifiedDate":"2021-09-27"},{"lineNumber":816,"author":{"gitId":"DystoriaX"},"content":"6. UI should focus more on displaying data to user rather than provide means of interactions to user.","lastModifiedDate":"2021-09-27"},{"lineNumber":817,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":818,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":819,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":820,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":821,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":822,"author":{"gitId":"DystoriaX"},"content":"* **Late user**: User who have used the product for more than a month","lastModifiedDate":"2021-09-27"},{"lineNumber":823,"author":{"gitId":"jeromewjj"},"content":"* **Field**: A field is specific information of a person in contact list like phone number","lastModifiedDate":"2021-11-07"},{"lineNumber":824,"author":{"gitId":"jeromewjj"},"content":"* **JavaScript Object Notation (JSON)**: The file format that NetworkUS used to store the contacts","lastModifiedDate":"2021-11-07"},{"lineNumber":825,"author":{"gitId":"jeromewjj"},"content":"* **Graphical User Interface (GUI)**: A GUI is an interface that uses visual indicator to interact with the system","lastModifiedDate":"2021-11-07"},{"lineNumber":826,"author":{"gitId":"jeromewjj"},"content":"* **Command Line Interface (CLI)**: A CLI is a text-based interface that uses text input to interact with the system","lastModifiedDate":"2021-11-07"},{"lineNumber":827,"author":{"gitId":"jeromewjj"},"content":"* **Main Success Scenario (MSS)**: A MSS describes the most straightforward interaction for a given use case, which assumes that nothing goes wrong","lastModifiedDate":"2021-11-07"},{"lineNumber":828,"author":{"gitId":"jeromewjj"},"content":"* **Command**: A command is an instruction that user can use in NetworkUS to perform certain task","lastModifiedDate":"2021-11-07"},{"lineNumber":829,"author":{"gitId":"jeromewjj"},"content":"* **Prefix**: Prefixes are unique identifiers in front of parameters that is used by NetworkUS to identify which fields the value belong to","lastModifiedDate":"2021-11-07"},{"lineNumber":830,"author":{"gitId":"jeromewjj"},"content":"* **Alias**: Aliases are alternative words that user can use to represent the standard commands that NetworkUS used","lastModifiedDate":"2021-11-07"},{"lineNumber":831,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":832,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":833,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":834,"author":{"gitId":"e0543403"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":835,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":836,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":837,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":838,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":839,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":840,"author":{"gitId":"DystoriaX"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":841,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":842,"author":{"gitId":"DystoriaX"},"content":":information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2021-10-21"},{"lineNumber":843,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":844,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":845,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":846,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":847,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":848,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":849,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":850,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":851,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":852,"author":{"gitId":"jeromewjj"},"content":"   1. Double-click the jar file \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":853,"author":{"gitId":"jeromewjj"},"content":"        Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2021-11-08"},{"lineNumber":854,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":855,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":856,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":857,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":858,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":859,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":860,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":861,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":862,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":863,"author":{"gitId":"e0543403"},"content":"### Adding a person","lastModifiedDate":"2021-11-08"},{"lineNumber":864,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":865,"author":{"gitId":"DystoriaX"},"content":"1. Adding a person when first launching NetworkUS.","lastModifiedDate":"2021-11-08"},{"lineNumber":866,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":867,"author":{"gitId":"DystoriaX"},"content":"   1. Prerequisites: List all persons using the `list` command.","lastModifiedDate":"2021-11-08"},{"lineNumber":868,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":869,"author":{"gitId":"DystoriaX"},"content":"   1. Test case: `add n/Nicole g/nicolio`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":870,"author":{"gitId":"DystoriaX"},"content":"      Expected: Added a new contact with the name Nicole and github username nicolio.","lastModifiedDate":"2021-11-08"},{"lineNumber":871,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":872,"author":{"gitId":"DystoriaX"},"content":"   1. Test case: `add n/Alex Yeoh g/alexio`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":873,"author":{"gitId":"DystoriaX"},"content":"      Expected: The person will not be added, as there is duplication with existing Alex Yeoh in the contact book. It has the same github field.","lastModifiedDate":"2021-11-08"},{"lineNumber":874,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":875,"author":{"gitId":"e0543403"},"content":"### Editing a person","lastModifiedDate":"2021-11-08"},{"lineNumber":876,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":877,"author":{"gitId":"DystoriaX"},"content":"1. Editing a person when first launching NetworkUS.","lastModifiedDate":"2021-11-08"},{"lineNumber":878,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":879,"author":{"gitId":"DystoriaX"},"content":"    1. Prerequisites: List all persons using the `list` command.","lastModifiedDate":"2021-11-08"},{"lineNumber":880,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":881,"author":{"gitId":"DystoriaX"},"content":"    1. Test case: `edit 1 n/Alexia Yeoh t/`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":882,"author":{"gitId":"DystoriaX"},"content":"       Expected: First contact\u0027s name will be changed to Alexia. The existing tag `friend` will also be cleared.","lastModifiedDate":"2021-11-08"},{"lineNumber":883,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":884,"author":{"gitId":"DystoriaX"},"content":"    1. Test case: `edit 1 n/Bernice Yu g/bernio`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":885,"author":{"gitId":"DystoriaX"},"content":"       Expected: The first contact will not be edited, as the resulting person will be duplicate of the person Bernice Yu, as they have the same github field.","lastModifiedDate":"2021-11-08"},{"lineNumber":886,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":887,"author":{"gitId":"e0543403"},"content":"### Finding a person","lastModifiedDate":"2021-11-08"},{"lineNumber":888,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":889,"author":{"gitId":"e0543403"},"content":"1. Finding a person referencing their tags.","lastModifiedDate":"2021-11-08"},{"lineNumber":890,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":891,"author":{"gitId":"e0543403"},"content":"    1. Prerequisites: There is at least one person in the list.","lastModifiedDate":"2021-11-08"},{"lineNumber":892,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":893,"author":{"gitId":"e0543403"},"content":"    1. Test case: `find friends`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":894,"author":{"gitId":"e0543403"},"content":"       Expected: Persons tagged with friends are listed. Detail of how many persons with the tag are shown in the status message.","lastModifiedDate":"2021-11-08"},{"lineNumber":895,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":896,"author":{"gitId":"e0543403"},"content":"    1. Test case: `find #`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":897,"author":{"gitId":"e0543403"},"content":"       Expected: No person is listed as tags cannot have special characters. Details of how 0 persons are shown in the status message.","lastModifiedDate":"2021-11-08"},{"lineNumber":898,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":899,"author":{"gitId":"e0543403"},"content":"    1. Test case: `find`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":900,"author":{"gitId":"e0543403"},"content":"       Expected: List is not changed. Error details shown in the status message about `find` command format.","lastModifiedDate":"2021-11-08"},{"lineNumber":901,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":902,"author":{"gitId":"e0543403"},"content":"### Opening a field of a person","lastModifiedDate":"2021-11-08"},{"lineNumber":903,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":904,"author":{"gitId":"jeromewjj"},"content":"1. View person\u0027s Linkedin/Github page","lastModifiedDate":"2021-11-08"},{"lineNumber":905,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":906,"author":{"gitId":"e0543403"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2021-11-08"},{"lineNumber":907,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":908,"author":{"gitId":"jeromewjj"},"content":"    1. Test case: `open 1 linkedin`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":909,"author":{"gitId":"jeromewjj"},"content":"       Expected: LinkedIn page of the first contact in the list is opened.","lastModifiedDate":"2021-11-08"},{"lineNumber":910,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":911,"author":{"gitId":"jeromewjj"},"content":"    1. Test case: `open 2 github`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":912,"author":{"gitId":"jeromewjj"},"content":"       Expected: Github page of the second contact in the list is opened.","lastModifiedDate":"2021-11-08"},{"lineNumber":913,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":914,"author":{"gitId":"jeromewjj"},"content":"    1. Test case: `open 0 linkedin`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":915,"author":{"gitId":"jeromewjj"},"content":"       Expected: No LinkedIn page is opened. Error details shown in the status message about what is considered a valid index.","lastModifiedDate":"2021-11-08"},{"lineNumber":916,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":917,"author":{"gitId":"jeromewjj"},"content":"   1. Test case: `open 1 facebook`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":918,"author":{"gitId":"jeromewjj"},"content":"      Expected: No page is opened. Error details shown in the status message about what field is supported.","lastModifiedDate":"2021-11-08"},{"lineNumber":919,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":920,"author":{"gitId":"e0543403"},"content":"### Showing a person","lastModifiedDate":"2021-11-08"},{"lineNumber":921,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":922,"author":{"gitId":"CommanderW324"},"content":"1. Shows the specified index","lastModifiedDate":"2021-11-08"},{"lineNumber":923,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":924,"author":{"gitId":"CommanderW324"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list (at least 2).","lastModifiedDate":"2021-11-08"},{"lineNumber":925,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":926,"author":{"gitId":"CommanderW324"},"content":"    1. Test case: `show 1`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":927,"author":{"gitId":"CommanderW324"},"content":"       Expected: First contact is shown in a new window. Success message in status bar.","lastModifiedDate":"2021-11-08"},{"lineNumber":928,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":929,"author":{"gitId":"CommanderW324"},"content":"    1. Test case: `show 0`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":930,"author":{"gitId":"CommanderW324"},"content":"       Expected: No person is shown. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-11-08"},{"lineNumber":931,"author":{"gitId":"e0543403"},"content":"       ","lastModifiedDate":"2021-11-08"},{"lineNumber":932,"author":{"gitId":"CommanderW324"},"content":"    1. Test case: `show 1` then `show 2` then `exit`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":933,"author":{"gitId":"CommanderW324"},"content":"       Expected: Two window of person 1 and person 2 details should pop up and then everything should close after the `exit` command.","lastModifiedDate":"2021-11-08"},{"lineNumber":934,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":935,"author":{"gitId":"CommanderW324"},"content":"    1. Other incorrect show commands to try: `show`, `show x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":936,"author":{"gitId":"e0543403"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2021-11-08"},{"lineNumber":937,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":938,"author":{"gitId":"e0543403"},"content":"### Tagging persons","lastModifiedDate":"2021-11-08"},{"lineNumber":939,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":940,"author":{"gitId":"e0543403"},"content":"1. Tagging multiple persons while all persons are being shown","lastModifiedDate":"2021-11-08"},{"lineNumber":941,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":942,"author":{"gitId":"e0543403"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2021-11-08"},{"lineNumber":943,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":944,"author":{"gitId":"e0543403"},"content":"    1. Test case: `tag 1 2 programmer`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":945,"author":{"gitId":"e0543403"},"content":"       Expected: First contact and second contact in the list are tagged with `programmer`. Success of tagging persons shown in the status message.","lastModifiedDate":"2021-11-08"},{"lineNumber":946,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":947,"author":{"gitId":"e0543403"},"content":"    1. Test case: `tag 0 programmer`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":948,"author":{"gitId":"e0543403"},"content":"       Expected: No person is tagged. Error details shown in the status message about what is considered a valid index.","lastModifiedDate":"2021-11-08"},{"lineNumber":949,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":950,"author":{"gitId":"e0543403"},"content":"    1. Other incorrect tag commands to try: `tag x programmer`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":951,"author":{"gitId":"e0543403"},"content":"       Expected: Similar to previous, error details shown now about how the index is out of bounds and what is a valid index.","lastModifiedDate":"2021-11-08"},{"lineNumber":952,"author":{"gitId":"e0543403"},"content":"        ","lastModifiedDate":"2021-11-08"},{"lineNumber":953,"author":{"gitId":"e0543403"},"content":"    1. Test case: `tag 1 2 #hashtag`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":954,"author":{"gitId":"e0543403"},"content":"       Expected: No person is tagged. Error details shown in the status message about what is considered a valid tag.","lastModifiedDate":"2021-11-08"},{"lineNumber":955,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":956,"author":{"gitId":"e0543403"},"content":"    1. Other incorrect tag command to try: `tag`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":957,"author":{"gitId":"e0543403"},"content":"       Expected: Similar to previous, error details shown now about what is the format of the `tag` command.","lastModifiedDate":"2021-11-08"},{"lineNumber":958,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":959,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":960,"author":{"gitId":"e0543403"},"content":"### Tagging all displayed persons","lastModifiedDate":"2021-11-08"},{"lineNumber":961,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":962,"author":{"gitId":"e0543403"},"content":"1. Tagging all persons shown while all persons are being shown","lastModifiedDate":"2021-11-08"},{"lineNumber":963,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":964,"author":{"gitId":"e0543403"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2021-11-08"},{"lineNumber":965,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":966,"author":{"gitId":"e0543403"},"content":"    1. Test case: `tagall OS`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":967,"author":{"gitId":"e0543403"},"content":"       Expected: All contacts in the list are tagged with `OS`. Success of tagging all displayed persons shown in the status message.","lastModifiedDate":"2021-11-08"},{"lineNumber":968,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":969,"author":{"gitId":"e0543403"},"content":"    1. Test case: `tagall #`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":970,"author":{"gitId":"e0543403"},"content":"       Expected: No person is tagged. Error details shown in the status message about what is a valid tag.","lastModifiedDate":"2021-11-08"},{"lineNumber":971,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":972,"author":{"gitId":"e0543403"},"content":"    1. Other incorrect tagall command to try: `tagall`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":973,"author":{"gitId":"e0543403"},"content":"       Expected: Similar to previous, error detail shown in status message is now about `tagall` command format.","lastModifiedDate":"2021-11-08"},{"lineNumber":974,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":975,"author":{"gitId":"e0543403"},"content":"### Untagging persons","lastModifiedDate":"2021-11-08"},{"lineNumber":976,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":977,"author":{"gitId":"jeromewjj"},"content":"1. Untagging multiple persons while all persons are being shown","lastModifiedDate":"2021-11-08"},{"lineNumber":978,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":979,"author":{"gitId":"jeromewjj"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list. Populate the contacts with tag using `tag 1 3 4 rich`","lastModifiedDate":"2021-11-08"},{"lineNumber":980,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":981,"author":{"gitId":"jeromewjj"},"content":"    1. Test case: `untag 1 rich`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":982,"author":{"gitId":"jeromewjj"},"content":"       Expected: `rich` tag is removed from first contacts. Success of untagging shown in the status message.","lastModifiedDate":"2021-11-08"},{"lineNumber":983,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":984,"author":{"gitId":"jeromewjj"},"content":"    1. Test case: `untag 0 rich`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":985,"author":{"gitId":"jeromewjj"},"content":"       Expected: No person is untagged. Error details shown in the status message about what is considered a valid index.","lastModifiedDate":"2021-11-08"},{"lineNumber":986,"author":{"gitId":"e0543403"},"content":"       ","lastModifiedDate":"2021-11-08"},{"lineNumber":987,"author":{"gitId":"jeromewjj"},"content":"    1. Test case: `untag 2 3 4 rich`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":988,"author":{"gitId":"jeromewjj"},"content":"       Expected: `rich` tag is removed from third and fourth contacts. Success of untagging shown in the status message.","lastModifiedDate":"2021-11-08"},{"lineNumber":989,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":990,"author":{"gitId":"jeromewjj"},"content":"    1. Test case: `untag 2 3 4 nonExistTag`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":991,"author":{"gitId":"jeromewjj"},"content":"       Expected: No person is untagged. Error details shown in the status message about `nonExistTag` tag not found.","lastModifiedDate":"2021-11-08"},{"lineNumber":992,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":993,"author":{"gitId":"jeromewjj"},"content":"    1. Other incorrect delete commands to try: `untag`","lastModifiedDate":"2021-11-08"},{"lineNumber":994,"author":{"gitId":"jeromewjj"},"content":"       Expected: Error details shown in the status message about what is the format of the untag command.","lastModifiedDate":"2021-11-08"},{"lineNumber":995,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":996,"author":{"gitId":"e0543403"},"content":"### Untagging all displayed persons","lastModifiedDate":"2021-11-08"},{"lineNumber":997,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":998,"author":{"gitId":"jeromewjj"},"content":"1. Untagging all persons shown while all persons are being shown","lastModifiedDate":"2021-11-08"},{"lineNumber":999,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1000,"author":{"gitId":"jeromewjj"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list. Populate the contacts with tag using `tag 1 3 4 AI`","lastModifiedDate":"2021-11-08"},{"lineNumber":1001,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1002,"author":{"gitId":"jeromewjj"},"content":"    1. Test case: `untagall AI`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1003,"author":{"gitId":"jeromewjj"},"content":"       Expected: `AI` tag is removed from first, third and fourth contacts. Success of untagging shown in the status message.","lastModifiedDate":"2021-11-08"},{"lineNumber":1004,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1005,"author":{"gitId":"jeromewjj"},"content":"    1. Test case: `untagall nonExistTag`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1006,"author":{"gitId":"jeromewjj"},"content":"       Expected: No person is untagged. Error details shown in the status message about `nonExistTag` tag not found.","lastModifiedDate":"2021-11-08"},{"lineNumber":1007,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1008,"author":{"gitId":"jeromewjj"},"content":"    1. Test case: `untagall #`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1009,"author":{"gitId":"jeromewjj"},"content":"       Expected: No person is untagged. Error details shown in the status message about what is a valid tag.","lastModifiedDate":"2021-11-08"},{"lineNumber":1010,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1011,"author":{"gitId":"jeromewjj"},"content":"    1. Other incorrect untagall command to try: `untagall`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1012,"author":{"gitId":"jeromewjj"},"content":"       Expected: Error detail shown in status message about `untagall` command format.","lastModifiedDate":"2021-11-08"},{"lineNumber":1013,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1014,"author":{"gitId":"e0543403"},"content":"### Replace a tag of all displayed persons","lastModifiedDate":"2021-11-08"},{"lineNumber":1015,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1016,"author":{"gitId":"jeromewjj"},"content":"1. Replacing tag for all persons shown while all persons are being shown","lastModifiedDate":"2021-11-08"},{"lineNumber":1017,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1018,"author":{"gitId":"jeromewjj"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list. Populate the contacts with tag using `tag 1 3 4 cs2030`","lastModifiedDate":"2021-11-08"},{"lineNumber":1019,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1020,"author":{"gitId":"jeromewjj"},"content":"    1. Test case: `replacetag cs2030 cs2040`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1021,"author":{"gitId":"jeromewjj"},"content":"       Expected: `cs2030` tag is replaced for first, third and fourth contacts with `cs2040` tag. Success of tag replacement shown in the status message.","lastModifiedDate":"2021-11-08"},{"lineNumber":1022,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1023,"author":{"gitId":"jeromewjj"},"content":"    1. Test case: `replacetag cs2040 cs1231 cs2103`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1024,"author":{"gitId":"jeromewjj"},"content":"       Expected: `cs2040` tag is replaced for first, third and fourth contacts with `cs1231` tag. Success of tag replacement shown in the status message.","lastModifiedDate":"2021-11-08"},{"lineNumber":1025,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1026,"author":{"gitId":"jeromewjj"},"content":"    1. Test case: `replacetag cs2030 #`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1027,"author":{"gitId":"jeromewjj"},"content":"       Expected: No tag is being replaced. Error details shown in the status message about what is a valid tag.","lastModifiedDate":"2021-11-08"},{"lineNumber":1028,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1029,"author":{"gitId":"jeromewjj"},"content":"    1. Test case: `replacetag nonExistTag AI`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1030,"author":{"gitId":"jeromewjj"},"content":"       Expected: No tag is being replaced. Error details shown in the status message about `nonExistTag` tag not found.","lastModifiedDate":"2021-11-08"},{"lineNumber":1031,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1032,"author":{"gitId":"jeromewjj"},"content":"    1. Other incorrect replacetag command to try: `replacetag`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1033,"author":{"gitId":"jeromewjj"},"content":"       Expected: Error detail shown in status message about `replacetag` command format.","lastModifiedDate":"2021-11-08"},{"lineNumber":1034,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1035,"author":{"gitId":"e0543403"},"content":"### Showing all tags","lastModifiedDate":"2021-11-08"},{"lineNumber":1036,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1037,"author":{"gitId":"DystoriaX"},"content":"1. Showing all tags","lastModifiedDate":"2021-11-08"},{"lineNumber":1038,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1039,"author":{"gitId":"DystoriaX"},"content":"    1. Prerequisites: None.","lastModifiedDate":"2021-11-08"},{"lineNumber":1040,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1041,"author":{"gitId":"DystoriaX"},"content":"    2. Test case: `showtags`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1042,"author":{"gitId":"DystoriaX"},"content":"       Expected: Shows all available tags in the global contact list.","lastModifiedDate":"2021-11-08"},{"lineNumber":1043,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1044,"author":{"gitId":"e0543403"},"content":"### Aliasing a command","lastModifiedDate":"2021-11-08"},{"lineNumber":1045,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1046,"author":{"gitId":"DystoriaX"},"content":"1. Creating alias","lastModifiedDate":"2021-11-08"},{"lineNumber":1047,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1048,"author":{"gitId":"DystoriaX"},"content":"    1. Prerequisites: None.","lastModifiedDate":"2021-11-08"},{"lineNumber":1049,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1050,"author":{"gitId":"DystoriaX"},"content":"    2. Test case: `alias tagall tag -A`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1051,"author":{"gitId":"DystoriaX"},"content":"       Expected: Creates `tag -A` as an alias for `tagall` command.","lastModifiedDate":"2021-11-08"},{"lineNumber":1052,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1053,"author":{"gitId":"DystoriaX"},"content":"    3. Test case: `alias tagall tag`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1054,"author":{"gitId":"DystoriaX"},"content":"       Expected: Unable to create alias, as `tag` is an existing command.","lastModifiedDate":"2021-11-08"},{"lineNumber":1055,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1056,"author":{"gitId":"DystoriaX"},"content":"    4. Test case: `alias nonono tag -A`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1057,"author":{"gitId":"DystoriaX"},"content":"       Expected: Unable to create alias, as `nonono` is not an existing command.","lastModifiedDate":"2021-11-08"},{"lineNumber":1058,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1059,"author":{"gitId":"e0543403"},"content":"### Showing saved aliases","lastModifiedDate":"2021-11-08"},{"lineNumber":1060,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1061,"author":{"gitId":"e0543403"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2021-11-08"},{"lineNumber":1062,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1063,"author":{"gitId":"CommanderW324"},"content":"    1. Prerequisites: Added alias using the following line `alias tag sp`.","lastModifiedDate":"2021-11-08"},{"lineNumber":1064,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1065,"author":{"gitId":"CommanderW324"},"content":"    1. Test case: `showalias`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1066,"author":{"gitId":"CommanderW324"},"content":"       Expected: The window shows with a successful message shown in status message. The window should contain the alias sp and tag.","lastModifiedDate":"2021-11-08"},{"lineNumber":1067,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1068,"author":{"gitId":"CommanderW324"},"content":"    1. Test case: `showalias` then `alias tag poke`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1069,"author":{"gitId":"CommanderW324"},"content":"       Expected: The window should pop up and after the second command, the mapping tag and poke will automatically show in the window.","lastModifiedDate":"2021-11-08"},{"lineNumber":1070,"author":{"gitId":"CommanderW324"},"content":"    ","lastModifiedDate":"2021-11-08"},{"lineNumber":1071,"author":{"gitId":"CommanderW324"},"content":"    1. Test case: `showalias` then `deletealias sp`","lastModifiedDate":"2021-11-08"},{"lineNumber":1072,"author":{"gitId":"CommanderW324"},"content":"       Expected: The window should pop up as before and the mapping tag and sp should automatically disappear after the second command.","lastModifiedDate":"2021-11-08"},{"lineNumber":1073,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1074,"author":{"gitId":"CommanderW324"},"content":"    1. Test case: `showalias` then `exit`","lastModifiedDate":"2021-11-08"},{"lineNumber":1075,"author":{"gitId":"CommanderW324"},"content":"       Expected: The window should pop up as before and should close after the `exit` command.","lastModifiedDate":"2021-11-08"},{"lineNumber":1076,"author":{"gitId":"e0543403"},"content":"       ","lastModifiedDate":"2021-11-08"},{"lineNumber":1077,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1078,"author":{"gitId":"e0543403"},"content":"### Dealiasing a command","lastModifiedDate":"2021-11-08"},{"lineNumber":1079,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1080,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":1081,"author":{"gitId":"CommanderW324"},"content":"    1. Prerequisites: Insert alias using `alias tag sp`.","lastModifiedDate":"2021-11-08"},{"lineNumber":1082,"author":{"gitId":"-"},"content":"       ","lastModifiedDate":"2020-05-23"},{"lineNumber":1083,"author":{"gitId":"CommanderW324"},"content":"    1. Test case: `deletealias hello`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1084,"author":{"gitId":"CommanderW324"},"content":"        Expected: Throw an error message as the alias is not there.","lastModifiedDate":"2021-11-08"},{"lineNumber":1085,"author":{"gitId":"-"},"content":"       ","lastModifiedDate":"2020-05-23"},{"lineNumber":1086,"author":{"gitId":"CommanderW324"},"content":"    1. Test case: `deletealias sp`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1087,"author":{"gitId":"CommanderW324"},"content":"        Expected: Successful message displayed. Alias should not exist when opened in the Show Alias Window.","lastModifiedDate":"2021-11-08"},{"lineNumber":1088,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1089,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"samyipsh":58,"e0543403":233,"CommanderW324":86,"jeromewjj":344,"-":300,"DystoriaX":68}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   1. Run the `seedu.address.Main` and try a few commands.","lastModifiedDate":"2020-06-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"samyipsh"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [NetworkUS’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"samyipsh":1,"-":54}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"DystoriaX"},"content":"NetworkUS is a desktop app for organizing contacts. It features seamless **group management**, allowing for **quick searches of contacts with desired traits** (i.e specialization) and hence **project group formation**. It is catered for **Computer Science Students**. The app is optimized for the **Command Line Interface (CLI)** to allow swift access for keyboard users. The app is also complemented with **Graphical User Interface (GUI)** to display the program.","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"jeromewjj"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"DystoriaX"},"content":"## Before you read","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"e0543403"},"content":"This user guide is for users who want to use NetworkUS for their daily use or developer who wants to find out what this app does before contributing to the project. This user guide will guide you on how to use NetworkUS to manage your contacts.","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"DystoriaX"},"content":"## How to use the guide","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"e0543403"},"content":"If this is the first time you are using NetworkUS, please refer to the [quick start](#quick-start) section to set up and start using NetworkUS.","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"e0543403"},"content":"If you are looking for a general overview of the commands refer to the [command summary](#command-summary) section. ","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"e0543403"},"content":"If you are unclear of what the command formats mean in the various explanations refer to the [features](#features) section.","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"e0543403"},"content":"If you are unsure of the meaning of any terms within this user guide, please refer to the [glossary](#glossary).","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"e0543403"},"content":"To jump to any particular section please refer to the table of contents found at the top of this guide.","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"jeromewjj"},"content":"1. Download the latest `networkus.jar` from [here](https://github.com/AY2122S1-CS2103T-T10-3/tp/releases/download/v1.4/networkus.jar).","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"DystoriaX"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your NetworkUS app.","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"DystoriaX"},"content":"1. Double-click the file to start the app. The GUI below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"samyipsh"},"content":"1. Type the command in the command box and press `enter` to execute it. e.g. typing **`help`** and pressing `enter` will open the help window.\u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"   * **`list`**: Lists all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"jeromewjj"},"content":"   * **`add`**`n/John Doe p/98765432 e/johnd@example.com`: Adds a contact named `John Doe` to the NetworkUS.","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   * **`delete`**`3`: Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   * **`clear`**: Deletes all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * **`exit`**: Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"jeromewjj"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"DystoriaX"},"content":"## User Interface","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"CommanderW324"},"content":"![User Interface](images/UIDetails.png)","lastModifiedDate":"2021-11-06"},{"lineNumber":64,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":65,"author":{"gitId":"CommanderW324"},"content":"The image above shows the UI Components: ","lastModifiedDate":"2021-11-06"},{"lineNumber":66,"author":{"gitId":"CommanderW324"},"content":"1. Menu Bar: shows the \u0027Help\u0027 and \u0027Show Alias\u0027 option.","lastModifiedDate":"2021-11-06"},{"lineNumber":67,"author":{"gitId":"CommanderW324"},"content":"1. Command Bar: location for entering commands.","lastModifiedDate":"2021-11-06"},{"lineNumber":68,"author":{"gitId":"jeromewjj"},"content":"1. Result Display: shows result feedback from commands.","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"CommanderW324"},"content":"1. Contact List: shows the current contacts.","lastModifiedDate":"2021-11-06"},{"lineNumber":70,"author":{"gitId":"CommanderW324"},"content":"1. Footer: shows file path of the storage file and the total number of contacts.","lastModifiedDate":"2021-11-06"},{"lineNumber":71,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":73,"author":{"gitId":"jeromewjj"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":74,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"DystoriaX"},"content":"* Parameters with **prefixes** can be in any order.\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"jeromewjj"},"content":"* If a parameter with **prefix** is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":96,"author":{"gitId":"DystoriaX"},"content":"* Additional parameters for commands that do not take in parameters will be ignored. (such as `help`, `list`, `exit` and `clear`)\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":99,"author":{"gitId":"jeromewjj"},"content":"* INDEXES allows multiple INDEX to be entered with each INDEX being separated with a space.\u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":100,"author":{"gitId":"e0543403"},"content":"  e.g. if you specify `tag 1 2 3 cs2030`, it will tag first, second and third contacts in the displayed contacts list.","lastModifiedDate":"2021-11-11"},{"lineNumber":101,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"### Viewing help: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"samyipsh"},"content":"Provides functionality to access the help page in the browser.","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"samyipsh"},"content":"Format: `help` \u003cbr/\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"samyipsh"},"content":"Keyboard shortcut alternative: `f1` then press `enter`","lastModifiedDate":"2021-11-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"CommanderW324"},"content":"### Adding a contact: `add`","lastModifiedDate":"2021-11-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"CommanderW324"},"content":"Adds a contact to the list of contacts. You cannot add duplicate contacts in the contact book.","lastModifiedDate":"2021-11-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"DystoriaX"},"content":"Format: `add n/NAME [p/PHONE_NUMBER] [e/EMAIL] [g/GITHUB_USERNAME] [l/LINKEDIN] [d/DETAIL] [t/TAG]…​`","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"e0543403"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:** \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":122,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":123,"author":{"gitId":"CommanderW324"},"content":"* A contact can have any number of tags (including 0) \u003cbr\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":124,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":125,"author":{"gitId":"e0543403"},"content":"* View the [duplicate-detection](#duplicate-detection) section to find out what is considered as a duplicate contact. \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":126,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":127,"author":{"gitId":"e0543403"},"content":"* View the [valid-field](#valid-fields) section to find out what is considered as valid field.","lastModifiedDate":"2021-11-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"DystoriaX"},"content":"* `add n/Johnny Sim p/91234567`","lastModifiedDate":"2021-09-27"},{"lineNumber":133,"author":{"gitId":"jeromewjj"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com p/1234567 t/criminal g/lovelyprisoner`","lastModifiedDate":"2021-10-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"CommanderW324"},"content":"### Listing all contacts: `list`","lastModifiedDate":"2021-11-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"CommanderW324"},"content":"Shows a list of all contacts in the [global contacts](#global-contacts) and the total number of contacts.","lastModifiedDate":"2021-11-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"CommanderW324"},"content":"### Editing a contact: `edit`","lastModifiedDate":"2021-11-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"e0543403"},"content":"Edits an existing contact in the list of contacts.","lastModifiedDate":"2021-11-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"DystoriaX"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [g/GITHUB_USERNAME] [l/LINKEDIN] [d/DETAIL] [t/TAG]…​`","lastModifiedDate":"2021-10-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"CommanderW324"},"content":"* Edits the contact at the specified `INDEX`. The index refers to the index number shown in the [displayed contacts](#displayed-contacts) list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-11-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"CommanderW324"},"content":"* When editing tags, the existing tags of the contact will be replaced.","lastModifiedDate":"2021-11-11"},{"lineNumber":151,"author":{"gitId":"CommanderW324"},"content":"* You can remove all the contact’s tags by typing `t/` without specifying any tags after it. The same applies for description `d/`.","lastModifiedDate":"2021-11-11"},{"lineNumber":152,"author":{"gitId":"CommanderW324"},"content":"* Edited contact should not result in duplicate contacts in the contact book.","lastModifiedDate":"2021-11-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":155,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"CommanderW324"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st contact to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2021-11-11"},{"lineNumber":157,"author":{"gitId":"CommanderW324"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd contact to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2021-11-11"},{"lineNumber":158,"author":{"gitId":"CommanderW324"},"content":"*  `edit 2 p/ g/` Removes the phone number and github user of the 2nd contact.","lastModifiedDate":"2021-11-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"e0543403"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:** \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":162,"author":{"gitId":"e0543403"},"content":"* You can remove specified fields by typing the field\u0027s prefix only. This applies for all fields except Name. \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":163,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":164,"author":{"gitId":"e0543403"},"content":"* View the [duplicate-detection](#duplicate-detection) section to find out what is considered as a duplicate contact. \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":165,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":166,"author":{"gitId":"e0543403"},"content":"* View the [valid-field](#valid-fields) section to find out what is considered as valid field.","lastModifiedDate":"2021-11-08"},{"lineNumber":167,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":168,"author":{"gitId":"jeromewjj"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":169,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":170,"author":{"gitId":"CommanderW324"},"content":"### Finding contacts: `find`","lastModifiedDate":"2021-11-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"CommanderW324"},"content":"Find contacts whose names or tags contain any of the given keywords from the list of contacts.","lastModifiedDate":"2021-11-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"jeromewjj"},"content":"* The command is not case-sensitive, `find john` will match `John`","lastModifiedDate":"2021-09-28"},{"lineNumber":177,"author":{"gitId":"e0543403"},"content":"* Currently, only the name and their tags are searched.","lastModifiedDate":"2021-10-10"},{"lineNumber":178,"author":{"gitId":"CommanderW324"},"content":"* Contacts whose names or tags match at least one keyword will be returned.","lastModifiedDate":"2021-11-11"},{"lineNumber":179,"author":{"gitId":"e0543403"},"content":"  `find john smith` will return `John Fletcher` and `Smith George`","lastModifiedDate":"2021-09-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"e0543403"},"content":"* `find John` will return `john`, `John Doe` and `Aaron john`","lastModifiedDate":"2021-09-25"},{"lineNumber":183,"author":{"gitId":"e0543403"},"content":"* `find jonas aaron silva` will return `jonas`, `Aaron john` and `Ann Silva`","lastModifiedDate":"2021-09-25"},{"lineNumber":184,"author":{"gitId":"e0543403"},"content":"* `find friends` will return anyone whose names or tags have the word `friends` in them","lastModifiedDate":"2021-10-10"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"CommanderW324"},"content":"### Opening a field of a contact: `open`","lastModifiedDate":"2021-11-11"},{"lineNumber":187,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":188,"author":{"gitId":"CommanderW324"},"content":"Opens the LinkedIn/Github page from details of field specified of a particular contact from the NetworkUS contacts.","lastModifiedDate":"2021-11-11"},{"lineNumber":189,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":190,"author":{"gitId":"samyipsh"},"content":"Format: `open INDEXES FIELD`","lastModifiedDate":"2021-10-25"},{"lineNumber":191,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":192,"author":{"gitId":"e0543403"},"content":"* The index contained in indexes refers to the index number shown in the [displayed contacts](#displayed-contacts) list.","lastModifiedDate":"2021-11-07"},{"lineNumber":193,"author":{"gitId":"samyipsh"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-25"},{"lineNumber":194,"author":{"gitId":"jeromewjj"},"content":"* The Field must be `github` or `linkedin`","lastModifiedDate":"2021-11-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":196,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-25"},{"lineNumber":197,"author":{"gitId":"CommanderW324"},"content":"* `list` followed by `open 2 3 4 github` opens the Github page of the 2nd, 3rd, and 4th contact of the [displayed contacts](#displayed-contacts) list.","lastModifiedDate":"2021-11-11"},{"lineNumber":198,"author":{"gitId":"CommanderW324"},"content":"* `find Betsy` followed by `open 1 linkedin` opens the LinkedIn page of the 1st contact in the results of the `find` command","lastModifiedDate":"2021-11-11"},{"lineNumber":199,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":200,"author":{"gitId":"jeromewjj"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-11-07"},{"lineNumber":201,"author":{"gitId":"jeromewjj"},"content":"This will redirect you to a web browser with the requested LinkedIn/Github page.","lastModifiedDate":"2021-11-07"},{"lineNumber":202,"author":{"gitId":"jeromewjj"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":204,"author":{"gitId":"CommanderW324"},"content":"### Deleting a contact: `delete`","lastModifiedDate":"2021-11-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"CommanderW324"},"content":"Deletes the specified contact from the NetworkUS contacts.","lastModifiedDate":"2021-11-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"CommanderW324"},"content":"* Deletes the contact at the specified `INDEX`.","lastModifiedDate":"2021-11-11"},{"lineNumber":211,"author":{"gitId":"e0543403"},"content":"* The index refers to the index number shown in the [displayed contacts](#displayed-contacts) list.","lastModifiedDate":"2021-11-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"CommanderW324"},"content":"* `list` followed by `delete 2` deletes the 2nd contact in the [displayed contacts](#displayed-contacts) list.","lastModifiedDate":"2021-11-11"},{"lineNumber":216,"author":{"gitId":"CommanderW324"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st contact in the results of the `find` command.","lastModifiedDate":"2021-11-11"},{"lineNumber":217,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":218,"author":{"gitId":"jeromewjj"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":219,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":220,"author":{"gitId":"CommanderW324"},"content":"### Showing contact: `show`","lastModifiedDate":"2021-11-11"},{"lineNumber":221,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":222,"author":{"gitId":"CommanderW324"},"content":"Shows the specified contact\u0027s full contact information in a separate window. Will show any truncated details or fields that are too long. \u003cbr\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":223,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":224,"author":{"gitId":"jeromewjj"},"content":"![show window](images/showcommandwindow.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":225,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":226,"author":{"gitId":"e0543403"},"content":"Format: `show INDEX`","lastModifiedDate":"2021-10-28"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"CommanderW324"},"content":"* Index must be the index that is in the currently visible list.","lastModifiedDate":"2021-10-27"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":230,"author":{"gitId":"e0543403"},"content":"Example:","lastModifiedDate":"2021-10-31"},{"lineNumber":231,"author":{"gitId":"CommanderW324"},"content":"* `show 1` will show the full details of the contact with the specified index.","lastModifiedDate":"2021-11-11"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":233,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":234,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":235,"author":{"gitId":"jeromewjj"},"content":"### Clearing all entries: `clear`","lastModifiedDate":"2021-10-28"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"e0543403"},"content":"Clears all entries from the [global contacts](#global-contacts) list.","lastModifiedDate":"2021-11-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2021-10-28"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":241,"author":{"gitId":"CommanderW324"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-11-06"},{"lineNumber":242,"author":{"gitId":"e0543403"},"content":"This will clear all contacts data in NetworkUS !","lastModifiedDate":"2021-11-06"},{"lineNumber":243,"author":{"gitId":"CommanderW324"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":244,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":245,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":246,"author":{"gitId":"jeromewjj"},"content":"### Exiting the program: `exit`","lastModifiedDate":"2021-10-28"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":248,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2021-10-28"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":250,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2021-10-28"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":252,"author":{"gitId":"e0543403"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-07"},{"lineNumber":253,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":254,"author":{"gitId":"jeromewjj"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":255,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":256,"author":{"gitId":"DystoriaX"},"content":"## Tagging features","lastModifiedDate":"2021-10-26"},{"lineNumber":257,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":258,"author":{"gitId":"e0543403"},"content":"You can use tags to categorize your contacts as you wish. You can tag them based on their modules taken, field of specialization or personality. This would help when you want to find suitable teammate for projects, assignments, or hackathons. For instance, you can tag certain contacts with OS to indicate that the person has a specialization in operating systems. You can then find all contacts that have a specialization in OS by using the command `find OS`. The following are details of the tagging-related commands.","lastModifiedDate":"2021-11-11"},{"lineNumber":259,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":260,"author":{"gitId":"CommanderW324"},"content":"### Tagging contacts: `tag`","lastModifiedDate":"2021-11-11"},{"lineNumber":261,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":262,"author":{"gitId":"CommanderW324"},"content":"Tags the specified contacts from the NetworkUS contacts with the specified tag.","lastModifiedDate":"2021-11-11"},{"lineNumber":263,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":264,"author":{"gitId":"e0543403"},"content":"Format: `tag INDEXES TAG`","lastModifiedDate":"2021-10-23"},{"lineNumber":265,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":266,"author":{"gitId":"CommanderW324"},"content":"* Tags the contacts at the specified `INDEXES`.","lastModifiedDate":"2021-11-11"},{"lineNumber":267,"author":{"gitId":"jeromewjj"},"content":"* The index refers to the index number shown in the [displayed contacts](#displayed-contacts) list.","lastModifiedDate":"2021-11-07"},{"lineNumber":268,"author":{"gitId":"DystoriaX"},"content":"* The indexes **must be positive integers** 1, 2, 3, …​","lastModifiedDate":"2021-10-26"},{"lineNumber":269,"author":{"gitId":"e0543403"},"content":"* Tag **must consist of letters and/or numbers without spaces**.","lastModifiedDate":"2021-10-31"},{"lineNumber":270,"author":{"gitId":"CommanderW324"},"content":"* Will not add duplicate tags to contacts.","lastModifiedDate":"2021-11-11"},{"lineNumber":271,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":272,"author":{"gitId":"e0543403"},"content":"Examples:","lastModifiedDate":"2021-10-20"},{"lineNumber":273,"author":{"gitId":"CommanderW324"},"content":"* `list` followed by `tag 1 2 programmer` tags the 1st and 2nd contacts in the [global contacts](#global-contacts) list with a programmer tag.","lastModifiedDate":"2021-11-11"},{"lineNumber":274,"author":{"gitId":"CommanderW324"},"content":"* `find John` followed by `tag 1 2 programmer` tags the 1st and 2nd contacts in the results of the `find` command with a programmer tag.","lastModifiedDate":"2021-11-11"},{"lineNumber":275,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":276,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":277,"author":{"gitId":"e0543403"},"content":"### Tagging displayed contacts: `tagall`","lastModifiedDate":"2021-11-08"},{"lineNumber":278,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":279,"author":{"gitId":"e0543403"},"content":"Tags all [displayed contacts](#displayed-contacts) in the NetworkUS contacts with the specified tag.","lastModifiedDate":"2021-11-08"},{"lineNumber":280,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":281,"author":{"gitId":"e0543403"},"content":"Format: `tagall TAG`","lastModifiedDate":"2021-11-08"},{"lineNumber":282,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":283,"author":{"gitId":"e0543403"},"content":"* Tags all [displayed contacts](#displayed-contacts) with the specified `TAG`.","lastModifiedDate":"2021-11-08"},{"lineNumber":284,"author":{"gitId":"e0543403"},"content":"* Will not add duplicate tags and will run successfully even if all [displayed contacts](#displayed-contacts) already have the tag.","lastModifiedDate":"2021-11-08"},{"lineNumber":285,"author":{"gitId":"e0543403"},"content":"* The tag **must consist of letters and/or numbers without spaces** e.g. programmer, CS2103T","lastModifiedDate":"2021-11-08"},{"lineNumber":286,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":287,"author":{"gitId":"e0543403"},"content":"Examples:","lastModifiedDate":"2021-11-08"},{"lineNumber":288,"author":{"gitId":"CommanderW324"},"content":"* `list` followed by `tagall programmer` tags all contacts in the [global contacts](#global-contacts) list with the tag `programmer`.","lastModifiedDate":"2021-11-11"},{"lineNumber":289,"author":{"gitId":"CommanderW324"},"content":"* `find Alex` followed by `tagall CS2103T` tags all contacts in the results of the `find` command with the tag `CS2103T`.","lastModifiedDate":"2021-11-11"},{"lineNumber":290,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":291,"author":{"gitId":"CommanderW324"},"content":"### Untagging contacts: `untag`","lastModifiedDate":"2021-11-11"},{"lineNumber":292,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":293,"author":{"gitId":"CommanderW324"},"content":"Delete the specified tag from the specified contact from the NetworkUS contacts.","lastModifiedDate":"2021-11-11"},{"lineNumber":294,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":295,"author":{"gitId":"DystoriaX"},"content":"Format: `untag INDEXES TAG`","lastModifiedDate":"2021-10-26"},{"lineNumber":296,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":297,"author":{"gitId":"CommanderW324"},"content":"* Deletes the tag from the contact at the specified `INDEXES`.","lastModifiedDate":"2021-11-11"},{"lineNumber":298,"author":{"gitId":"jeromewjj"},"content":"* The index refers to the index number shown in the [displayed contacts](#displayed-contacts) list.","lastModifiedDate":"2021-11-07"},{"lineNumber":299,"author":{"gitId":"DystoriaX"},"content":"* The indexes **must be positive integers** 1, 2, 3, …​","lastModifiedDate":"2021-10-26"},{"lineNumber":300,"author":{"gitId":"e0543403"},"content":"* Tag **must consist of letters and/or numbers without spaces**.","lastModifiedDate":"2021-10-31"},{"lineNumber":301,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":302,"author":{"gitId":"jeromewjj"},"content":"Example:","lastModifiedDate":"2021-10-21"},{"lineNumber":303,"author":{"gitId":"CommanderW324"},"content":"* `list` followed by `untag 1 2 friend` deletes friend tag from 1st and 2nd contacts in the [global contacts](#global-contacts) list.","lastModifiedDate":"2021-11-11"},{"lineNumber":304,"author":{"gitId":"CommanderW324"},"content":"* `find John` followed by `untag 1 2 friend` deletes friend tag from the 1st and 2nd contacts in the results of the `find` command.","lastModifiedDate":"2021-11-11"},{"lineNumber":305,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":306,"author":{"gitId":"e0543403"},"content":"### Untagging displayed contacts: `untagall`","lastModifiedDate":"2021-11-08"},{"lineNumber":307,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":308,"author":{"gitId":"e0543403"},"content":"Deletes the specified tag from all [displayed contacts](#displayed-contacts) in NetworkUS.","lastModifiedDate":"2021-11-08"},{"lineNumber":309,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":310,"author":{"gitId":"e0543403"},"content":"Format: `untagall TAG`","lastModifiedDate":"2021-11-08"},{"lineNumber":311,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":312,"author":{"gitId":"e0543403"},"content":"* Deletes specified `TAG` from all [displayed contacts](#displayed-contacts).","lastModifiedDate":"2021-11-08"},{"lineNumber":313,"author":{"gitId":"e0543403"},"content":"* Tag **must consist of letters and/or numbers without spaces**.","lastModifiedDate":"2021-11-08"},{"lineNumber":314,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":315,"author":{"gitId":"e0543403"},"content":"Example:","lastModifiedDate":"2021-11-08"},{"lineNumber":316,"author":{"gitId":"e0543403"},"content":"* `list` followed by `untagall CS2040` deletes CS2040 tag from all [global contacts](#global-contacts).","lastModifiedDate":"2021-11-08"},{"lineNumber":317,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":318,"author":{"gitId":"e0543403"},"content":"### Replace tag from all contacts: `replacetag`","lastModifiedDate":"2021-11-11"},{"lineNumber":319,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":320,"author":{"gitId":"e0543403"},"content":"Replaces the specified tag from all [displayed contacts](#displayed-contacts) in NetworkUS with a new tag.","lastModifiedDate":"2021-11-07"},{"lineNumber":321,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":322,"author":{"gitId":"jeromewjj"},"content":"Format: `replacetag TAG1 TAG2`","lastModifiedDate":"2021-10-21"},{"lineNumber":323,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":324,"author":{"gitId":"jeromewjj"},"content":"* Replaces `TAG1` with `TAG2` for all contacts.","lastModifiedDate":"2021-10-22"},{"lineNumber":325,"author":{"gitId":"jeromewjj"},"content":"* `TAG1` is the tag to be replaced.","lastModifiedDate":"2021-10-21"},{"lineNumber":326,"author":{"gitId":"jeromewjj"},"content":"* `TAG2` is the new tag to replace `TAG1`.","lastModifiedDate":"2021-10-21"},{"lineNumber":327,"author":{"gitId":"e0543403"},"content":"* Tags **must consist of letters and/or numbers without spaces**.","lastModifiedDate":"2021-10-31"},{"lineNumber":328,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":329,"author":{"gitId":"jeromewjj"},"content":"Example:","lastModifiedDate":"2021-10-21"},{"lineNumber":330,"author":{"gitId":"e0543403"},"content":"* `list` followed by `replacetag CS2040 CS2030` replaces CS2040 tag to CS2030 tag from all [global contacts](#global-contacts).","lastModifiedDate":"2021-11-07"},{"lineNumber":331,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":332,"author":{"gitId":"DystoriaX"},"content":"### Showing tags: `showtags`","lastModifiedDate":"2021-10-21"},{"lineNumber":333,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":334,"author":{"gitId":"DystoriaX"},"content":"Shows all tags that are used in NetworkUS contacts.","lastModifiedDate":"2021-10-21"},{"lineNumber":335,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":336,"author":{"gitId":"DystoriaX"},"content":"Format: `showtags`","lastModifiedDate":"2021-10-21"},{"lineNumber":337,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":338,"author":{"gitId":"e0543403"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-07"},{"lineNumber":339,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":340,"author":{"gitId":"jeromewjj"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":341,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":342,"author":{"gitId":"jeromewjj"},"content":"## Alias Features","lastModifiedDate":"2021-10-28"},{"lineNumber":343,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":344,"author":{"gitId":"DystoriaX"},"content":"Alias helps you create more customized commands. You can shorten the existing commands, or even completely rename it with other names. Here are example use cases of alias:","lastModifiedDate":"2021-11-07"},{"lineNumber":345,"author":{"gitId":"DystoriaX"},"content":"* Create `tag -A` as an alias for `tagall` command","lastModifiedDate":"2021-11-07"},{"lineNumber":346,"author":{"gitId":"DystoriaX"},"content":"* Create `tag -D` as an alias for `untag` command","lastModifiedDate":"2021-11-07"},{"lineNumber":347,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":348,"author":{"gitId":"DystoriaX"},"content":"The following are details of the alias-related commands","lastModifiedDate":"2021-11-07"},{"lineNumber":349,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":350,"author":{"gitId":"DystoriaX"},"content":"### Aliasing commands: `alias`","lastModifiedDate":"2021-10-26"},{"lineNumber":351,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":352,"author":{"gitId":"DystoriaX"},"content":"Creates an alias for existing NetworkUS command.","lastModifiedDate":"2021-10-26"},{"lineNumber":353,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":354,"author":{"gitId":"DystoriaX"},"content":"Format: `alias COMMAND ALIAS`","lastModifiedDate":"2021-11-08"},{"lineNumber":355,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":356,"author":{"gitId":"DystoriaX"},"content":"* Creates an alias `ALIAS` for command `COMMAND`.","lastModifiedDate":"2021-11-08"},{"lineNumber":357,"author":{"gitId":"DystoriaX"},"content":"* `ALIAS` can contain spaces, but cannot be empty.","lastModifiedDate":"2021-11-08"},{"lineNumber":358,"author":{"gitId":"DystoriaX"},"content":"* `COMMAND` must be an existing command in NetworkUS (e.g. `list`, `tagall`, `untag`, etc.)","lastModifiedDate":"2021-11-08"},{"lineNumber":359,"author":{"gitId":"DystoriaX"},"content":"* Aliases that you create will be saved.","lastModifiedDate":"2021-10-27"},{"lineNumber":360,"author":{"gitId":"DystoriaX"},"content":"* NetworkUS only replace your input with corresponding commands if the alias matches the **prefix word(s)** of your input.","lastModifiedDate":"2021-11-07"},{"lineNumber":361,"author":{"gitId":"DystoriaX"},"content":"  * For example: the alias `tag -A` will match the command `tag -A parameter`, but `tag -AD parameter` **will not be matched** even though `tag -A` matches the prefix of words `tag -AD`.","lastModifiedDate":"2021-11-07"},{"lineNumber":362,"author":{"gitId":"DystoriaX"},"content":"* NetworkUS will check the **longest matching alias** in your input and change it with the corresponding command.","lastModifiedDate":"2021-10-27"},{"lineNumber":363,"author":{"gitId":"DystoriaX"},"content":"  * For example: Suppose that you have created two aliases:","lastModifiedDate":"2021-11-08"},{"lineNumber":364,"author":{"gitId":"DystoriaX"},"content":"      * `tag -A` as command `tagall`","lastModifiedDate":"2021-11-08"},{"lineNumber":365,"author":{"gitId":"DystoriaX"},"content":"      * `tag -A -D` as command `untagall`","lastModifiedDate":"2021-11-08"},{"lineNumber":366,"author":{"gitId":"DystoriaX"},"content":"  * The command `tag -A -D OS` will be replaced as `untagall OS` because the longest matching alias that matches the prefix word is `tag -A -D`.","lastModifiedDate":"2021-11-08"},{"lineNumber":367,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":368,"author":{"gitId":"e0543403"},"content":"Example:","lastModifiedDate":"2021-10-31"},{"lineNumber":369,"author":{"gitId":"e0543403"},"content":"* `alias tagall tag -A` will create an alias `tag -A` for the `tagall` command, allowing `tag -A` to represent `tagall`.","lastModifiedDate":"2021-10-31"},{"lineNumber":370,"author":{"gitId":"DystoriaX"},"content":"* `alias tagall tag` will throw an error as `tag` is an existing NetworkUS command. **You cannot create alias as an existing command name**.","lastModifiedDate":"2021-11-07"},{"lineNumber":371,"author":{"gitId":"DystoriaX"},"content":"* `alias notACommand tag -A` will throw an error as `notACommand` is not an existing NetworkUS command. **You are only able to create an alias for existing commands**.","lastModifiedDate":"2021-11-07"},{"lineNumber":372,"author":{"gitId":"DystoriaX"},"content":"* `alias tag add n/Your Name` will create alias `add n/Your Name` for the `tag` command. Note that this kind of alias is not recommended. See the **caution** section.","lastModifiedDate":"2021-11-07"},{"lineNumber":373,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":374,"author":{"gitId":"DystoriaX"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-10-27"},{"lineNumber":375,"author":{"gitId":"jeromewjj"},"content":"Use it carefully. You are encouraged to create appropriate aliases. Refrain from creating alias that resembles existing command syntax, such as create alias `add n/Your Name` as any `tag` or `add` or any other commands. ","lastModifiedDate":"2021-11-08"},{"lineNumber":376,"author":{"gitId":"jeromewjj"},"content":"**NetworkUS will not handle these cases for you.**","lastModifiedDate":"2021-11-08"},{"lineNumber":377,"author":{"gitId":"DystoriaX"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":378,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":379,"author":{"gitId":"e0543403"},"content":"### Showing saved aliases: `showalias`","lastModifiedDate":"2021-11-01"},{"lineNumber":380,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":381,"author":{"gitId":"jeromewjj"},"content":"Shows all aliases stored in the user preferences in a new window. \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":382,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":383,"author":{"gitId":"jeromewjj"},"content":"![show alias window](images/showaliaswindow.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":384,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":385,"author":{"gitId":"CommanderW324"},"content":"Format: `showalias`","lastModifiedDate":"2021-10-29"},{"lineNumber":386,"author":{"gitId":"CommanderW324"},"content":"Keyboard Shortcut: `F2`","lastModifiedDate":"2021-10-29"},{"lineNumber":387,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":388,"author":{"gitId":"CommanderW324"},"content":"Example:","lastModifiedDate":"2021-10-29"},{"lineNumber":389,"author":{"gitId":"CommanderW324"},"content":"* `showalias` will show the aliases in a new window.","lastModifiedDate":"2021-10-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":392,"author":{"gitId":"e0543403"},"content":"### Dealiasing commands: `deletealias`","lastModifiedDate":"2021-10-28"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"CommanderW324"},"content":"Deletes an existing alias.","lastModifiedDate":"2021-10-27"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"DystoriaX"},"content":"Format: `deletealias ALIAS`","lastModifiedDate":"2021-11-08"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"CommanderW324"},"content":"* Deletes the specified alias.","lastModifiedDate":"2021-10-27"},{"lineNumber":399,"author":{"gitId":"DystoriaX"},"content":"* `ALIAS` must be an existing alias in NetworkUS.","lastModifiedDate":"2021-11-08"},{"lineNumber":400,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":401,"author":{"gitId":"DystoriaX"},"content":"Example:","lastModifiedDate":"2021-10-27"},{"lineNumber":402,"author":{"gitId":"e0543403"},"content":"* `deletealias tag -A` will remove the alias `tag -A`.","lastModifiedDate":"2021-10-31"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"e0543403"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-07"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"jeromewjj"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":407,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":408,"author":{"gitId":"DystoriaX"},"content":"## Data Storage","lastModifiedDate":"2021-10-26"},{"lineNumber":409,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":410,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"e0543403"},"content":"Contact list data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-11-08"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":415,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":417,"author":{"gitId":"e0543403"},"content":"Contact data is saved as a JSON file `[JAR file location]/data/contactbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-11-08"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":419,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":420,"author":{"gitId":"e0543403"},"content":"If your changes to the data file makes its format invalid, NetworkUS will discard all data and start with an empty data file the next time its run.","lastModifiedDate":"2021-11-08"},{"lineNumber":421,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"e0543403"},"content":"**Q**: How do I transfer my data to another computer?\u003cbr\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":429,"author":{"gitId":"DystoriaX"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous ContactBook home folder.\u003cbr\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":430,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":431,"author":{"gitId":"DystoriaX"},"content":"**Q**: How do I import existing contacts to NetworkUS?\u003cbr\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":432,"author":{"gitId":"DystoriaX"},"content":"**A**: Unfortunately, NetworkUS does not support importing contact from external sources. You have to put in the contacts one by one.\u003cbr\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":433,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":434,"author":{"gitId":"DystoriaX"},"content":"**Q**: Any tips on managing my contacts?\u003cbr\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":435,"author":{"gitId":"e0543403"},"content":"**A**: You can tag your contacts with their fields of expertise, personalities, etc. You can use the [find](#finding-contacts-find) command to find contacts with desired traits.\u003cbr\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":436,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":437,"author":{"gitId":"DystoriaX"},"content":"**Q**: How can I work faster?\u003cbr\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":438,"author":{"gitId":"e0543403"},"content":"**A**: You can [alias](#aliasing-commands-alias) an existing commands with a shorter alias. Example: `ta` for the `tagall` command.\u003cbr\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":439,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":440,"author":{"gitId":"samyipsh"},"content":"**Q**: Can non CS students use this application?\u003cbr\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":441,"author":{"gitId":"e0543403"},"content":"**A**: Yes. While the fields and functionalities for this release are designed for CS students, anyone can use it to store contacts as a generic contact book management software.\u003cbr\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":442,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":443,"author":{"gitId":"samyipsh"},"content":"**Q**: Why is the data stored offline?\u003cbr\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":444,"author":{"gitId":"DystoriaX"},"content":"**A**: Ease of storage accessibility and security reasons.\u003cbr\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":445,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":446,"author":{"gitId":"samyipsh"},"content":"**Q**: Can I use NetworkUS on my mobile phone?\u003cbr\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":447,"author":{"gitId":"e0543403"},"content":"**A**: NetworkUS can only be used on Java-supported mobile phones.\u003cbr\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":448,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":449,"author":{"gitId":"e0543403"},"content":"**Q**: Why are my alias preferences empty / not updating?\u003cbr\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":450,"author":{"gitId":"e0543403"},"content":"**A**: Try moving the NetworkUS app to a new empty folder and running the jar file again.","lastModifiedDate":"2021-11-11"},{"lineNumber":451,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":452,"author":{"gitId":"CommanderW324"},"content":"**Q**: How do I form a group using the app?\u003cbr\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":453,"author":{"gitId":"e0543403"},"content":"**A**: You can group contacts together under the same tag by using the [tag](#tagging-contacts-tag) function and specifying their indexes.\u003cbr\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":454,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":455,"author":{"gitId":"e0543403"},"content":"**Q**: Why can\u0027t I make an alias using some specific words?\u003cbr\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":456,"author":{"gitId":"e0543403"},"content":"**A**: Refer to the section on examples under the [alias](#aliasing-commands-alias) command to see what words are not available for use as an alias.\u003cbr\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":458,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-26"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":460,"author":{"gitId":"jeromewjj"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":461,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":462,"author":{"gitId":"jeromewjj"},"content":"## Miscellaneous","lastModifiedDate":"2021-11-07"},{"lineNumber":463,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":464,"author":{"gitId":"e0543403"},"content":"### Duplicate detection","lastModifiedDate":"2021-11-01"},{"lineNumber":465,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":466,"author":{"gitId":"e0543403"},"content":"**Checked fields**: `Phone`, `Email`, `Github` and `Linkedin`","lastModifiedDate":"2021-11-04"},{"lineNumber":467,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":468,"author":{"gitId":"CommanderW324"},"content":"A contact is considered a duplicate in any of the below cases:","lastModifiedDate":"2021-11-11"},{"lineNumber":469,"author":{"gitId":"CommanderW324"},"content":"* All of that contact\u0027s **Checked fields** are empty, and there is another contact with the same name and also having all their **Checked fields** empty.","lastModifiedDate":"2021-11-11"},{"lineNumber":470,"author":{"gitId":"CommanderW324"},"content":"* That contact has the same name as another contact, and also at least one identical non-empty **Checked field**. ","lastModifiedDate":"2021-11-11"},{"lineNumber":471,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":472,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":473,"author":{"gitId":"samyipsh"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:exclamation: **Note:**","lastModifiedDate":"2021-11-07"},{"lineNumber":474,"author":{"gitId":"samyipsh"},"content":"The equality check for the names of 2 contacts disregards capitalization and spaces in the names being compared. ","lastModifiedDate":"2021-11-07"},{"lineNumber":475,"author":{"gitId":"e0543403"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":476,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":477,"author":{"gitId":"e0543403"},"content":"### Valid Fields","lastModifiedDate":"2021-11-01"},{"lineNumber":478,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":479,"author":{"gitId":"e0543403"},"content":"Below are the requirements for what constitutes as valid for the fields in NetworkUS.","lastModifiedDate":"2021-11-01"},{"lineNumber":480,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":481,"author":{"gitId":"e0543403"},"content":"Field | Format, Examples","lastModifiedDate":"2021-11-01"},{"lineNumber":482,"author":{"gitId":"e0543403"},"content":"--------|------------------","lastModifiedDate":"2021-11-01"},{"lineNumber":483,"author":{"gitId":"e0543403"},"content":"**Name** | Only letters and/or numbers and spaces \u003cbr\u003e e.g., `Sam Yeo`","lastModifiedDate":"2021-11-02"},{"lineNumber":484,"author":{"gitId":"e0543403"},"content":"**Tag** | Letters and/or numbers without spaces \u003cbr\u003e e.g., `CS2103T` , `programmer`","lastModifiedDate":"2021-11-01"},{"lineNumber":485,"author":{"gitId":"e0543403"},"content":"**Phone** |  Only numbers at least 3 digits long \u003cbr\u003e e.g., `999` , `62353535`","lastModifiedDate":"2021-11-01"},{"lineNumber":486,"author":{"gitId":"e0543403"},"content":"**Email** | `local-part` + @ + `domain-name` \u003cbr\u003e `local-part` contains letters, numbers and special characters excluding `+` `-` `_` `.`, cannot start or end with special characters \u003cbr\u003e `domain-name` consists of `domain labels` seperated by periods \u003cbr\u003e `domain labels` consist of at least 2 letters and/or numbers \u003cbr\u003e `domain labels` excluding the last `domain label` can have non-consecutive hyphens but cannot start or end with a hyphen \u003cbr\u003e e.g., `berniceyu@example.com`","lastModifiedDate":"2021-11-01"},{"lineNumber":487,"author":{"gitId":"e0543403"},"content":"**Github** | Only letters, numbers and hyphens \u003cbr\u003e Cannot start or end with a hyphen or have multiple consecutive hyphens \u003cbr\u003e Has a maximum length of 39 characters \u003cbr\u003e e.g., `Alexio`","lastModifiedDate":"2021-11-01"},{"lineNumber":488,"author":{"gitId":"e0543403"},"content":"**LinkedIn** | Any valid LinkedIn URL \u003cbr\u003e e.g., `https://www.linkedin.com/in/benson/`","lastModifiedDate":"2021-11-01"},{"lineNumber":489,"author":{"gitId":"e0543403"},"content":"**Details** | Anything you can type in \u003cbr\u003e e.g., `Quite literally anything you can type in.`","lastModifiedDate":"2021-11-04"},{"lineNumber":490,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":491,"author":{"gitId":"DystoriaX"},"content":"### Valid index","lastModifiedDate":"2021-10-26"},{"lineNumber":492,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":493,"author":{"gitId":"DystoriaX"},"content":"An index is valid if it is a **positive** integer.\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":494,"author":{"gitId":"DystoriaX"},"content":"Example of valid indexes: `1`, `2`, `3`, ...\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":495,"author":{"gitId":"DystoriaX"},"content":"Example of invalid indexes: `-1`, `0`, `*`, `+1`, ...","lastModifiedDate":"2021-10-26"},{"lineNumber":496,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":497,"author":{"gitId":"DystoriaX"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-26"},{"lineNumber":498,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":499,"author":{"gitId":"jeromewjj"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":500,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":501,"author":{"gitId":"DystoriaX"},"content":"## Glossary","lastModifiedDate":"2021-10-26"},{"lineNumber":502,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":503,"author":{"gitId":"DystoriaX"},"content":"### Displayed contacts","lastModifiedDate":"2021-10-26"},{"lineNumber":504,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":505,"author":{"gitId":"DystoriaX"},"content":"All contacts **displayed** in NetworkUS application.","lastModifiedDate":"2021-10-26"},{"lineNumber":506,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":507,"author":{"gitId":"e0543403"},"content":"Most of the commands in NetworkUS act on the currently viewable list. Thus, whenever there are mentions of Index used in Commands it refers to the index of the currently displayed contacts list.\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":508,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":509,"author":{"gitId":"e0543403"},"content":"Here `delete 3` will delete \"Charlotte Oliviero\"\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":510,"author":{"gitId":"e0543403"},"content":"![Original](images/Ui.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":511,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":512,"author":{"gitId":"jeromewjj"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":513,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":514,"author":{"gitId":"e0543403"},"content":"Here `delete 3` will show an error message as 3 is not shown (Even though it is in the original list).","lastModifiedDate":"2021-11-08"},{"lineNumber":515,"author":{"gitId":"e0543403"},"content":"![filtered](images/findList.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":516,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":517,"author":{"gitId":"DystoriaX"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-10-26"},{"lineNumber":518,"author":{"gitId":"DystoriaX"},"content":"Most NetworkUS commands will execute on displayed contacts.","lastModifiedDate":"2021-10-26"},{"lineNumber":519,"author":{"gitId":"DystoriaX"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":520,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":521,"author":{"gitId":"DystoriaX"},"content":"### Global contacts","lastModifiedDate":"2021-10-26"},{"lineNumber":522,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":523,"author":{"gitId":"DystoriaX"},"content":"All contacts that are **stored** in the NetworkUS.","lastModifiedDate":"2021-10-26"},{"lineNumber":524,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":525,"author":{"gitId":"jeromewjj"},"content":"### Field","lastModifiedDate":"2021-11-07"},{"lineNumber":526,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":527,"author":{"gitId":"CommanderW324"},"content":"A field is specific information of a contact in NetworkUS\u0027s contact list like phone number.","lastModifiedDate":"2021-11-11"},{"lineNumber":528,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":529,"author":{"gitId":"jeromewjj"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":530,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":531,"author":{"gitId":"jeromewjj"},"content":"### JavaScript Object Notation (JSON)","lastModifiedDate":"2021-11-07"},{"lineNumber":532,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":533,"author":{"gitId":"e0543403"},"content":"JSON is the file format that NetworkUS uses to store the contacts.","lastModifiedDate":"2021-11-08"},{"lineNumber":534,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":535,"author":{"gitId":"jeromewjj"},"content":"### Graphical User Interface (GUI)","lastModifiedDate":"2021-11-07"},{"lineNumber":536,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":537,"author":{"gitId":"jeromewjj"},"content":"A GUI is an interface that uses visual indicator to interact with the system.","lastModifiedDate":"2021-11-07"},{"lineNumber":538,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":539,"author":{"gitId":"jeromewjj"},"content":"### Command Line Interface (CLI)","lastModifiedDate":"2021-11-07"},{"lineNumber":540,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":541,"author":{"gitId":"jeromewjj"},"content":"A CLI is a text-based interface that uses text input to interact with the system.","lastModifiedDate":"2021-11-07"},{"lineNumber":542,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":543,"author":{"gitId":"jeromewjj"},"content":"### Command","lastModifiedDate":"2021-11-07"},{"lineNumber":544,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":545,"author":{"gitId":"e0543403"},"content":"A command is an instruction that you can use in NetworkUS to perform a certain task.","lastModifiedDate":"2021-11-08"},{"lineNumber":546,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":547,"author":{"gitId":"jeromewjj"},"content":"### Prefix","lastModifiedDate":"2021-11-07"},{"lineNumber":548,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":549,"author":{"gitId":"e0543403"},"content":"Prefixes are unique identifiers in front of parameters which are used by NetworkUS to identify which fields the values belong to.","lastModifiedDate":"2021-11-08"},{"lineNumber":550,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":551,"author":{"gitId":"jeromewjj"},"content":"### Alias","lastModifiedDate":"2021-11-07"},{"lineNumber":552,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":553,"author":{"gitId":"e0543403"},"content":"Aliases are alternative words that you can use to represent the standard commands that NetworkUS uses.","lastModifiedDate":"2021-11-08"},{"lineNumber":554,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":555,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"jeromewjj"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":558,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":559,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"e0543403"},"content":"[**Add**](#adding-a-contact-add) | `add n/NAME [p/PHONE_NUMBER] [e/EMAIL] [g/GITHUB_USERNAME] [l/LINKEDIN] [d/DETAIL] [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com t/friend t/colleague`","lastModifiedDate":"2021-11-11"},{"lineNumber":564,"author":{"gitId":"e0543403"},"content":"[**Alias**](#aliasing-commands-alias) | `alias COMMAND ALIAS`\u003cbr\u003e e.g., `alias tagall tag -A`","lastModifiedDate":"2021-11-11"},{"lineNumber":565,"author":{"gitId":"e0543403"},"content":"[**Clear**](#clearing-all-entries-clear) | `clear`","lastModifiedDate":"2021-11-11"},{"lineNumber":566,"author":{"gitId":"e0543403"},"content":"[**Delete**](#deleting-a-contact-delete) | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2021-11-11"},{"lineNumber":567,"author":{"gitId":"e0543403"},"content":"[**Delete alias**](#dealiasing-commands-deletealias) | `deletealias ALIAS`\u003cbr\u003e e.g., `deletealias tag -A`","lastModifiedDate":"2021-11-11"},{"lineNumber":568,"author":{"gitId":"e0543403"},"content":"[**Edit**](#editing-a-contact-edit) | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [g/GITHUB_USERNAME] [l/LINKEDIN] [d/DETAIL] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2021-11-11"},{"lineNumber":569,"author":{"gitId":"e0543403"},"content":"[**Find**](#finding-contacts-find) | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2021-11-11"},{"lineNumber":570,"author":{"gitId":"e0543403"},"content":"[**Help**](#viewing-help-help) | `help`","lastModifiedDate":"2021-11-11"},{"lineNumber":571,"author":{"gitId":"e0543403"},"content":"[**Open**](#opening-a-field-of-a-contact-open) | `open INDEXES FIELD` \u003cbr\u003e e.g., `open 1 linkedin`","lastModifiedDate":"2021-11-11"},{"lineNumber":572,"author":{"gitId":"e0543403"},"content":"[**List**](#listing-all-contacts-list) | `list`","lastModifiedDate":"2021-11-11"},{"lineNumber":573,"author":{"gitId":"e0543403"},"content":"[**Replace tag**](#replace-tag-from-all-contacts-replacetag) | `replacetag TAG1 TAG2`\u003cbr\u003e e.g., `replacetag friend enemy`","lastModifiedDate":"2021-11-11"},{"lineNumber":574,"author":{"gitId":"e0543403"},"content":"[**Show alias**](#showing-saved-aliases-showalias) | `showalias`","lastModifiedDate":"2021-11-11"},{"lineNumber":575,"author":{"gitId":"e0543403"},"content":"[**Show tags**](#showing-tags-showtags) | `showtags`","lastModifiedDate":"2021-11-11"},{"lineNumber":576,"author":{"gitId":"e0543403"},"content":"[**Tag**](#tagging-contacts-tag) | `tag INDEXES TAG` \u003cbr\u003e e.g., `tag 1 2 programmer`","lastModifiedDate":"2021-11-11"},{"lineNumber":577,"author":{"gitId":"e0543403"},"content":"[**Tag all**](#tagging-displayed-contacts-tagall) | `tagall TAG` \u003cbr\u003e e.g., `tagall programmer`","lastModifiedDate":"2021-11-11"},{"lineNumber":578,"author":{"gitId":"e0543403"},"content":"[**Untag**](#untagging-contacts-untag) | `untag INDEXES TAG`\u003cbr\u003e e.g., `untag 1 2 friend`","lastModifiedDate":"2021-11-11"},{"lineNumber":579,"author":{"gitId":"e0543403"},"content":"[**Untag all**](#untagging-displayed-contacts-untagall) | `untagall TAG`\u003cbr\u003e e.g., `untagall friend`","lastModifiedDate":"2021-11-11"},{"lineNumber":580,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"samyipsh":14,"e0543403":154,"CommanderW324":68,"jeromewjj":101,"-":147,"DystoriaX":96}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"e0543403"},"content":"    content: \"NetworkUS\";","lastModifiedDate":"2021-09-22"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"e0543403":1,"-":294}},{"path":"docs/diagrams/AliasSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"DystoriaX"},"content":"@startuml","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"DystoriaX"},"content":"!include style.puml","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"DystoriaX"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"DystoriaX"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"DystoriaX"},"content":"participant \":ContactBookParser\" as ContactBookParser LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"DystoriaX"},"content":"participant \"p:AliasCommandParser\" as AliasCommandParser LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"DystoriaX"},"content":"participant \"c:AliasCommand\" as AliasCommand LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"DystoriaX"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"DystoriaX"},"content":"end box","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"DystoriaX"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"DystoriaX"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"DystoriaX"},"content":"end box","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"DystoriaX"},"content":"[-\u003e LogicManager ++ : execute(\"alias tagall tag -A\")","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"DystoriaX"},"content":"LogicManager -\u003e ContactBookParser ++ : parseCommand(\"alias tagall tag -A\")","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"DystoriaX"},"content":"ContactBookParser -\u003e ContactBookParser ++ : replaceAlias(\"alias tagall tag -A\")","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"DystoriaX"},"content":"ContactBookParser --\u003e ContactBookParser -- : \"alias tagall tag -A\"","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"DystoriaX"},"content":"create AliasCommandParser","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"DystoriaX"},"content":"ContactBookParser -\u003e AliasCommandParser ++","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"DystoriaX"},"content":"AliasCommandParser --\u003e ContactBookParser -- : p","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"DystoriaX"},"content":"ContactBookParser -\u003e AliasCommandParser ++ : parse(\"tagall tag -A\")","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"DystoriaX"},"content":"create AliasCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"DystoriaX"},"content":"AliasCommandParser -\u003e AliasCommand ++","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"DystoriaX"},"content":"AliasCommand --\u003e AliasCommandParser -- : c","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"DystoriaX"},"content":"AliasCommandParser --\u003e ContactBookParser -- : c","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"DystoriaX"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"DystoriaX"},"content":"AliasCommandParser -[hidden]\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"DystoriaX"},"content":"destroy AliasCommandParser","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"DystoriaX"},"content":"ContactBookParser --\u003e LogicManager -- : c","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"DystoriaX"},"content":"LogicManager -\u003e AliasCommand ++ : execute()","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"DystoriaX"},"content":"AliasCommand -\u003e Model ++ : addAlias(\"tag -A\", \"tagall\")","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"DystoriaX"},"content":"Model --\u003e AliasCommand --","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"DystoriaX"},"content":"create CommandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"DystoriaX"},"content":"AliasCommand -\u003e CommandResult ++","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"DystoriaX"},"content":"CommandResult --\u003e AliasCommand -- : r","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"DystoriaX"},"content":"AliasCommand --\u003e LogicManager -- : r","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"DystoriaX"},"content":"LogicManager --\u003e[ : r","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"DystoriaX"},"content":"@enduml","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"DystoriaX":46}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"samyipsh"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveContactBook(contactBook)","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"samyipsh":1,"-":37}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"samyipsh"},"content":"ContactBook *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"samyipsh"},"content":"ContactBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList *-right-\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Person -up-\u003e \"*\" Tag","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"jeromewjj"},"content":"Person *--\u003e Github","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"jeromewjj"},"content":"Person *--\u003e LinkedIn","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"jeromewjj"},"content":"Person *--\u003e Detail","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"samyipsh":2,"jeromewjj":3,"-":18}},{"path":"docs/diagrams/CommitActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"start","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":":User executes command;","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"samyipsh"},"content":"if () then ([command commits ContactBook])","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    :Purge redundant states;","lastModifiedDate":"2020-12-12"},{"lineNumber":10,"author":{"gitId":"samyipsh"},"content":"    :Save ContactBook to","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"samyipsh"},"content":"    contactBookStateList;","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"else ([else])","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"endif","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"stop","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"samyipsh":3,"-":12}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"samyipsh"},"content":"participant \":ContactBookParser\" as ContactBookParser LOGIC_COLOR","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"samyipsh"},"content":"LogicManager -\u003e ContactBookParser : parseCommand(\"delete 1\")","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"samyipsh"},"content":"activate ContactBookParser","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"samyipsh"},"content":"ContactBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"samyipsh"},"content":"DeleteCommandParser --\u003eContactBookParser","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"samyipsh"},"content":"ContactBookParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"samyipsh"},"content":"DeleteCommandParser --\u003e ContactBookParser : d","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"samyipsh"},"content":"DeleteCommandParser -[hidden]-\u003e ContactBookParser","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"samyipsh"},"content":"ContactBookParser --\u003e LogicManager : d","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"samyipsh"},"content":"deactivate ContactBookParser","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e Model : deletePerson(1)","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"samyipsh":10,"-":59}},{"path":"docs/diagrams/FindTagSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"e0543403"},"content":"@startuml","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"e0543403"},"content":"!include style.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"e0543403"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"e0543403"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"e0543403"},"content":"participant \":ContactBookParser\" as ContactBookParser LOGIC_COLOR","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"e0543403"},"content":"participant \":FindCommandParser\" as FindCommandParser LOGIC_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"e0543403"},"content":"participant \"f:FindCommand\" as FindCommand LOGIC_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"e0543403"},"content":"participant \"result:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"e0543403"},"content":"end box","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"e0543403"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"e0543403"},"content":"participant \"p:FoundInNameOrTagsPredicate\" as FoundInNameOrTagsPredicate MODEL_COLOR","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"e0543403"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"e0543403"},"content":"end box","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"e0543403"},"content":"[-\u003e LogicManager : execute(\"find programmer\")","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"e0543403"},"content":"activate LogicManager","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"e0543403"},"content":"LogicManager -\u003e ContactBookParser : parseCommand(\"find programmer\")","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"e0543403"},"content":"activate ContactBookParser","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"e0543403"},"content":"create FindCommandParser","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"e0543403"},"content":"ContactBookParser -\u003e FindCommandParser : FindCommandParser()","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"e0543403"},"content":"activate FindCommandParser","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"e0543403"},"content":"FindCommandParser --\u003e ContactBookParser","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"e0543403"},"content":"deactivate FindCommandParser","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"e0543403"},"content":"ContactBookParser -\u003e FindCommandParser : parse(\"programmer\")","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"e0543403"},"content":"activate FindCommandParser","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"e0543403"},"content":"create FoundInNameOrTagsPredicate","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"e0543403"},"content":"FindCommandParser -\u003e FoundInNameOrTagsPredicate : FoundInNameOrTagsPredicate(\"programmer\")","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"e0543403"},"content":"activate FoundInNameOrTagsPredicate","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"e0543403"},"content":"FoundInNameOrTagsPredicate --\u003e FindCommandParser : p","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"e0543403"},"content":"deactivate FoundInNameOrTagsPredicate","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"e0543403"},"content":"create FindCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"e0543403"},"content":"FindCommandParser -\u003e FindCommand : FindCommand(p)","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"e0543403"},"content":"activate FindCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"e0543403"},"content":"FindCommand --\u003e FindCommandParser : f","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"e0543403"},"content":"deactivate FindCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"e0543403"},"content":"FindCommandParser --\u003e ContactBookParser : f","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"e0543403"},"content":"deactivate FindCommandParser","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"e0543403"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"e0543403"},"content":"FindCommandParser -[hidden]-\u003e ContactBookParser","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"e0543403"},"content":"destroy FindCommandParser","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"e0543403"},"content":"ContactBookParser --\u003e LogicManager : f","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"e0543403"},"content":"deactivate ContactBookParser","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"e0543403"},"content":"LogicManager -\u003e FindCommand : execute()","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"e0543403"},"content":"activate FindCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"e0543403"},"content":"FindCommand -\u003e Model : updateFilteredPersonList(p)","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"e0543403"},"content":"activate Model","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"e0543403"},"content":"Model --\u003e FindCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"e0543403"},"content":"deactivate Model","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"e0543403"},"content":"create CommandResult","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"e0543403"},"content":"FindCommand -\u003e CommandResult","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"e0543403"},"content":"activate CommandResult","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"e0543403"},"content":"CommandResult --\u003e FindCommand : result","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"e0543403"},"content":"deactivate CommandResult","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"e0543403"},"content":"FindCommand --\u003e LogicManager : result","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"e0543403"},"content":"deactivate FindCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"e0543403"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"e0543403"},"content":"deactivate LogicManager","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"e0543403"},"content":"destroy FindCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"e0543403"},"content":"destroy FoundInNameOrTagsPredicate","lastModifiedDate":"2021-11-06"},{"lineNumber":81,"author":{"gitId":"e0543403"},"content":"@enduml","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"e0543403":81}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"samyipsh"},"content":"Class ContactBookParser","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Interface Logic \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"samyipsh"},"content":"LogicManager -right-\u003e\"1\" ContactBookParser","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"samyipsh"},"content":"ContactBookParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"samyipsh":3,"-":43}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"samyipsh"},"content":"Interface ReadOnlyContactBook \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Interface ReadOnlyUserPrefs \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-05-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"samyipsh"},"content":"Class ContactBook","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"samyipsh"},"content":"Class ReadOnlyContactBook","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class Model","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"jeromewjj"},"content":"Class Detail","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"jeromewjj"},"content":"Class Github","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"jeromewjj"},"content":"Class LinkedIn","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"samyipsh"},"content":"ContactBook .up.|\u003e ReadOnlyContactBook","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"samyipsh"},"content":"Model .left.\u003e ReadOnlyContactBook","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"samyipsh"},"content":"ModelManager -left-\u003e \"1\" ContactBook","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"samyipsh"},"content":"ContactBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"jeromewjj"},"content":"Person *--\u003e \"1\" Name","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"jeromewjj"},"content":"Person *--\u003e \"1\" Phone","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"jeromewjj"},"content":"Person *--\u003e \"1\" Email","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"jeromewjj"},"content":"Person *--\u003e \"1\" Github","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"jeromewjj"},"content":"Person *--\u003e \"1\" LinkedIn","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"jeromewjj"},"content":"Person *--\u003e \"1\" Detail","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"jeromewjj"},"content":"Email -[hidden]right-\u003e Tag","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"jeromewjj"},"content":"Github -[hidden]right-\u003e Tag","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"jeromewjj"},"content":"LinkedIn -[hidden]right-\u003e Tag","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"jeromewjj"},"content":"Tag -[hidden]right-\u003e Detail","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"ModelManager --\u003e\"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"samyipsh":7,"jeromewjj":13,"-":40}},{"path":"docs/diagrams/OpenFieldCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"samyipsh"},"content":"@startuml","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"samyipsh"},"content":"start","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"samyipsh"},"content":":User executes command;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"samyipsh"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"samyipsh"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"samyipsh"},"content":"if () then ([valid command])","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"samyipsh"},"content":"    : Check for correct command syntax;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"samyipsh"},"content":"        if() then ([valid indexes])","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"samyipsh"},"content":"            : Valid OpenField command;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"samyipsh"},"content":"            repeat","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"samyipsh"},"content":"                :Open field content of specified person in browser;","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"samyipsh"},"content":"                repeat while () is ([hasNextIndex])","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"samyipsh"},"content":"                -\u003e[else];","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"samyipsh"},"content":"                : Return success message;","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"samyipsh"},"content":"        else([else])","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"samyipsh"},"content":"            : Display invalid index error ;","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"samyipsh"},"content":"        endif","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"samyipsh"},"content":"else ([else])","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"samyipsh"},"content":"    : Display unknown command error;","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"samyipsh"},"content":"endif","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"samyipsh"},"content":"stop","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"samyipsh"},"content":"@enduml","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"samyipsh":25}},{"path":"docs/diagrams/OpenFieldSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"samyipsh"},"content":"@startuml","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"samyipsh"},"content":"!include style.puml","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"samyipsh"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"samyipsh"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"samyipsh"},"content":"participant \":ContactBookParser\" as ContactBookParser LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"samyipsh"},"content":"participant \":OpenFieldCommandParser\" as OpenFieldCommandParser LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"samyipsh"},"content":"participant \"o:OpenFieldCommand\" as OpenFieldCommand LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"samyipsh"},"content":"participant \"res:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"samyipsh"},"content":"participant \"UserBrowser\" as UserBrowser LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"samyipsh"},"content":"end box","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"samyipsh"},"content":"[-\u003e LogicManager : execute(\"open 1 2 github\")","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"samyipsh"},"content":"activate LogicManager","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"samyipsh"},"content":"LogicManager -\u003e ContactBookParser : parseCommand(\"open 1 2 github\")","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"samyipsh"},"content":"activate ContactBookParser","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"samyipsh"},"content":"create OpenFieldCommandParser","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"samyipsh"},"content":"ContactBookParser -\u003e OpenFieldCommandParser","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"samyipsh"},"content":"activate OpenFieldCommandParser","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"samyipsh"},"content":"OpenFieldCommandParser --\u003e ContactBookParser","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"samyipsh"},"content":"deactivate OpenFieldCommandParser","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"samyipsh"},"content":"ContactBookParser -\u003e OpenFieldCommandParser : parse(\"open 1 2 github)","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"samyipsh"},"content":"activate OpenFieldCommandParser","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"samyipsh"},"content":"create OpenFieldCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"samyipsh"},"content":"OpenFieldCommandParser -\u003e OpenFieldCommand :","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"samyipsh"},"content":"activate OpenFieldCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"samyipsh"},"content":"OpenFieldCommand --\u003e OpenFieldCommandParser : o","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"samyipsh"},"content":"deactivate OpenFieldCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"samyipsh"},"content":"OpenFieldCommandParser --\u003e ContactBookParser : o","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"samyipsh"},"content":"deactivate OpenFieldCommandParser","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"samyipsh"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"samyipsh"},"content":"OpenFieldCommandParser -[hidden]-\u003e ContactBookParser","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"samyipsh"},"content":"destroy OpenFieldCommandParser","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"samyipsh"},"content":"ContactBookParser --\u003e LogicManager : o","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"samyipsh"},"content":"deactivate ContactBookParser","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"samyipsh"},"content":"LogicManager -\u003e OpenFieldCommand : execute()","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"samyipsh"},"content":"activate OpenFieldCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"samyipsh"},"content":"loop number of indexes","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"samyipsh"},"content":"OpenFieldCommand -\u003e UserBrowser : openUrl()","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"samyipsh"},"content":"activate UserBrowser","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"samyipsh"},"content":"UserBrowser --\u003e OpenFieldCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"samyipsh"},"content":"deactivate UserBrowser","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"samyipsh"},"content":"end","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"samyipsh"},"content":"create CommandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"samyipsh"},"content":"OpenFieldCommand -\u003e CommandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"samyipsh"},"content":"activate CommandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"samyipsh"},"content":"CommandResult --\u003e OpenFieldCommand : res","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"samyipsh"},"content":"deactivate CommandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"samyipsh"},"content":"OpenFieldCommand --\u003e LogicManager : res","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"samyipsh"},"content":"deactivate OpenFieldCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"samyipsh"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"samyipsh"},"content":"deactivate LogicManager","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":70,"author":{"gitId":"samyipsh"},"content":"destroy OpenFieldCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":71,"author":{"gitId":"samyipsh"},"content":"@enduml","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"samyipsh":71}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Interface Parser \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"samyipsh"},"content":"Class ContactBookParser","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"samyipsh"},"content":"HiddenOutside ..\u003e ContactBookParser","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"samyipsh"},"content":"ContactBookParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"samyipsh"},"content":"ContactBookParser ..\u003e Command : returns \u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"samyipsh":4,"-":34}},{"path":"docs/diagrams/ReplaceAliasActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"DystoriaX"},"content":"@startuml","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"DystoriaX"},"content":"start","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"DystoriaX"},"content":":User executes command;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"DystoriaX"},"content":":Replaces user\u0027s command with by finding","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"DystoriaX"},"content":"and replacing matching alias (if any);","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"DystoriaX"},"content":"if () then ([valid command])","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"DystoriaX"},"content":"    :Executes the command;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"DystoriaX"},"content":"else ([else])","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"DystoriaX"},"content":"    :Shows error to user;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"DystoriaX"},"content":"endif","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"DystoriaX"},"content":"stop","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"DystoriaX"},"content":"@enduml","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"DystoriaX":15}},{"path":"docs/diagrams/ReplaceAliasSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"DystoriaX"},"content":"@startuml","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"DystoriaX"},"content":"!include style.puml","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"DystoriaX"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"DystoriaX"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"DystoriaX"},"content":"participant \":ContactBookParser\" as ContactBookParser LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"DystoriaX"},"content":"end box","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"DystoriaX"},"content":"[-\u003e LogicManager : execute(\"tag -A OS\")","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"DystoriaX"},"content":"activate LogicManager","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"DystoriaX"},"content":"LogicManager -\u003e ContactBookParser : parseCommand(\"tag -A OS\")","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"DystoriaX"},"content":"activate ContactBookParser","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"DystoriaX"},"content":"ContactBookParser -\u003e ContactBookParser : replaceAlias(\"tag -A OS\")","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"DystoriaX"},"content":"activate ContactBookParser","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"DystoriaX"},"content":"ContactBookParser --\u003e ContactBookParser : \"tagall OS\"","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"DystoriaX"},"content":"deactivate ContactBookParser","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"DystoriaX"},"content":"ref over ContactBookParser","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"DystoriaX"},"content":"Calling corresponding XYZCommandParser","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"DystoriaX"},"content":"and obtain a XYZCommand object.","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"DystoriaX"},"content":"end","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"DystoriaX"},"content":"ContactBookParser --\u003e LogicManager : command","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"DystoriaX"},"content":"deactivate ContactBookParser","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"DystoriaX"},"content":"ref over LogicManager","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"DystoriaX"},"content":"Execute the command and get result of","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"DystoriaX"},"content":"the CommandResult object","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"DystoriaX"},"content":"end","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"DystoriaX"},"content":"LogicManager --\u003e[","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"DystoriaX"},"content":"deactivate LogicManager","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"DystoriaX"},"content":"@enduml","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"DystoriaX":40}},{"path":"docs/diagrams/ReplaceTagCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jeromewjj"},"content":"@startuml","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"jeromewjj"},"content":"start","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"jeromewjj"},"content":":User executes command;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"jeromewjj"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"jeromewjj"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"jeromewjj"},"content":"if () then ([valid argument])","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"jeromewjj"},"content":"    :Search for person with specified tag in displayed list;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"jeromewjj"},"content":"    if () then ([person found])","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"jeromewjj"},"content":"        : Replace person\u0027s specified tag with new tag;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"jeromewjj"},"content":"    else ([else])","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"jeromewjj"},"content":"        : Display error message;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"jeromewjj"},"content":"    endif","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"jeromewjj"},"content":"else ([else])","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"jeromewjj"},"content":"    : Display error message;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"jeromewjj"},"content":"endif","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"jeromewjj"},"content":"stop","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"jeromewjj"},"content":"@enduml","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"jeromewjj":19}},{"path":"docs/diagrams/ReplaceTagSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jeromewjj"},"content":"@startuml","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"jeromewjj"},"content":"!include style.puml","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"jeromewjj"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"jeromewjj"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"jeromewjj"},"content":"participant \":ContactBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"jeromewjj"},"content":"participant \":ReplaceTagCommandParser\" as ReplaceTagCommandParser LOGIC_COLOR","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"jeromewjj"},"content":"participant \"r:ReplaceTagCommand\" as ReplaceTagCommand LOGIC_COLOR","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"jeromewjj"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"jeromewjj"},"content":"end box","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"jeromewjj"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"jeromewjj"},"content":"participant \":TagsPresentPredicate\" as TagsPresentPredicate MODEL_COLOR","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"jeromewjj"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"jeromewjj"},"content":"end box","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"jeromewjj"},"content":"[-\u003e LogicManager : execute(\"replacetag friend enemy\")","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"jeromewjj"},"content":"activate LogicManager","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"jeromewjj"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"replacetag friend enemy\")","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"jeromewjj"},"content":"activate AddressBookParser","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"jeromewjj"},"content":"create ReplaceTagCommandParser","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"jeromewjj"},"content":"AddressBookParser -\u003e ReplaceTagCommandParser","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"jeromewjj"},"content":"activate ReplaceTagCommandParser","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"jeromewjj"},"content":"create TagsPresentPredicate","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"jeromewjj"},"content":"ReplaceTagCommandParser -\u003e TagsPresentPredicate","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"jeromewjj"},"content":"activate TagsPresentPredicate","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"jeromewjj"},"content":"TagsPresentPredicate --\u003e ReplaceTagCommandParser","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"jeromewjj"},"content":"deactivate TagsPresentPredicate","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"jeromewjj"},"content":"ReplaceTagCommandParser --\u003e AddressBookParser","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"jeromewjj"},"content":"deactivate ReplaceTagCommandParser","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"jeromewjj"},"content":"AddressBookParser -\u003e ReplaceTagCommandParser : parse(\"friend enemy\")","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"jeromewjj"},"content":"activate ReplaceTagCommandParser","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"jeromewjj"},"content":"create ReplaceTagCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"jeromewjj"},"content":"ReplaceTagCommandParser -\u003e ReplaceTagCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"jeromewjj"},"content":"activate ReplaceTagCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"jeromewjj"},"content":"ReplaceTagCommand --\u003e ReplaceTagCommandParser : r","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"jeromewjj"},"content":"deactivate ReplaceTagCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"jeromewjj"},"content":"ReplaceTagCommandParser --\u003e AddressBookParser : r","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"jeromewjj"},"content":"deactivate ReplaceTagCommandParser","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"jeromewjj"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"jeromewjj"},"content":"ReplaceTagCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"jeromewjj"},"content":"destroy ReplaceTagCommandParser","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"jeromewjj"},"content":"AddressBookParser --\u003e LogicManager : r","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"jeromewjj"},"content":"deactivate AddressBookParser","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"jeromewjj"},"content":"LogicManager -\u003e ReplaceTagCommand : execute()","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"jeromewjj"},"content":"activate ReplaceTagCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":59,"author":{"gitId":"jeromewjj"},"content":"ReplaceTagCommand -\u003e Model : getFilteredPersonList()","lastModifiedDate":"2021-11-06"},{"lineNumber":60,"author":{"gitId":"jeromewjj"},"content":"activate Model","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"jeromewjj"},"content":"Model --\u003e ReplaceTagCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":63,"author":{"gitId":"jeromewjj"},"content":"deactivate Model","lastModifiedDate":"2021-11-06"},{"lineNumber":64,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":65,"author":{"gitId":"jeromewjj"},"content":"create CommandResult","lastModifiedDate":"2021-11-06"},{"lineNumber":66,"author":{"gitId":"jeromewjj"},"content":"ReplaceTagCommand -\u003e CommandResult","lastModifiedDate":"2021-11-06"},{"lineNumber":67,"author":{"gitId":"jeromewjj"},"content":"activate CommandResult","lastModifiedDate":"2021-11-06"},{"lineNumber":68,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":69,"author":{"gitId":"jeromewjj"},"content":"CommandResult --\u003e ReplaceTagCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":70,"author":{"gitId":"jeromewjj"},"content":"deactivate CommandResult","lastModifiedDate":"2021-11-06"},{"lineNumber":71,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":72,"author":{"gitId":"jeromewjj"},"content":"destroy TagsPresentPredicate","lastModifiedDate":"2021-11-06"},{"lineNumber":73,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":74,"author":{"gitId":"jeromewjj"},"content":"ReplaceTagCommand --\u003e LogicManager : result","lastModifiedDate":"2021-11-06"},{"lineNumber":75,"author":{"gitId":"jeromewjj"},"content":"deactivate ReplaceTagCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":76,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":77,"author":{"gitId":"jeromewjj"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-11-06"},{"lineNumber":78,"author":{"gitId":"jeromewjj"},"content":"deactivate LogicManager","lastModifiedDate":"2021-11-06"},{"lineNumber":79,"author":{"gitId":"jeromewjj"},"content":"@enduml","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"jeromewjj":79}},{"path":"docs/diagrams/ShowAliasActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"CommanderW324"},"content":"@startuml","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"CommanderW324"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"CommanderW324"},"content":"start","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"CommanderW324"},"content":":User executes Show Alias Command;","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"CommanderW324"},"content":"if () then ([isShowing])","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"CommanderW324"},"content":":Refocuses Alias Window;","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"CommanderW324"},"content":"else([else])","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"CommanderW324"},"content":":Shows Alias Window;","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"CommanderW324"},"content":"endif","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"CommanderW324"},"content":":User executes any other Command;","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"CommanderW324"},"content":":Alias Window Retrieves Data;","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"CommanderW324"},"content":"if() then ([isShowing]))","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"CommanderW324"},"content":":Updates Refreshes;","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"CommanderW324"},"content":"else ([else])","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"CommanderW324"},"content":"endif","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"CommanderW324"},"content":"stop","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"CommanderW324"},"content":"@enduml","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"CommanderW324":22}},{"path":"docs/diagrams/ShowAliasSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"CommanderW324"},"content":"@startuml","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"CommanderW324"},"content":"!include style.puml","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"CommanderW324"},"content":"box UI UI_COLOR_T1","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"CommanderW324"},"content":"participant \":MainWindow\" as MainWindow UI_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"CommanderW324"},"content":"end box","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"CommanderW324"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"CommanderW324"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"CommanderW324"},"content":"participant \":ContactBookParser\" as ContactBookParser LOGIC_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"CommanderW324"},"content":"participant \"c:ShowAliasCommand\" as ShowAliasCommand LOGIC_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"CommanderW324"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"CommanderW324"},"content":"end box","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"CommanderW324"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"CommanderW324"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"CommanderW324"},"content":"participant \":AliasTable\" as AliasTable MODEL_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"CommanderW324"},"content":"end box","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"CommanderW324"},"content":"activate MainWindow","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"CommanderW324"},"content":"MainWindow -\u003e LogicManager ++ : execute(\"showalias\")","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"CommanderW324"},"content":"LogicManager -\u003e ContactBookParser ++  : parseCommand(\"showalias\")","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"CommanderW324"},"content":"create ShowAliasCommand","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"CommanderW324"},"content":"ContactBookParser -\u003e ShowAliasCommand ++","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"CommanderW324"},"content":"ShowAliasCommand --\u003e ContactBookParser -- : c","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"CommanderW324"},"content":"ContactBookParser --\u003e LogicManager -- : c","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"CommanderW324"},"content":"LogicManager -\u003e ShowAliasCommand ++ : execute()","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"CommanderW324"},"content":"destroy ContactBookParser","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"CommanderW324"},"content":"create CommandResult","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"CommanderW324"},"content":"ShowAliasCommand -\u003e CommandResult++","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"CommanderW324"},"content":"CommandResult --\u003e ShowAliasCommand -- : r","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"CommanderW324"},"content":"ShowAliasCommand --\u003e LogicManager -- : r","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"CommanderW324"},"content":"LogicManager --\u003e MainWindow--","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"CommanderW324"},"content":"destroy ShowAliasCommand","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"CommanderW324"},"content":"MainWindow -\u003e LogicManager ++ : getAliasTable()","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"CommanderW324"},"content":"LogicManager -\u003e Model ++ : getAliasTable()","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"CommanderW324"},"content":"Model --\u003e LogicManager--","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"CommanderW324"},"content":"LogicManager --\u003e MainWindow --","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"CommanderW324"},"content":"MainWindow -\u003e AliasTable ++ : getAliasTable()","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"CommanderW324"},"content":"AliasTable --\u003e MainWindow --","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"CommanderW324"},"content":"MainWindow --","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"CommanderW324"},"content":"@enduml","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"CommanderW324":47}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface UserPrefsStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Interface Storage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"samyipsh"},"content":"package \"ContactBook Storage\" #F4F6F6{","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"samyipsh"},"content":"Interface ContactBookStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"samyipsh"},"content":"Class JsonContactBookStorage","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"samyipsh"},"content":"Class JsonSerializableContactBook","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"samyipsh"},"content":"StorageManager -up-\u003e \"1\" ContactBookStorage","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"samyipsh"},"content":"Storage -right-|\u003e ContactBookStorage","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"samyipsh"},"content":"JsonContactBookStorage .up.|\u003e ContactBookStorage","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"samyipsh"},"content":"JsonContactBookStorage ..\u003e JsonSerializableContactBook","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"samyipsh"},"content":"JsonSerializableContactBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"samyipsh":9,"-":34}},{"path":"docs/diagrams/TagActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"e0543403"},"content":"@startuml","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"e0543403"},"content":"start","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"e0543403"},"content":":User executes command;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"e0543403"},"content":"if() then ([indexes are invalid])","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"e0543403"},"content":"    :Send valid index","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"e0543403"},"content":"    format to user;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"e0543403"},"content":"    stop","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"e0543403"},"content":"else([else])","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"e0543403"},"content":"if() then ([tag format is invalid])","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"e0543403"},"content":"    :Send valid tag","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"e0543403"},"content":"    format to user;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"e0543403"},"content":"    stop","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"e0543403"},"content":"else([else])","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"e0543403"},"content":"if() then ([empty displayed list])","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"e0543403"},"content":"    :Send message on lack of","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"e0543403"},"content":"    persons in list to tag to user;","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"e0543403"},"content":"    stop","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"e0543403"},"content":"else([else])","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"e0543403"},"content":"    :Valid Tag command;","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"e0543403"},"content":"    repeat","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"e0543403"},"content":"    :Tag person at index","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"e0543403"},"content":"    of displayed list;","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"e0543403"},"content":"    repeat while () is ([else])","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"e0543403"},"content":"    -\u003e[all indexes cycled through];","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"e0543403"},"content":"    :return success","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"e0543403"},"content":"    message to user;","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"e0543403"},"content":"stop","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"e0543403"},"content":"@enduml","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"e0543403":29}},{"path":"docs/diagrams/TagSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"e0543403"},"content":"@startuml","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"e0543403"},"content":"!include style.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"e0543403"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"e0543403"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"e0543403"},"content":"participant \":ContactBookParser\" as ContactBookParser LOGIC_COLOR","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"e0543403"},"content":"participant \":TagCommandParser\" as TagCommandParser LOGIC_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"e0543403"},"content":"participant \":ParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"e0543403"},"content":"participant \"t:TagCommand\" as TagCommand LOGIC_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"e0543403"},"content":"participant \"result:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"e0543403"},"content":"end box","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"e0543403"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"e0543403"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"e0543403"},"content":"end box","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"e0543403"},"content":"[-\u003e LogicManager : execute(\"tag 1 2 programmer\")","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"e0543403"},"content":"activate LogicManager","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"e0543403"},"content":"LogicManager -\u003e ContactBookParser : parseCommand(\"tag 1 2 programmer\")","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"e0543403"},"content":"activate ContactBookParser","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"e0543403"},"content":"create TagCommandParser","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"e0543403"},"content":"ContactBookParser -\u003e TagCommandParser : TagCommandParser()","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"e0543403"},"content":"activate TagCommandParser","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"e0543403"},"content":"TagCommandParser --\u003e ContactBookParser","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"e0543403"},"content":"deactivate TagCommandParser","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"e0543403"},"content":"ContactBookParser -\u003e TagCommandParser : parse(\"1 2 programmer\")","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"e0543403"},"content":"activate TagCommandParser","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"e0543403"},"content":"loop number of indexes","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"e0543403"},"content":"TagCommandParser -\u003e ParserUtil : parseIndex()","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"e0543403"},"content":"activate ParserUtil","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"e0543403"},"content":"ParserUtil --\u003e TagCommandParser","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"e0543403"},"content":"deactivate ParserUtil","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"e0543403"},"content":"end","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"e0543403"},"content":"TagCommandParser -\u003e ParserUtil : parseTag(\"programmer\")","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"e0543403"},"content":"activate ParserUtil","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"e0543403"},"content":"ParserUtil --\u003e TagCommandParser","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"e0543403"},"content":"deactivate ParserUtil","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"e0543403"},"content":"create TagCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"e0543403"},"content":"TagCommandParser -\u003e TagCommand : TagCommand()","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"e0543403"},"content":"activate TagCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"e0543403"},"content":"TagCommand --\u003e TagCommandParser : t","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"e0543403"},"content":"deactivate TagCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"e0543403"},"content":"TagCommandParser --\u003e ContactBookParser : t","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"e0543403"},"content":"deactivate TagCommandParser","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"e0543403"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"e0543403"},"content":"TagCommandParser -[hidden]-\u003e ContactBookParser","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"e0543403"},"content":"destroy TagCommandParser","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"e0543403"},"content":"ContactBookParser --\u003e LogicManager : t","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"e0543403"},"content":"deactivate ContactBookParser","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"e0543403"},"content":"LogicManager -\u003e TagCommand : execute()","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"e0543403"},"content":"activate TagCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"e0543403"},"content":"loop number of indexes","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"e0543403"},"content":"TagCommand -\u003e Model : setPerson()","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"e0543403"},"content":"activate Model","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"e0543403"},"content":"Model --\u003e TagCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"e0543403"},"content":"deactivate Model","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"e0543403"},"content":"end","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"e0543403"},"content":"create CommandResult","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"e0543403"},"content":"TagCommand -\u003e CommandResult","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"e0543403"},"content":"activate CommandResult","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"e0543403"},"content":"CommandResult --\u003e TagCommand : result","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"e0543403"},"content":"deactivate CommandResult","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"e0543403"},"content":"TagCommand --\u003e LogicManager : result","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"e0543403"},"content":"deactivate TagCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"e0543403"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"e0543403"},"content":"deactivate LogicManager","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"e0543403"},"content":"destroy TagCommand","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"e0543403"},"content":"@enduml","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"e0543403":88}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface Ui \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"CommanderW324"},"content":"Class DetailedPersonWindow","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"CommanderW324"},"content":"Class AliasTableDisplayWindow","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"CommanderW324"},"content":"MainWindow --\u003e \"0..*\" DetailedPersonWindow","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"CommanderW324"},"content":"MainWindow --\u003e \"1\" AliasTableDisplayWindow","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"CommanderW324":4,"-":60}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"samyipsh"},"content":"Participant \":ContactBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"ecp -\u003e ec ++: index, editPersonDescriptor","lastModifiedDate":"2019-06-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"samyipsh":1,"-":20}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"DystoriaX"},"content":"title: NetworkUS","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"samyipsh"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-T10-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-T10-3/tp/actions)","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"samyipsh"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-T10-3/tp/branch/master/graph/badge.svg?token\u003db5e4Kys98D)](https://codecov.io/gh/AY2122S1-CS2103T-T10-3/tp)","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"jeromewjj"},"content":"NetworkUS is a contact book application that helps **Computer Science students** maintain a list of contacts of people they meet in school. While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"DystoriaX"},"content":"* If you are interested in using NetworkUS, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"DystoriaX"},"content":"* If you are interested about developing NetworkUS, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"jeromewjj"},"content":"* This project is based on the AddressBook Level 3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"samyipsh":2,"jeromewjj":2,"-":13,"DystoriaX":3}},{"path":"docs/team/commanderw324.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"CommanderW324"},"content":"---","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"CommanderW324"},"content":"layout: page","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"CommanderW324"},"content":"title: Winston Cahya\u0027s Project Portfolio Page","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"CommanderW324"},"content":"---","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"CommanderW324"},"content":"### Project: NetworkUS","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"CommanderW324"},"content":"NetworkUS is a desktop app for organizing contacts. It features seamless **group management**, allowing for **quick searches of contacts with desired traits** (i.e specialization) and hence **project group formation**. It is catered for **Computer Science Students** with fields such as Github and Linkedin. The app is optimized for the **Command Line Interface (CLI)** to allow swift access for keyboard users. The app is also complemented with **Graphical User Interface (GUI)** to display the program.","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"CommanderW324"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"CommanderW324"},"content":"* **New Feature**: Added the ShowAlias Feature.","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"CommanderW324"},"content":"    * What it does: allows user to see the currently saved alias preferences.","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"CommanderW324"},"content":"    * Justification: user might have problems remembering all the alias they have set.","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"CommanderW324"},"content":"    * Highlights: The implementation is difficult due to the ObservableList. Require more in depth analysis in the future.","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"CommanderW324"},"content":"    ","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"CommanderW324"},"content":"* **New Feature**: Added the Show Feature","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"CommanderW324"},"content":"    * What it does: allows the user to show a specific contact.","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"CommanderW324"},"content":"    * Justification: allows user to see full detail of specific contacts without truncations.","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"CommanderW324"},"content":"    * Highlights: This enhancement might need some UI Rework in the future.","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"CommanderW324"},"content":"    ","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"CommanderW324"},"content":"* **New Feature**: Added the Delete Alias Feature","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"CommanderW324"},"content":"    * What it does: allows deletion of alias.","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"CommanderW324"},"content":"    * Justification: user needs to have the basic operation to delete an alias.","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"CommanderW324"},"content":"    ","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"CommanderW324"},"content":"* **Enhancements to existing features**: ","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"CommanderW324"},"content":"    * Added Field of LinkedIn to the User.","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"CommanderW324"},"content":"    * Added Total Contacts in the footer.","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"CommanderW324"},"content":"    * Added automated tests for `linkedin`, `show` commands.","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"CommanderW324"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dCommanderW324\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-09-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dfalse\u0026tabAuthor\u003dLemonsr\u0026tabRepo\u003dAY2122S1-CS2103T-T17-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"CommanderW324"},"content":"* **Project management**:","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"CommanderW324"},"content":"    * Created Issues and Assigned Issues.","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"CommanderW324"},"content":"* **Documentation**:","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"CommanderW324"},"content":"    * User Guide:","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"CommanderW324"},"content":"        * Added documentation for the features `show`, `showalias`, `deletealias`.","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"CommanderW324"},"content":"        * Added Description to product.","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"CommanderW324"},"content":"    * Developer Guide:","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"CommanderW324"},"content":"        * Added implementation details of the `show` and `showalias` and `deletealias` feature.","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"CommanderW324"},"content":"        * Added Sequence diagrams for `showalias` feature.","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"CommanderW324"},"content":"        * Added Activity diagram for `showalias` feature.","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"CommanderW324"},"content":"        * Added Manual testing sections.","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"CommanderW324"},"content":"        * Updated UI Models.","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"CommanderW324"},"content":"* **Community**:","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"CommanderW324"},"content":"    *Reported bugs and suggestions for other teams in the class (8 bugs reported in PE-D)","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"CommanderW324"},"content":"    *PR Review.","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"CommanderW324":51}},{"path":"docs/team/dystoriax.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"DystoriaX"},"content":"---","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"DystoriaX"},"content":"layout: page","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"DystoriaX"},"content":"title: Dasco Gabriel\u0027s Project Portfolio Page","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"DystoriaX"},"content":"---","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"DystoriaX"},"content":"### Project: NetworkUS","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"DystoriaX"},"content":"NetworkUS is a desktop app for organizing contacts that features seamless group management, allowing for quick searches of contacts with desired traits (i.e specialization) and hence project group formation. NetworkUS is optimised for CLI users, complemented with GUI to display the results.","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"DystoriaX"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"DystoriaX"},"content":"* **New Feature**: Added `showtags` command (PR [\\#84](https://github.com/AY2122S1-CS2103T-T10-3/tp/pull/84))","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"DystoriaX"},"content":"  * What it does: Shows all tags that are present in the contact book.","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"DystoriaX"},"content":"  * Justification: This feature is necessary for the users to know what tags that they have created. It helps a lot when they want to filter out certain tags that they need by using the `find` command.","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"DystoriaX"},"content":"* **New Feature**: Added `alias` command (PR [\\#99](https://github.com/AY2122S1-CS2103T-T10-3/tp/pull/99))","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"DystoriaX"},"content":"  * What it does: Creates an alias for existing command.","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"DystoriaX"},"content":"  * Justification: This feature is necessary as our target users prefer to use CLI than GUI. Hence, speed is one of their top priority. Creating alias can help them to work more efficiently by customizing the existing command to suit their own needs.","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"DystoriaX"},"content":"  * Credits:","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"DystoriaX"},"content":"    * [CommanderW324](https://ay2122s1-cs2103t-t10-3.github.io/tp/team/commanderw324.html), who helped implement other supporting alias command, such as `showalias` and `deletealias`.","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"DystoriaX"},"content":"    * [e0543403](https://ay2122s1-cs2103t-t10-3.github.io/tp/team/e0543403.html), who suggested extremely simple bug fix. (PR [\\#163](https://github.com/AY2122S1-CS2103T-T10-3/tp/pull/163))","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"DystoriaX"},"content":"* **Code contributed**: [Reposense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003ddystoriax\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-09-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dDystoriaX\u0026tabRepo\u003dAY2122S1-CS2103T-T10-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"DystoriaX"},"content":"* **Project Management**:","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"DystoriaX"},"content":"  * Finalized Project version release workflow (along with [samyipsh](https://ay2122s1-cs2103t-t10-3.github.io/tp/team/samyipsh.html))","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"DystoriaX"},"content":"  * Reviewed 7 PRs ([\\#80](https://github.com/AY2122S1-CS2103T-T10-3/tp/pull/80), [\\#82](https://github.com/AY2122S1-CS2103T-T10-3/tp/pull/82), [\\#97](https://github.com/AY2122S1-CS2103T-T10-3/tp/pull/97), [\\#108](https://github.com/AY2122S1-CS2103T-T10-3/tp/pull/108), [\\#110](https://github.com/AY2122S1-CS2103T-T10-3/tp/pull/110), [\\#159](https://github.com/AY2122S1-CS2103T-T10-3/tp/pull/159), [\\#164](https://github.com/AY2122S1-CS2103T-T10-3/tp/pull/164))","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"DystoriaX"},"content":"* **Enhancement to existing features**:","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"DystoriaX"},"content":"  * **New Fields**: Added `detail` field (PR [\\#52](https://github.com/AY2122S1-CS2103T-T10-3/tp/pull/52))","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"DystoriaX"},"content":"    * What it does: Additional field to store detail of a person","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"DystoriaX"},"content":"    * Justification: Numerous contacts make it hard for user to remember particular thing about a person","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"DystoriaX"},"content":"  * **Automated Tests**: Added automated tests for `detail`, `showtags`, and `alias` commands.","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"DystoriaX"},"content":"* **Documentation**:","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"DystoriaX"},"content":"  * User Guide:","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"DystoriaX"},"content":"    * `showtags` and `alias` command usage, refined by other team members","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"DystoriaX"},"content":"    * Revised introduction of NetworkUS product as well as formatting errors","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"DystoriaX"},"content":"  * Developer Guide:","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"DystoriaX"},"content":"    * NFR","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"DystoriaX"},"content":"    * Glossary","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"DystoriaX"},"content":"    * Implementation of `alias` command","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"DystoriaX":43}},{"path":"docs/team/e0543403.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"e0543403"},"content":"---","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"e0543403"},"content":"layout: page","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"e0543403"},"content":"title: Hester James Douglas\u0027 Project Portfolio Page","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"e0543403"},"content":"---","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"e0543403"},"content":"### Project: NetworkUS","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"e0543403"},"content":"NetworkUS is a desktop app for organizing contacts. It features seamless **group management**, allowing for **quick searches of contacts with desired traits** (i.e specialization) and hence **project group formation**. It is catered for **Computer Science Students** with fields such as Github and Linkedin. The app is optimized for the **Command Line Interface (CLI)** to allow swift access for keyboard users. The app is also complemented with **Graphical User Interface (GUI)** to display the program.","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"e0543403"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"e0543403"},"content":"* **New Feature**: Added the ability to find persons based on their tags.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"e0543403"},"content":"    * What it does: allows the user to search for persons based on what they are classified by.","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"e0543403"},"content":"    * Justification: This feature is a main feature of the app, allowing the user to find persons based on their classification and moreover, persons who are capable in what the user requires.","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"e0543403"},"content":"    * Highlights: This enhancement affects commands to be added in the future. It required an in-depth analysis of design alternatives. The implementation was challenging as it required changes to existing commands.","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"e0543403"},"content":"* **New Feature**: Added the ability to tag persons more effectively.","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"e0543403"},"content":"    * What it does: allows the user to tag multiple persons directly simultaneously.","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"e0543403"},"content":"    * Justification: This feature improves the product significantly because a user can classify a group of persons easily.","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"e0543403"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in the future. It required an in-depth analysis of design alternatives.","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"e0543403"},"content":"* **New Feature**: Modified the duplicate detection amongst persons in NetworkUS.","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"e0543403"},"content":"    * What it does: prevents the user from creating multiple duplicate persons.","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"e0543403"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in adding extra references to the same persons. The app should prevent that from happening.","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"e0543403"},"content":"    * Highlights: This enhancement affects existing commands. It required an in-depth analysis of design alternatives. The implementation was difficult as it required changes to existing commands.","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"e0543403"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003de0543403\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-09-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse)","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"e0543403"},"content":"* **Project management**:","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"e0543403"},"content":"    * Managed releases `v1.2` - `v1.4` (4 releases) on GitHub","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"e0543403"},"content":"    ","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"e0543403"},"content":"* **Documentation**:","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"e0543403"},"content":"  * User Guide:","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"e0543403"},"content":"    * Added documentation for the features `find`, `tag`, `tagall`, `duplicate detection` and `valid fields` [\\#48](https://github.com/AY2122S1-CS2103T-T10-3/tp/pull/48) [\\#75](https://github.com/AY2122S1-CS2103T-T10-3/tp/pull/75) [\\#82](https://github.com/AY2122S1-CS2103T-T10-3/tp/pull/82) [\\#159](https://github.com/AY2122S1-CS2103T-T10-3/tp/pull/159)","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"e0543403"},"content":"    ","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"e0543403"},"content":"  * Developer Guide:","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"e0543403"},"content":"    * Add user stories","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"e0543403"},"content":"    * Added implementation details of the `find` and `tag` feature.","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"e0543403"},"content":"    * Added Sequence diagrams for `find` and `tag` feature.","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"e0543403"},"content":"    * Added Activity diagram for `tag` feature.","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"e0543403"},"content":"  ","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"e0543403"},"content":"Sequence diagram for find feature","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"e0543403"},"content":"![FindSequenceDiagram](../images/FindTagSequenceDiagram.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"e0543403"},"content":"Sequence diagram for tag feature","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"e0543403"},"content":"![TagSequenceDiagram](../images/TagSequenceDiagram.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"e0543403"},"content":"Activity diagram for tag feature","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"e0543403"},"content":"![TagSequenceDiagram](../images/TagActivityDiagram.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"e0543403"},"content":"* **Community**:","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"e0543403"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#93](https://github.com/AY2122S1-CS2103T-T10-3/tp/pull/93), [\\#102](https://github.com/AY2122S1-CS2103T-T10-3/tp/pull/102)","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"e0543403"},"content":"    ","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"e0543403":53}},{"path":"docs/team/jeromewjj.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jeromewjj"},"content":"---","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"jeromewjj"},"content":"layout: page","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"jeromewjj"},"content":"title: Jerome Wong\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"jeromewjj"},"content":"---","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"jeromewjj"},"content":"### Project: NetworkUS","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"jeromewjj"},"content":"NetworkUS is a desktop app for organizing contacts. It features seamless **group management**, by allowing for **quick searches of contacts with desired traits** (i.e specialization) and hence **project group formation**. It is catered for **Computer Science Students** with fields such as Github and Linkedin.","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"jeromewjj"},"content":"The app is optimized for the **Command Line Interface (CLI)** to allow swift access for keyboard users. The app is also complemented with **Graphical User Interface (GUI)** to display the program.","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"jeromewjj"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"jeromewjj"},"content":"* **New Feature**: Added the ability to remove a tag from persons more effectively.","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"jeromewjj"},"content":"    * What it does: allows the user to remove a specified tag from multiple persons simultaneously.","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"jeromewjj"},"content":"    * Justification: This feature improves the product significantly because it allows users to remove tags easily.","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"jeromewjj"},"content":"      The tagging system is one of the important features of NetworkUS which allows user to categorise their contacts. Removing tag for multiple contacts simultaneously allows users to use the tagging system easier and faster.","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"jeromewjj"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in the future. It required an in-depth analysis of design alternatives.","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"jeromewjj"},"content":"* **New Feature**: Added the ability to replace a tag from persons more effectively.","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"jeromewjj"},"content":"    * What it does: allows the user to replace specified tag from multiple persons with a new tag simultaneously.","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"jeromewjj"},"content":"    * Justification: The tagging system is one of the important features of NetworkUS which allows user to categorise their contacts. ","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"jeromewjj"},"content":"      Being able to replace a tag for multiple contacts allows user to use the tagging system easier and faster. This encourages users to keep their tags up-to-date.","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"jeromewjj"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in the future. It required an in-depth analysis of design alternatives.","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"jeromewjj"},"content":"* **New Feature**: Modified Person to allow empty field.","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"jeromewjj"},"content":"   * What it does: provides user with the options to not add fields they do not want.","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"jeromewjj"},"content":"   * Justification: This feature improves the product significantly because it provides flexibility to the user to add only necessary information.","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"jeromewjj"},"content":"   * Highlights: This enhancement affects existing commands. The implementation required changes to the existing commands like `add` and `edit`. It required an in-depth analysis of design alternatives.","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"jeromewjj"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dT10-3\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003djeromewjj\u0026tabRepo\u003dAY2122S1-CS2103T-T10-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"jeromewjj"},"content":"* **Project management**:","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"jeromewjj"},"content":"    * Handled the Github issue tracker and added/kept track of issues to be resolved.","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"jeromewjj"},"content":"* **Enhancements to existing features**: ","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"jeromewjj"},"content":"    * Modified `add` and `edit` commands to allow NetworkUS to accept empty field.","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"jeromewjj"},"content":"    * Remove `address` field from NetworkUS.","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"jeromewjj"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"jeromewjj"},"content":"    * User Guide:","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"jeromewjj"},"content":"        * Added documentation for the features `untag`, `untagall` and `replacetag` [\\#80](https://github.com/AY2122S1-CS2103T-T10-3/tp/pull/80)","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"jeromewjj"},"content":"  ","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"jeromewjj"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"jeromewjj"},"content":"        * Added documentation for implementation of `replacetag` and empty field features. [\\#168](https://github.com/AY2122S1-CS2103T-T10-3/tp/pull/168)","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"jeromewjj"},"content":"        * Added Sequence diagrams for `replacetag` feature. [\\#168](https://github.com/AY2122S1-CS2103T-T10-3/tp/pull/168)","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"jeromewjj"},"content":"        * Added Activity diagram for `replacetag` feature. [\\#168](https://github.com/AY2122S1-CS2103T-T10-3/tp/pull/168)","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"jeromewjj"},"content":"Sequence diagram for replace tag feature \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"jeromewjj"},"content":"![ReplaceTagSequenceDiagram](../images/ReplaceTagSequenceDiagram.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"jeromewjj"},"content":"Activity diagram for replace tag feature \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"jeromewjj"},"content":"![ReplaceTagActivityDiagram](../images/ReplaceTagCommandActivityDiagram.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"jeromewjj"},"content":"* **Community**:","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"jeromewjj"},"content":"    * PRs reviewed: [\\#89](https://github.com/AY2122S1-CS2103T-T10-3/tp/pull/89), [\\#93](https://github.com/AY2122S1-CS2103T-T10-3/tp/pull/93), [\\#97](https://github.com/AY2122S1-CS2103T-T10-3/tp/pull/97)","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"jeromewjj"},"content":"  ","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"jeromewjj":62}},{"path":"docs/team/johndoe.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: John Doe\u0027s Project Portfolio Page","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"samyipsh"},"content":"### Project: ContactBook Level 3","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"samyipsh"},"content":"ContactBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"samyipsh":2,"-":44}},{"path":"docs/team/samyipsh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"samyipsh"},"content":"---","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"samyipsh"},"content":"layout: page","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"samyipsh"},"content":"title: Samuel Yip\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"samyipsh"},"content":"---","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"samyipsh"},"content":"### Project: NetworkUS","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"samyipsh"},"content":"NetworkUS is a desktop app for organizing contacts that features seamless group management, allowing for quick searches of contacts with desired traits (i.e specialization) and hence project group formation. NetworkUS is optimised for CLI users, complemented with GUI to display the results.","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"samyipsh"},"content":"Given below are my contributions to the project:","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"samyipsh"},"content":"* **New Feature**: Added the Open Field command. Provides the ability to open in the browser the github or linkedin pages of a contact or multiple contacts at once. (Pull requests [\\#93](https://github.com/AY2122S1-CS2103T-T10-3/tp/pull/93))","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"samyipsh"},"content":"  * What it does: Opens the LinkedIn/Github page from details of field specified of a particular person(s) from the NetworkUS contacts.","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"samyipsh"},"content":"  * Justification: This feature is necessary because it increases the convenience of the app by giving users a means to open the stored github and linkedin profile information of their contacts instead of copying them one by one and pasting them in. This would be especially useful for group formation when a user would like to compare the suitability of multiple contacts at once through looking at their profile pages.","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"samyipsh"},"content":"  * Highlights:","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"samyipsh"},"content":"    * This enhancement uses a reusable function to open url in user\u0027s default browser. This new reusable function can be easily used by other commands or extended to open other fields.","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"samyipsh"},"content":"    * Specific url was generated from contacts\u0027 github username or linkedin url depending on field indicated to be open. (Pull Request [\\#77](https://github.com/AY2122S1-CS2103T-T10-3/tp/pull/77))","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"samyipsh"},"content":"    * UML Activity and UML Sequence diagram created and added to Developer Guide.","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"samyipsh"},"content":"* **New Field**: Added a Github field for a person. User can update this field in generic add/edit commands.","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"samyipsh"},"content":"  * Credits: use of this github validation regex [github-username-regex](https://github.com/shinnn/github-username-regex)","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"samyipsh"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dsamyipsh\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-09-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse)","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"samyipsh"},"content":"* **Project management**:","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"samyipsh"},"content":"  * Project admin: `v1.1` - `v1.4` (3 releases) on GitHub","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"samyipsh"},"content":"  * Finalized Project version release workflow (along with [dystoriax](https://ay2122s1-cs2103t-t10-3.github.io/tp/team/dystoriax.html))","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"samyipsh"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"samyipsh"},"content":"  * Designed project\u0027s vector icon / logo in Inkscape (Pull requests [\\#66](https://github.com/AY2122S1-CS2103T-T10-3/tp/pull/66/files))","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"samyipsh"},"content":"![Ui](../images/networkUS_icon.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"samyipsh"},"content":"  * GUI addition of field names for clarity (Pull request [\\#63](https://github.com/AY2122S1-CS2103T-T10-3/tp/pull/63/files))","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"samyipsh"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"samyipsh"},"content":"  * User Guide:","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"samyipsh"},"content":"    * Added documentation for the features `open` command","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"samyipsh"},"content":"  * Developer Guide:","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"samyipsh"},"content":"    * Added implementation details of the `open` command.","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"samyipsh"},"content":"    * Added UML Sequence Diagram \u0026 Activity Diagram of `open` command.","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"samyipsh"},"content":"    * Product Scope","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"samyipsh"},"content":"    * User Stories","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"samyipsh"},"content":"  * General reformatting and organisation (Pull Request [\\#85](https://github.com/AY2122S1-CS2103T-T10-3/tp/pull/85/files))","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"samyipsh"},"content":"* **Community**:","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"samyipsh"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#84](https://github.com/AY2122S1-CS2103T-T10-3/tp/pull/84)","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"samyipsh"},"content":"  * Reported bugs and suggestions for other teams in the class (15 bugs reported in PE-D)","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"samyipsh":54}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"samyipsh"},"content":"This command allows users of the ContactBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"samyipsh"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `ContactBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47).","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47) after you are done.","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"samyipsh"},"content":":information_source: Don’t forget to update `ContactBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2021-11-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-fc19ecee89c3732a62fbc8c840250508).","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-af2f075d24dfcd333876f0fbce321f25). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-0c6b6abcfac8c205e075294f25e851fe).","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-12580431f55d7880578aa4c16f249e71).","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"samyipsh"},"content":"ContactBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2021-11-05"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"samyipsh"},"content":":exclamation: You must delete ContactBook’s storage file located at `/data/contactbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2021-11-05"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2021-08-01"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9).","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"samyipsh"},"content":"This concludes the tutorial for adding a new `Command` to ContactBook.","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"samyipsh":6,"-":395}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"The `address` field in `Person` is actually an instance of the `seedu.address.model.person.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"samyipsh"},"content":"**`invalidPersonContactBook.json`:**","lastModifiedDate":"2021-11-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"samyipsh":1,"-":111}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"samyipsh"},"content":"        Command command \u003d contactBookParser.parseCommand(commandText);","lastModifiedDate":"2021-11-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"samyipsh"},"content":"            storage.saveContactBook(model.getContactBook());","lastModifiedDate":"2021-11-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"samyipsh"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `ContactBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-11-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"samyipsh"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveContactBook(model.getContactBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-11-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"samyipsh"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonContactBook#saveContactBook()` method which calls the `JsonSerializableContactBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-11-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"samyipsh"},"content":"    **`JsonSerializableContactBook` constructor:**","lastModifiedDate":"2021-11-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"samyipsh"},"content":"     * Converts a given {@code ReadOnlyContactBook} into this class for Jackson use.","lastModifiedDate":"2021-11-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"samyipsh"},"content":"     * {@code JsonSerializableContactBook}.","lastModifiedDate":"2021-11-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"samyipsh"},"content":"    public JsonSerializableContactBook(ReadOnlyContactBook source) {","lastModifiedDate":"2021-11-05"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"samyipsh"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableContactBook`.","lastModifiedDate":"2021-11-05"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"samyipsh":10,"-":291}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.ContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.ReadOnlyContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"samyipsh"},"content":"import seedu.address.storage.ContactBookStorage;","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"samyipsh"},"content":"import seedu.address.storage.JsonContactBookStorage;","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"e0543403"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 0, true);","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"samyipsh"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing ContactBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"samyipsh"},"content":"        ContactBookStorage contactBookStorage \u003d new JsonContactBookStorage(userPrefs.getContactBookFilePath());","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"samyipsh"},"content":"        storage \u003d new StorageManager(contactBookStorage, userPrefsStorage);","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"samyipsh"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s contact book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"samyipsh"},"content":"     * The data from the sample contact book will be used instead if {@code storage}\u0027s contact book is not found,","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"samyipsh"},"content":"     * or an empty contact book will be used instead if errors occur when reading {@code storage}\u0027s contact book.","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"samyipsh"},"content":"        Optional\u003cReadOnlyContactBook\u003e contactBookOptional;","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"samyipsh"},"content":"        ReadOnlyContactBook initialData;","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"samyipsh"},"content":"            contactBookOptional \u003d storage.readContactBook();","lastModifiedDate":"2021-11-05"},{"lineNumber":81,"author":{"gitId":"samyipsh"},"content":"            if (!contactBookOptional.isPresent()) {","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"samyipsh"},"content":"                logger.info(\"Data file not found. Will be starting with a sample ContactBook\");","lastModifiedDate":"2021-11-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"samyipsh"},"content":"            initialData \u003d contactBookOptional.orElseGet(SampleDataUtil::getSampleContactBook);","lastModifiedDate":"2021-11-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"samyipsh"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty ContactBook\");","lastModifiedDate":"2021-11-05"},{"lineNumber":87,"author":{"gitId":"samyipsh"},"content":"            initialData \u003d new ContactBook();","lastModifiedDate":"2021-11-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"samyipsh"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty ContactBook\");","lastModifiedDate":"2021-11-05"},{"lineNumber":90,"author":{"gitId":"samyipsh"},"content":"            initialData \u003d new ContactBook();","lastModifiedDate":"2021-11-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"samyipsh"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty ContactBook\");","lastModifiedDate":"2021-11-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"samyipsh"},"content":"        logger.info(\"Starting ContactBook \" + MainApp.VERSION);","lastModifiedDate":"2021-11-05"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"samyipsh"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Contact Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-11-05"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"samyipsh":23,"e0543403":1,"-":159}},{"path":"src/main/java/seedu/address/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"samyipsh"},"content":"    private static final String LOG_FILE \u003d \"contactbook.log\";","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"samyipsh":1,"-":111}},{"path":"src/main/java/seedu/address/commons/core/UserBrowser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samyipsh"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"samyipsh"},"content":"import java.awt.Desktop;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"samyipsh"},"content":"import java.awt.GraphicsEnvironment;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"samyipsh"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"samyipsh"},"content":"import java.net.URI;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"samyipsh"},"content":"import java.net.URISyntaxException;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"samyipsh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"samyipsh"},"content":"public class UserBrowser {","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"samyipsh"},"content":"    private static Logger logger \u003d LogsCenter.getLogger(UserBrowser.class);","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"samyipsh"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"samyipsh"},"content":"     * Open URL inside User\u0027s Desktop Browser.","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"samyipsh"},"content":"     * Assume running platform supports desktop. Use {@link #isDisplayAndBrowseCompatible()} to check.","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"samyipsh"},"content":"     * No validity checks of valid url.","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"samyipsh"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"samyipsh"},"content":"     * @param url","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"samyipsh"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"samyipsh"},"content":"    public static void openUrl(String url) {","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"samyipsh"},"content":"        if (!isDisplayAndBrowseCompatible()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"samyipsh"},"content":"            return;","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"samyipsh"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"samyipsh"},"content":"        Desktop desktop \u003d Desktop.getDesktop();","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"samyipsh"},"content":"        logger.info(\"Opening URL in user browser: \" + url + \"...\");","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"samyipsh"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"samyipsh"},"content":"            desktop.browse(new URI(url));","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"samyipsh"},"content":"        } catch (URISyntaxException | IOException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"samyipsh"},"content":"            logger.severe(\"Unable to open URL in user browser\" + e.getMessage());","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"samyipsh"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"samyipsh"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"samyipsh"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"samyipsh"},"content":"     * Checks if platform running code supports Desktop and Desktop.Action.BROWSE.","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"samyipsh"},"content":"     * Helper function used to verify platform compatibility before calls to {@link #openUrl(String)}","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"samyipsh"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"samyipsh"},"content":"    public static boolean isDisplayAndBrowseCompatible() {","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"samyipsh"},"content":"        if (GraphicsEnvironment.isHeadless()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"samyipsh"},"content":"            logger.warning(\"Platform does not support display.\\n GraphicsEnviornment.isHeadless()\");","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"samyipsh"},"content":"            return false;","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"samyipsh"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"samyipsh"},"content":"        Desktop d \u003d Desktop.getDesktop();","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"samyipsh"},"content":"        if (!d.isSupported(Desktop.Action.BROWSE)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"samyipsh"},"content":"            logger.warning(\"Platform does not support browsing in desktop\");","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"samyipsh"},"content":"            return false;","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"samyipsh"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"samyipsh"},"content":"        return true;","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"samyipsh"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"samyipsh":54}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.ReadOnlyContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"CommanderW324"},"content":"import seedu.address.model.alias.AliasTable;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"samyipsh"},"content":"     * Returns the ContactBook.","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"samyipsh"},"content":"     * @see seedu.address.model.Model#getContactBook()","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"samyipsh"},"content":"    ReadOnlyContactBook getContactBook();","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"CommanderW324"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"CommanderW324"},"content":"     * Returns saved aliases.","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"CommanderW324"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"CommanderW324"},"content":"    AliasTable getAliasTable();","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"samyipsh"},"content":"    Path getContactBookFilePath();","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"samyipsh":5,"CommanderW324":6,"-":45}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"samyipsh"},"content":"import seedu.address.logic.parser.ContactBookParser;","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.ReadOnlyContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"CommanderW324"},"content":"import seedu.address.model.alias.AliasTable;","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"samyipsh"},"content":"    private final ContactBookParser addressContactParser;","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"samyipsh"},"content":"        addressContactParser \u003d new ContactBookParser(model);","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"samyipsh"},"content":"        Command command \u003d addressContactParser.parseCommand(commandText);","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"samyipsh"},"content":"            storage.saveContactBook(model.getContactBook());","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"CommanderW324"},"content":"    public AliasTable getAliasTable() {","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"CommanderW324"},"content":"        return model.getAliasTable();","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"CommanderW324"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"samyipsh"},"content":"    public ReadOnlyContactBook getContactBook() {","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"samyipsh"},"content":"        return model.getContactBook();","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"samyipsh"},"content":"    public Path getContactBookFilePath() {","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"samyipsh"},"content":"        return model.getContactBookFilePath();","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"samyipsh":10,"CommanderW324":5,"-":72}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"DystoriaX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DETAIL;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"samyipsh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GITHUB;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"CommanderW324"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LINKEDIN;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"e0543403"},"content":" * Adds a person to the contact book.","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"e0543403"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the contact book. \"","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"e0543403"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"jeromewjj"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"jeromewjj"},"content":"            + \"[\" + PREFIX_GITHUB + \"GITHUB] \"","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"jeromewjj"},"content":"            + \"[\" + PREFIX_LINKEDIN + \"LINKEDIN] \"","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"DystoriaX"},"content":"            + \"[\" + PREFIX_DETAIL + \"DETAIL] \"","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"samyipsh"},"content":"            + PREFIX_GITHUB + \"samyipsh \"","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"CommanderW324"},"content":"            + PREFIX_LINKEDIN + \"https://www.linkedin.com/in/sam/ \"","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"DystoriaX"},"content":"            + PREFIX_DETAIL + \"Year 1 CS Student \"","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"e0543403"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Identical person detected in stored contacts.\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"e0543403"},"content":"            + \"Contact may have already been added.\";","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"samyipsh":2,"e0543403":5,"CommanderW324":2,"jeromewjj":3,"-":59,"DystoriaX":3}},{"path":"src/main/java/seedu/address/logic/commands/AliasCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DystoriaX"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"DystoriaX"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"DystoriaX"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"DystoriaX"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"DystoriaX"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"DystoriaX"},"content":" * Creates an alias for a command.","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"DystoriaX"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"DystoriaX"},"content":"public class AliasCommand extends Command {","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"DystoriaX"},"content":"    public static final String COMMAND_WORD \u003d \"alias\";","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"DystoriaX"},"content":"    public static final String MESSAGE_PARAMS \u003d \"Parameters: COMMAND_WORD YOUR_ALIAS\";","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"DystoriaX"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Creates an alias for a command. \"","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"DystoriaX"},"content":"            + \"Command to be aliased must be a valid command.\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"DystoriaX"},"content":"            + MESSAGE_PARAMS;","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"DystoriaX"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Created alias \u0027%1$s\u0027 as `%2$s` command\";","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"DystoriaX"},"content":"    private String alias;","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"DystoriaX"},"content":"    private String command;","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"DystoriaX"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"DystoriaX"},"content":"     * Creates an AliasCommand to create alias for a certain existing command.","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"DystoriaX"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"DystoriaX"},"content":"    public AliasCommand(String alias, String command) {","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"DystoriaX"},"content":"        requireNonNull(alias);","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"DystoriaX"},"content":"        requireNonNull(command);","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"DystoriaX"},"content":"        assert Command.isExistingCommand(command);","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"DystoriaX"},"content":"        this.alias \u003d alias;","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"DystoriaX"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"DystoriaX"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"DystoriaX"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"DystoriaX"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"DystoriaX"},"content":"        model.addAlias(alias, command);","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"DystoriaX"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, alias, command));","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"DystoriaX"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"DystoriaX"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"DystoriaX"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"DystoriaX"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"DystoriaX"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"DystoriaX"},"content":"            return true;","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"DystoriaX"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"DystoriaX"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"DystoriaX"},"content":"        if (!(other instanceof AliasCommand)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"DystoriaX"},"content":"            return false;","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"DystoriaX"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"DystoriaX"},"content":"        // state check","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"DystoriaX"},"content":"        AliasCommand e \u003d (AliasCommand) other;","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"DystoriaX"},"content":"        return alias.equals(e.alias)","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"DystoriaX"},"content":"                \u0026\u0026 command.equals(e.command);","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"DystoriaX"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"DystoriaX"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"DystoriaX":63}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.ContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"e0543403"},"content":" * Clears the contact book.","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"e0543403"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"NetworkUS has been cleared!\";","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"samyipsh"},"content":"        model.setContactBook(new ContactBook());","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"samyipsh":2,"e0543403":2,"-":19}},{"path":"src/main/java/seedu/address/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"DystoriaX"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"DystoriaX"},"content":"    private static final List\u003cString\u003e COMMAND_WORDS \u003d List.of(","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"DystoriaX"},"content":"            AddCommand.COMMAND_WORD,","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"DystoriaX"},"content":"            AliasCommand.COMMAND_WORD,","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"DystoriaX"},"content":"            ClearCommand.COMMAND_WORD,","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"e0543403"},"content":"            DeleteAliasCommand.COMMAND_WORD,","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"DystoriaX"},"content":"            DeleteCommand.COMMAND_WORD,","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"DystoriaX"},"content":"            EditCommand.COMMAND_WORD,","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"DystoriaX"},"content":"            ExitCommand.COMMAND_WORD,","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"DystoriaX"},"content":"            FindCommand.COMMAND_WORD,","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"DystoriaX"},"content":"            HelpCommand.COMMAND_WORD,","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"DystoriaX"},"content":"            ListCommand.COMMAND_WORD,","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"e0543403"},"content":"            OpenFieldCommand.COMMAND_WORD,","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"DystoriaX"},"content":"            ReplaceTagCommand.COMMAND_WORD,","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"e0543403"},"content":"            ShowAliasCommand.COMMAND_WORD,","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"e0543403"},"content":"            ShowCommand.COMMAND_WORD,","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"DystoriaX"},"content":"            ShowTagsCommand.COMMAND_WORD,","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"DystoriaX"},"content":"            TagAllCommand.COMMAND_WORD,","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"DystoriaX"},"content":"            TagCommand.COMMAND_WORD,","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"DystoriaX"},"content":"            UntagAllCommand.COMMAND_WORD,","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"DystoriaX"},"content":"            UntagCommand.COMMAND_WORD","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"DystoriaX"},"content":"    );","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"DystoriaX"},"content":"    public static List\u003cString\u003e getExistingCommandWords() {","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"DystoriaX"},"content":"        // List.copyOf returns an unmodifiable list.","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"DystoriaX"},"content":"        return List.copyOf(COMMAND_WORDS);","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"DystoriaX"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"DystoriaX"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"DystoriaX"},"content":"     * Checks whether the given string is an existing command word.","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"DystoriaX"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"DystoriaX"},"content":"    public static boolean isExistingCommand(String s) {","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"DystoriaX"},"content":"        return COMMAND_WORDS.stream().anyMatch(existingCommandWord -\u003e s.equals(existingCommandWord));","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"DystoriaX"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"e0543403":4,"-":20,"DystoriaX":31}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"CommanderW324"},"content":"    private final Integer indexToShow;","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"CommanderW324"},"content":"    private final boolean showAlias;","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"CommanderW324"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, Integer indexToShow) {","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"CommanderW324"},"content":"        this.indexToShow \u003d indexToShow;","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"CommanderW324"},"content":"        this.showAlias \u003d false;","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"CommanderW324"},"content":"        this.indexToShow \u003d null;","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"CommanderW324"},"content":"        this.showAlias \u003d false;","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"CommanderW324"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"CommanderW324"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"CommanderW324"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"CommanderW324"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, boolean showAlias) {","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"CommanderW324"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"CommanderW324"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"CommanderW324"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"CommanderW324"},"content":"        this.indexToShow \u003d null;","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"CommanderW324"},"content":"        this.showAlias \u003d showAlias;","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"CommanderW324"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"CommanderW324"},"content":"        this(feedbackToUser, false, false, null);","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"CommanderW324"},"content":"    public Integer getIndexToShow() {","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"CommanderW324"},"content":"        return indexToShow;","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"CommanderW324"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"CommanderW324"},"content":"    public boolean isShowAlias() {","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"CommanderW324"},"content":"        return showAlias;","lastModifiedDate":"2021-10-28"},{"lineNumber":81,"author":{"gitId":"CommanderW324"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":82,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"CommanderW324"},"content":"    public boolean isShowPerson() {","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"CommanderW324"},"content":"        return indexToShow !\u003d null;","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"CommanderW324"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"CommanderW324"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit, indexToShow);","lastModifiedDate":"2021-10-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"CommanderW324":35,"-":77}},{"path":"src/main/java/seedu/address/logic/commands/DeleteAliasCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CommanderW324"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"CommanderW324"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"CommanderW324"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"CommanderW324"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"CommanderW324"},"content":"public class DeleteAliasCommand extends Command {","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"e0543403"},"content":"    public static final String COMMAND_WORD \u003d \"deletealias\";","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"CommanderW324"},"content":"    public static final String MESSAGE_PARAMS \u003d \"Parameters: YOUR_ALIAS\";","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"CommanderW324"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Deletes an existing alias for a command.\"","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"CommanderW324"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"CommanderW324"},"content":"            + MESSAGE_PARAMS;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"CommanderW324"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Deleted alias \u0027%1$s\u0027 for `%2$s` command\";","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"CommanderW324"},"content":"    public static final String MESSAGE_NON_EXISTING \u003d \"The alias \u0027%1$s\u0027 you specify does not exist\";","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"CommanderW324"},"content":"    private String alias;","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"CommanderW324"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"CommanderW324"},"content":"     * Creates an DeleteAliasCommand to delete an existing alias.","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"CommanderW324"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"CommanderW324"},"content":"    public DeleteAliasCommand(String alias) {","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"CommanderW324"},"content":"        requireNonNull(alias);","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"CommanderW324"},"content":"        this.alias \u003d alias;","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"CommanderW324"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"CommanderW324"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"CommanderW324"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"e0543403"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"CommanderW324"},"content":"        if (!model.containsAlias(alias)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"CommanderW324"},"content":"            throw new CommandException(String.format(MESSAGE_NON_EXISTING, alias));","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"CommanderW324"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"CommanderW324"},"content":"        String command \u003d model.getCorrespondingCommand(alias);","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"CommanderW324"},"content":"        model.deleteAlias(alias);","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"CommanderW324"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, alias, command));","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"CommanderW324"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"CommanderW324"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"CommanderW324"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"CommanderW324"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"CommanderW324"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"CommanderW324"},"content":"            return true;","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"CommanderW324"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"CommanderW324"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"CommanderW324"},"content":"        if (!(other instanceof DeleteAliasCommand)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"CommanderW324"},"content":"            return false;","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"CommanderW324"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"CommanderW324"},"content":"        // state check","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"CommanderW324"},"content":"        DeleteAliasCommand e \u003d (DeleteAliasCommand) other;","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"CommanderW324"},"content":"        return alias.equals(e.alias);","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"CommanderW324"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"CommanderW324"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"e0543403":6,"CommanderW324":56}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"e0543403"},"content":" * Deletes a person identified using it\u0027s displayed index from the contact book.","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"e0543403":1,"-":52}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"DystoriaX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DETAIL;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"samyipsh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GITHUB;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"CommanderW324"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LINKEDIN;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"DystoriaX"},"content":"import seedu.address.model.person.Detail;","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.person.Github;","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"CommanderW324"},"content":"import seedu.address.model.person.LinkedIn;","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"e0543403"},"content":" * Edits the details of an existing person in the contact book.","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"samyipsh"},"content":"            + \"[\" + PREFIX_GITHUB + \"GITHUB] \"","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"CommanderW324"},"content":"            + \"[\" + PREFIX_LINKEDIN + \"LINKEDIN] \"","lastModifiedDate":"2021-10-03"},{"lineNumber":49,"author":{"gitId":"DystoriaX"},"content":"            + \"[\" + PREFIX_DETAIL + \"DETAIL] \"","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"e0543403"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Identical person detected in stored contacts.\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"e0543403"},"content":"            + \"Contact may have already been added.\";","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"e0543403"},"content":"        if (model.hasPersonExcludingOtherPerson(editedPerson, personToEdit)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":106,"author":{"gitId":"samyipsh"},"content":"        Github updatedGithub \u003d editPersonDescriptor.getGithub().orElse(personToEdit.getGithub());","lastModifiedDate":"2021-09-30"},{"lineNumber":107,"author":{"gitId":"CommanderW324"},"content":"        LinkedIn updatedLinkedIn \u003d editPersonDescriptor.getLinkedIn()","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"CommanderW324"},"content":"                .orElse(personToEdit.getLinkedin());","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"DystoriaX"},"content":"        Detail updatedDetail \u003d editPersonDescriptor.getDetail().orElse(personToEdit.getDetail());","lastModifiedDate":"2021-10-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":112,"author":{"gitId":"jeromewjj"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedGithub,","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"DystoriaX"},"content":"                updatedLinkedIn, updatedDetail, updatedTags);","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":143,"author":{"gitId":"samyipsh"},"content":"        private Github github;","lastModifiedDate":"2021-09-30"},{"lineNumber":144,"author":{"gitId":"CommanderW324"},"content":"        private LinkedIn linkedin;","lastModifiedDate":"2021-10-03"},{"lineNumber":145,"author":{"gitId":"DystoriaX"},"content":"        private Detail detail;","lastModifiedDate":"2021-10-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":158,"author":{"gitId":"samyipsh"},"content":"            setGithub(toCopy.github);","lastModifiedDate":"2021-09-30"},{"lineNumber":159,"author":{"gitId":"CommanderW324"},"content":"            setLinkedIn(toCopy.linkedin);","lastModifiedDate":"2021-10-03"},{"lineNumber":160,"author":{"gitId":"DystoriaX"},"content":"            setDetail(toCopy.detail);","lastModifiedDate":"2021-10-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"DystoriaX"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, github, linkedin, detail, tags);","lastModifiedDate":"2021-10-06"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"CommanderW324"},"content":"        public void setLinkedIn(LinkedIn linkedin) {","lastModifiedDate":"2021-10-03"},{"lineNumber":196,"author":{"gitId":"CommanderW324"},"content":"            this.linkedin \u003d linkedin;","lastModifiedDate":"2021-10-03"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"CommanderW324"},"content":"        public Optional\u003cLinkedIn\u003e getLinkedIn() {","lastModifiedDate":"2021-10-03"},{"lineNumber":200,"author":{"gitId":"CommanderW324"},"content":"            return Optional.ofNullable(linkedin);","lastModifiedDate":"2021-10-03"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"samyipsh"},"content":"        public void setGithub(Github github) {","lastModifiedDate":"2021-09-30"},{"lineNumber":204,"author":{"gitId":"samyipsh"},"content":"            this.github \u003d github;","lastModifiedDate":"2021-09-30"},{"lineNumber":205,"author":{"gitId":"samyipsh"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":206,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":207,"author":{"gitId":"samyipsh"},"content":"        public Optional\u003cGithub\u003e getGithub() {","lastModifiedDate":"2021-09-30"},{"lineNumber":208,"author":{"gitId":"samyipsh"},"content":"            return Optional.ofNullable(github);","lastModifiedDate":"2021-09-30"},{"lineNumber":209,"author":{"gitId":"samyipsh"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":210,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":211,"author":{"gitId":"DystoriaX"},"content":"        public void setDetail(Detail detail) {","lastModifiedDate":"2021-10-06"},{"lineNumber":212,"author":{"gitId":"DystoriaX"},"content":"            this.detail \u003d detail;","lastModifiedDate":"2021-10-06"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":215,"author":{"gitId":"DystoriaX"},"content":"        public Optional\u003cDetail\u003e getDetail() {","lastModifiedDate":"2021-10-06"},{"lineNumber":216,"author":{"gitId":"DystoriaX"},"content":"            return Optional.ofNullable(detail);","lastModifiedDate":"2021-10-06"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":220,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":221,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":222,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":228,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":229,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":230,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":231,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":240,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":252,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":253,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":254,"author":{"gitId":"samyipsh"},"content":"                    \u0026\u0026 getGithub().equals(e.getGithub())","lastModifiedDate":"2021-10-05"},{"lineNumber":255,"author":{"gitId":"CommanderW324"},"content":"                    \u0026\u0026 getLinkedIn().equals(e.getLinkedIn())","lastModifiedDate":"2021-10-06"},{"lineNumber":256,"author":{"gitId":"DystoriaX"},"content":"                    \u0026\u0026 getDetail().equals(e.getDetail())","lastModifiedDate":"2021-10-06"},{"lineNumber":257,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":260,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"samyipsh":15,"e0543403":4,"CommanderW324":12,"jeromewjj":1,"-":215,"DystoriaX":13}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"e0543403"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Contact Book as requested ...\";","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"e0543403":1,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"e0543403"},"content":"import seedu.address.model.person.FoundInNameOrTagsPredicate;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"e0543403"},"content":" * Finds and lists all persons in contact book whose name contains any of the argument keywords.","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"e0543403"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names and tags contain any of \"","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"e0543403"},"content":"    private final FoundInNameOrTagsPredicate predicate;","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"e0543403"},"content":"    public FindCommand(FoundInNameOrTagsPredicate predicate) {","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"e0543403":5,"-":37}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"e0543403"},"content":" * Lists all persons in the contact book to the user.","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"e0543403":1,"-":23}},{"path":"src/main/java/seedu/address/logic/commands/OpenFieldCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samyipsh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"samyipsh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"samyipsh"},"content":"import static seedu.address.commons.core.UserBrowser.openUrl;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"samyipsh"},"content":"import java.util.List;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"samyipsh"},"content":"import seedu.address.commons.core.UserBrowser;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"samyipsh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"samyipsh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.person.Github;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.person.LinkedIn;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"samyipsh"},"content":"public class OpenFieldCommand extends Command {","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"samyipsh"},"content":"    public static final String COMMAND_WORD \u003d \"open\";","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"samyipsh"},"content":"    public static final String COMMAND_EXAMPLE \u003d \"Example: \" + COMMAND_WORD + \" 2 linkedin\";","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"samyipsh"},"content":"    public static final String MESSAGE_PARAMS \u003d \"Parameters: INDEXES (must be non-zero unsigned integers) \"","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"samyipsh"},"content":"            + \"FIELD\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"samyipsh"},"content":"            + COMMAND_EXAMPLE;","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"samyipsh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Opens contacts\u0027 field information.\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"samyipsh"},"content":"            + COMMAND_EXAMPLE;","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"samyipsh"},"content":"    public static final String MESSAGE_NO_DISPLAYED_PERSONS \u003d \"No persons displayed to open fields from.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"samyipsh"},"content":"    public static final String MESSAGE_OUT_OF_BOUNDS_INDEX_DISPLAYED \u003d \"%1$d is an out-of-bounds index.\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"samyipsh"},"content":"            + \"Indexes up to %2$d are valid.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"samyipsh"},"content":"    public static final String MESSAGE_UNSUPPORTED_FIELD \u003d \"%s is an unsupported field.\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"samyipsh"},"content":"            + \"Supported fields: Github, LinkedIn\";","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"samyipsh"},"content":"    public static final String MESSAGE_OPEN_FIELD_SUCCESS \u003d \"%s field of selected persons opened in browser\"","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"samyipsh"},"content":"            + \" (if field present and valid)\";","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"samyipsh"},"content":"    private final String field;","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"samyipsh"},"content":"    private final List\u003cIndex\u003e targetIndexes;","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"samyipsh"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"samyipsh"},"content":"     * Creates an OpenFieldCommand to open the specified field of the {@code Person}","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"samyipsh"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"samyipsh"},"content":"    public OpenFieldCommand(List\u003cIndex\u003e targetIndexes, String field) {","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"samyipsh"},"content":"        requireNonNull(targetIndexes);","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"samyipsh"},"content":"        requireNonNull(field);","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"samyipsh"},"content":"        this.targetIndexes \u003d targetIndexes;","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"samyipsh"},"content":"        this.field \u003d field.trim().toLowerCase();","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"samyipsh"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"samyipsh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"samyipsh"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"samyipsh"},"content":"        openFields(model);","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"samyipsh"},"content":"        return new CommandResult(String.format(MESSAGE_OPEN_FIELD_SUCCESS, field));","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"samyipsh"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"samyipsh"},"content":"     * Open fields of specified persons as determined by OpenFieldCommand object","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"samyipsh"},"content":"     * Runs if {@link UserBrowser#isDisplayAndBrowseCompatible()}","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"samyipsh"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"samyipsh"},"content":"     * @param model","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"samyipsh"},"content":"     * @throws CommandException","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"samyipsh"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"samyipsh"},"content":"    public void openFields(Model model) throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"samyipsh"},"content":"        if (!UserBrowser.isDisplayAndBrowseCompatible()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"samyipsh"},"content":"            return;","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"samyipsh"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"samyipsh"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"samyipsh"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"samyipsh"},"content":"        int listSize \u003d lastShownList.size();","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"samyipsh"},"content":"        requireNonEmptyList(listSize);","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"samyipsh"},"content":"        requireIndexesWithinListBounds(targetIndexes, listSize);","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"samyipsh"},"content":"        for (Index index: targetIndexes) {","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"samyipsh"},"content":"            Person person \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"samyipsh"},"content":"            openField(person);","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"samyipsh"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"samyipsh"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"samyipsh"},"content":"     * Opens the specified field of a Person.","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"samyipsh"},"content":"     * Only accepts valid fields of OpenField class","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"samyipsh"},"content":"     * Assumes {@link UserBrowser#isDisplayAndBrowseCompatible()}","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"samyipsh"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"samyipsh"},"content":"     * @param person Person object whose field is to be opened in the browser","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"samyipsh"},"content":"     * @throws CommandException","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"samyipsh"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"samyipsh"},"content":"    private void openField(Person person) throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"samyipsh"},"content":"        switch (field) {","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"samyipsh"},"content":"        case \"github\":","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"samyipsh"},"content":"            Github github \u003d person.getGithub();","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"jeromewjj"},"content":"            if (!github.isEmpty()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":98,"author":{"gitId":"samyipsh"},"content":"                openUrl(github.getUrl());","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"samyipsh"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"samyipsh"},"content":"            break;","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"samyipsh"},"content":"        case \"linkedin\":","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"samyipsh"},"content":"            LinkedIn linkedIn \u003d person.getLinkedin();","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"jeromewjj"},"content":"            if (!linkedIn.isEmpty()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":106,"author":{"gitId":"samyipsh"},"content":"                openUrl(linkedIn.getUrl());","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"samyipsh"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"samyipsh"},"content":"            break;","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"samyipsh"},"content":"        //throw exception if supported fields are not present","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"samyipsh"},"content":"        default:","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"samyipsh"},"content":"            throw new CommandException(String.format(MESSAGE_UNSUPPORTED_FIELD, field));","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"samyipsh"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"samyipsh"},"content":"    private void requireIndexesWithinListBounds(List\u003cIndex\u003e indexes, int listSize) throws CommandException {","lastModifiedDate":"2021-10-26"},{"lineNumber":118,"author":{"gitId":"samyipsh"},"content":"        for (Index i : indexes) {","lastModifiedDate":"2021-10-26"},{"lineNumber":119,"author":{"gitId":"samyipsh"},"content":"            requireIndexWithinListBounds(i, listSize);","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"samyipsh"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":122,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"samyipsh"},"content":"    private void requireIndexWithinListBounds(Index index, int listSize) throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"samyipsh"},"content":"        if (index.getZeroBased() \u003e\u003d listSize) {","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"samyipsh"},"content":"            throw new CommandException(String.format(MESSAGE_OUT_OF_BOUNDS_INDEX_DISPLAYED,","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"samyipsh"},"content":"                    index.getOneBased(), listSize));","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"samyipsh"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"samyipsh"},"content":"    private void requireNonEmptyList(int listSize) throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"samyipsh"},"content":"        if (listSize \u003d\u003d 0) {","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"samyipsh"},"content":"            throw new CommandException(MESSAGE_NO_DISPLAYED_PERSONS);","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"samyipsh"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":136,"author":{"gitId":"samyipsh"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":137,"author":{"gitId":"samyipsh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-25"},{"lineNumber":138,"author":{"gitId":"samyipsh"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-25"},{"lineNumber":139,"author":{"gitId":"samyipsh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-25"},{"lineNumber":140,"author":{"gitId":"samyipsh"},"content":"            return true;","lastModifiedDate":"2021-10-25"},{"lineNumber":141,"author":{"gitId":"samyipsh"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":142,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":143,"author":{"gitId":"samyipsh"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-25"},{"lineNumber":144,"author":{"gitId":"samyipsh"},"content":"        if (!(other instanceof TagCommand)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":145,"author":{"gitId":"samyipsh"},"content":"            return false;","lastModifiedDate":"2021-10-25"},{"lineNumber":146,"author":{"gitId":"samyipsh"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":147,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":148,"author":{"gitId":"samyipsh"},"content":"        // state check","lastModifiedDate":"2021-10-25"},{"lineNumber":149,"author":{"gitId":"samyipsh"},"content":"        OpenFieldCommand otherCommand \u003d (OpenFieldCommand) other;","lastModifiedDate":"2021-10-25"},{"lineNumber":150,"author":{"gitId":"samyipsh"},"content":"        return otherCommand.targetIndexes.equals(targetIndexes)","lastModifiedDate":"2021-10-25"},{"lineNumber":151,"author":{"gitId":"samyipsh"},"content":"                \u0026\u0026 otherCommand.field.equals(field);","lastModifiedDate":"2021-10-25"},{"lineNumber":152,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":153,"author":{"gitId":"samyipsh"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":154,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":155,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"samyipsh":153,"jeromewjj":2}},{"path":"src/main/java/seedu/address/logic/commands/ReplaceTagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromewjj"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"jeromewjj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"jeromewjj"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"jeromewjj"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"jeromewjj"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.person.Detail;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.person.Github;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.person.LinkedIn;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.person.TagsPresentPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"jeromewjj"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"jeromewjj"},"content":" * Replaces specified tag with a new tag for all contacts in NetworkUS.","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"jeromewjj"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"jeromewjj"},"content":"public class ReplaceTagCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"jeromewjj"},"content":"    public static final String COMMAND_WORD \u003d \"replacetag\";","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"jeromewjj"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"jeromewjj"},"content":"            + \": Replace the current tag to specified tag from all displayed contacts \"","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"jeromewjj"},"content":"            + \"Parameter: TAG(to be replaced) TAG(new Tag)\\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"jeromewjj"},"content":"            + \"Example: \" + COMMAND_WORD + \" friend\" + \" enemy\";","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"jeromewjj"},"content":"    public static final String MESSAGE_REPLACE_ALL_TAG_SUCCESS \u003d \"This tag has been replaced \"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"jeromewjj"},"content":"            + \"from %s to %s for all displayed contacts\";","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"jeromewjj"},"content":"    public static final String MESSAGE_TAG_NOT_EXIST \u003d \"This tag does not exist: %s\";","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"jeromewjj"},"content":"    private final Tag tagToDelete;","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"jeromewjj"},"content":"    private final Tag tagToAdd;","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"jeromewjj"},"content":"    private final TagsPresentPredicate predicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"jeromewjj"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"jeromewjj"},"content":"     * Creates a ReplaceTagCommand to replace specified tag.","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"jeromewjj"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"jeromewjj"},"content":"     * @param tagToDelete Tag to be replaced for all displayed contacts.","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"jeromewjj"},"content":"     * @param tagToAdd Tag to be added as replacement.","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"jeromewjj"},"content":"     * @param predicate Predicate to check whether person contain the specified tag.","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"jeromewjj"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"jeromewjj"},"content":"    public ReplaceTagCommand(Tag tagToDelete, Tag tagToAdd, TagsPresentPredicate predicate) {","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"jeromewjj"},"content":"        requireNonNull(tagToDelete);","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"jeromewjj"},"content":"        requireNonNull(tagToAdd);","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"jeromewjj"},"content":"        this.tagToDelete \u003d tagToDelete;","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"jeromewjj"},"content":"        this.tagToAdd \u003d tagToAdd;","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"jeromewjj"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"jeromewjj"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"jeromewjj"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"jeromewjj"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"jeromewjj"},"content":"        List\u003cPerson\u003e filteredList \u003d model.getFilteredPersonList().filtered(predicate);","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"jeromewjj"},"content":"        int numPerson \u003d filteredList.size();","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"jeromewjj"},"content":"        if (filteredList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"jeromewjj"},"content":"            throw new CommandException(String.format(MESSAGE_TAG_NOT_EXIST, tagToDelete));","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"jeromewjj"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"jeromewjj"},"content":"        for (int i \u003d 0; i \u003c numPerson; i++) {","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"jeromewjj"},"content":"            Person personToReplaceTag \u003d filteredList.get(0);","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"jeromewjj"},"content":"            Set\u003cTag\u003e existingTags \u003d personToReplaceTag.getTags();","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"jeromewjj"},"content":"            assert (existingTags.contains(tagToDelete));","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"jeromewjj"},"content":"            Person replaceTagPerson \u003d replaceTag(personToReplaceTag);","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"jeromewjj"},"content":"            model.setPerson(personToReplaceTag, replaceTagPerson);","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"jeromewjj"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"jeromewjj"},"content":"        return new CommandResult(String.format(MESSAGE_REPLACE_ALL_TAG_SUCCESS, tagToDelete, tagToAdd));","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"jeromewjj"},"content":"    private Person replaceTag(Person personToReplaceTag) {","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"jeromewjj"},"content":"        Name name \u003d personToReplaceTag.getName();","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"jeromewjj"},"content":"        Phone phone \u003d personToReplaceTag.getPhone();","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"jeromewjj"},"content":"        Email email \u003d personToReplaceTag.getEmail();","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"jeromewjj"},"content":"        Github github \u003d personToReplaceTag.getGithub();","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"jeromewjj"},"content":"        LinkedIn linkedIn \u003d personToReplaceTag.getLinkedin();","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"jeromewjj"},"content":"        Detail detail \u003d personToReplaceTag.getDetail();","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"jeromewjj"},"content":"        Set\u003cTag\u003e existingTags \u003d personToReplaceTag.getTags();","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"jeromewjj"},"content":"        Set\u003cTag\u003e updatedTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"jeromewjj"},"content":"        updatedTags.addAll(existingTags);","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"jeromewjj"},"content":"        updatedTags.remove(tagToDelete);","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"jeromewjj"},"content":"        updatedTags.add(tagToAdd);","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"jeromewjj"},"content":"        return new Person(name, phone, email, github, linkedIn, detail, updatedTags);","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"jeromewjj"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"jeromewjj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"jeromewjj"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"jeromewjj"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"jeromewjj"},"content":"            return true;","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"jeromewjj"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"jeromewjj"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"jeromewjj"},"content":"        if (!(other instanceof ReplaceTagCommand)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"jeromewjj"},"content":"            return false;","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"jeromewjj"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"jeromewjj"},"content":"        return tagToDelete.equals(((ReplaceTagCommand) other).tagToDelete)","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"jeromewjj"},"content":"                \u0026\u0026 tagToAdd.equals(((ReplaceTagCommand) other).tagToAdd)","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"jeromewjj"},"content":"                \u0026\u0026 predicate.equals(((ReplaceTagCommand) other).predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"jeromewjj"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"jeromewjj":112}},{"path":"src/main/java/seedu/address/logic/commands/ShowAliasCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CommanderW324"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"CommanderW324"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"CommanderW324"},"content":"public class ShowAliasCommand extends Command {","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"CommanderW324"},"content":"    public static final String COMMAND_WORD \u003d \"showalias\";","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"CommanderW324"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows Registered Aliases.\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"CommanderW324"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"CommanderW324"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened Alias Mapping Window.\";","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"CommanderW324"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"CommanderW324"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"CommanderW324"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, false, false, true);","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"CommanderW324"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"CommanderW324"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"CommanderW324":17}},{"path":"src/main/java/seedu/address/logic/commands/ShowCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CommanderW324"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"CommanderW324"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"CommanderW324"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"CommanderW324"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"CommanderW324"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"CommanderW324"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"CommanderW324"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"CommanderW324"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"CommanderW324"},"content":"/**","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"CommanderW324"},"content":" * Shows a person with their full details","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"CommanderW324"},"content":" */","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"CommanderW324"},"content":"public class ShowCommand extends Command {","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"CommanderW324"},"content":"    public static final String COMMAND_WORD \u003d \"show\";","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"CommanderW324"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"CommanderW324"},"content":"            + \": Shows the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"CommanderW324"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"CommanderW324"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"CommanderW324"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Shown Person with index %1$s\";","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"CommanderW324"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"CommanderW324"},"content":"    public ShowCommand(Index targetIndex) {","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"CommanderW324"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"CommanderW324"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"CommanderW324"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"CommanderW324"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"CommanderW324"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"CommanderW324"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"CommanderW324"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"CommanderW324"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"CommanderW324"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"CommanderW324"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, targetIndex.getOneBased()),","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"CommanderW324"},"content":"                false, false, targetIndex.getZeroBased());","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"CommanderW324"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"CommanderW324"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"CommanderW324"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"CommanderW324"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"CommanderW324"},"content":"                || (other instanceof ShowCommand// instanceof handles nulls","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"CommanderW324"},"content":"                \u0026\u0026 targetIndex.equals(((ShowCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"CommanderW324"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"CommanderW324"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"CommanderW324":51}},{"path":"src/main/java/seedu/address/logic/commands/ShowTagsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DystoriaX"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"DystoriaX"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"DystoriaX"},"content":"import javafx.collections.ObservableSet;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"DystoriaX"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"DystoriaX"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"DystoriaX"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"DystoriaX"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"e0543403"},"content":" * Shows all tags that is in the contact book.","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"DystoriaX"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"DystoriaX"},"content":"public class ShowTagsCommand extends Command {","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"DystoriaX"},"content":"    public static final String COMMAND_WORD \u003d \"showtags\";","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"DystoriaX"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all tags\";","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"DystoriaX"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"DystoriaX"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"DystoriaX"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"DystoriaX"},"content":"        ObservableSet\u003cTag\u003e tags \u003d model.getUniqueTagList();","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"DystoriaX"},"content":"        String tagsAsString \u003d tags.stream()","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"DystoriaX"},"content":"                .map(tag -\u003e tag.toString())","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"DystoriaX"},"content":"                .sorted()","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"DystoriaX"},"content":"                .reduce(\"\", (acc, tag) -\u003e acc + \" \" + tag)","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"DystoriaX"},"content":"                .trim();","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"DystoriaX"},"content":"        return new CommandResult(MESSAGE_SUCCESS + \"\\n\" + tagsAsString);","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"DystoriaX"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"DystoriaX"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"e0543403":1,"DystoriaX":32}},{"path":"src/main/java/seedu/address/logic/commands/TagAllCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0543403"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"e0543403"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"e0543403"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"e0543403"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"e0543403"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"e0543403"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"e0543403"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"e0543403"},"content":"import seedu.address.model.person.Detail;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"e0543403"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"e0543403"},"content":"import seedu.address.model.person.Github;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"e0543403"},"content":"import seedu.address.model.person.LinkedIn;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"e0543403"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"e0543403"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"e0543403"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"e0543403"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"e0543403"},"content":"public class TagAllCommand extends Command {","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"e0543403"},"content":"    public static final String COMMAND_WORD \u003d \"tagall\";","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"e0543403"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": tags all displayed persons with the specified tag.\\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"e0543403"},"content":"            + \"Parameters: TAG (must consist of letters and numbers without whitespaces)\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"e0543403"},"content":"            + \"Example: \" + COMMAND_WORD + \" programmer\";","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"e0543403"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"All displayed persons tagged.\";","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"e0543403"},"content":"    public static final String MESSAGE_NO_PERSONS_TO_TAG \u003d \"No persons displayed to tag.\";","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"e0543403"},"content":"    private final Tag tagToAdd;","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"e0543403"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"e0543403"},"content":"     * Creates a TagAllCommand to add the specified {@code Tag} to all displayed persons","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"e0543403"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"e0543403"},"content":"    public TagAllCommand(Tag tagToAdd) {","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"e0543403"},"content":"        requireNonNull(tagToAdd);","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"e0543403"},"content":"        this.tagToAdd \u003d tagToAdd;","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"e0543403"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"e0543403"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"e0543403"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"e0543403"},"content":"        tagDisplayedPersons(model);","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"e0543403"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"e0543403"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"e0543403"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"e0543403"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"e0543403"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"e0543403"},"content":"            return true;","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"e0543403"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"e0543403"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"e0543403"},"content":"        if (!(other instanceof TagAllCommand)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"e0543403"},"content":"            return false;","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"e0543403"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"e0543403"},"content":"        // state check","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"e0543403"},"content":"        TagAllCommand t \u003d (TagAllCommand) other;","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"e0543403"},"content":"        return tagToAdd.equals(t.tagToAdd);","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"e0543403"},"content":"    private void tagDisplayedPersons(Model model) throws CommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"e0543403"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"e0543403"},"content":"        List\u003cPerson\u003e displayedList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"e0543403"},"content":"        if (displayedList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"e0543403"},"content":"            throw new CommandException(MESSAGE_NO_PERSONS_TO_TAG);","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"e0543403"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"e0543403"},"content":"        for (Person personToTag : displayedList) {","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"e0543403"},"content":"            Person taggedPerson \u003d addTag(personToTag);","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"e0543403"},"content":"            model.setPerson(personToTag, taggedPerson);","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"e0543403"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"e0543403"},"content":"    private Person addTag(Person personToTag) {","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"e0543403"},"content":"        Name name \u003d personToTag.getName();","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"e0543403"},"content":"        Phone phone \u003d personToTag.getPhone();","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"e0543403"},"content":"        Email email \u003d personToTag.getEmail();","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"e0543403"},"content":"        Github github \u003d personToTag.getGithub();","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"e0543403"},"content":"        LinkedIn linkedIn \u003d personToTag.getLinkedin();","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"e0543403"},"content":"        Detail detail \u003d personToTag.getDetail();","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"e0543403"},"content":"        Set\u003cTag\u003e existingTags \u003d personToTag.getTags();","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"e0543403"},"content":"        Set\u003cTag\u003e updatedTags \u003d new HashSet\u003c\u003e(existingTags);","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"e0543403"},"content":"        updatedTags.add(tagToAdd);","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"e0543403"},"content":"        return new Person(name, phone, email, github, linkedIn, detail, updatedTags);","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"e0543403"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"e0543403":95}},{"path":"src/main/java/seedu/address/logic/commands/TagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0543403"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"e0543403"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"e0543403"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"e0543403"},"content":"import java.util.List;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"e0543403"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"e0543403"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"e0543403"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"e0543403"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"e0543403"},"content":"import seedu.address.model.person.Detail;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"e0543403"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"e0543403"},"content":"import seedu.address.model.person.Github;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"e0543403"},"content":"import seedu.address.model.person.LinkedIn;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"e0543403"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"e0543403"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"e0543403"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"e0543403"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"e0543403"},"content":"/**","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"e0543403"},"content":" * Adds a tag to a person in the contact book.","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"e0543403"},"content":" */","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"e0543403"},"content":"public class TagCommand extends Command {","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"e0543403"},"content":"    public static final String COMMAND_WORD \u003d \"tag\";","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"e0543403"},"content":"    public static final String MESSAGE_PARAMS \u003d \"Parameters: INDEXES (must be non-zero unsigned integers) \"","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"e0543403"},"content":"            + \"TAG (no spaces)\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"e0543403"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 2 programmer\";","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"e0543403"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a tag to the persons identified \"","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"e0543403"},"content":"            + \"by the index numbers used in the displayed person list. \"","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"e0543403"},"content":"            + \"Will not add a duplicate existing tag.\\n\" + MESSAGE_PARAMS;","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"e0543403"},"content":"    public static final String MESSAGE_NO_DISPLAYED_PERSONS \u003d \"No persons displayed to tag.\";","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"e0543403"},"content":"    public static final String MESSAGE_OUT_OF_BOUNDS_INDEX_DISPLAYED \u003d \"%1$d is an out-of-bounds index.\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"e0543403"},"content":"            + \"Indexes up to %2$d are valid.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"e0543403"},"content":"    public static final String MESSAGE_TAG_PERSON_SUCCESS \u003d \"Persons tagged.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"e0543403"},"content":"    private final List\u003cIndex\u003e targetIndexes;","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"e0543403"},"content":"    private final Tag tagToAdd;","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"e0543403"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"e0543403"},"content":"     * Creates a TagCommand to add the specified {@code Tag} to the person","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"e0543403"},"content":"     * at {@code Index}.","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"e0543403"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"e0543403"},"content":"    public TagCommand(List\u003cIndex\u003e targetIndexes, Tag tagToAdd) {","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"e0543403"},"content":"        requireNonNull(targetIndexes);","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"e0543403"},"content":"        requireNonNull(tagToAdd);","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"e0543403"},"content":"        this.targetIndexes \u003d targetIndexes;","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"e0543403"},"content":"        this.tagToAdd \u003d tagToAdd;","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"e0543403"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"e0543403"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"e0543403"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"e0543403"},"content":"        tagPersons(model);","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"e0543403"},"content":"        return new CommandResult(MESSAGE_TAG_PERSON_SUCCESS);","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"e0543403"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"e0543403"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"e0543403"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"e0543403"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"e0543403"},"content":"            return true;","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"e0543403"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"e0543403"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"e0543403"},"content":"        if (!(other instanceof TagCommand)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"e0543403"},"content":"            return false;","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"e0543403"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"e0543403"},"content":"        // state check","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"e0543403"},"content":"        TagCommand t \u003d (TagCommand) other;","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"e0543403"},"content":"        return targetIndexes.equals(t.targetIndexes)","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"e0543403"},"content":"                \u0026\u0026 tagToAdd.equals(t.tagToAdd);","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"e0543403"},"content":"    private Person addTag(Person personToTag) {","lastModifiedDate":"2021-10-16"},{"lineNumber":79,"author":{"gitId":"e0543403"},"content":"        Name name \u003d personToTag.getName();","lastModifiedDate":"2021-10-16"},{"lineNumber":80,"author":{"gitId":"e0543403"},"content":"        Phone phone \u003d personToTag.getPhone();","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"e0543403"},"content":"        Email email \u003d personToTag.getEmail();","lastModifiedDate":"2021-10-16"},{"lineNumber":82,"author":{"gitId":"e0543403"},"content":"        Github github \u003d personToTag.getGithub();","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"e0543403"},"content":"        LinkedIn linkedIn \u003d personToTag.getLinkedin();","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"e0543403"},"content":"        Detail detail \u003d personToTag.getDetail();","lastModifiedDate":"2021-10-16"},{"lineNumber":85,"author":{"gitId":"e0543403"},"content":"        Set\u003cTag\u003e existingTags \u003d personToTag.getTags();","lastModifiedDate":"2021-10-16"},{"lineNumber":86,"author":{"gitId":"e0543403"},"content":"        Set\u003cTag\u003e updatedTags \u003d new HashSet\u003c\u003e(existingTags);","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"e0543403"},"content":"        updatedTags.add(tagToAdd);","lastModifiedDate":"2021-10-16"},{"lineNumber":88,"author":{"gitId":"e0543403"},"content":"        return new Person(name, phone, email, github, linkedIn, detail, updatedTags);","lastModifiedDate":"2021-10-16"},{"lineNumber":89,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":90,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"e0543403"},"content":"    private void tagPersons(Model model) throws CommandException {","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"e0543403"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"e0543403"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"e0543403"},"content":"        Set\u003cPerson\u003e personsToTag \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"e0543403"},"content":"        if (lastShownList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"e0543403"},"content":"            throw new CommandException(MESSAGE_NO_DISPLAYED_PERSONS);","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"e0543403"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"e0543403"},"content":"        for (Index index: targetIndexes) {","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"e0543403"},"content":"            if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"e0543403"},"content":"                throw new CommandException(String.format(MESSAGE_OUT_OF_BOUNDS_INDEX_DISPLAYED,","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"e0543403"},"content":"                        index.getOneBased() , lastShownList.size()));","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"e0543403"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"e0543403"},"content":"            personsToTag.add(lastShownList.get(index.getZeroBased()));","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"e0543403"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"e0543403"},"content":"        for (Person personToTag : personsToTag) {","lastModifiedDate":"2021-10-26"},{"lineNumber":110,"author":{"gitId":"e0543403"},"content":"            Person taggedPerson \u003d addTag(personToTag);","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"e0543403"},"content":"            model.setPerson(personToTag, taggedPerson);","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"e0543403"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"e0543403"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"e0543403":114}},{"path":"src/main/java/seedu/address/logic/commands/UntagAllCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromewjj"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"jeromewjj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"jeromewjj"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"jeromewjj"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"jeromewjj"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.person.Detail;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.person.Github;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.person.LinkedIn;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.person.TagsPresentPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"jeromewjj"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"jeromewjj"},"content":" * Deletes specified tag from all displayed contacts in NetworkUS.","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"jeromewjj"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"jeromewjj"},"content":"public class UntagAllCommand extends Command {","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"jeromewjj"},"content":"    public static final String COMMAND_WORD \u003d \"untagall\";","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"jeromewjj"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Delete the specified tag from all displayed contacts \"","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"jeromewjj"},"content":"            + \"Parameter: TAG\\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"jeromewjj"},"content":"            + \"Example: \" + COMMAND_WORD + \" friend\";","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"jeromewjj"},"content":"    public static final String MESSAGE_UNTAG_ALL_SUCCESS \u003d \"This tag has been deleted for all \"","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"jeromewjj"},"content":"            + \"displayed contacts: %s\";","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"jeromewjj"},"content":"    public static final String MESSAGE_TAG_NOT_EXIST \u003d \"This tag does not exist: %s\";","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"jeromewjj"},"content":"    private final Tag tagToDelete;","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"jeromewjj"},"content":"    private final TagsPresentPredicate predicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"jeromewjj"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"jeromewjj"},"content":"     * Creates a UntagAllCommand to delete the specified {@code Tag} from all displayed contacts.","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"jeromewjj"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"jeromewjj"},"content":"     * @param tagToDelete Tag to be deleted from all displayed contacts.","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"jeromewjj"},"content":"     * @param predicate Predicate to check whether person contain the specified tag.","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"jeromewjj"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"jeromewjj"},"content":"    public UntagAllCommand(Tag tagToDelete, TagsPresentPredicate predicate) {","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"jeromewjj"},"content":"        requireNonNull(tagToDelete);","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"jeromewjj"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"jeromewjj"},"content":"        this.tagToDelete \u003d tagToDelete;","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"jeromewjj"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"jeromewjj"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"jeromewjj"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"jeromewjj"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"jeromewjj"},"content":"        List\u003cPerson\u003e filteredList \u003d model.getFilteredPersonList().filtered(predicate);","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"jeromewjj"},"content":"        int numPerson \u003d filteredList.size();","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"jeromewjj"},"content":"        if (filteredList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"jeromewjj"},"content":"            throw new CommandException(String.format(MESSAGE_TAG_NOT_EXIST, tagToDelete));","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"jeromewjj"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"jeromewjj"},"content":"        for (int i \u003d 0; i \u003c numPerson; i++) {","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"jeromewjj"},"content":"            Person personToUntag \u003d filteredList.get(0);","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"jeromewjj"},"content":"            Set\u003cTag\u003e existingTags \u003d personToUntag.getTags();","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"jeromewjj"},"content":"            assert (existingTags.contains(tagToDelete));","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"jeromewjj"},"content":"            Person untaggedPerson \u003d untag(personToUntag);","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"jeromewjj"},"content":"            model.setPerson(personToUntag, untaggedPerson);","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"jeromewjj"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"jeromewjj"},"content":"        return new CommandResult(String.format(MESSAGE_UNTAG_ALL_SUCCESS, tagToDelete));","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"jeromewjj"},"content":"    private Person untag(Person personToUntag) {","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"jeromewjj"},"content":"        Name name \u003d personToUntag.getName();","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"jeromewjj"},"content":"        Phone phone \u003d personToUntag.getPhone();","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"jeromewjj"},"content":"        Email email \u003d personToUntag.getEmail();","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"jeromewjj"},"content":"        Github github \u003d personToUntag.getGithub();","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"jeromewjj"},"content":"        LinkedIn linkedIn \u003d personToUntag.getLinkedin();","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"jeromewjj"},"content":"        Detail detail \u003d personToUntag.getDetail();","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"jeromewjj"},"content":"        Set\u003cTag\u003e existingTags \u003d personToUntag.getTags();","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"jeromewjj"},"content":"        Set\u003cTag\u003e updatedTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"jeromewjj"},"content":"        updatedTags.addAll(existingTags);","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"jeromewjj"},"content":"        updatedTags.remove(tagToDelete);","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"jeromewjj"},"content":"        return new Person(name, phone, email, github, linkedIn, detail, updatedTags);","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"jeromewjj"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"jeromewjj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"jeromewjj"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"jeromewjj"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"jeromewjj"},"content":"            return true;","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"jeromewjj"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"jeromewjj"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"jeromewjj"},"content":"        if (!(other instanceof UntagAllCommand)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"jeromewjj"},"content":"            return false;","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"jeromewjj"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"jeromewjj"},"content":"        return tagToDelete.equals(((UntagAllCommand) other).tagToDelete)","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"jeromewjj"},"content":"                \u0026\u0026 predicate.equals(((UntagAllCommand) other).predicate);","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"jeromewjj"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"jeromewjj":106}},{"path":"src/main/java/seedu/address/logic/commands/UntagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromewjj"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"jeromewjj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"jeromewjj"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"jeromewjj"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"jeromewjj"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.person.Detail;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.person.Github;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.person.LinkedIn;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"jeromewjj"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"jeromewjj"},"content":" * Untags a tag from a person in the NetworkUS.","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"jeromewjj"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"jeromewjj"},"content":"public class UntagCommand extends Command {","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"jeromewjj"},"content":"    public static final String COMMAND_WORD \u003d \"untag\";","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"jeromewjj"},"content":"    public static final String MESSAGE_PARAMS \u003d \"Parameters: INDEXES (must be non-zero unsigned integers) \"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"jeromewjj"},"content":"            + \"TAG\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"jeromewjj"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 2 programmer\";","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"jeromewjj"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Delete the tag of the person identified \"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"jeromewjj"},"content":"            + \"by the index numbers used in the displayed person list. \\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"jeromewjj"},"content":"            + \"Parameter: INDEXES TAG \\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"jeromewjj"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \" + \"friend\";","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"jeromewjj"},"content":"    public static final String MESSAGE_UNTAG_PERSON_SUCCESS \u003d \"Deleted %s Tag\";","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"jeromewjj"},"content":"    public static final String MESSAGE_NO_DISPLAYED_PERSONS \u003d \"No persons displayed to untag.\";","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"jeromewjj"},"content":"    public static final String MESSAGE_OUT_OF_BOUNDS_INDEX_DISPLAYED \u003d \"%1$d is an out-of-bounds index.\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"jeromewjj"},"content":"            + \"Indexes up to %2$d are valid.\";","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"jeromewjj"},"content":"    public static final String MESSAGE_TAG_NOT_EXIST \u003d \"None of the selected persons contain the tag: %s\";","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"jeromewjj"},"content":"    private final List\u003cIndex\u003e targetIndexes;","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"jeromewjj"},"content":"    private final Tag tagToDelete;","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"jeromewjj"},"content":"    private boolean isTagPresent;","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"jeromewjj"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"jeromewjj"},"content":"     * Creates an UntagCommand to delete the specified {@code Tag} from the person","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"jeromewjj"},"content":"     * at {@code Index}","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"jeromewjj"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"jeromewjj"},"content":"    public UntagCommand(List\u003cIndex\u003e targetIndexes, Tag tagToDelete) {","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"jeromewjj"},"content":"        requireNonNull(targetIndexes);","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"jeromewjj"},"content":"        requireNonNull(tagToDelete);","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"jeromewjj"},"content":"        this.targetIndexes \u003d targetIndexes;","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"jeromewjj"},"content":"        this.tagToDelete \u003d tagToDelete;","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"jeromewjj"},"content":"        this.isTagPresent \u003d false;","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"jeromewjj"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"jeromewjj"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"jeromewjj"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"jeromewjj"},"content":"        untagPerson(model);","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"jeromewjj"},"content":"        return new CommandResult(String.format(MESSAGE_UNTAG_PERSON_SUCCESS, tagToDelete));","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"jeromewjj"},"content":"    private Person untag(Person personToDeleteTag) {","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"jeromewjj"},"content":"        Name name \u003d personToDeleteTag.getName();","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"jeromewjj"},"content":"        Phone phone \u003d personToDeleteTag.getPhone();","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"jeromewjj"},"content":"        Email email \u003d personToDeleteTag.getEmail();","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"jeromewjj"},"content":"        Github github \u003d personToDeleteTag.getGithub();","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"jeromewjj"},"content":"        LinkedIn linkedIn \u003d personToDeleteTag.getLinkedin();","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"jeromewjj"},"content":"        Detail detail \u003d personToDeleteTag.getDetail();","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"jeromewjj"},"content":"        Set\u003cTag\u003e existingTags \u003d personToDeleteTag.getTags();","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"jeromewjj"},"content":"        Set\u003cTag\u003e updatedTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"jeromewjj"},"content":"        updatedTags.addAll(existingTags);","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"jeromewjj"},"content":"        if (updatedTags.remove(tagToDelete)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":80,"author":{"gitId":"jeromewjj"},"content":"            isTagPresent \u003d true;","lastModifiedDate":"2021-11-07"},{"lineNumber":81,"author":{"gitId":"jeromewjj"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":82,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":83,"author":{"gitId":"jeromewjj"},"content":"        return new Person(name, phone, email, github, linkedIn, detail, updatedTags);","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"jeromewjj"},"content":"    private void untagPerson(Model model) throws CommandException {","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"jeromewjj"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"jeromewjj"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"jeromewjj"},"content":"        Set\u003cPerson\u003e personsToUntag \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"jeromewjj"},"content":"        if (lastShownList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"jeromewjj"},"content":"            throw new CommandException(MESSAGE_NO_DISPLAYED_PERSONS);","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"jeromewjj"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"jeromewjj"},"content":"        for (Index index: targetIndexes) {","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"jeromewjj"},"content":"            if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"jeromewjj"},"content":"                throw new CommandException(String.format(MESSAGE_OUT_OF_BOUNDS_INDEX_DISPLAYED,","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"jeromewjj"},"content":"                        index.getOneBased(), lastShownList.size()));","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"jeromewjj"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"jeromewjj"},"content":"            Person person \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"jeromewjj"},"content":"            personsToUntag.add(person);","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"jeromewjj"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"jeromewjj"},"content":"        for (Person personToUntag: personsToUntag) {","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"jeromewjj"},"content":"            Person untaggedPerson \u003d untag(personToUntag);","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"jeromewjj"},"content":"            model.setPerson(personToUntag, untaggedPerson);","lastModifiedDate":"2021-10-26"},{"lineNumber":110,"author":{"gitId":"jeromewjj"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"jeromewjj"},"content":"        if (!isTagPresent) {","lastModifiedDate":"2021-11-07"},{"lineNumber":113,"author":{"gitId":"jeromewjj"},"content":"            throw new CommandException(String.format(MESSAGE_TAG_NOT_EXIST, tagToDelete));","lastModifiedDate":"2021-11-07"},{"lineNumber":114,"author":{"gitId":"jeromewjj"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":115,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":116,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":117,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":118,"author":{"gitId":"jeromewjj"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"jeromewjj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-20"},{"lineNumber":120,"author":{"gitId":"jeromewjj"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"jeromewjj"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-20"},{"lineNumber":122,"author":{"gitId":"jeromewjj"},"content":"            return true;","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"jeromewjj"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":125,"author":{"gitId":"jeromewjj"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-20"},{"lineNumber":126,"author":{"gitId":"jeromewjj"},"content":"        if (!(other instanceof UntagCommand)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"jeromewjj"},"content":"            return false;","lastModifiedDate":"2021-10-20"},{"lineNumber":128,"author":{"gitId":"jeromewjj"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":129,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":130,"author":{"gitId":"jeromewjj"},"content":"        return targetIndexes.equals(((UntagCommand) other).targetIndexes)","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"jeromewjj"},"content":"                \u0026\u0026 tagToDelete.equals(((UntagCommand) other).tagToDelete);","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":133,"author":{"gitId":"jeromewjj"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"jeromewjj":133}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"DystoriaX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DETAIL;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"samyipsh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GITHUB;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"CommanderW324"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LINKEDIN;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"DystoriaX"},"content":"import seedu.address.model.person.Detail;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.person.Github;","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"CommanderW324"},"content":"import seedu.address.model.person.LinkedIn;","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"CommanderW324"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"DystoriaX"},"content":"                        PREFIX_GITHUB, PREFIX_LINKEDIN, PREFIX_DETAIL, PREFIX_TAG);","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"jeromewjj"},"content":"        checkAllPrefixes(argMultimap);","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"jeromewjj"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).orElse(\"\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"jeromewjj"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).orElse(\"\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"jeromewjj"},"content":"        Github github \u003d ParserUtil.parseGithub(argMultimap.getValue(PREFIX_GITHUB).orElse(\"\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"jeromewjj"},"content":"        LinkedIn linkedin \u003d ParserUtil.parseLinkedIn(argMultimap.getValue(PREFIX_LINKEDIN).orElse(\"\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"DystoriaX"},"content":"        Detail detail \u003d ParserUtil.parseDetail(argMultimap.getValue(PREFIX_DETAIL).orElse(\"\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"DystoriaX"},"content":"        Person person \u003d new Person(name, phone, email, github, linkedin, detail, tagList);","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"jeromewjj"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"jeromewjj"},"content":"     * Checks whether the required Prefixed is present.","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"jeromewjj"},"content":"     * @param argumentMultimap the Prefix available","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"jeromewjj"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"jeromewjj"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"jeromewjj"},"content":"    private static void checkAllPrefixes(ArgumentMultimap argumentMultimap) throws ParseException {","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"jeromewjj"},"content":"        boolean isNamePresent \u003d arePrefixesPresent(argumentMultimap, PREFIX_NAME);","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"jeromewjj"},"content":"        if (!isNamePresent || !argumentMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"jeromewjj"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"jeromewjj"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"samyipsh":2,"CommanderW324":3,"jeromewjj":18,"-":48,"DystoriaX":5}},{"path":"src/main/java/seedu/address/logic/parser/AliasCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DystoriaX"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"DystoriaX"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"DystoriaX"},"content":"import seedu.address.logic.commands.AliasCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"DystoriaX"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"DystoriaX"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"DystoriaX"},"content":"public class AliasCommandParser implements Parser\u003cAliasCommand\u003e {","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"DystoriaX"},"content":"    public static final String MESSAGE_INVALID_COMMAND_ALIAS \u003d \"%1$s is not an existing command word\";","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"DystoriaX"},"content":"    public static final String MESSAGE_INVALID_ALIAS \u003d \"%1$s is an existing command word. \"","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"DystoriaX"},"content":"            + \"It cannot be used as an alias\";","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"DystoriaX"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"DystoriaX"},"content":"    public AliasCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"DystoriaX"},"content":"        String[] arguments \u003d userInput.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"DystoriaX"},"content":"        if (arguments.length !\u003d 2) {","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"DystoriaX"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AliasCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"DystoriaX"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"DystoriaX"},"content":"        String alias \u003d parseAlias(arguments);","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"DystoriaX"},"content":"        String command \u003d parseCommand(arguments);","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"DystoriaX"},"content":"        if (!Command.isExistingCommand(command)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"DystoriaX"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_ALIAS, command));","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"DystoriaX"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"DystoriaX"},"content":"        if (Command.isExistingCommand(alias)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"DystoriaX"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_ALIAS, alias));","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"DystoriaX"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"DystoriaX"},"content":"        return new AliasCommand(alias, command);","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"DystoriaX"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"DystoriaX"},"content":"    private String parseAlias(String[] args) {","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"DystoriaX"},"content":"        assert args.length \u003d\u003d 2;","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"DystoriaX"},"content":"        return args[1];","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"DystoriaX"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"DystoriaX"},"content":"    private String parseCommand(String[] args) {","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"DystoriaX"},"content":"        assert args.length \u003d\u003d 2;","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"DystoriaX"},"content":"        return args[0];","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"DystoriaX"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"DystoriaX"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"DystoriaX":47}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"samyipsh"},"content":"    public static final Prefix PREFIX_GITHUB \u003d new Prefix(\"g/\");","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"DystoriaX"},"content":"    public static final Prefix PREFIX_DETAIL \u003d new Prefix(\"d/\");","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"CommanderW324"},"content":"    public static final Prefix PREFIX_LINKEDIN \u003d new Prefix(\"l/\");","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"samyipsh":1,"CommanderW324":1,"-":14,"DystoriaX":1}},{"path":"src/main/java/seedu/address/logic/parser/ContactBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"DystoriaX"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"DystoriaX"},"content":"import seedu.address.logic.commands.AliasCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"CommanderW324"},"content":"import seedu.address.logic.commands.DeleteAliasCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"samyipsh"},"content":"import seedu.address.logic.commands.OpenFieldCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.logic.commands.ReplaceTagCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"CommanderW324"},"content":"import seedu.address.logic.commands.ShowAliasCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"CommanderW324"},"content":"import seedu.address.logic.commands.ShowCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"DystoriaX"},"content":"import seedu.address.logic.commands.ShowTagsCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"e0543403"},"content":"import seedu.address.logic.commands.TagAllCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"e0543403"},"content":"import seedu.address.logic.commands.TagCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.logic.commands.UntagAllCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.logic.commands.UntagCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"DystoriaX"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"samyipsh"},"content":"public class ContactBookParser {","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"DystoriaX"},"content":"    private Model model;","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"samyipsh"},"content":"    public ContactBookParser(Model model) {","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"DystoriaX"},"content":"        this.model \u003d model;","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"DystoriaX"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":57,"author":{"gitId":"DystoriaX"},"content":"        String unaliasedUserInput \u003d replaceAlias(userInput);","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"DystoriaX"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(unaliasedUserInput.trim());","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"CommanderW324"},"content":"        case ShowAliasCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"CommanderW324"},"content":"            return new ShowAliasCommand();","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"CommanderW324"},"content":"        case ShowCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"CommanderW324"},"content":"            return new ShowCommandParser().parse(arguments);","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"samyipsh"},"content":"        case OpenFieldCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"samyipsh"},"content":"            return new OpenFieldCommandParser().parse(arguments);","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":100,"author":{"gitId":"e0543403"},"content":"        case TagCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"e0543403"},"content":"            return new TagCommandParser().parse(arguments);","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":103,"author":{"gitId":"DystoriaX"},"content":"        case TagAllCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"DystoriaX"},"content":"            return new TagAllCommandParser().parse(arguments);","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"jeromewjj"},"content":"        case UntagCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"jeromewjj"},"content":"            return new UntagCommandParser().parse(arguments);","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"jeromewjj"},"content":"        case UntagAllCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"jeromewjj"},"content":"            return new UntagAllCommandParser().parse(arguments);","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"jeromewjj"},"content":"        case ReplaceTagCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"jeromewjj"},"content":"            return new ReplaceTagCommandParser().parse(arguments);","lastModifiedDate":"2021-10-20"},{"lineNumber":114,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":115,"author":{"gitId":"DystoriaX"},"content":"        case ShowTagsCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"DystoriaX"},"content":"            return new ShowTagsCommand();","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"DystoriaX"},"content":"        case AliasCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":119,"author":{"gitId":"DystoriaX"},"content":"            return new AliasCommandParser().parse(arguments);","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"CommanderW324"},"content":"        case DeleteAliasCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"CommanderW324"},"content":"            return new DeleteAliasCommandParser().parse(arguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"DystoriaX"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":130,"author":{"gitId":"DystoriaX"},"content":"     * Replaces alias with the aliased command.","lastModifiedDate":"2021-11-03"},{"lineNumber":131,"author":{"gitId":"DystoriaX"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":132,"author":{"gitId":"DystoriaX"},"content":"    public String replaceAlias(String userInput) {","lastModifiedDate":"2021-11-03"},{"lineNumber":133,"author":{"gitId":"DystoriaX"},"content":"        Set\u003cString\u003e aliases \u003d model.getExistingAlias();","lastModifiedDate":"2021-10-26"},{"lineNumber":134,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":135,"author":{"gitId":"DystoriaX"},"content":"        String longestMatchingAlias \u003d null;","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":137,"author":{"gitId":"DystoriaX"},"content":"        // userInput with trailing space, as we want to replace the word, not a substring of a word","lastModifiedDate":"2021-11-03"},{"lineNumber":138,"author":{"gitId":"DystoriaX"},"content":"        // This quick fix works for one word input as well","lastModifiedDate":"2021-11-03"},{"lineNumber":139,"author":{"gitId":"DystoriaX"},"content":"        String userInputTrailingSpace \u003d userInput + \" \";","lastModifiedDate":"2021-11-03"},{"lineNumber":140,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":141,"author":{"gitId":"DystoriaX"},"content":"        for (String alias: aliases) {","lastModifiedDate":"2021-10-26"},{"lineNumber":142,"author":{"gitId":"DystoriaX"},"content":"            if (userInputTrailingSpace.indexOf(alias + \" \") !\u003d 0) {","lastModifiedDate":"2021-11-03"},{"lineNumber":143,"author":{"gitId":"DystoriaX"},"content":"                continue;","lastModifiedDate":"2021-10-26"},{"lineNumber":144,"author":{"gitId":"DystoriaX"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":145,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":146,"author":{"gitId":"DystoriaX"},"content":"            if (longestMatchingAlias \u003d\u003d null || longestMatchingAlias.length() \u003c alias.length()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":147,"author":{"gitId":"DystoriaX"},"content":"                longestMatchingAlias \u003d alias;","lastModifiedDate":"2021-10-26"},{"lineNumber":148,"author":{"gitId":"DystoriaX"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":149,"author":{"gitId":"DystoriaX"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":150,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":151,"author":{"gitId":"DystoriaX"},"content":"        return longestMatchingAlias \u003d\u003d null","lastModifiedDate":"2021-10-26"},{"lineNumber":152,"author":{"gitId":"DystoriaX"},"content":"                ? userInput","lastModifiedDate":"2021-10-26"},{"lineNumber":153,"author":{"gitId":"DystoriaX"},"content":"                : userInput.replaceFirst(longestMatchingAlias, model.getCorrespondingCommand(longestMatchingAlias));","lastModifiedDate":"2021-10-27"},{"lineNumber":154,"author":{"gitId":"DystoriaX"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"samyipsh":6,"e0543403":5,"CommanderW324":12,"jeromewjj":12,"-":74,"DystoriaX":46}},{"path":"src/main/java/seedu/address/logic/parser/DeleteAliasCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CommanderW324"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"e0543403"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"CommanderW324"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"CommanderW324"},"content":"import seedu.address.logic.commands.DeleteAliasCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"CommanderW324"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"CommanderW324"},"content":"public class DeleteAliasCommandParser implements Parser\u003cDeleteAliasCommand\u003e {","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"CommanderW324"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"CommanderW324"},"content":"    public DeleteAliasCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"e0543403"},"content":"        requireNonNull(userInput);","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"e0543403"},"content":"        String arg \u003d userInput.trim();","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"e0543403"},"content":"        if (arg.equals(\"\")) {","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"CommanderW324"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteAliasCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"CommanderW324"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"e0543403"},"content":"        return new DeleteAliasCommand(arg);","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"CommanderW324"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"CommanderW324"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"e0543403":6,"CommanderW324":17}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"DystoriaX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DETAIL;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"samyipsh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GITHUB;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"CommanderW324"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LINKEDIN;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"CommanderW324"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"DystoriaX"},"content":"                        PREFIX_GITHUB, PREFIX_LINKEDIN, PREFIX_DETAIL, PREFIX_TAG);","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"CommanderW324"},"content":"        if (argMultimap.getValue(PREFIX_LINKEDIN).isPresent()) {","lastModifiedDate":"2021-10-03"},{"lineNumber":58,"author":{"gitId":"CommanderW324"},"content":"            editPersonDescriptor.setLinkedIn(ParserUtil.parseLinkedIn(argMultimap.getValue(PREFIX_LINKEDIN).get()));","lastModifiedDate":"2021-10-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"samyipsh"},"content":"        if (argMultimap.getValue(PREFIX_GITHUB).isPresent()) {","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"samyipsh"},"content":"            editPersonDescriptor.setGithub(ParserUtil.parseGithub(argMultimap.getValue(PREFIX_GITHUB).get()));","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"samyipsh"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"DystoriaX"},"content":"        if (argMultimap.getValue(PREFIX_DETAIL).isPresent()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"DystoriaX"},"content":"            editPersonDescriptor.setDetail(ParserUtil.parseDetail(argMultimap.getValue(PREFIX_DETAIL).get()));","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"samyipsh":4,"CommanderW324":4,"jeromewjj":1,"-":78,"DystoriaX":4}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"e0543403"},"content":"import seedu.address.model.person.FoundInNameOrTagsPredicate;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"e0543403"},"content":"        String[] nameAndTagKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"e0543403"},"content":"        return new FindCommand(new FoundInNameOrTagsPredicate(Arrays.asList(nameAndTagKeywords)));","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"e0543403":3,"-":30}},{"path":"src/main/java/seedu/address/logic/parser/OpenFieldCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samyipsh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"samyipsh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"samyipsh"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"samyipsh"},"content":"import static seedu.address.logic.commands.OpenFieldCommand.MESSAGE_UNSUPPORTED_FIELD;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"samyipsh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"samyipsh"},"content":"import java.util.List;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"samyipsh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"samyipsh"},"content":"import seedu.address.logic.commands.OpenFieldCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"samyipsh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"samyipsh"},"content":"public class OpenFieldCommandParser implements Parser\u003cOpenFieldCommand\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"samyipsh"},"content":"    public static final String MESSAGE_INVALID_INDEX_AT \u003d \"Index at position %1$d is \"","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"samyipsh"},"content":"            + \"not a non-zero unsigned integer.\\n%2$s\";","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"samyipsh"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"samyipsh"},"content":"     * Parses the given {@code String} of arguments in the context of the OpenFieldCommand","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"samyipsh"},"content":"     * and returns a OpenFieldCommand object for execution.","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"samyipsh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"samyipsh"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"samyipsh"},"content":"    public OpenFieldCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"samyipsh"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"samyipsh"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"samyipsh"},"content":"        String[] arguments \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"samyipsh"},"content":"        requireAtLeastTwoArgs(arguments);","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"samyipsh"},"content":"        String field \u003d arguments[arguments.length - 1].toLowerCase();","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"samyipsh"},"content":"        requireValidField(field);","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"samyipsh"},"content":"        List\u003cIndex\u003e indexes \u003d parseIndexes(arguments);","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"samyipsh"},"content":"        return new OpenFieldCommand(indexes, field);","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"samyipsh"},"content":"    private List\u003cIndex\u003e parseIndexes(String[] args) throws ParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"samyipsh"},"content":"        List\u003cIndex\u003e indexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"samyipsh"},"content":"        for (int i \u003d 0; i \u003c args.length - 1; i++) {","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"samyipsh"},"content":"            try {","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"samyipsh"},"content":"                indexes.add(ParserUtil.parseIndex(args[i]));","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"samyipsh"},"content":"            } catch (ParseException pe) {","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"samyipsh"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_INDEX_AT, (i + 1),","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"samyipsh"},"content":"                        OpenFieldCommand.MESSAGE_PARAMS));","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"samyipsh"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"samyipsh"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"samyipsh"},"content":"        return indexes;","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"samyipsh"},"content":"    private void requireValidField(String field) throws ParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"samyipsh"},"content":"        if (!(field.equals(\"github\") || field.equals(\"linkedin\"))) {","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"samyipsh"},"content":"            throw new ParseException(String.format(MESSAGE_UNSUPPORTED_FIELD, field));","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"samyipsh"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"samyipsh"},"content":"    private void requireAtLeastTwoArgs(String[] args) throws ParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"samyipsh"},"content":"        if (args.length \u003c 2) {","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"samyipsh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, OpenFieldCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"samyipsh"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"samyipsh"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"samyipsh":71}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"DystoriaX"},"content":"import seedu.address.model.person.Detail;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.person.Github;","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"CommanderW324"},"content":"import seedu.address.model.person.LinkedIn;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"jeromewjj"},"content":"        if (phone.equals(\"\")) {","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"jeromewjj"},"content":"            return Phone.getEmptyPhone();","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"jeromewjj"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"jeromewjj"},"content":"        if (email.equals(\"\")) {","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"jeromewjj"},"content":"            return Email.getEmptyEmail();","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"jeromewjj"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"samyipsh"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":96,"author":{"gitId":"samyipsh"},"content":"     * Parses a {@code String githubUsername} into an {@code Github}.","lastModifiedDate":"2021-09-30"},{"lineNumber":97,"author":{"gitId":"samyipsh"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-09-30"},{"lineNumber":98,"author":{"gitId":"samyipsh"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":99,"author":{"gitId":"samyipsh"},"content":"     * @throws ParseException if the given {@code Github} is invalid.","lastModifiedDate":"2021-09-30"},{"lineNumber":100,"author":{"gitId":"samyipsh"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":101,"author":{"gitId":"samyipsh"},"content":"    public static Github parseGithub(String githubUname) throws ParseException {","lastModifiedDate":"2021-09-30"},{"lineNumber":102,"author":{"gitId":"samyipsh"},"content":"        requireNonNull(githubUname);","lastModifiedDate":"2021-09-30"},{"lineNumber":103,"author":{"gitId":"samyipsh"},"content":"        String trimmedGithubUname \u003d githubUname.trim();","lastModifiedDate":"2021-09-30"},{"lineNumber":104,"author":{"gitId":"jeromewjj"},"content":"        if (githubUname.equals(\"\")) {","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"jeromewjj"},"content":"            return Github.getEmptyGithub();","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"jeromewjj"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"samyipsh"},"content":"        if (!Github.isValidGithub(trimmedGithubUname)) {","lastModifiedDate":"2021-09-30"},{"lineNumber":108,"author":{"gitId":"samyipsh"},"content":"            throw new ParseException(Github.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-30"},{"lineNumber":109,"author":{"gitId":"samyipsh"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":110,"author":{"gitId":"samyipsh"},"content":"        return new Github(trimmedGithubUname);","lastModifiedDate":"2021-09-30"},{"lineNumber":111,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":112,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":113,"author":{"gitId":"jeromewjj"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"jeromewjj"},"content":"     * Parses the URL string into LinkedIn instance","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"jeromewjj"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"jeromewjj"},"content":"    public static LinkedIn parseLinkedIn(String linkedinUrl) throws ParseException {","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"jeromewjj"},"content":"        requireNonNull(linkedinUrl);","lastModifiedDate":"2021-10-06"},{"lineNumber":118,"author":{"gitId":"jeromewjj"},"content":"        String trimmedLinkedInUrl \u003d linkedinUrl.trim();","lastModifiedDate":"2021-10-06"},{"lineNumber":119,"author":{"gitId":"jeromewjj"},"content":"        if (linkedinUrl.equals(\"\")) {","lastModifiedDate":"2021-11-04"},{"lineNumber":120,"author":{"gitId":"jeromewjj"},"content":"            return LinkedIn.getEmptyLinkedin();","lastModifiedDate":"2021-10-06"},{"lineNumber":121,"author":{"gitId":"jeromewjj"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"jeromewjj"},"content":"        if (!LinkedIn.isValidLinkedIn(trimmedLinkedInUrl)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":123,"author":{"gitId":"jeromewjj"},"content":"            throw new ParseException(LinkedIn.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":124,"author":{"gitId":"jeromewjj"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":125,"author":{"gitId":"jeromewjj"},"content":"        return new LinkedIn(trimmedLinkedInUrl);","lastModifiedDate":"2021-10-06"},{"lineNumber":126,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":127,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"DystoriaX"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":129,"author":{"gitId":"DystoriaX"},"content":"     * Parses a {@code String detail} into an {@code Detail}.","lastModifiedDate":"2021-10-06"},{"lineNumber":130,"author":{"gitId":"DystoriaX"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-06"},{"lineNumber":131,"author":{"gitId":"DystoriaX"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":132,"author":{"gitId":"DystoriaX"},"content":"    public static Detail parseDetail(String detail) {","lastModifiedDate":"2021-10-06"},{"lineNumber":133,"author":{"gitId":"DystoriaX"},"content":"        return new Detail(detail.trim());","lastModifiedDate":"2021-10-06"},{"lineNumber":134,"author":{"gitId":"DystoriaX"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":135,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":162,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"samyipsh":17,"CommanderW324":1,"jeromewjj":28,"-":108,"DystoriaX":9}},{"path":"src/main/java/seedu/address/logic/parser/ReplaceTagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromewjj"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"jeromewjj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"jeromewjj"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"jeromewjj"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.logic.commands.ReplaceTagCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.person.TagsPresentPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"jeromewjj"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"jeromewjj"},"content":" * Parses input arguments and creates a new ReplaceTag object","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"jeromewjj"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"jeromewjj"},"content":"public class ReplaceTagCommandParser implements Parser\u003cReplaceTagCommand\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"jeromewjj"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"jeromewjj"},"content":"     * Parses the given {@code String} of arguments in the context of the ReplaceTagCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"jeromewjj"},"content":"     * and returns a ReplaceTagCommand object for execution.","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"jeromewjj"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"jeromewjj"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"jeromewjj"},"content":"    public ReplaceTagCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"jeromewjj"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"jeromewjj"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"jeromewjj"},"content":"        Tag tagToDelete;","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"jeromewjj"},"content":"        Tag tagToAdd;","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"jeromewjj"},"content":"        TagsPresentPredicate predicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"jeromewjj"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"jeromewjj"},"content":"            String[] arguments \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"jeromewjj"},"content":"            if (arguments.length \u003c 2) {","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"jeromewjj"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"jeromewjj"},"content":"                        ReplaceTagCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"jeromewjj"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"jeromewjj"},"content":"            tagToDelete \u003d ParserUtil.parseTag(arguments[0]);","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"jeromewjj"},"content":"            tagToAdd \u003d ParserUtil.parseTag(arguments[1]);","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"jeromewjj"},"content":"            predicate \u003d new TagsPresentPredicate(Arrays.asList(arguments[0]));","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"jeromewjj"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"jeromewjj"},"content":"            throw new ParseException(pe.getMessage());","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"jeromewjj"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"jeromewjj"},"content":"        return new ReplaceTagCommand(tagToDelete, tagToAdd, predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"jeromewjj"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"jeromewjj":51}},{"path":"src/main/java/seedu/address/logic/parser/ShowCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CommanderW324"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"CommanderW324"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"CommanderW324"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"CommanderW324"},"content":"import seedu.address.logic.commands.ShowCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"CommanderW324"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"CommanderW324"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"CommanderW324"},"content":" * Parses input arguments and creates a new ShowCommand object","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"CommanderW324"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"CommanderW324"},"content":"public class ShowCommandParser implements Parser\u003cShowCommand\u003e {","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"CommanderW324"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"CommanderW324"},"content":"     * Parses the given {@code String} of arguments in the context of the ShowCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"CommanderW324"},"content":"     * and returns a ShowCommand object for execution.","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"CommanderW324"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"CommanderW324"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"CommanderW324"},"content":"    public ShowCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"CommanderW324"},"content":"        try {","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"CommanderW324"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"CommanderW324"},"content":"            return new ShowCommand(index);","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"CommanderW324"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"CommanderW324"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"CommanderW324"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ShowCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"CommanderW324"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"CommanderW324"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"CommanderW324"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"CommanderW324":29}},{"path":"src/main/java/seedu/address/logic/parser/TagAllCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0543403"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"e0543403"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"e0543403"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"e0543403"},"content":"import seedu.address.logic.commands.TagAllCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"e0543403"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"e0543403"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"e0543403"},"content":"public class TagAllCommandParser implements Parser\u003cTagAllCommand\u003e {","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"e0543403"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"e0543403"},"content":"     * Parses the given {@code String} of arguments in the context of the TagAllCommand","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"e0543403"},"content":"     * and returns a TagAllCommand object for execution.","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"e0543403"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"e0543403"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"e0543403"},"content":"    public TagAllCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"e0543403"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"e0543403"},"content":"        if (args.equals(\"\")) {","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"e0543403"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"e0543403"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, TagAllCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"e0543403"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"e0543403"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"e0543403"},"content":"            Tag tagToAdd \u003d ParserUtil.parseTag(args);","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"e0543403"},"content":"            return new TagAllCommand(tagToAdd);","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"e0543403"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"e0543403"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"e0543403"},"content":"                    pe.getMessage(), pe);","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"e0543403"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"e0543403"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"e0543403":35}},{"path":"src/main/java/seedu/address/logic/parser/TagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0543403"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"e0543403"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"e0543403"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"e0543403"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"e0543403"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"e0543403"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"e0543403"},"content":"import seedu.address.logic.commands.TagCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"e0543403"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"e0543403"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"e0543403"},"content":"public class TagCommandParser implements Parser\u003cTagCommand\u003e {","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"e0543403"},"content":"    public static final String MESSAGE_INVALID_INDEX_AT \u003d \"Index at position %1$d is \"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"e0543403"},"content":"            + \"not a non-zero unsigned integer.\\n%2$s\";","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"e0543403"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"e0543403"},"content":"     * Parses the given {@code String} of arguments in the context of the TagCommand","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"e0543403"},"content":"     * and returns a TagCommand object for execution.","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"e0543403"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"e0543403"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"e0543403"},"content":"    public TagCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"e0543403"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"e0543403"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"e0543403"},"content":"        List\u003cIndex\u003e indexes;","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"e0543403"},"content":"        Tag tag;","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"e0543403"},"content":"        try {","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"e0543403"},"content":"            String[] arguments \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"e0543403"},"content":"            if (arguments.length \u003c 2) {","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"e0543403"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, TagCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"e0543403"},"content":"            }","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"e0543403"},"content":"            indexes \u003d parseIndexes(arguments);","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"e0543403"},"content":"            tag \u003d parseTagAtEnd(arguments);","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"e0543403"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"e0543403"},"content":"            throw new ParseException(pe.getMessage());","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"e0543403"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"e0543403"},"content":"        assert(indexes.size() !\u003d 0);","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"e0543403"},"content":"        return new TagCommand(indexes, tag);","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"e0543403"},"content":"    private List\u003cIndex\u003e parseIndexes(String[] args) throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"e0543403"},"content":"        List\u003cIndex\u003e indexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"e0543403"},"content":"        for (int i \u003d 0; i \u003c args.length - 1; i++) {","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"e0543403"},"content":"            try {","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"e0543403"},"content":"                indexes.add(ParserUtil.parseIndex(args[i]));","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"e0543403"},"content":"            } catch (ParseException pe) {","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"e0543403"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_INDEX_AT, (i + 1),","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"e0543403"},"content":"                        TagCommand.MESSAGE_PARAMS));","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"e0543403"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"e0543403"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"e0543403"},"content":"        return indexes;","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"e0543403"},"content":"    private Tag parseTagAtEnd(String[] args) throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"e0543403"},"content":"        return ParserUtil.parseTag(args[args.length - 1]);","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"e0543403"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"e0543403":70}},{"path":"src/main/java/seedu/address/logic/parser/UntagAllCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromewjj"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"jeromewjj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"jeromewjj"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"jeromewjj"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.logic.commands.UntagAllCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.person.TagsPresentPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"jeromewjj"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"jeromewjj"},"content":" * Parses input arguments and creates a new UntagAllCommand object","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"jeromewjj"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"jeromewjj"},"content":"public class UntagAllCommandParser implements Parser\u003cUntagAllCommand\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"jeromewjj"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"jeromewjj"},"content":"     * Parses the given {@code String} of arguments in the context of the UntagAllCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"jeromewjj"},"content":"     * and returns an UntagAllCommand object for execution.","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"jeromewjj"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"jeromewjj"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"jeromewjj"},"content":"    public UntagAllCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"jeromewjj"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"jeromewjj"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"jeromewjj"},"content":"        Tag tag;","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"jeromewjj"},"content":"        TagsPresentPredicate predicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"jeromewjj"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"jeromewjj"},"content":"            String[] arguments \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"jeromewjj"},"content":"            if (arguments.length \u003c 1 || trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"jeromewjj"},"content":"                throw new ParseException(","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"jeromewjj"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, UntagAllCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"jeromewjj"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"jeromewjj"},"content":"            tag \u003d ParserUtil.parseTag(arguments[0]);","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"jeromewjj"},"content":"            predicate \u003d new TagsPresentPredicate(Arrays.asList(arguments[0]));","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"jeromewjj"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"jeromewjj"},"content":"            throw new ParseException(pe.getMessage());","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"jeromewjj"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"jeromewjj"},"content":"        return new UntagAllCommand(tag, predicate);","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"jeromewjj"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"jeromewjj":49}},{"path":"src/main/java/seedu/address/logic/parser/UntagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromewjj"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"jeromewjj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"jeromewjj"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"jeromewjj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"jeromewjj"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.logic.commands.UntagCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"jeromewjj"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"jeromewjj"},"content":" * Parses input arguments and creates a new UntagCommand object","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"jeromewjj"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"jeromewjj"},"content":"public class UntagCommandParser implements Parser\u003cUntagCommand\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"jeromewjj"},"content":"    public static final String MESSAGE_INVALID_INDEX_AT \u003d \"Index at position %1$d is \"","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"jeromewjj"},"content":"            + \"not a non-zero unsigned integer.\\n%2$s\";","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"jeromewjj"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"jeromewjj"},"content":"     * Parses the given {@code String} of arguments in the context of the UntagCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"jeromewjj"},"content":"     * and returns an UntagCommand object for execution.","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"jeromewjj"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"jeromewjj"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"jeromewjj"},"content":"    public UntagCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"jeromewjj"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"jeromewjj"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"jeromewjj"},"content":"        List\u003cIndex\u003e indexes;","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"jeromewjj"},"content":"        Tag tag;","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"jeromewjj"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"jeromewjj"},"content":"            String[] arguments \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"jeromewjj"},"content":"            if (arguments.length \u003c 2) {","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"jeromewjj"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, UntagCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"jeromewjj"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"jeromewjj"},"content":"            indexes \u003d parseIndexes(arguments);","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"jeromewjj"},"content":"            tag \u003d parseTagAtEnd(arguments);","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"jeromewjj"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"jeromewjj"},"content":"            throw new ParseException(pe.getMessage());","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"jeromewjj"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"jeromewjj"},"content":"        assert(indexes.size() !\u003d 0);","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"jeromewjj"},"content":"        return new UntagCommand(indexes, tag);","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"jeromewjj"},"content":"    private List\u003cIndex\u003e parseIndexes(String[] args) throws ParseException {","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"jeromewjj"},"content":"        List\u003cIndex\u003e indexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"jeromewjj"},"content":"        for (int i \u003d 0; i \u003c args.length - 1; i++) {","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"jeromewjj"},"content":"            try {","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"jeromewjj"},"content":"                indexes.add(ParserUtil.parseIndex(args[i]));","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"jeromewjj"},"content":"            } catch (ParseException pe) {","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"jeromewjj"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_INDEX_AT, (i + 1),","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"jeromewjj"},"content":"                        UntagCommand.MESSAGE_PARAMS));","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"jeromewjj"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"jeromewjj"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"jeromewjj"},"content":"        return indexes;","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"jeromewjj"},"content":"    private Tag parseTagAtEnd(String[] args) throws ParseException {","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"jeromewjj"},"content":"        return ParserUtil.parseTag(args[args.length - 1]);","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"jeromewjj"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"jeromewjj":73}},{"path":"src/main/java/seedu/address/model/ContactBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"DystoriaX"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"DystoriaX"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"DystoriaX"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"DystoriaX"},"content":"import javafx.collections.ObservableSet;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"DystoriaX"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"e0543403"},"content":" * Wraps all data at the contact-book level","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"samyipsh"},"content":"public class ContactBook implements ReadOnlyContactBook {","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"samyipsh"},"content":"     * Note that use of non-static init blocks are not recommended. There are other ways to avoid duplication","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"samyipsh"},"content":"    public ContactBook() {}","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"samyipsh"},"content":"     * Creates an ContactBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"samyipsh"},"content":"    public ContactBook(ReadOnlyContactBook toBeCopied) {","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"samyipsh"},"content":"     * Resets the existing data of this {@code ContactBook} with {@code newData}.","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"samyipsh"},"content":"    public void resetData(ReadOnlyContactBook newData) {","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"e0543403"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the contact book.","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"e0543403"},"content":"     * Returns true if a person with the same identity as {@code person} exists","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"e0543403"},"content":"     * in the contact book excluding the one found at {@code personToExclude}.","lastModifiedDate":"2021-11-07"},{"lineNumber":77,"author":{"gitId":"e0543403"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"e0543403"},"content":"    public boolean hasPersonExcludingOtherPerson(Person person, Person personToExclude) {","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"e0543403"},"content":"        requireNonNull(person);","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"e0543403"},"content":"        requireNonNull(personToExclude);","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"e0543403"},"content":"        return persons.containsExcludingPerson(person, personToExclude);","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"e0543403"},"content":"     * Adds a person to the contact book.","lastModifiedDate":"2021-11-07"},{"lineNumber":87,"author":{"gitId":"e0543403"},"content":"     * The person must not already exist in the contact book.","lastModifiedDate":"2021-11-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"e0543403"},"content":"     * {@code target} must exist in the contact book.","lastModifiedDate":"2021-11-07"},{"lineNumber":96,"author":{"gitId":"e0543403"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the contact book.","lastModifiedDate":"2021-11-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"samyipsh"},"content":"     * Removes {@code key} from this {@code ContactBook}.","lastModifiedDate":"2021-11-05"},{"lineNumber":106,"author":{"gitId":"e0543403"},"content":"     * {@code key} must exist in the contact book.","lastModifiedDate":"2021-11-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"DystoriaX"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"e0543403"},"content":"     * Returns the unmodifiable unique tags that exist in the contact book.","lastModifiedDate":"2021-11-07"},{"lineNumber":114,"author":{"gitId":"DystoriaX"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"DystoriaX"},"content":"    public ObservableSet\u003cTag\u003e getUniqueTagList() {","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"DystoriaX"},"content":"        Set\u003cTag\u003e tags \u003d persons.asUnmodifiableObservableList()","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"DystoriaX"},"content":"                .stream()","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"DystoriaX"},"content":"                .flatMap(p -\u003e p.getTags().stream())","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"DystoriaX"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"DystoriaX"},"content":"        ObservableSet\u003cTag\u003e observableTags \u003d FXCollections.observableSet(tags);","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"DystoriaX"},"content":"        return FXCollections.unmodifiableObservableSet(observableTags);","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"DystoriaX"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"CommanderW324"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":128,"author":{"gitId":"e0543403"},"content":"     * Returns the size of the contact book.","lastModifiedDate":"2021-11-07"},{"lineNumber":129,"author":{"gitId":"CommanderW324"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":130,"author":{"gitId":"CommanderW324"},"content":"    public int size() {","lastModifiedDate":"2021-10-13"},{"lineNumber":131,"author":{"gitId":"CommanderW324"},"content":"        return persons.length();","lastModifiedDate":"2021-10-13"},{"lineNumber":132,"author":{"gitId":"CommanderW324"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":133,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"samyipsh"},"content":"                || (other instanceof ContactBook // instanceof handles nulls","lastModifiedDate":"2021-11-05"},{"lineNumber":149,"author":{"gitId":"samyipsh"},"content":"                \u0026\u0026 persons.equals(((ContactBook) other).persons));","lastModifiedDate":"2021-11-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"samyipsh":10,"e0543403":19,"CommanderW324":6,"-":104,"DystoriaX":17}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"DystoriaX"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"DystoriaX"},"content":"import javafx.collections.ObservableSet;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"DystoriaX"},"content":"import seedu.address.model.alias.AliasTable;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"DystoriaX"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"DystoriaX"},"content":"     * Returns the user prefs\u0027 alias table.","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"DystoriaX"},"content":"    AliasTable getAliasTable();","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"DystoriaX"},"content":"     * Sets the user prefs\u0027 alias table.","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"DystoriaX"},"content":"    void setAliasTable(AliasTable aliasTable);","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"DystoriaX"},"content":"     * Adds the given alias for a command.","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"DystoriaX"},"content":"     * {@code command} must be an existing command.","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"DystoriaX"},"content":"    void addAlias(String alias, String command);","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"DystoriaX"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"DystoriaX"},"content":"     * Returns a set of existing aliases.","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"DystoriaX"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"DystoriaX"},"content":"    Set\u003cString\u003e getExistingAlias();","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"DystoriaX"},"content":"     * Returns what command does {@code alias} represent.","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"DystoriaX"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"DystoriaX"},"content":"    String getCorrespondingCommand(String alias);","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"CommanderW324"},"content":"    boolean containsAlias(String alias);","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"CommanderW324"},"content":"    void deleteAlias(String alias);","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"samyipsh"},"content":"     * Returns the user prefs\u0027 contact book file path.","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"samyipsh"},"content":"    Path getContactBookFilePath();","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"samyipsh"},"content":"     * Sets the user prefs\u0027 contact book file path.","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"samyipsh"},"content":"    void setContactBookFilePath(Path contactBookFilePath);","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"samyipsh"},"content":"     * Replaces contact book data with the data in {@code contactBook}.","lastModifiedDate":"2021-11-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"samyipsh"},"content":"    void setContactBook(ReadOnlyContactBook contactBook);","lastModifiedDate":"2021-11-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"samyipsh"},"content":"    /** Returns the ContactBook */","lastModifiedDate":"2021-11-05"},{"lineNumber":87,"author":{"gitId":"samyipsh"},"content":"    ReadOnlyContactBook getContactBook();","lastModifiedDate":"2021-11-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"samyipsh"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the contact book.","lastModifiedDate":"2021-11-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"e0543403"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"e0543403"},"content":"     * Returns true if a person with the same identity as {@code person}","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"samyipsh"},"content":"     * exists in the contact book excluding the one at {@code personToExclude} once.","lastModifiedDate":"2021-11-05"},{"lineNumber":97,"author":{"gitId":"e0543403"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"e0543403"},"content":"    boolean hasPersonExcludingOtherPerson(Person person, Person personToExclude);","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"samyipsh"},"content":"     * The person must exist in the contact book.","lastModifiedDate":"2021-11-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"samyipsh"},"content":"     * {@code person} must not already exist in the contact book.","lastModifiedDate":"2021-11-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":114,"author":{"gitId":"samyipsh"},"content":"     * {@code target} must exist in the contact book.","lastModifiedDate":"2021-11-05"},{"lineNumber":115,"author":{"gitId":"samyipsh"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the contact book.","lastModifiedDate":"2021-11-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"samyipsh"},"content":"    /** Gets the unmodifiable unique tag list of all persons in the contact book */","lastModifiedDate":"2021-11-05"},{"lineNumber":129,"author":{"gitId":"DystoriaX"},"content":"    ObservableSet\u003cTag\u003e getUniqueTagList();","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"samyipsh":15,"e0543403":5,"CommanderW324":4,"-":85,"DystoriaX":21}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"DystoriaX"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"DystoriaX"},"content":"import javafx.collections.ObservableSet;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":16,"author":{"gitId":"DystoriaX"},"content":"import seedu.address.model.alias.AliasTable;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"DystoriaX"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"e0543403"},"content":" * Represents the in-memory model of the contact book data.","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"samyipsh"},"content":"    private final ContactBook contactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"samyipsh"},"content":"     * Initializes a ModelManager with the given contactBook and userPrefs.","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"samyipsh"},"content":"    public ModelManager(ReadOnlyContactBook contactBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"samyipsh"},"content":"        requireAllNonNull(contactBook, userPrefs);","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"samyipsh"},"content":"        logger.fine(\"Initializing with address book: \" + contactBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"samyipsh"},"content":"        this.contactBook \u003d new ContactBook(contactBook);","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"samyipsh"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.contactBook.getPersonList());","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"samyipsh"},"content":"        this(new ContactBook(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"DystoriaX"},"content":"    public AliasTable getAliasTable() {","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"DystoriaX"},"content":"        return userPrefs.getAliasTable();","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"DystoriaX"},"content":"    public void setAliasTable(AliasTable aliasTable) {","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"DystoriaX"},"content":"        requireNonNull(aliasTable);","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"DystoriaX"},"content":"        userPrefs.setAliasTable(aliasTable);","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"DystoriaX"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"DystoriaX"},"content":"    public void addAlias(String alias, String command) {","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"DystoriaX"},"content":"        requireNonNull(alias);","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"DystoriaX"},"content":"        requireNonNull(command);","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"DystoriaX"},"content":"        userPrefs.addAlias(alias, command);","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"DystoriaX"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"DystoriaX"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"DystoriaX"},"content":"    public Set\u003cString\u003e getExistingAlias() {","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"DystoriaX"},"content":"        return userPrefs.getExistingAliases();","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"DystoriaX"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"DystoriaX"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"DystoriaX"},"content":"    public String getCorrespondingCommand(String alias) {","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"DystoriaX"},"content":"        requireNonNull(alias);","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"DystoriaX"},"content":"        return userPrefs.getCorrespondingCommand(alias);","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"DystoriaX"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"CommanderW324"},"content":"    public boolean containsAlias(String alias) {","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"CommanderW324"},"content":"        requireNonNull(alias);","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"CommanderW324"},"content":"        return userPrefs.containsAlias(alias);","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"CommanderW324"},"content":"    public void deleteAlias(String alias) {","lastModifiedDate":"2021-10-27"},{"lineNumber":109,"author":{"gitId":"CommanderW324"},"content":"        requireNonNull(alias);","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"CommanderW324"},"content":"        userPrefs.deleteAlias(alias);","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"CommanderW324"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"samyipsh"},"content":"    public Path getContactBookFilePath() {","lastModifiedDate":"2021-11-05"},{"lineNumber":115,"author":{"gitId":"samyipsh"},"content":"        return userPrefs.getContactBookFilePath();","lastModifiedDate":"2021-11-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"samyipsh"},"content":"    public void setContactBookFilePath(Path contactBookFilePath) {","lastModifiedDate":"2021-11-05"},{"lineNumber":120,"author":{"gitId":"samyipsh"},"content":"        requireNonNull(contactBookFilePath);","lastModifiedDate":"2021-11-05"},{"lineNumber":121,"author":{"gitId":"samyipsh"},"content":"        userPrefs.setContactBookFilePath(contactBookFilePath);","lastModifiedDate":"2021-11-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"samyipsh"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ContactBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-11-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":127,"author":{"gitId":"samyipsh"},"content":"    public void setContactBook(ReadOnlyContactBook contactBook) {","lastModifiedDate":"2021-11-05"},{"lineNumber":128,"author":{"gitId":"samyipsh"},"content":"        this.contactBook.resetData(contactBook);","lastModifiedDate":"2021-11-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":132,"author":{"gitId":"samyipsh"},"content":"    public ReadOnlyContactBook getContactBook() {","lastModifiedDate":"2021-11-05"},{"lineNumber":133,"author":{"gitId":"samyipsh"},"content":"        return contactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"samyipsh"},"content":"        return contactBook.hasPerson(person);","lastModifiedDate":"2021-11-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"e0543403"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":143,"author":{"gitId":"e0543403"},"content":"    public boolean hasPersonExcludingOtherPerson(Person person, Person personToExclude) {","lastModifiedDate":"2021-11-04"},{"lineNumber":144,"author":{"gitId":"e0543403"},"content":"        requireNonNull(person);","lastModifiedDate":"2021-10-23"},{"lineNumber":145,"author":{"gitId":"e0543403"},"content":"        requireNonNull(personToExclude);","lastModifiedDate":"2021-11-04"},{"lineNumber":146,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":147,"author":{"gitId":"samyipsh"},"content":"        return contactBook.hasPersonExcludingOtherPerson(person, personToExclude);","lastModifiedDate":"2021-11-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":152,"author":{"gitId":"samyipsh"},"content":"        contactBook.removePerson(target);","lastModifiedDate":"2021-11-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":157,"author":{"gitId":"samyipsh"},"content":"        contactBook.addPerson(person);","lastModifiedDate":"2021-11-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":165,"author":{"gitId":"samyipsh"},"content":"        contactBook.setPerson(target, editedPerson);","lastModifiedDate":"2021-11-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":172,"author":{"gitId":"samyipsh"},"content":"     * {@code versionedContactBook}","lastModifiedDate":"2021-11-05"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":185,"author":{"gitId":"DystoriaX"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":186,"author":{"gitId":"DystoriaX"},"content":"    public ObservableSet\u003cTag\u003e getUniqueTagList() {","lastModifiedDate":"2021-10-21"},{"lineNumber":187,"author":{"gitId":"samyipsh"},"content":"        return contactBook.getUniqueTagList();","lastModifiedDate":"2021-11-05"},{"lineNumber":188,"author":{"gitId":"DystoriaX"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":189,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":204,"author":{"gitId":"samyipsh"},"content":"        return contactBook.equals(other.contactBook)","lastModifiedDate":"2021-11-05"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"samyipsh":26,"e0543403":6,"CommanderW324":7,"-":139,"DystoriaX":31}},{"path":"src/main/java/seedu/address/model/ReadOnlyContactBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"e0543403"},"content":" * Unmodifiable view of an contact book","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"samyipsh"},"content":"public interface ReadOnlyContactBook {","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"samyipsh":1,"e0543403":1,"-":14}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"DystoriaX"},"content":"import seedu.address.model.alias.AliasTable;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"DystoriaX"},"content":"    AliasTable getAliasTable();","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"samyipsh"},"content":"    Path getContactBookFilePath();","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"samyipsh":1,"-":15,"DystoriaX":3}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"DystoriaX"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"DystoriaX"},"content":"import seedu.address.model.alias.AliasTable;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"DystoriaX"},"content":"    private AliasTable aliasTable \u003d new AliasTable();","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"samyipsh"},"content":"    private Path contactBookFilePath \u003d Paths.get(\"data\" , \"contactbook.json\");","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"DystoriaX"},"content":"        setAliasTable(newUserPrefs.getAliasTable());","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"samyipsh"},"content":"        setContactBookFilePath(newUserPrefs.getContactBookFilePath());","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"DystoriaX"},"content":"    public AliasTable getAliasTable() {","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"DystoriaX"},"content":"        return aliasTable;","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"DystoriaX"},"content":"    public void setAliasTable(AliasTable aliasTable) {","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"DystoriaX"},"content":"        requireNonNull(aliasTable);","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"DystoriaX"},"content":"        this.aliasTable \u003d aliasTable;","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"DystoriaX"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"DystoriaX"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"DystoriaX"},"content":"     * Adds alias-command pair to the alias table.","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"DystoriaX"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"DystoriaX"},"content":"    public void addAlias(String alias, String command) {","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"DystoriaX"},"content":"        requireNonNull(alias);","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"DystoriaX"},"content":"        requireNonNull(command);","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"DystoriaX"},"content":"        aliasTable.addAlias(alias, command);","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"DystoriaX"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"CommanderW324"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"CommanderW324"},"content":"     * Deletes an existing alias.","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"CommanderW324"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"CommanderW324"},"content":"    public void deleteAlias(String alias) {","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"CommanderW324"},"content":"        requireNonNull(alias);","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"CommanderW324"},"content":"        aliasTable.deleteAlias(alias);","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"CommanderW324"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"DystoriaX"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"DystoriaX"},"content":"     * Gets the existing aliases.","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"DystoriaX"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"DystoriaX"},"content":"    public Set\u003cString\u003e getExistingAliases() {","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"DystoriaX"},"content":"        return aliasTable.getExistingAliases();","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"DystoriaX"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"CommanderW324"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":88,"author":{"gitId":"CommanderW324"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":89,"author":{"gitId":"CommanderW324"},"content":"     * Returns whether an alias exists","lastModifiedDate":"2021-10-28"},{"lineNumber":90,"author":{"gitId":"CommanderW324"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":91,"author":{"gitId":"CommanderW324"},"content":"    public boolean containsAlias(String alias) {","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"CommanderW324"},"content":"        return aliasTable.containsAlias(alias);","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"CommanderW324"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"DystoriaX"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"DystoriaX"},"content":"     * Gets the corresponding command for certain alias.","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"DystoriaX"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"DystoriaX"},"content":"    public String getCorrespondingCommand(String alias) {","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"DystoriaX"},"content":"        requireNonNull(alias);","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"DystoriaX"},"content":"        return aliasTable.getCorrespondingCommand(alias);","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"DystoriaX"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"samyipsh"},"content":"    public Path getContactBookFilePath() {","lastModifiedDate":"2021-11-05"},{"lineNumber":104,"author":{"gitId":"samyipsh"},"content":"        return contactBookFilePath;","lastModifiedDate":"2021-11-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":107,"author":{"gitId":"samyipsh"},"content":"    public void setContactBookFilePath(Path contactBookFilePath) {","lastModifiedDate":"2021-11-05"},{"lineNumber":108,"author":{"gitId":"samyipsh"},"content":"        requireNonNull(contactBookFilePath);","lastModifiedDate":"2021-11-05"},{"lineNumber":109,"author":{"gitId":"samyipsh"},"content":"        this.contactBookFilePath \u003d contactBookFilePath;","lastModifiedDate":"2021-11-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"DystoriaX"},"content":"                \u0026\u0026 aliasTable.equals(o.aliasTable)","lastModifiedDate":"2021-10-26"},{"lineNumber":125,"author":{"gitId":"samyipsh"},"content":"                \u0026\u0026 contactBookFilePath.equals(o.contactBookFilePath);","lastModifiedDate":"2021-11-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"samyipsh"},"content":"        return Objects.hash(guiSettings, aliasTable, contactBookFilePath);","lastModifiedDate":"2021-11-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"DystoriaX"},"content":"        sb.append(\"\\nAlias table : \" + aliasTable);","lastModifiedDate":"2021-10-26"},{"lineNumber":138,"author":{"gitId":"samyipsh"},"content":"        sb.append(\"\\nLocal data file location : \" + contactBookFilePath);","lastModifiedDate":"2021-11-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"samyipsh":10,"CommanderW324":16,"-":79,"DystoriaX":37}},{"path":"src/main/java/seedu/address/model/alias/AliasTable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DystoriaX"},"content":"package seedu.address.model.alias;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"DystoriaX"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"DystoriaX"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"DystoriaX"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"DystoriaX"},"content":" * Stores the alias-command pairs.","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"DystoriaX"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"DystoriaX"},"content":"public class AliasTable {","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"CommanderW324"},"content":"    private final HashMap\u003cString, String\u003e aliasTable \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"DystoriaX"},"content":"    public void addAlias(String alias, String command) {","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"DystoriaX"},"content":"        aliasTable.put(alias, command);","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"DystoriaX"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"CommanderW324"},"content":"    public void deleteAlias(String alias) {","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"CommanderW324"},"content":"        aliasTable.remove(alias);","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"CommanderW324"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"CommanderW324"},"content":"    public boolean containsAlias(String alias) {","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"CommanderW324"},"content":"        return aliasTable.containsKey(alias);","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"CommanderW324"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"DystoriaX"},"content":"    public Set\u003cString\u003e getExistingAliases() {","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"DystoriaX"},"content":"        return aliasTable.keySet();","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"DystoriaX"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"DystoriaX"},"content":"    public String getCorrespondingCommand(String alias) {","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"DystoriaX"},"content":"        // Possible enhancement by creating custom exception when {@code alias} does not exist in the table","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"DystoriaX"},"content":"        return aliasTable.get(alias);","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"DystoriaX"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"CommanderW324"},"content":"    public HashMap\u003cString, String\u003e getAliasTable() {","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"CommanderW324"},"content":"        return this.aliasTable;","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"CommanderW324"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"DystoriaX"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"DystoriaX"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"DystoriaX"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"DystoriaX"},"content":"                || (other instanceof AliasTable // instanceof handles nulls","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"DystoriaX"},"content":"                \u0026\u0026 aliasTable.equals(((AliasTable) other).aliasTable)); // state check","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"DystoriaX"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"DystoriaX"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"DystoriaX"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"DystoriaX"},"content":"        return aliasTable.hashCode();","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"DystoriaX"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"DystoriaX"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"DystoriaX"},"content":"    public String toString() {","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"DystoriaX"},"content":"        return \"Alias table: \" + aliasTable.toString();","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"DystoriaX"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"DystoriaX"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"CommanderW324":13,"DystoriaX":41}},{"path":"src/main/java/seedu/address/model/person/Detail.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DystoriaX"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"DystoriaX"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"DystoriaX"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"e0543403"},"content":" * Represents a Person\u0027s detail in the contact book.","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"DystoriaX"},"content":" * Guarantees: immutable;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"DystoriaX"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"DystoriaX"},"content":"public class Detail {","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"DystoriaX"},"content":"    public final String value;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"DystoriaX"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"DystoriaX"},"content":"     * Constructs a {@code Detail}.","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"DystoriaX"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"DystoriaX"},"content":"     * @param detail A detail.","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"DystoriaX"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"DystoriaX"},"content":"    public Detail(String detail) {","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"DystoriaX"},"content":"        requireNonNull(detail);","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"DystoriaX"},"content":"        value \u003d detail;","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"DystoriaX"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"DystoriaX"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"DystoriaX"},"content":"    public String toString() {","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"DystoriaX"},"content":"        return value;","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"DystoriaX"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"DystoriaX"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"DystoriaX"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"DystoriaX"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"DystoriaX"},"content":"                || (other instanceof Detail // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"DystoriaX"},"content":"                \u0026\u0026 value.equals(((Detail) other).value)); // state check","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"DystoriaX"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"DystoriaX"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"DystoriaX"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"DystoriaX"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"DystoriaX"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"DystoriaX"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"e0543403":1,"DystoriaX":38}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"e0543403"},"content":" * Represents a Person\u0027s email in the contact book.","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"e0543403"},"content":"            + \"1. The local-part should only contain letters, numbers and these special characters, excluding \"","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"e0543403"},"content":"            + \"    - have each domain label start and end with a letter or number\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"e0543403"},"content":"            + \"    - have each domain label consist of letters and or numbers, separated only by hyphens, if any.\";","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"jeromewjj"},"content":"    private static final Email EMPTY_EMAIL \u003d new Email();","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"jeromewjj"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"jeromewjj"},"content":"     * Constructs an Empty Email.","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"jeromewjj"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"jeromewjj"},"content":"    private Email() {","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"jeromewjj"},"content":"        value \u003d \"-\";","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"jeromewjj"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"jeromewjj"},"content":"     * Get an Empty Email.","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"jeromewjj"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"jeromewjj"},"content":"     * @return EMPTY_EMAIL.","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"jeromewjj"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"jeromewjj"},"content":"    public static Email getEmptyEmail() {","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"jeromewjj"},"content":"        return EMPTY_EMAIL;","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"e0543403"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"e0543403"},"content":"     * Returns if this Email is an empty Email.","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"e0543403"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"e0543403"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"e0543403"},"content":"        return equals(EMPTY_EMAIL);","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"e0543403"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"e0543403"},"content":"     * Returns false if either Email object is an empty Email.","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"e0543403"},"content":"     * Returns true if both Email objects have the same value.","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"e0543403"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"e0543403"},"content":"     * @param otherEmail The Email to compare this one to.","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"e0543403"},"content":"     * @return Whether the Email objects are the same.","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"e0543403"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"e0543403"},"content":"    public boolean isSameEmail(Email otherEmail) {","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"e0543403"},"content":"        if (otherEmail \u003d\u003d null) {","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"e0543403"},"content":"            return false;","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"e0543403"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"e0543403"},"content":"        if (this.isEmpty() || otherEmail.isEmpty()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"e0543403"},"content":"            return false;","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"e0543403"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"e0543403"},"content":"        if (otherEmail \u003d\u003d this) {","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"e0543403"},"content":"            return true;","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"e0543403"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"e0543403"},"content":"        return value.equals(otherEmail.value);","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"e0543403":34,"jeromewjj":18,"-":67}},{"path":"src/main/java/seedu/address/model/person/FoundInNameOrTagsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"e0543403"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"e0543403"},"content":"import java.util.List;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"e0543403"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"e0543403"},"content":"import java.util.StringJoiner;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"e0543403"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"e0543403"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"e0543403"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"e0543403"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"e0543403"},"content":" * Tests that a {@code Person}\u0027s {@code Name} and Tags matches any of the keywords given.","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"e0543403"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"e0543403"},"content":"public class FoundInNameOrTagsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"e0543403"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"e0543403"},"content":"    public FoundInNameOrTagsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"e0543403"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"e0543403"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"e0543403"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"e0543403"},"content":"        String name \u003d person.getName().fullName;","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"e0543403"},"content":"        Set\u003cTag\u003e tagSet \u003d person.getTags();","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"e0543403"},"content":"        StringJoiner sj \u003d new StringJoiner(\" \", \"\", \"\");","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"e0543403"},"content":"        sj.add(name);","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"e0543403"},"content":"        for (Tag elem : tagSet) {","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"e0543403"},"content":"            sj.add(elem.tagName);","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"e0543403"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"e0543403"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"e0543403"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(sj.toString(), keyword));","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"e0543403"},"content":"    @Override","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"e0543403"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"e0543403"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"e0543403"},"content":"                || (other instanceof FoundInNameOrTagsPredicate // instanceof handles nulls","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"e0543403"},"content":"                \u0026\u0026 keywords.equals(((FoundInNameOrTagsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"e0543403"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"e0543403":46}},{"path":"src/main/java/seedu/address/model/person/Github.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samyipsh"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"samyipsh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"samyipsh"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"samyipsh"},"content":"//@author samyipsh","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"samyipsh"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"e0543403"},"content":" * Represents a Person\u0027s github username in the contact book.","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"samyipsh"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidGithub(String)}","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"samyipsh"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"samyipsh"},"content":"public class Github {","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"samyipsh"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"e0543403"},"content":"            \"Github username should only contain letters, numbers and hyphens.\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"e0543403"},"content":"                    + \"It cannot start or end with a hyphen or have multiple consecutive hyphens.\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"e0543403"},"content":"                    + \"It has a maximum length of 39 characters.\";","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"samyipsh"},"content":"    /* reused from https://github.com/shinnn/github-username-regex","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"samyipsh"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"samyipsh"},"content":"     * Github username may only contain alphanumeric characters or hyphens.","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"samyipsh"},"content":"     * Github username cannot have multiple consecutive hyphens.","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"samyipsh"},"content":"     * Github username cannot begin or end with a hyphen.","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"samyipsh"},"content":"     * Maximum is 39 characters.","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"samyipsh"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"samyipsh"},"content":"    public static final String VALIDATION_REGEX \u003d","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"samyipsh"},"content":"            \"(?i)^[a-z\\\\d](?:[a-z\\\\d]|-(?\u003d[a-z\\\\d])){0,38}$\";","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"jeromewjj"},"content":"    private static final Github EMPTY_GITHUB \u003d new Github();","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"samyipsh"},"content":"    private static final String GITHUB_URL \u003d \"https://github.com/\";","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"samyipsh"},"content":"    public final String githubUsername;","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"samyipsh"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"samyipsh"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"samyipsh"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"samyipsh"},"content":"     * @param githubUsername A valid name.","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"samyipsh"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"samyipsh"},"content":"    public Github(String githubUsername) {","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"samyipsh"},"content":"        requireNonNull(githubUsername);","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"samyipsh"},"content":"        checkArgument(isValidGithub(githubUsername), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"samyipsh"},"content":"        this.githubUsername \u003d githubUsername;","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"jeromewjj"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"jeromewjj"},"content":"     * Constructs an Empty Github.","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"jeromewjj"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"jeromewjj"},"content":"    private Github() {","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"jeromewjj"},"content":"        githubUsername \u003d \"-\";","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"jeromewjj"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"jeromewjj"},"content":"     * Get an Empty Github.","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"jeromewjj"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"jeromewjj"},"content":"     * @return EMPTY_GITHUB.","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"jeromewjj"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"jeromewjj"},"content":"    public static Github getEmptyGithub() {","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"jeromewjj"},"content":"        return EMPTY_GITHUB;","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"samyipsh"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"samyipsh"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"samyipsh"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"samyipsh"},"content":"    public static boolean isValidGithub(String test) {","lastModifiedDate":"2021-09-30"},{"lineNumber":64,"author":{"gitId":"samyipsh"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-09-30"},{"lineNumber":65,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"samyipsh"},"content":"    public String getUrl() {","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"samyipsh"},"content":"        return GITHUB_URL + githubUsername;","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"e0543403"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"e0543403"},"content":"     * Returns if this Github is an empty Github.","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"e0543403"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"e0543403"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"e0543403"},"content":"        return equals(EMPTY_GITHUB);","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"e0543403"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"e0543403"},"content":"     * Returns false if either Github object is an empty Github.","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"e0543403"},"content":"     * Returns true if both Github objects have the same username.","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"e0543403"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"e0543403"},"content":"     * @param otherGithub The Github to compare this one to.","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"e0543403"},"content":"     * @return Whether the Github objects are the same.","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"e0543403"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"e0543403"},"content":"    public boolean isSameGithub(Github otherGithub) {","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"e0543403"},"content":"        if (otherGithub \u003d\u003d null) {","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"e0543403"},"content":"            return false;","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"e0543403"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"e0543403"},"content":"        if (this.isEmpty() || otherGithub.isEmpty()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"e0543403"},"content":"            return false;","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"e0543403"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"e0543403"},"content":"        if (otherGithub \u003d\u003d this) {","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"e0543403"},"content":"            return true;","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"e0543403"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"e0543403"},"content":"        return githubUsername.equals(otherGithub.githubUsername);","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":102,"author":{"gitId":"samyipsh"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":103,"author":{"gitId":"samyipsh"},"content":"    public String toString() {","lastModifiedDate":"2021-09-30"},{"lineNumber":104,"author":{"gitId":"samyipsh"},"content":"        return githubUsername;","lastModifiedDate":"2021-09-30"},{"lineNumber":105,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":106,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":107,"author":{"gitId":"samyipsh"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":108,"author":{"gitId":"samyipsh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-30"},{"lineNumber":109,"author":{"gitId":"samyipsh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-30"},{"lineNumber":110,"author":{"gitId":"samyipsh"},"content":"                || (other instanceof Github // instanceof handles nulls","lastModifiedDate":"2021-09-30"},{"lineNumber":111,"author":{"gitId":"samyipsh"},"content":"                \u0026\u0026 githubUsername.equals(((Github) other).githubUsername)); // state check","lastModifiedDate":"2021-09-30"},{"lineNumber":112,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":113,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":114,"author":{"gitId":"samyipsh"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":115,"author":{"gitId":"samyipsh"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-30"},{"lineNumber":116,"author":{"gitId":"samyipsh"},"content":"        return githubUsername.hashCode();","lastModifiedDate":"2021-09-30"},{"lineNumber":117,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":118,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":119,"author":{"gitId":"samyipsh"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"samyipsh":69,"e0543403":33,"jeromewjj":17}},{"path":"src/main/java/seedu/address/model/person/LinkedIn.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CommanderW324"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"CommanderW324"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"CommanderW324"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"CommanderW324"},"content":"public class LinkedIn {","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"CommanderW324"},"content":"    //Regex copied from https://stackoverflow.com/questions/","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"CommanderW324"},"content":"    // 30256969/how-to-validate-linkedin-public-profile-url-regular-expression-in-python/30257327","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"e0543403"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Not a valid linkedIn URL\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"e0543403"},"content":"            + \"Example: https://www.linkedin.com/in/winston-cahya/\";","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"CommanderW324"},"content":"    private static final String VALIDATION_REGEX \u003d","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"CommanderW324"},"content":"            \"^(http(s?)://)?([\\\\w\\\\d\\\\-\\\\_]*\\\\.)?linkedin.com/[^.\\\\s]*$\";","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"jeromewjj"},"content":"    private static final LinkedIn EMPTY_LINKEDIN \u003d new LinkedIn();","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"CommanderW324"},"content":"    public final String value;","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"CommanderW324"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"CommanderW324"},"content":"     * Constructs an {@code LinkedIn}.","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"CommanderW324"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"CommanderW324"},"content":"     * @param  linkedinUrl linkedIn URL.","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"CommanderW324"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"CommanderW324"},"content":"    public LinkedIn(String linkedinUrl) {","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"CommanderW324"},"content":"        requireNonNull(linkedinUrl);","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"CommanderW324"},"content":"        checkArgument(isValidLinkedIn(linkedinUrl), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"CommanderW324"},"content":"        value \u003d linkedinUrl;","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"CommanderW324"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"jeromewjj"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"jeromewjj"},"content":"     * Constructs an Empty LinkedIn.","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"jeromewjj"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"jeromewjj"},"content":"    private LinkedIn() {","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"jeromewjj"},"content":"        value \u003d \"-\";","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"jeromewjj"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"jeromewjj"},"content":"     * Get an Empty LinkedIn.","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"jeromewjj"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"jeromewjj"},"content":"     * @return EMPTY_LINKEDIN.","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"jeromewjj"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"jeromewjj"},"content":"    public static LinkedIn getEmptyLinkedin() {","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"jeromewjj"},"content":"        return EMPTY_LINKEDIN;","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"CommanderW324"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"CommanderW324"},"content":"     * Returns if a given string is a valid linkedin","lastModifiedDate":"2021-10-03"},{"lineNumber":47,"author":{"gitId":"CommanderW324"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":48,"author":{"gitId":"CommanderW324"},"content":"    public static boolean isValidLinkedIn(String test) {","lastModifiedDate":"2021-10-03"},{"lineNumber":49,"author":{"gitId":"CommanderW324"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"CommanderW324"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":51,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":52,"author":{"gitId":"samyipsh"},"content":"    public String getUrl() {","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"samyipsh"},"content":"        return value;","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"e0543403"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"e0543403"},"content":"     * Returns if this linkedin is an empty linkedin.","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"e0543403"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"e0543403"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"e0543403"},"content":"        return equals(EMPTY_LINKEDIN);","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"e0543403"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"e0543403"},"content":"     * Returns false if either LinkedIn object is an empty LinkedIn.","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"e0543403"},"content":"     * Returns true if both LinkedIn objects have the same LinkedIn URL.","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"e0543403"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"e0543403"},"content":"     * @param otherLinkedIn The LinkedIn to compare this one to.","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"e0543403"},"content":"     * @return Whether the LinkedIn objects are the same.","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"e0543403"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"e0543403"},"content":"    public boolean isSameLinkedIn(LinkedIn otherLinkedIn) {","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"e0543403"},"content":"        if (otherLinkedIn \u003d\u003d null) {","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"e0543403"},"content":"            return false;","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"e0543403"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"e0543403"},"content":"        if (this.isEmpty() || otherLinkedIn.isEmpty()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"e0543403"},"content":"            return false;","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"e0543403"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"e0543403"},"content":"        if (otherLinkedIn \u003d\u003d this) {","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"e0543403"},"content":"            return true;","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"e0543403"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"e0543403"},"content":"        return value.equals(otherLinkedIn.value);","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"CommanderW324"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":87,"author":{"gitId":"CommanderW324"},"content":"    public String toString() {","lastModifiedDate":"2021-10-03"},{"lineNumber":88,"author":{"gitId":"CommanderW324"},"content":"        return value;","lastModifiedDate":"2021-10-03"},{"lineNumber":89,"author":{"gitId":"CommanderW324"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":90,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":91,"author":{"gitId":"CommanderW324"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":92,"author":{"gitId":"CommanderW324"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-03"},{"lineNumber":93,"author":{"gitId":"CommanderW324"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-03"},{"lineNumber":94,"author":{"gitId":"CommanderW324"},"content":"                || (other instanceof LinkedIn // instanceof handles nulls","lastModifiedDate":"2021-10-03"},{"lineNumber":95,"author":{"gitId":"CommanderW324"},"content":"                \u0026\u0026 value.equals(((LinkedIn) other).value)); // state check","lastModifiedDate":"2021-10-03"},{"lineNumber":96,"author":{"gitId":"CommanderW324"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":97,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":98,"author":{"gitId":"CommanderW324"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":99,"author":{"gitId":"CommanderW324"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-03"},{"lineNumber":100,"author":{"gitId":"CommanderW324"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-03"},{"lineNumber":101,"author":{"gitId":"CommanderW324"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":102,"author":{"gitId":"CommanderW324"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"samyipsh":4,"e0543403":32,"CommanderW324":49,"jeromewjj":17}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"e0543403"},"content":" * Represents a Person\u0027s name in the contact book.","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"e0543403"},"content":"            \"Names should only contain letters, numbers and spaces, and it should not be blank\";","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"e0543403"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"e0543403"},"content":"     * Returns true if both Name objects have the same name","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"e0543403"},"content":"     * without whitespace.","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"e0543403"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"e0543403"},"content":"     * @param otherName The Name to compare this one to.","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"e0543403"},"content":"     * @return Whether the Name objects are the same.","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"e0543403"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"e0543403"},"content":"    public boolean isSameName(Name otherName) {","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"e0543403"},"content":"        if (otherName \u003d\u003d this) {","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"e0543403"},"content":"            return true;","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"e0543403"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"e0543403"},"content":"        if (otherName \u003d\u003d null) {","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"e0543403"},"content":"            return false;","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"e0543403"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"e0543403"},"content":"        String thisStrippedName \u003d this.fullName.replaceAll(\"\\\\s\", \"\");","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"e0543403"},"content":"        String otherStrippedName \u003d otherName.fullName.replaceAll(\"\\\\s\", \"\");","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"e0543403"},"content":"        return thisStrippedName.equalsIgnoreCase(otherStrippedName);","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"e0543403":24,"-":57}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"e0543403"},"content":" * Represents a Person in the contact book.","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"CommanderW324"},"content":"    private final LinkedIn linkedin;","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"samyipsh"},"content":"    private final Github github;","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"DystoriaX"},"content":"    private final Detail detail;","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"jeromewjj"},"content":"    public Person(Name name, Phone phone, Email email, Github github,","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"DystoriaX"},"content":"                  LinkedIn linkedin, Detail detail, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"jeromewjj"},"content":"        requireAllNonNull(name, phone, email, tags);","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"CommanderW324"},"content":"        this.linkedin \u003d linkedin;","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"samyipsh"},"content":"        this.github \u003d github;","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"DystoriaX"},"content":"        this.detail \u003d detail;","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"samyipsh"},"content":"    public Github getGithub() {","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"samyipsh"},"content":"        return github;","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"jeromewjj"},"content":"    public LinkedIn getLinkedin() {","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"jeromewjj"},"content":"        return this.linkedin;","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"DystoriaX"},"content":"    public Detail getDetail() {","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"DystoriaX"},"content":"        return detail;","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"e0543403"},"content":"     * Returns true if both persons have the same name and at least one","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"e0543403"},"content":"     * unique field that is the same.","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"e0543403"},"content":"        if (otherPerson \u003d\u003d null) {","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"e0543403"},"content":"            return false;","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"e0543403"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"e0543403"},"content":"        if (!hasSameName(otherPerson)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"e0543403"},"content":"            return false;","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"e0543403"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"e0543403"},"content":"        if (hasEmptyUniqueFields() \u0026\u0026 otherPerson.hasEmptyUniqueFields()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"e0543403"},"content":"            return true;","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"e0543403"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"e0543403"},"content":"        return hasSameUniqueField(otherPerson);","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"e0543403"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"e0543403"},"content":"     * Returns true if both persons names are similar.","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"e0543403"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"e0543403"},"content":"     * @param otherPerson Person object to compare to.","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"e0543403"},"content":"     * @return Whether the two Person objects have a similar Name object.","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"e0543403"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"e0543403"},"content":"    public boolean hasSameName(Person otherPerson) {","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"e0543403"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"e0543403"},"content":"            return true;","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"e0543403"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"e0543403"},"content":"        if (otherPerson \u003d\u003d null) {","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"e0543403"},"content":"            return false;","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"e0543403"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"e0543403"},"content":"        return otherPerson.getName().isSameName(getName());","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"e0543403"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"e0543403"},"content":"     * Returns true if both Person objects have at least one","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"e0543403"},"content":"     * field unique to people that are the same.","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"e0543403"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"e0543403"},"content":"     * @param otherPerson Person object to compare to.","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"e0543403"},"content":"     * @return Whether the two Person objects have a similar unique field.","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"e0543403"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"e0543403"},"content":"    public boolean hasSameUniqueField(Person otherPerson) {","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"e0543403"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"e0543403"},"content":"            return true;","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"e0543403"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"e0543403"},"content":"        if (otherPerson \u003d\u003d null) {","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"e0543403"},"content":"            return false;","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"e0543403"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"e0543403"},"content":"        return otherPerson.getEmail().isSameEmail(getEmail())","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"e0543403"},"content":"                || otherPerson.getGithub().isSameGithub(getGithub())","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"e0543403"},"content":"                || otherPerson.getLinkedin().isSameLinkedIn(getLinkedin())","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"e0543403"},"content":"                || otherPerson.getPhone().isSamePhone(getPhone());","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"e0543403"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"e0543403"},"content":"     * Returns whether this Person object has only","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"e0543403"},"content":"     * empty unique fields.","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"e0543403"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"e0543403"},"content":"     * @return whether this Person object has only empty unique fields.","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"e0543403"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"e0543403"},"content":"    public boolean hasEmptyUniqueFields() {","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"e0543403"},"content":"        return getEmail().isEmpty()","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"e0543403"},"content":"                \u0026\u0026 getGithub().isEmpty()","lastModifiedDate":"2021-10-24"},{"lineNumber":150,"author":{"gitId":"e0543403"},"content":"                \u0026\u0026 getLinkedin().isEmpty()","lastModifiedDate":"2021-10-24"},{"lineNumber":151,"author":{"gitId":"e0543403"},"content":"                \u0026\u0026 getPhone().isEmpty();","lastModifiedDate":"2021-10-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":172,"author":{"gitId":"CommanderW324"},"content":"                \u0026\u0026 otherPerson.getLinkedin().equals(getLinkedin())","lastModifiedDate":"2021-10-06"},{"lineNumber":173,"author":{"gitId":"samyipsh"},"content":"                \u0026\u0026 otherPerson.getGithub().equals(getGithub())","lastModifiedDate":"2021-09-30"},{"lineNumber":174,"author":{"gitId":"DystoriaX"},"content":"                \u0026\u0026 otherPerson.getDetail().equals(getDetail())","lastModifiedDate":"2021-10-06"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":181,"author":{"gitId":"DystoriaX"},"content":"        return Objects.hash(name, phone, email, github, linkedin, detail, tags);","lastModifiedDate":"2021-10-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":192,"author":{"gitId":"CommanderW324"},"content":"                .append(\"; LinkedIn: \")","lastModifiedDate":"2021-10-03"},{"lineNumber":193,"author":{"gitId":"CommanderW324"},"content":"                .append(getLinkedin())","lastModifiedDate":"2021-10-06"},{"lineNumber":194,"author":{"gitId":"samyipsh"},"content":"                .append(\"; Github: \")","lastModifiedDate":"2021-09-30"},{"lineNumber":195,"author":{"gitId":"DystoriaX"},"content":"                .append(getGithub())","lastModifiedDate":"2021-10-06"},{"lineNumber":196,"author":{"gitId":"DystoriaX"},"content":"                .append(\"; Detail: \")","lastModifiedDate":"2021-10-06"},{"lineNumber":197,"author":{"gitId":"DystoriaX"},"content":"                .append(getDetail());","lastModifiedDate":"2021-10-06"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":207,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"samyipsh":8,"e0543403":68,"CommanderW324":5,"jeromewjj":5,"-":111,"DystoriaX":11}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"e0543403"},"content":" * Represents a Person\u0027s phone number in the contact book.","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"jeromewjj"},"content":"    private static final Phone EMPTY_PHONE \u003d new Phone();","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"jeromewjj"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"jeromewjj"},"content":"     * Constructs an Empty Phone.","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"jeromewjj"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"jeromewjj"},"content":"    private Phone() {","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"jeromewjj"},"content":"        value \u003d \"-\";","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"jeromewjj"},"content":"    public static Phone getEmptyPhone() {","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"jeromewjj"},"content":"        return EMPTY_PHONE;","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"e0543403"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"e0543403"},"content":"     * Returns if this Phone is an empty Phone.","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"e0543403"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"e0543403"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"e0543403"},"content":"        return equals(EMPTY_PHONE);","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"e0543403"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"e0543403"},"content":"     * Returns false if either Phone object is an empty Phone.","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"e0543403"},"content":"     * Returns true if both Phone objects have the same number.","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"e0543403"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"e0543403"},"content":"     * @param otherPhone The Phone to compare this one to.","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"e0543403"},"content":"     * @return Whether the Phone objects are the same.","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"e0543403"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"e0543403"},"content":"    public boolean isSamePhone(Phone otherPhone) {","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"e0543403"},"content":"        if (otherPhone \u003d\u003d null) {","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"e0543403"},"content":"            return false;","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"e0543403"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"e0543403"},"content":"        if (this.isEmpty() || otherPhone.isEmpty()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"e0543403"},"content":"            return false;","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"e0543403"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"e0543403"},"content":"        if (otherPhone \u003d\u003d this) {","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"e0543403"},"content":"            return true;","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"e0543403"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"e0543403"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"e0543403":31,"jeromewjj":12,"-":52}},{"path":"src/main/java/seedu/address/model/person/TagsPresentPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromewjj"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"jeromewjj"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"jeromewjj"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"jeromewjj"},"content":"import java.util.StringJoiner;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"jeromewjj"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"jeromewjj"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"jeromewjj"},"content":" * Tests that a {@code Person}\u0027s {@code Tags} matches Tags given.","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"jeromewjj"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"jeromewjj"},"content":"public class TagsPresentPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"jeromewjj"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"jeromewjj"},"content":"    public TagsPresentPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"jeromewjj"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"jeromewjj"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"jeromewjj"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"jeromewjj"},"content":"        Set\u003cTag\u003e tagSet \u003d person.getTags();","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"jeromewjj"},"content":"        StringJoiner sj \u003d new StringJoiner(\" \", \"\", \"\");","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"jeromewjj"},"content":"        for (Tag elem : tagSet) {","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"jeromewjj"},"content":"            sj.add(elem.tagName);","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"jeromewjj"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"jeromewjj"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"jeromewjj"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(sj.toString(), keyword));","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"jeromewjj"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"jeromewjj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"jeromewjj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"jeromewjj"},"content":"                || (other instanceof TagsPresentPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"jeromewjj"},"content":"                \u0026\u0026 keywords.equals(((TagsPresentPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"jeromewjj"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"jeromewjj":38}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"e0543403"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"e0543403"},"content":"     * Returns true if the list contains an equivalent person as the given argument","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"e0543403"},"content":"     * excluding the person identical to the person to exclude.","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"e0543403"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"e0543403"},"content":"     * @param toCheck Person to check if similar.","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"e0543403"},"content":"     * @param personToExclude Person to be excluded from checking.","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"e0543403"},"content":"     * @return Whether there is a Person similar to the person to check excluding the person to exclude.","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"e0543403"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"e0543403"},"content":"    public boolean containsExcludingPerson(Person toCheck, Person personToExclude) {","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"e0543403"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"e0543403"},"content":"        requireNonNull(personToExclude);","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"e0543403"},"content":"        for (int i \u003d 0; i \u003c internalList.size(); i++) {","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"e0543403"},"content":"            Person person \u003d internalList.get(i);","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"e0543403"},"content":"            if (person.equals(personToExclude)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"e0543403"},"content":"                continue;","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"e0543403"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"e0543403"},"content":"            if (person.isSamePerson(toCheck)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"e0543403"},"content":"                return true;","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"e0543403"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"e0543403"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"e0543403"},"content":"        return false;","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"CommanderW324"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":128,"author":{"gitId":"CommanderW324"},"content":"     * Returns length of the {@code UniquePersonList}.","lastModifiedDate":"2021-10-13"},{"lineNumber":129,"author":{"gitId":"CommanderW324"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":130,"author":{"gitId":"CommanderW324"},"content":"    public int length() {","lastModifiedDate":"2021-10-13"},{"lineNumber":131,"author":{"gitId":"CommanderW324"},"content":"        int length \u003d internalList.size();","lastModifiedDate":"2021-10-13"},{"lineNumber":132,"author":{"gitId":"CommanderW324"},"content":"        return length;","lastModifiedDate":"2021-10-13"},{"lineNumber":133,"author":{"gitId":"CommanderW324"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"e0543403":27,"CommanderW324":7,"-":138}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"e0543403"},"content":" * Represents a Tag in the contact book.","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"e0543403"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tag names should consist of letters and/or\"","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"e0543403"},"content":"            + \" numbers only without spaces\";","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"e0543403":3,"-":52}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.ContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.ReadOnlyContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"DystoriaX"},"content":"import seedu.address.model.person.Detail;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.person.Github;","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"CommanderW324"},"content":"import seedu.address.model.person.LinkedIn;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"samyipsh"},"content":" * Contains utility methods for populating {@code ContactBook} with sample data.","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"e0543403"},"content":"                new Github(\"alexio\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"e0543403"},"content":"                    new LinkedIn(\"https://www.linkedin.com/in/alex-yeoh-b9502683/\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"e0543403"},"content":"                    new Detail(\"Y1 CS\"), getTagSet(\"friends\")),","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"e0543403"},"content":"                new Github(\"bernio\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"e0543403"},"content":"                    new LinkedIn(\"https://www.linkedin.com/in/bernice-yu/\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"e0543403"},"content":"                    new Detail(\"Y2 CS\"), getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"e0543403"},"content":"                new Github(\"charlio\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"e0543403"},"content":"                    new LinkedIn(\"https://www.linkedin.com/in/charlotte-oliverio-4a553440/\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"e0543403"},"content":"                    new Detail(\"Y1 BIZ\"), getTagSet(\"neighbours\")),","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"e0543403"},"content":"                new Github(\"davidio\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"e0543403"},"content":"                    new LinkedIn(\"https://www.linkedin.com/in/david-li-58a14049/\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"e0543403"},"content":"                    new Detail(\"\"), getTagSet(\"family\")),","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"e0543403"},"content":"                new Github(\"irfanio\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"e0543403"},"content":"                    new LinkedIn(\"https://www.linkedin.com/in/irfan-ibrahim-709a5452/\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"e0543403"},"content":"                    new Detail(\"Y4 CEG\"), getTagSet(\"classmates\")),","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"e0543403"},"content":"                new Github(\"royio\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"e0543403"},"content":"                    new LinkedIn(\"https://www.linkedin.com/in/roy-ramakrishnan-balakrishnan-b7293818b/\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"e0543403"},"content":"                    new Detail(\"Y3 CS\"), getTagSet(\"colleagues\"))","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"samyipsh"},"content":"    public static ReadOnlyContactBook getSampleContactBook() {","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"samyipsh"},"content":"        ContactBook sampleAb \u003d new ContactBook();","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"samyipsh":6,"e0543403":18,"CommanderW324":1,"-":42,"DystoriaX":1}},{"path":"src/main/java/seedu/address/storage/ContactBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.ContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.ReadOnlyContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"samyipsh"},"content":" * Represents a storage for {@link ContactBook}.","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"samyipsh"},"content":"public interface ContactBookStorage {","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"samyipsh"},"content":"    Path getContactBookFilePath();","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"samyipsh"},"content":"     * Returns ContactBook data as a {@link ReadOnlyContactBook}.","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"samyipsh"},"content":"    Optional\u003cReadOnlyContactBook\u003e readContactBook() throws DataConversionException, IOException;","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"samyipsh"},"content":"     * @see #getContactBookFilePath()","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"samyipsh"},"content":"    Optional\u003cReadOnlyContactBook\u003e readContactBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"samyipsh"},"content":"     * Saves the given {@link ReadOnlyContactBook} to the storage.","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"samyipsh"},"content":"     * @param contactBook cannot be null.","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"samyipsh"},"content":"    void saveContactBook(ReadOnlyContactBook contactBook) throws IOException;","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"samyipsh"},"content":"     * @see #saveContactBook(ReadOnlyContactBook)","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"samyipsh"},"content":"    void saveContactBook(ReadOnlyContactBook contactBook, Path filePath) throws IOException;","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"samyipsh":14,"-":32}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"DystoriaX"},"content":"import seedu.address.model.person.Detail;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.person.Github;","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"CommanderW324"},"content":"import seedu.address.model.person.LinkedIn;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"samyipsh"},"content":"    private final String github;","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"CommanderW324"},"content":"    private final String linkedin;","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"DystoriaX"},"content":"    private final String detail;","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"jeromewjj"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"github\") String github,","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"jeromewjj"},"content":"                             @JsonProperty(\"linkedin\") String linkedin,","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"DystoriaX"},"content":"                             @JsonProperty(\"detail\") String detail,","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"samyipsh"},"content":"        this.github \u003d github;","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"jeromewjj"},"content":"        this.linkedin \u003d linkedin;","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"DystoriaX"},"content":"        this.detail \u003d detail;","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"samyipsh"},"content":"        github \u003d source.getGithub().githubUsername;","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"DystoriaX"},"content":"        linkedin \u003d source.getLinkedin().value;","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"DystoriaX"},"content":"        detail \u003d source.getDetail().value;","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"jeromewjj"},"content":"        if (!Phone.isValidPhone(phone) \u0026\u0026 !phone.equals(\"-\")) {","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":99,"author":{"gitId":"jeromewjj"},"content":"        final Phone modelPhone;","lastModifiedDate":"2021-10-05"},{"lineNumber":100,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":101,"author":{"gitId":"jeromewjj"},"content":"        if (phone.equals(\"-\")) {","lastModifiedDate":"2021-10-05"},{"lineNumber":102,"author":{"gitId":"jeromewjj"},"content":"            modelPhone \u003d Phone.getEmptyPhone();","lastModifiedDate":"2021-10-05"},{"lineNumber":103,"author":{"gitId":"jeromewjj"},"content":"        } else {","lastModifiedDate":"2021-10-05"},{"lineNumber":104,"author":{"gitId":"jeromewjj"},"content":"            modelPhone \u003d new Phone(phone);","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"jeromewjj"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"jeromewjj"},"content":"        if (!Email.isValidEmail(email) \u0026\u0026 !email.equals(\"-\")) {","lastModifiedDate":"2021-10-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"jeromewjj"},"content":"        final Email modelEmail;","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":116,"author":{"gitId":"jeromewjj"},"content":"        if (email.equals(\"-\")) {","lastModifiedDate":"2021-10-05"},{"lineNumber":117,"author":{"gitId":"jeromewjj"},"content":"            modelEmail \u003d Email.getEmptyEmail();","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"jeromewjj"},"content":"        } else {","lastModifiedDate":"2021-10-05"},{"lineNumber":119,"author":{"gitId":"jeromewjj"},"content":"            modelEmail \u003d new Email(email);","lastModifiedDate":"2021-10-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"samyipsh"},"content":"        if (github \u003d\u003d null) {","lastModifiedDate":"2021-09-30"},{"lineNumber":123,"author":{"gitId":"samyipsh"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Github.class.getSimpleName()));","lastModifiedDate":"2021-09-30"},{"lineNumber":124,"author":{"gitId":"samyipsh"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":125,"author":{"gitId":"jeromewjj"},"content":"        if (!Github.isValidGithub(github) \u0026\u0026 !github.equals(\"-\")) {","lastModifiedDate":"2021-10-06"},{"lineNumber":126,"author":{"gitId":"samyipsh"},"content":"            throw new IllegalValueException(Github.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":128,"author":{"gitId":"jeromewjj"},"content":"        final Github modelGithub;","lastModifiedDate":"2021-10-06"},{"lineNumber":129,"author":{"gitId":"jeromewjj"},"content":"        if (github.equals(\"-\")) {","lastModifiedDate":"2021-10-06"},{"lineNumber":130,"author":{"gitId":"jeromewjj"},"content":"            modelGithub \u003d Github.getEmptyGithub();","lastModifiedDate":"2021-10-06"},{"lineNumber":131,"author":{"gitId":"jeromewjj"},"content":"        } else {","lastModifiedDate":"2021-10-06"},{"lineNumber":132,"author":{"gitId":"jeromewjj"},"content":"            modelGithub \u003d new Github(github);;","lastModifiedDate":"2021-10-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"CommanderW324"},"content":"        if (linkedin \u003d\u003d null) {","lastModifiedDate":"2021-10-06"},{"lineNumber":136,"author":{"gitId":"CommanderW324"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-06"},{"lineNumber":137,"author":{"gitId":"CommanderW324"},"content":"                    LinkedIn.class.getSimpleName()));","lastModifiedDate":"2021-10-06"},{"lineNumber":138,"author":{"gitId":"CommanderW324"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":139,"author":{"gitId":"jeromewjj"},"content":"        if (!LinkedIn.isValidLinkedIn(linkedin) \u0026\u0026 !linkedin.equals(\"-\")) {","lastModifiedDate":"2021-10-06"},{"lineNumber":140,"author":{"gitId":"CommanderW324"},"content":"            throw new IllegalValueException(LinkedIn.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-03"},{"lineNumber":141,"author":{"gitId":"CommanderW324"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":142,"author":{"gitId":"jeromewjj"},"content":"        final LinkedIn modelLinkedIn;","lastModifiedDate":"2021-10-06"},{"lineNumber":143,"author":{"gitId":"jeromewjj"},"content":"        if (linkedin.equals(\"-\")) {","lastModifiedDate":"2021-10-06"},{"lineNumber":144,"author":{"gitId":"jeromewjj"},"content":"            modelLinkedIn \u003d LinkedIn.getEmptyLinkedin();","lastModifiedDate":"2021-10-06"},{"lineNumber":145,"author":{"gitId":"jeromewjj"},"content":"        } else {","lastModifiedDate":"2021-10-06"},{"lineNumber":146,"author":{"gitId":"jeromewjj"},"content":"            modelLinkedIn \u003d new LinkedIn(linkedin);","lastModifiedDate":"2021-10-06"},{"lineNumber":147,"author":{"gitId":"jeromewjj"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":148,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":149,"author":{"gitId":"DystoriaX"},"content":"        if (detail \u003d\u003d null) {","lastModifiedDate":"2021-10-06"},{"lineNumber":150,"author":{"gitId":"DystoriaX"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Detail.class.getSimpleName()));","lastModifiedDate":"2021-10-06"},{"lineNumber":151,"author":{"gitId":"DystoriaX"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":152,"author":{"gitId":"DystoriaX"},"content":"        final Detail modelDetail \u003d new Detail(detail);","lastModifiedDate":"2021-10-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":155,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":156,"author":{"gitId":"DystoriaX"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelGithub, modelLinkedIn, modelDetail, modelTags);","lastModifiedDate":"2021-10-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"samyipsh":9,"CommanderW324":10,"jeromewjj":32,"-":97,"DystoriaX":11}},{"path":"src/main/java/seedu/address/storage/JsonContactBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.ReadOnlyContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"samyipsh"},"content":" * A class to access ContactBook data stored as a json file on the hard disk.","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"samyipsh"},"content":"public class JsonContactBookStorage implements ContactBookStorage {","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"samyipsh"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonContactBookStorage.class);","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"samyipsh"},"content":"    public JsonContactBookStorage(Path filePath) {","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"samyipsh"},"content":"    public Path getContactBookFilePath() {","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"samyipsh"},"content":"    public Optional\u003cReadOnlyContactBook\u003e readContactBook() throws DataConversionException {","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"samyipsh"},"content":"        return readContactBook(filePath);","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"samyipsh"},"content":"     * Similar to {@link #readContactBook()}.","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"samyipsh"},"content":"    public Optional\u003cReadOnlyContactBook\u003e readContactBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"samyipsh"},"content":"        Optional\u003cJsonSerializableContactBook\u003e jsonContactBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"samyipsh"},"content":"                filePath, JsonSerializableContactBook.class);","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"samyipsh"},"content":"        if (!jsonContactBook.isPresent()) {","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"samyipsh"},"content":"            return Optional.of(jsonContactBook.get().toModelType());","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"samyipsh"},"content":"    public void saveContactBook(ReadOnlyContactBook contactBook) throws IOException {","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"samyipsh"},"content":"        saveContactBook(contactBook, filePath);","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"samyipsh"},"content":"     * Similar to {@link #saveContactBook(ReadOnlyContactBook)}.","lastModifiedDate":"2021-11-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"samyipsh"},"content":"    public void saveContactBook(ReadOnlyContactBook contactBook, Path filePath) throws IOException {","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"samyipsh"},"content":"        requireNonNull(contactBook);","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"samyipsh"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableContactBook(contactBook), filePath);","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"samyipsh":20,"-":60}},{"path":"src/main/java/seedu/address/storage/JsonSerializableContactBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.ContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.ReadOnlyContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"samyipsh"},"content":" * An Immutable ContactBook that is serializable to JSON format.","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"samyipsh"},"content":"@JsonRootName(value \u003d \"contactBook\")","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"samyipsh"},"content":"class JsonSerializableContactBook {","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"samyipsh"},"content":"     * Constructs a {@code JsonSerializableContactBook} with the given persons.","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"samyipsh"},"content":"    public JsonSerializableContactBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"samyipsh"},"content":"     * Converts a given {@code ReadOnlyContactBook} into this class for Jackson use.","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"samyipsh"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableContactBook}.","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"samyipsh"},"content":"    public JsonSerializableContactBook(ReadOnlyContactBook source) {","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"e0543403"},"content":"     * Converts this contact book into the model\u0027s {@code ContactBook} object.","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"samyipsh"},"content":"    public ContactBook toModelType() throws IllegalValueException {","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"samyipsh"},"content":"        ContactBook contactBook \u003d new ContactBook();","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"samyipsh"},"content":"            if (contactBook.hasPerson(person)) {","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"samyipsh"},"content":"            contactBook.addPerson(person);","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"samyipsh"},"content":"        return contactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"samyipsh":15,"e0543403":1,"-":44}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.ReadOnlyContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"samyipsh"},"content":"public interface Storage extends ContactBookStorage, UserPrefsStorage {","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"samyipsh"},"content":"    Path getContactBookFilePath();","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"samyipsh"},"content":"    Optional\u003cReadOnlyContactBook\u003e readContactBook() throws DataConversionException, IOException;","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"samyipsh"},"content":"    void saveContactBook(ReadOnlyContactBook contactBook) throws IOException;","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"samyipsh":5,"-":27}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.ReadOnlyContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"samyipsh"},"content":" * Manages storage of ContactBook data in local storage.","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"samyipsh"},"content":"    private ContactBookStorage contactBookStorage;","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"samyipsh"},"content":"     * Creates a {@code StorageManager} with the given {@code ContactBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"samyipsh"},"content":"    public StorageManager(ContactBookStorage contactBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"samyipsh"},"content":"        this.contactBookStorage \u003d contactBookStorage;","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"samyipsh"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ContactBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"samyipsh"},"content":"    public Path getContactBookFilePath() {","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"samyipsh"},"content":"        return contactBookStorage.getContactBookFilePath();","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"samyipsh"},"content":"    public Optional\u003cReadOnlyContactBook\u003e readContactBook() throws DataConversionException, IOException {","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"samyipsh"},"content":"        return readContactBook(contactBookStorage.getContactBookFilePath());","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"samyipsh"},"content":"    public Optional\u003cReadOnlyContactBook\u003e readContactBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"samyipsh"},"content":"        return contactBookStorage.readContactBook(filePath);","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"samyipsh"},"content":"    public void saveContactBook(ReadOnlyContactBook contactBook) throws IOException {","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"samyipsh"},"content":"        saveContactBook(contactBook, contactBookStorage.getContactBookFilePath());","lastModifiedDate":"2021-11-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"samyipsh"},"content":"    public void saveContactBook(ReadOnlyContactBook contactBook, Path filePath) throws IOException {","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"samyipsh"},"content":"        contactBookStorage.saveContactBook(contactBook, filePath);","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"samyipsh":17,"-":62}},{"path":"src/main/java/seedu/address/ui/AliasTableDisplayWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CommanderW324"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"CommanderW324"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"CommanderW324"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"CommanderW324"},"content":"import javafx.beans.property.SimpleStringProperty;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"CommanderW324"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"CommanderW324"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"CommanderW324"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"CommanderW324"},"content":"import javafx.scene.control.TableColumn;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"CommanderW324"},"content":"import javafx.scene.control.TableView;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"CommanderW324"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"CommanderW324"},"content":"/**","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"CommanderW324"},"content":" * Controller for window showing alias mapping","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"CommanderW324"},"content":" */","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"CommanderW324"},"content":"public class AliasTableDisplayWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"CommanderW324"},"content":"    private static final String FXML \u003d \"AliasTableDisplayWindow.fxml\";","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"CommanderW324"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"CommanderW324"},"content":"    private TableView\u003cMap.Entry\u003cString, String\u003e\u003e aliasTableView;","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"CommanderW324"},"content":"    private HashMap\u003cString, String\u003e aliasTable;","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"CommanderW324"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"CommanderW324"},"content":"     * Constructor for the controller of Alias Mapping Display Window","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"CommanderW324"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"CommanderW324"},"content":"    public AliasTableDisplayWindow(HashMap\u003cString, String\u003e aliasTable) {","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"CommanderW324"},"content":"        super(FXML, new Stage());","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"CommanderW324"},"content":"        this.aliasTable \u003d aliasTable;","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"CommanderW324"},"content":"        this.fillTable(aliasTable);","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"CommanderW324"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"CommanderW324"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"CommanderW324"},"content":"     * Shows the window containing alias mapping","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"CommanderW324"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"CommanderW324"},"content":"    public void show() {","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"CommanderW324"},"content":"        getRoot().show();","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"CommanderW324"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"CommanderW324"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"CommanderW324"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"CommanderW324"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"CommanderW324"},"content":"     * Hides the alias window","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"CommanderW324"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"CommanderW324"},"content":"    public void hide() {","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"CommanderW324"},"content":"        getRoot().hide();","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"CommanderW324"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"CommanderW324"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"CommanderW324"},"content":"     * Fill the table with given hashmap","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"CommanderW324"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"CommanderW324"},"content":"    public void fillTable(HashMap\u003cString, String\u003e aliasTable) {","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"CommanderW324"},"content":"        //Code Reuse from tutorial","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"CommanderW324"},"content":"        TableColumn\u003cMap.Entry\u003cString, String\u003e, String\u003e col1 \u003d new TableColumn\u003c\u003e (\"Alias\");","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"CommanderW324"},"content":"        col1.setCellValueFactory((","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"CommanderW324"},"content":"                TableColumn.CellDataFeatures\u003cMap.Entry\u003cString, String\u003e, String\u003e p) -\u003e new SimpleStringProperty(","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"CommanderW324"},"content":"                p.getValue().getKey()));","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"CommanderW324"},"content":"        TableColumn\u003cMap.Entry\u003cString, String\u003e, String\u003e col2 \u003d new TableColumn\u003c\u003e(\"Command\");","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"CommanderW324"},"content":"        col2.setCellValueFactory((","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"CommanderW324"},"content":"                TableColumn.CellDataFeatures\u003cMap.Entry\u003cString, String\u003e, String\u003e p) -\u003e new SimpleStringProperty(","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"CommanderW324"},"content":"                p.getValue().getValue()));","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"CommanderW324"},"content":"        ObservableList\u003cMap.Entry\u003cString, String\u003e\u003e items \u003d FXCollections.observableArrayList(aliasTable.entrySet());","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"CommanderW324"},"content":"        aliasTableView.setItems(items);","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"CommanderW324"},"content":"        aliasTableView.getColumns().add(col1);","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"CommanderW324"},"content":"        aliasTableView.getColumns().add(col2);","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"CommanderW324"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"CommanderW324"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"CommanderW324"},"content":"     * Refreshes the alias table display window","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"CommanderW324"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"CommanderW324"},"content":"    public void refresh(HashMap\u003cString, String\u003e aliasTable) {","lastModifiedDate":"2021-11-07"},{"lineNumber":75,"author":{"gitId":"CommanderW324"},"content":"        aliasTableView.getColumns().clear();","lastModifiedDate":"2021-11-07"},{"lineNumber":76,"author":{"gitId":"CommanderW324"},"content":"        aliasTableView.getItems().clear();","lastModifiedDate":"2021-11-07"},{"lineNumber":77,"author":{"gitId":"CommanderW324"},"content":"        fillTable(aliasTable);","lastModifiedDate":"2021-11-07"},{"lineNumber":78,"author":{"gitId":"CommanderW324"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"CommanderW324"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":81,"author":{"gitId":"CommanderW324"},"content":"     * Returns true if the alias window is currently being shown.","lastModifiedDate":"2021-11-06"},{"lineNumber":82,"author":{"gitId":"CommanderW324"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":83,"author":{"gitId":"CommanderW324"},"content":"    public boolean isShowing() {","lastModifiedDate":"2021-11-06"},{"lineNumber":84,"author":{"gitId":"CommanderW324"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2021-11-06"},{"lineNumber":85,"author":{"gitId":"CommanderW324"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":86,"author":{"gitId":"CommanderW324"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"CommanderW324":86}},{"path":"src/main/java/seedu/address/ui/DetailedPersonWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CommanderW324"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"CommanderW324"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"CommanderW324"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"CommanderW324"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"CommanderW324"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"CommanderW324"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"CommanderW324"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"CommanderW324"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"CommanderW324"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"CommanderW324"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"CommanderW324"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"CommanderW324"},"content":"public class DetailedPersonWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"CommanderW324"},"content":"    private static final String FXML \u003d \"DetailedPersonWindow.fxml\";","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"CommanderW324"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"CommanderW324"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"CommanderW324"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"CommanderW324"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"CommanderW324"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"samyipsh"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on ContactBook level 4\u003c/a\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"CommanderW324"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"CommanderW324"},"content":"    public final Person person;","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"CommanderW324"},"content":"    private Stage secondaryStage;","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"CommanderW324"},"content":"    @FXML","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"CommanderW324"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"CommanderW324"},"content":"    @FXML","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"CommanderW324"},"content":"    private Label name;","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"CommanderW324"},"content":"    @FXML","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"CommanderW324"},"content":"    private Label phone;","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"CommanderW324"},"content":"    @FXML","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"CommanderW324"},"content":"    private Label email;","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"CommanderW324"},"content":"    @FXML","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"CommanderW324"},"content":"    private Label linkedin;","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"CommanderW324"},"content":"    @FXML","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"CommanderW324"},"content":"    private Label github;","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"CommanderW324"},"content":"    @FXML","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"CommanderW324"},"content":"    private Label detail;","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"CommanderW324"},"content":"    @FXML","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"CommanderW324"},"content":"    private FlowPane tags;","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"CommanderW324"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"CommanderW324"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"CommanderW324"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"DystoriaX"},"content":"    public DetailedPersonWindow(Person person, Stage secondaryStage) {","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"CommanderW324"},"content":"        super(FXML, secondaryStage);","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"CommanderW324"},"content":"        this.person \u003d person;","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"CommanderW324"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"CommanderW324"},"content":"        phone.setText(\"Phone: \" + person.getPhone().value);","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"CommanderW324"},"content":"        email.setText(\"Email: \" + person.getEmail().value);","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"CommanderW324"},"content":"        linkedin.setText(\"LinkedIn: \" + person.getLinkedin().value);","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"CommanderW324"},"content":"        github.setText(\"Github: \" + person.getGithub().githubUsername);","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"CommanderW324"},"content":"        detail.setText(\"Details: \" + person.getDetail().value);","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"CommanderW324"},"content":"        person.getTags().stream()","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"CommanderW324"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"DystoriaX"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag + \" \")));","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"CommanderW324"},"content":"        this.secondaryStage \u003d secondaryStage;","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"CommanderW324"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"CommanderW324"},"content":"    void show() {","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"CommanderW324"},"content":"        secondaryStage.show();","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"CommanderW324"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"CommanderW324"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"CommanderW324"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"CommanderW324"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"CommanderW324"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"CommanderW324"},"content":"            return true;","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"CommanderW324"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"CommanderW324"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"CommanderW324"},"content":"        if (!(other instanceof DetailedPersonWindow)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"CommanderW324"},"content":"            return false;","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"CommanderW324"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"CommanderW324"},"content":"        // state check","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"CommanderW324"},"content":"        DetailedPersonWindow card \u003d (DetailedPersonWindow) other;","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"DystoriaX"},"content":"        return person.equals(card.person);","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"CommanderW324"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":85,"author":{"gitId":"CommanderW324"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":86,"author":{"gitId":"CommanderW324"},"content":"     * Hides the alias window","lastModifiedDate":"2021-11-07"},{"lineNumber":87,"author":{"gitId":"CommanderW324"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":88,"author":{"gitId":"CommanderW324"},"content":"    public void hide() {","lastModifiedDate":"2021-11-07"},{"lineNumber":89,"author":{"gitId":"CommanderW324"},"content":"        getRoot().hide();","lastModifiedDate":"2021-11-07"},{"lineNumber":90,"author":{"gitId":"CommanderW324"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":91,"author":{"gitId":"CommanderW324"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"samyipsh":1,"CommanderW324":88,"DystoriaX":3}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":10,"author":{"gitId":"samyipsh"},"content":"import seedu.address.commons.core.UserBrowser;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"samyipsh"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s1-cs2103t-t10-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"samyipsh"},"content":"    private Button openButton;","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"samyipsh"},"content":"    private void openInBrowser() {","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"samyipsh"},"content":"        UserBrowser.openUrl(USERGUIDE_URL);","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"samyipsh":5,"CommanderW324":1,"-":90}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"CommanderW324"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.ReadOnlyContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":40,"author":{"gitId":"CommanderW324"},"content":"    private AliasTableDisplayWindow aliasWindow;","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"CommanderW324"},"content":"    private ArrayList\u003cDetailedPersonWindow\u003e shownPersonWindow;","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"CommanderW324"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"CommanderW324"},"content":"    private MenuItem showAliasMenuItem;","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"CommanderW324"},"content":"        shownPersonWindow \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-07"},{"lineNumber":79,"author":{"gitId":"CommanderW324"},"content":"        aliasWindow \u003d new AliasTableDisplayWindow(logic.getAliasTable().getAliasTable());","lastModifiedDate":"2021-11-07"},{"lineNumber":80,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"CommanderW324"},"content":"        setAccelerator(showAliasMenuItem, KeyCombination.valueOf(\"F2\"));","lastModifiedDate":"2021-10-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"samyipsh"},"content":"        ReadOnlyContactBook contactBook \u003d logic.getContactBook();","lastModifiedDate":"2021-11-05"},{"lineNumber":133,"author":{"gitId":"samyipsh"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getContactBookFilePath(), contactBook);","lastModifiedDate":"2021-11-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":178,"author":{"gitId":"CommanderW324"},"content":"        aliasWindow.hide();","lastModifiedDate":"2021-11-07"},{"lineNumber":179,"author":{"gitId":"CommanderW324"},"content":"        shownPersonWindow.stream().forEach(window -\u003e window.hide());","lastModifiedDate":"2021-11-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":182,"author":{"gitId":"CommanderW324"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":183,"author":{"gitId":"CommanderW324"},"content":"     * Open the show alias mapping window and focuses it on the screen.","lastModifiedDate":"2021-11-08"},{"lineNumber":184,"author":{"gitId":"CommanderW324"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":185,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":186,"author":{"gitId":"CommanderW324"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":187,"author":{"gitId":"CommanderW324"},"content":"    private void handleShowAlias() {","lastModifiedDate":"2021-10-28"},{"lineNumber":188,"author":{"gitId":"CommanderW324"},"content":"        aliasWindow.refresh(logic.getAliasTable().getAliasTable());","lastModifiedDate":"2021-11-07"},{"lineNumber":189,"author":{"gitId":"CommanderW324"},"content":"        aliasWindow.show();","lastModifiedDate":"2021-10-28"},{"lineNumber":190,"author":{"gitId":"CommanderW324"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":191,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":192,"author":{"gitId":"CommanderW324"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":193,"author":{"gitId":"CommanderW324"},"content":"     * Reloads the data of the alias window with current alias table.","lastModifiedDate":"2021-11-08"},{"lineNumber":194,"author":{"gitId":"CommanderW324"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":195,"author":{"gitId":"CommanderW324"},"content":"    private void updateAliasWindow() {","lastModifiedDate":"2021-11-08"},{"lineNumber":196,"author":{"gitId":"CommanderW324"},"content":"        aliasWindow.refresh(logic.getAliasTable().getAliasTable());","lastModifiedDate":"2021-11-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"CommanderW324"},"content":"            //Update status Bar","lastModifiedDate":"2021-10-13"},{"lineNumber":215,"author":{"gitId":"samyipsh"},"content":"            StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getContactBookFilePath(),","lastModifiedDate":"2021-11-05"},{"lineNumber":216,"author":{"gitId":"samyipsh"},"content":"                    logic.getContactBook());","lastModifiedDate":"2021-11-05"},{"lineNumber":217,"author":{"gitId":"CommanderW324"},"content":"            statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2021-10-13"},{"lineNumber":218,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":227,"author":{"gitId":"CommanderW324"},"content":"            if (commandResult.isShowPerson()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":228,"author":{"gitId":"CommanderW324"},"content":"                Integer indexToShow \u003d commandResult.getIndexToShow();","lastModifiedDate":"2021-10-26"},{"lineNumber":229,"author":{"gitId":"CommanderW324"},"content":"                Stage stage \u003d new Stage();","lastModifiedDate":"2021-10-26"},{"lineNumber":230,"author":{"gitId":"CommanderW324"},"content":"                DetailedPersonWindow showPerson \u003d new DetailedPersonWindow(","lastModifiedDate":"2021-10-26"},{"lineNumber":231,"author":{"gitId":"DystoriaX"},"content":"                        logic.getFilteredPersonList().get(indexToShow), stage);","lastModifiedDate":"2021-10-28"},{"lineNumber":232,"author":{"gitId":"CommanderW324"},"content":"                this.shownPersonWindow.add(showPerson);","lastModifiedDate":"2021-11-07"},{"lineNumber":233,"author":{"gitId":"CommanderW324"},"content":"                showPerson.show();","lastModifiedDate":"2021-10-26"},{"lineNumber":234,"author":{"gitId":"CommanderW324"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":235,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":236,"author":{"gitId":"CommanderW324"},"content":"            if (commandResult.isShowAlias()) {","lastModifiedDate":"2021-11-08"},{"lineNumber":237,"author":{"gitId":"CommanderW324"},"content":"                handleShowAlias();","lastModifiedDate":"2021-10-28"},{"lineNumber":238,"author":{"gitId":"CommanderW324"},"content":"            } else {","lastModifiedDate":"2021-11-07"},{"lineNumber":239,"author":{"gitId":"CommanderW324"},"content":"                updateAliasWindow();","lastModifiedDate":"2021-11-08"},{"lineNumber":240,"author":{"gitId":"CommanderW324"},"content":"            }","lastModifiedDate":"2021-10-28"},{"lineNumber":241,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"samyipsh":5,"CommanderW324":46,"-":197,"DystoriaX":1}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"samyipsh"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on ContactBook level 4\u003c/a\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"CommanderW324"},"content":"    private Label linkedin;","lastModifiedDate":"2021-10-03"},{"lineNumber":41,"author":{"gitId":"CommanderW324"},"content":"    @FXML","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"samyipsh"},"content":"    private Label github;","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"samyipsh"},"content":"    @FXML","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"DystoriaX"},"content":"    private Label detail;","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"DystoriaX"},"content":"    @FXML","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"samyipsh"},"content":"        phone.setText(\"Phone: \" + person.getPhone().value);","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"samyipsh"},"content":"        email.setText(\"Email: \" + person.getEmail().value);","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"samyipsh"},"content":"        linkedin.setText(\"LinkedIn: \" + person.getLinkedin().value);","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"samyipsh"},"content":"        github.setText(\"Github: \" + person.getGithub().githubUsername);","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"samyipsh"},"content":"        detail.setText(\"Details: \" + person.getDetail().value);","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"samyipsh":8,"CommanderW324":2,"-":71,"DystoriaX":2}},{"path":"src/main/java/seedu/address/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.ReadOnlyContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"CommanderW324"},"content":"    @FXML","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"CommanderW324"},"content":"    private Label totalContacts;","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"samyipsh"},"content":"    public StatusBarFooter(Path saveLocation, ReadOnlyContactBook contactBook) {","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"samyipsh"},"content":"        totalContacts.setText(\"Number of Contact: \" + contactBook.getPersonList().size());","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"samyipsh":3,"CommanderW324":3,"-":27}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"e0543403"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/networkUS_icon.png\";","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"e0543403":1,"-":88}},{"path":"src/main/resources/view/AliasTableDisplayWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CommanderW324"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"CommanderW324"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"CommanderW324"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"CommanderW324"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"CommanderW324"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"CommanderW324"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"CommanderW324"},"content":"         title\u003d\"NetworkUs\" width \u003d \"400\" height \u003d \"400\" minWidth\u003d\"300\" minHeight\u003d\"300\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"CommanderW324"},"content":"    \u003cicons\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"CommanderW324"},"content":"        \u003cImage url\u003d\"@/images/networkUS_icon.png\" /\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"CommanderW324"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"CommanderW324"},"content":"    \u003cscene\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"CommanderW324"},"content":"        \u003cScene\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"CommanderW324"},"content":"            \u003cTableView fx:id\u003d\"aliasTableView\" GridPane.columnIndex\u003d\"0\" GridPane.rowIndex\u003d\"1\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"CommanderW324"},"content":"            \u003c/TableView\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"CommanderW324"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"CommanderW324"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"CommanderW324"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"CommanderW324":22}},{"path":"src/main/resources/view/DetailedPersonWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CommanderW324"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"CommanderW324"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"CommanderW324"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"CommanderW324"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"CommanderW324"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"CommanderW324"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"CommanderW324"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"CommanderW324"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"CommanderW324"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"CommanderW324"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"CommanderW324"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"CommanderW324"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"CommanderW324"},"content":"         title\u003d\"NetworkUs\" width \u003d \"400\" height \u003d \"400\" minWidth\u003d\"300\" minHeight\u003d\"300\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"CommanderW324"},"content":"    \u003cicons\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"CommanderW324"},"content":"        \u003cImage url\u003d\"@/images/networkUS_icon.png\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"CommanderW324"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"CommanderW324"},"content":"    \u003cscene\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"CommanderW324"},"content":"        \u003cScene\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"CommanderW324"},"content":"            \u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"CommanderW324"},"content":"                \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"CommanderW324"},"content":"                    \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"CommanderW324"},"content":"                        \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"CommanderW324"},"content":"                    \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"CommanderW324"},"content":"                    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"CommanderW324"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"CommanderW324"},"content":"                            \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"CommanderW324"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"CommanderW324"},"content":"                        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"CommanderW324"},"content":"                        \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"CommanderW324"},"content":"                        \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"CommanderW324"},"content":"                        \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"CommanderW324"},"content":"                        \u003cLabel fx:id\u003d\"github\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$github\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"CommanderW324"},"content":"                        \u003cLabel fx:id\u003d\"linkedin\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$linkedin\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"CommanderW324"},"content":"                        \u003cLabel fx:id\u003d\"detail\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$detail\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"CommanderW324"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"CommanderW324"},"content":"                \u003c/GridPane\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"CommanderW324"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"CommanderW324"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"CommanderW324"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"CommanderW324"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"CommanderW324":42}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samyipsh"},"content":"#openButton, #helpMessage {","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans\";","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"samyipsh":1,"-":2}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cHBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"samyipsh"},"content":"          \u003cButton fx:id\u003d\"openButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#openInBrowser\" text\u003d\"open in browser\"\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"samyipsh":1,"-":44}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":14,"author":{"gitId":"e0543403"},"content":"         title\u003d\"NetworkUs\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"e0543403"},"content":"    \u003cImage url\u003d\"@/images/networkUS_icon.png\" /\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"CommanderW324"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Show Alias\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"CommanderW324"},"content":"            \u003cMenuItem fx:id\u003d\"showAliasMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleShowAlias\" text\u003d\"Show Alias\"/\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"CommanderW324"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"e0543403":2,"CommanderW324":3,"-":57}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"samyipsh"},"content":"      \u003cLabel fx:id\u003d\"github\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$github\" /\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"CommanderW324"},"content":"      \u003cLabel fx:id\u003d\"linkedin\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$linkedin\"/\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"DystoriaX"},"content":"      \u003cLabel fx:id\u003d\"detail\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$detail\"/\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"samyipsh":1,"CommanderW324":1,"-":35,"DystoriaX":1}},{"path":"src/main/resources/view/StatusBarFooter.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"CommanderW324"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003cGridPane styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" /\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"CommanderW324"},"content":"  \u003cHBox spacing\u003d\"200\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cLabel fx:id\u003d\"saveLocationStatus\" /\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":14,"author":{"gitId":"CommanderW324"},"content":"    \u003cLabel fx:id\u003d\"totalContacts\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$total\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"CommanderW324"},"content":"  \u003c/HBox\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2016-08-26"}],"authorContributionMap":{"CommanderW324":4,"-":12}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"DystoriaX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DETAIL_DESC_AMY;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"samyipsh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GITHUB_DESC_AMY;","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"CommanderW324"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LINKEDIN_DESC_AMY;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.ReadOnlyContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"samyipsh"},"content":"import seedu.address.storage.JsonContactBookStorage;","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"samyipsh"},"content":"        JsonContactBookStorage contactBookStorage \u003d","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"samyipsh"},"content":"                new JsonContactBookStorage(temporaryFolder.resolve(\"contactBook.json\"));","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"samyipsh"},"content":"        StorageManager storage \u003d new StorageManager(contactBookStorage, userPrefsStorage);","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"samyipsh"},"content":"        // Setup LogicManager with JsonContactBookIoExceptionThrowingStub","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"samyipsh"},"content":"        JsonContactBookStorage contactBookStorage \u003d","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"samyipsh"},"content":"                new JsonContactBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionContactBook.json\"));","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"samyipsh"},"content":"        StorageManager storage \u003d new StorageManager(contactBookStorage, userPrefsStorage);","lastModifiedDate":"2021-11-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"DystoriaX"},"content":"                + GITHUB_DESC_AMY + LINKEDIN_DESC_AMY + DETAIL_DESC_AMY;","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"samyipsh"},"content":"        Model expectedModel \u003d new ModelManager(model.getContactBook(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"samyipsh"},"content":"    private static class JsonContactBookIoExceptionThrowingStub extends JsonContactBookStorage {","lastModifiedDate":"2021-11-05"},{"lineNumber":155,"author":{"gitId":"samyipsh"},"content":"        private JsonContactBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2021-11-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"samyipsh"},"content":"        public void saveContactBook(ReadOnlyContactBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2021-11-05"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"samyipsh":14,"CommanderW324":1,"-":147,"DystoriaX":2}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"samyipsh"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"samyipsh"},"content":"        model \u003d new ModelManager(getTypicalContactBook(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"samyipsh"},"content":"        Model expectedModel \u003d new ModelManager(model.getContactBook(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"samyipsh"},"content":"        Person personInList \u003d model.getContactBook().getPersonList().get(0);","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"samyipsh":4,"-":41}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"DystoriaX"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"DystoriaX"},"content":"import javafx.collections.ObservableSet;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.ContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.ReadOnlyContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"DystoriaX"},"content":"import seedu.address.model.alias.AliasTable;","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"DystoriaX"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"DystoriaX"},"content":"        public AliasTable getAliasTable() {","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"DystoriaX"},"content":"        public void setAliasTable(AliasTable aliasTable) {","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"DystoriaX"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"DystoriaX"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":114,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":115,"author":{"gitId":"DystoriaX"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":116,"author":{"gitId":"DystoriaX"},"content":"        public void addAlias(String alias, String command) {","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"DystoriaX"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":118,"author":{"gitId":"DystoriaX"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":119,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"DystoriaX"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"DystoriaX"},"content":"        public Set\u003cString\u003e getExistingAlias() {","lastModifiedDate":"2021-10-26"},{"lineNumber":122,"author":{"gitId":"DystoriaX"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"DystoriaX"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":124,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":125,"author":{"gitId":"CommanderW324"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"CommanderW324"},"content":"        public boolean containsAlias(String alias) {","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"CommanderW324"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":128,"author":{"gitId":"CommanderW324"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":129,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":130,"author":{"gitId":"CommanderW324"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":131,"author":{"gitId":"CommanderW324"},"content":"        public void deleteAlias(String alias) {","lastModifiedDate":"2021-10-27"},{"lineNumber":132,"author":{"gitId":"CommanderW324"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":133,"author":{"gitId":"CommanderW324"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":134,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":135,"author":{"gitId":"DystoriaX"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"DystoriaX"},"content":"        public String getCorrespondingCommand(String alias) {","lastModifiedDate":"2021-10-26"},{"lineNumber":137,"author":{"gitId":"DystoriaX"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":138,"author":{"gitId":"DystoriaX"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":139,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"samyipsh"},"content":"        public Path getContactBookFilePath() {","lastModifiedDate":"2021-11-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"samyipsh"},"content":"        public void setContactBookFilePath(Path contactBookFilePath) {","lastModifiedDate":"2021-11-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"samyipsh"},"content":"        public void setContactBook(ReadOnlyContactBook newData) {","lastModifiedDate":"2021-11-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"samyipsh"},"content":"        public ReadOnlyContactBook getContactBook() {","lastModifiedDate":"2021-11-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":170,"author":{"gitId":"e0543403"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":171,"author":{"gitId":"e0543403"},"content":"        public boolean hasPersonExcludingOtherPerson(Person person, Person personToExclude) {","lastModifiedDate":"2021-11-04"},{"lineNumber":172,"author":{"gitId":"e0543403"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":195,"author":{"gitId":"DystoriaX"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":196,"author":{"gitId":"DystoriaX"},"content":"        public ObservableSet\u003cTag\u003e getUniqueTagList() {","lastModifiedDate":"2021-10-21"},{"lineNumber":197,"author":{"gitId":"DystoriaX"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-21"},{"lineNumber":198,"author":{"gitId":"DystoriaX"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":238,"author":{"gitId":"samyipsh"},"content":"        public ReadOnlyContactBook getContactBook() {","lastModifiedDate":"2021-11-05"},{"lineNumber":239,"author":{"gitId":"samyipsh"},"content":"            return new ContactBook();","lastModifiedDate":"2021-11-05"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"samyipsh":8,"e0543403":3,"CommanderW324":10,"-":193,"DystoriaX":29}},{"path":"src/test/java/seedu/address/logic/commands/AliasCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DystoriaX"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"DystoriaX"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"DystoriaX"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"DystoriaX"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"DystoriaX"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"DystoriaX"},"content":"class AliasCommandTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"DystoriaX"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"DystoriaX"},"content":"    public void constructor_nullParam_throwsNullPointerException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"DystoriaX"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AliasCommand(null, \"command\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"DystoriaX"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AliasCommand(\"alias\", null));","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"DystoriaX"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"DystoriaX"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"DystoriaX"},"content":"    public void equals() {","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"DystoriaX"},"content":"        String alias \u003d \"tag -D\";","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"DystoriaX"},"content":"        String untagCommand \u003d UntagCommand.COMMAND_WORD;","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"DystoriaX"},"content":"        String tagCommand \u003d TagCommand.COMMAND_WORD;","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"DystoriaX"},"content":"        AliasCommand aliasUntag \u003d new AliasCommand(alias, untagCommand);","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"DystoriaX"},"content":"        AliasCommand aliasTag \u003d new AliasCommand(alias, tagCommand);","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"DystoriaX"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"DystoriaX"},"content":"        assertTrue(aliasUntag.equals(aliasUntag));","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"DystoriaX"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"DystoriaX"},"content":"        AliasCommand aliasUntagCopy \u003d new AliasCommand(alias, untagCommand);","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"DystoriaX"},"content":"        assertTrue(aliasUntag.equals(aliasUntagCopy));","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"DystoriaX"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"DystoriaX"},"content":"        assertFalse(aliasUntag.equals(1));","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"DystoriaX"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"DystoriaX"},"content":"        assertFalse(aliasUntag.equals(null));","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"DystoriaX"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"DystoriaX"},"content":"        assertFalse(aliasUntag.equals(aliasTag));","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"DystoriaX"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"DystoriaX"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"DystoriaX":42}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"samyipsh"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.ContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"samyipsh"},"content":"    public void execute_emptyContactBook_success() {","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"samyipsh"},"content":"    public void execute_nonEmptyContactBook_success() {","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"samyipsh"},"content":"        Model model \u003d new ModelManager(getTypicalContactBook(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"samyipsh"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalContactBook(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"samyipsh"},"content":"        expectedModel.setContactBook(new ContactBook());","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"samyipsh":7,"-":25}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"CommanderW324"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false, null)));","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"CommanderW324"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true, null)));","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"CommanderW324":2,"-":52}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"DystoriaX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DETAIL;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"samyipsh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GITHUB;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"CommanderW324"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LINKEDIN;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.ContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"e0543403"},"content":"import seedu.address.model.person.FoundInNameOrTagsPredicate;","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"DystoriaX"},"content":"    public static final String VALID_NAME_CLARA \u003d \"Clara Loo\";","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"samyipsh"},"content":"    public static final String VALID_GITHUB_AMY \u003d \"amyio\";","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"samyipsh"},"content":"    public static final String VALID_GITHUB_BOB \u003d \"bobio\";","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"CommanderW324"},"content":"    public static final String VALID_LINKEDIN_AMY \u003d \"https://www.linkedin.com/in/amysearch/\";","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"CommanderW324"},"content":"    public static final String VALID_LINKEDIN_BOB \u003d \"https://www.linkedin.com/in/bobby/\";","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"DystoriaX"},"content":"    public static final String VALID_DETAIL_AMY \u003d \"Y1 CS\";","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"DystoriaX"},"content":"    public static final String VALID_DETAIL_BOB \u003d \"Y2 CS\";","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"DystoriaX"},"content":"    public static final String VALID_TAG_WIFE \u003d \"wife\";","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"DystoriaX"},"content":"    public static final String VALID_TAG_CS1101S \u003d \"CS1101S\";","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"samyipsh"},"content":"    public static final String GITHUB_DESC_AMY \u003d \" \" + PREFIX_GITHUB + VALID_GITHUB_AMY;","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"samyipsh"},"content":"    public static final String GITHUB_DESC_BOB \u003d \" \" + PREFIX_GITHUB + VALID_GITHUB_BOB;","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"CommanderW324"},"content":"    public static final String LINKEDIN_DESC_AMY \u003d \" \" + PREFIX_LINKEDIN + VALID_LINKEDIN_AMY;","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"CommanderW324"},"content":"    public static final String LINKEDIN_DESC_BOB \u003d \" \" + PREFIX_LINKEDIN + VALID_LINKEDIN_BOB;","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"DystoriaX"},"content":"    public static final String DETAIL_DESC_AMY \u003d \" \" + PREFIX_DETAIL + VALID_DETAIL_AMY;","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"DystoriaX"},"content":"    public static final String DETAIL_DESC_BOB \u003d \" \" + PREFIX_DETAIL + VALID_DETAIL_BOB;","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"samyipsh"},"content":"    public static final String INVALID_GITHUB_DESC \u003d \" \" + PREFIX_GITHUB + \"sam--yipsh\";","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"samyipsh"},"content":"    // double hyphen not allowed for github username","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"CommanderW324"},"content":"    public static final String INVALID_LINKEDIN_DESC \u003d \" \" + PREFIX_LINKEDIN","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"CommanderW324"},"content":"            + \"http://linkdin.com/-a-2-winston\"; // linkedin.com needed","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"jeromewjj"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2021-09-30"},{"lineNumber":82,"author":{"gitId":"CommanderW324"},"content":"                .withGithub(VALID_GITHUB_AMY).withLinkedIn(VALID_LINKEDIN_AMY)","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"DystoriaX"},"content":"                .withDetail(VALID_DETAIL_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"jeromewjj"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-09-30"},{"lineNumber":86,"author":{"gitId":"CommanderW324"},"content":"                .withGithub(VALID_GITHUB_BOB).withLinkedIn(VALID_LINKEDIN_BOB)","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"DystoriaX"},"content":"                .withDetail(VALID_DETAIL_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"samyipsh"},"content":"        ContactBook expectedContactBook \u003d new ContactBook(actualModel.getContactBook());","lastModifiedDate":"2021-11-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":130,"author":{"gitId":"samyipsh"},"content":"        assertEquals(expectedContactBook, actualModel.getContactBook());","lastModifiedDate":"2021-11-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":142,"author":{"gitId":"e0543403"},"content":"        model.updateFilteredPersonList(new FoundInNameOrTagsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-11-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"samyipsh":11,"e0543403":2,"CommanderW324":9,"jeromewjj":2,"-":113,"DystoriaX":10}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"samyipsh"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"samyipsh"},"content":"    private Model model \u003d new ModelManager(getTypicalContactBook(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"samyipsh"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getContactBook(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"samyipsh"},"content":"        Model expectedModel \u003d new ModelManager(model.getContactBook(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"samyipsh"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getContactBook().getPersonList().size());","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"samyipsh":5,"-":104}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"samyipsh"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.ContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"samyipsh"},"content":"    private Model model \u003d new ModelManager(getTypicalContactBook(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"samyipsh"},"content":"        Model expectedModel \u003d new ModelManager(new ContactBook(model.getContactBook()), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"samyipsh"},"content":"        Model expectedModel \u003d new ModelManager(new ContactBook(model.getContactBook()), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"samyipsh"},"content":"        Model expectedModel \u003d new ModelManager(new ContactBook(model.getContactBook()), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"samyipsh"},"content":"        Model expectedModel \u003d new ModelManager(new ContactBook(model.getContactBook()), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"samyipsh"},"content":"        Person personInList \u003d model.getContactBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2021-11-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"samyipsh"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getContactBook().getPersonList().size());","lastModifiedDate":"2021-11-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"samyipsh":9,"-":164}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"CommanderW324"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, null);","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"CommanderW324":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"e0543403"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"samyipsh"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"e0543403"},"content":"import seedu.address.model.person.FoundInNameOrTagsPredicate;","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"samyipsh"},"content":"    private Model model \u003d new ModelManager(getTypicalContactBook(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"samyipsh"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalContactBook(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"e0543403"},"content":"        FoundInNameOrTagsPredicate firstPredicate \u003d","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"e0543403"},"content":"                new FoundInNameOrTagsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"e0543403"},"content":"        FoundInNameOrTagsPredicate secondPredicate \u003d","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"e0543403"},"content":"                new FoundInNameOrTagsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"e0543403"},"content":"        FoundInNameOrTagsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"e0543403"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 4);","lastModifiedDate":"2021-10-04"},{"lineNumber":71,"author":{"gitId":"e0543403"},"content":"        FoundInNameOrTagsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz owesMoney\");","lastModifiedDate":"2021-11-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"e0543403"},"content":"        assertEquals(Arrays.asList(BENSON, CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2021-10-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"e0543403"},"content":"    private FoundInNameOrTagsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-11-06"},{"lineNumber":82,"author":{"gitId":"e0543403"},"content":"        return new FoundInNameOrTagsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-11-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"samyipsh":3,"e0543403":12,"-":69}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"CommanderW324"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false, null);","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"CommanderW324":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"samyipsh"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"samyipsh"},"content":"        model \u003d new ModelManager(getTypicalContactBook(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"samyipsh"},"content":"        expectedModel \u003d new ModelManager(model.getContactBook(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"samyipsh":3,"-":36}},{"path":"src/test/java/seedu/address/logic/commands/OpenFieldCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samyipsh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"samyipsh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"samyipsh"},"content":"import static seedu.address.logic.commands.OpenFieldCommand.MESSAGE_UNSUPPORTED_FIELD;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"samyipsh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_EMPTY_FIELD_PERSON;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"samyipsh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"samyipsh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"samyipsh"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"samyipsh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"samyipsh"},"content":"import java.util.List;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"samyipsh"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"samyipsh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"samyipsh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.ContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"samyipsh"},"content":"public class OpenFieldCommandTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"samyipsh"},"content":"    private Model model \u003d new ModelManager(getTypicalContactBook(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"samyipsh"},"content":"    private final Predicate\u003cPerson\u003e predicateNoPersons \u003d unused -\u003e false;","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"samyipsh"},"content":"    private final String githubOpenFieldSuccess \u003d String.format(OpenFieldCommand.MESSAGE_OPEN_FIELD_SUCCESS, \"github\");","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"samyipsh"},"content":"    private final String linkedInOpenFieldSuccess \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"samyipsh"},"content":"            String.format(OpenFieldCommand.MESSAGE_OPEN_FIELD_SUCCESS, \"linkedin\");","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"samyipsh"},"content":"    private final String unsupportedFieldFailure \u003d String.format(MESSAGE_UNSUPPORTED_FIELD, \"somefield\");","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"samyipsh"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"samyipsh"},"content":"    public void execute_validFieldAndOneIndex_modelUnchangedAndSuccess() {","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"samyipsh"},"content":"        List\u003cIndex\u003e secondIndex \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"samyipsh"},"content":"        secondIndex.add(INDEX_SECOND_PERSON); //has both linkedin and github field","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"samyipsh"},"content":"        Model expectedModel \u003d new ModelManager(new ContactBook(model.getContactBook()), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"samyipsh"},"content":"        OpenFieldCommand openGithubFieldCommand \u003d new OpenFieldCommand(secondIndex, \"github\");","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"samyipsh"},"content":"        OpenFieldCommand openLinkedInFieldCommand \u003d new OpenFieldCommand(secondIndex, \"linkedin\");","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"samyipsh"},"content":"        assertCommandSuccess(openGithubFieldCommand, model, githubOpenFieldSuccess, expectedModel);","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"samyipsh"},"content":"        assertCommandSuccess(openLinkedInFieldCommand, model, linkedInOpenFieldSuccess, expectedModel);","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"samyipsh"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"samyipsh"},"content":"    public void execute_validFieldAndMultipleIndex_modelUnchangedAndSuccess() {","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"samyipsh"},"content":"        List\u003cIndex\u003e firstAndSecondIndex \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"samyipsh"},"content":"        //has both linkedin and github field","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"samyipsh"},"content":"        firstAndSecondIndex.add(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"samyipsh"},"content":"        firstAndSecondIndex.add(INDEX_SECOND_PERSON);","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"samyipsh"},"content":"        Model expectedModel \u003d new ModelManager(new ContactBook(model.getContactBook()), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"samyipsh"},"content":"        OpenFieldCommand openGithubFieldCommand \u003d new OpenFieldCommand(firstAndSecondIndex, \"github\");","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"samyipsh"},"content":"        OpenFieldCommand openLinkedInFieldCommand \u003d new OpenFieldCommand(firstAndSecondIndex, \"linkedin\");","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"samyipsh"},"content":"        assertCommandSuccess(openGithubFieldCommand, model, githubOpenFieldSuccess, expectedModel);","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"samyipsh"},"content":"        assertCommandSuccess(openLinkedInFieldCommand, model, linkedInOpenFieldSuccess, expectedModel);","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"samyipsh"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"samyipsh"},"content":"    public void execute_emptyFieldAndMultipleIndex_modelUnchangedAndSuccess() {","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"samyipsh"},"content":"        List\u003cIndex\u003e index \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"samyipsh"},"content":"        //missing LinkedIn field","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"samyipsh"},"content":"        index.add(INDEX_EMPTY_FIELD_PERSON);","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"samyipsh"},"content":"        Model expectedModel \u003d new ModelManager(new ContactBook(model.getContactBook()), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"samyipsh"},"content":"        OpenFieldCommand openGithubFieldCommand \u003d new OpenFieldCommand(index, \"github\");","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"samyipsh"},"content":"        OpenFieldCommand openLinkedInFieldCommand \u003d new OpenFieldCommand(index, \"linkedin\");","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"samyipsh"},"content":"        assertCommandSuccess(openGithubFieldCommand, model, githubOpenFieldSuccess, expectedModel);","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"samyipsh"},"content":"        assertCommandSuccess(openLinkedInFieldCommand, model, linkedInOpenFieldSuccess, expectedModel);","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"samyipsh"},"content":"    //TODO uncomment comment when data changes","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"samyipsh"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"samyipsh"},"content":"    public void execute_invalidField_failure() {","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"samyipsh"},"content":"        List\u003cIndex\u003e secondIndex \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"samyipsh"},"content":"        secondIndex.add(INDEX_SECOND_PERSON); //has both linkedin and github field","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"samyipsh"},"content":"        Model expectedModel \u003d new ModelManager(new ContactBook(model.getContactBook()), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":85,"author":{"gitId":"samyipsh"},"content":"        OpenFieldCommand openGithubFieldCommand \u003d new OpenFieldCommand(secondIndex, \"someField\");","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"samyipsh"},"content":"        //MODIFY when new list data from james is filled","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"samyipsh"},"content":"        //assertCommandFailure(openGithubFieldCommand, model, unsupportedFieldFailure);","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"samyipsh"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"samyipsh"},"content":"    public void execute_emptyList_failure() {","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"samyipsh"},"content":"        //        model.updateFilteredPersonList(predicateNoPersons);","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"samyipsh"},"content":"        //        Index firstIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"samyipsh"},"content":"        //        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"samyipsh"},"content":"        //        assertTrue(firstIndex.getZeroBased() \u003c model.getContactBook().getPersonList().size());","lastModifiedDate":"2021-11-05"},{"lineNumber":97,"author":{"gitId":"samyipsh"},"content":"        //","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"samyipsh"},"content":"        //        List\u003cIndex\u003e invalidIndex \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"samyipsh"},"content":"        //        invalidIndex.add(firstIndex);","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"samyipsh"},"content":"        //","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"samyipsh"},"content":"        //        OpenFieldCommand openGithubFieldCommand \u003d new OpenFieldCommand(invalidIndex, \"github\");","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"samyipsh"},"content":"        //        assertCommandFailure(openGithubFieldCommand, model,","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"samyipsh"},"content":"        //                String.format(MESSAGE_NO_DISPLAYED_PERSONS));","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"samyipsh"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"samyipsh":105}},{"path":"src/test/java/seedu/address/logic/commands/ReplaceTagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromewjj"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"jeromewjj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"jeromewjj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"jeromewjj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"jeromewjj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"jeromewjj"},"content":"import static seedu.address.logic.commands.ReplaceTagCommand.MESSAGE_REPLACE_ALL_TAG_SUCCESS;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"jeromewjj"},"content":"import static seedu.address.logic.commands.ReplaceTagCommand.MESSAGE_TAG_NOT_EXIST;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"jeromewjj"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"jeromewjj"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"samyipsh"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"jeromewjj"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"jeromewjj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.ContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.person.TagsPresentPredicate;","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"jeromewjj"},"content":"class ReplaceTagCommandTest {","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"samyipsh"},"content":"    private Model model \u003d new ModelManager(getTypicalContactBook(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"jeromewjj"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"jeromewjj"},"content":"    void execute_tagPresent_success() {","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"jeromewjj"},"content":"        Tag friendTag \u003d new Tag(\"friends\");","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"jeromewjj"},"content":"        Tag enemyTag \u003d new Tag(\"enemy\");","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"jeromewjj"},"content":"        TagsPresentPredicate friendTagPredicate \u003d new TagsPresentPredicate(Arrays.asList(\"friends\"));","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"jeromewjj"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"jeromewjj"},"content":"        Person secondPerson \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"jeromewjj"},"content":"        Person forthPerson \u003d model.getFilteredPersonList().get(Index.fromOneBased(4).getZeroBased());","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"jeromewjj"},"content":"        Person firstDeletedTagPerson \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"jeromewjj"},"content":"                .withEmail(\"alice@example.com\")","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"jeromewjj"},"content":"                .withPhone(\"94351253\")","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"jeromewjj"},"content":"                .withGithub(\"aliceio\")","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"jeromewjj"},"content":"                .withLinkedIn(\"https://www.linkedin.com/in/alice/\")","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"jeromewjj"},"content":"                .withDetail(\"Y1 CS\").withTags(\"enemy\").build();","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"jeromewjj"},"content":"        Person secondDeletedTagPerson \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"jeromewjj"},"content":"                .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"jeromewjj"},"content":"                .withGithub(\"bensonio\").withLinkedIn(\"https://www.linkedin.com/in/benson/\")","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"jeromewjj"},"content":"                .withDetail(\"Y2 CS\").withTags(\"owesMoney\", \"enemy\").build();","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"jeromewjj"},"content":"        Person forthDeletedTagPerson \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"jeromewjj"},"content":"                .withEmail(\"cornelia@example.com\").withGithub(\"danielio\")","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"jeromewjj"},"content":"                .withLinkedIn(\"https://www.linkedin.com/in/danya/\").withTags(\"enemy\").build();","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"jeromewjj"},"content":"        ReplaceTagCommand replaceTagCommand \u003d new ReplaceTagCommand(friendTag, enemyTag, friendTagPredicate);","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"samyipsh"},"content":"        Model expectedModel \u003d new ModelManager(new ContactBook(model.getContactBook()), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"jeromewjj"},"content":"        expectedModel.setPerson(firstPerson, firstDeletedTagPerson);","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"jeromewjj"},"content":"        expectedModel.setPerson(secondPerson, secondDeletedTagPerson);","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"jeromewjj"},"content":"        expectedModel.setPerson(forthPerson, forthDeletedTagPerson);","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"jeromewjj"},"content":"        String expectedMessage \u003d String.format(MESSAGE_REPLACE_ALL_TAG_SUCCESS, friendTag, enemyTag);","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"jeromewjj"},"content":"        assertCommandSuccess(replaceTagCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"jeromewjj"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"jeromewjj"},"content":"    void execute_tagNotFound_failure() {","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"jeromewjj"},"content":"        Tag clownTag \u003d new Tag(\"clown\");","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"jeromewjj"},"content":"        Tag enemyTag \u003d new Tag(\"enemy\");","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"jeromewjj"},"content":"        TagsPresentPredicate clownTagPredicate \u003d new TagsPresentPredicate(Arrays.asList(\"clown\"));","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"jeromewjj"},"content":"        ReplaceTagCommand replaceTagCommand \u003d new ReplaceTagCommand(clownTag, enemyTag, clownTagPredicate);","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"jeromewjj"},"content":"        assertCommandFailure(replaceTagCommand, model,","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"jeromewjj"},"content":"                String.format(MESSAGE_TAG_NOT_EXIST, clownTag));","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"jeromewjj"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"jeromewjj"},"content":"    void testEquals() {","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"jeromewjj"},"content":"        Tag friendTag \u003d new Tag(\"friend\");","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"jeromewjj"},"content":"        Tag enemyTag \u003d new Tag(\"enemy\");","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"jeromewjj"},"content":"        Tag clownTag \u003d new Tag(\"clown\");","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"jeromewjj"},"content":"        TagsPresentPredicate friendTagPredicate \u003d new TagsPresentPredicate(Arrays.asList(\"friend\"));","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"jeromewjj"},"content":"        TagsPresentPredicate enemyTagPredicate \u003d new TagsPresentPredicate(Arrays.asList(\"enemy\"));","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"jeromewjj"},"content":"        final ReplaceTagCommand standardCommand \u003d new ReplaceTagCommand(friendTag, clownTag, friendTagPredicate);","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"jeromewjj"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"jeromewjj"},"content":"        ReplaceTagCommand standardCommandCopy \u003d new ReplaceTagCommand(friendTag, clownTag, friendTagPredicate);","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"jeromewjj"},"content":"        assertTrue(standardCommand.equals(standardCommandCopy));","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"jeromewjj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"jeromewjj"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-10-22"},{"lineNumber":99,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":100,"author":{"gitId":"jeromewjj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-22"},{"lineNumber":101,"author":{"gitId":"jeromewjj"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-10-22"},{"lineNumber":102,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":103,"author":{"gitId":"jeromewjj"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-22"},{"lineNumber":104,"author":{"gitId":"jeromewjj"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2021-10-22"},{"lineNumber":105,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":106,"author":{"gitId":"jeromewjj"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2021-10-22"},{"lineNumber":107,"author":{"gitId":"jeromewjj"},"content":"        ReplaceTagCommand differentTagCommand \u003d new ReplaceTagCommand(enemyTag, clownTag, enemyTagPredicate);","lastModifiedDate":"2021-10-22"},{"lineNumber":108,"author":{"gitId":"jeromewjj"},"content":"        assertFalse(standardCommand.equals(differentTagCommand));","lastModifiedDate":"2021-10-22"},{"lineNumber":109,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":110,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":111,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":112,"author":{"gitId":"jeromewjj"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"samyipsh":4,"jeromewjj":108}},{"path":"src/test/java/seedu/address/logic/commands/ShowCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CommanderW324"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"CommanderW324"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"CommanderW324"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"CommanderW324"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"CommanderW324"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"CommanderW324"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"CommanderW324"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"CommanderW324"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"samyipsh"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"CommanderW324"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"CommanderW324"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"CommanderW324"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"CommanderW324"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"CommanderW324"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"CommanderW324"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"CommanderW324"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"CommanderW324"},"content":"public class ShowCommandTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"samyipsh"},"content":"    private Model model \u003d new ModelManager(getTypicalContactBook(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"CommanderW324"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"CommanderW324"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"CommanderW324"},"content":"        Person personToShow \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"CommanderW324"},"content":"        ShowCommand showCommand \u003d new ShowCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"CommanderW324"},"content":"        String expectedMessage \u003d String.format(ShowCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"CommanderW324"},"content":"                INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"CommanderW324"},"content":"        Model expectedModel \u003d model;","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"CommanderW324"},"content":"        assertCommandSuccess(showCommand, model, expectedMessage, model);","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"CommanderW324"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"CommanderW324"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"CommanderW324"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"CommanderW324"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"CommanderW324"},"content":"        ShowCommand showCommand \u003d new ShowCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"CommanderW324"},"content":"        assertCommandFailure(showCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"CommanderW324"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"CommanderW324"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"CommanderW324"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"CommanderW324"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"CommanderW324"},"content":"        Person personToShow \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"CommanderW324"},"content":"        ShowCommand showCommand \u003d new ShowCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"CommanderW324"},"content":"        String expectedMessage \u003d String.format(ShowCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"CommanderW324"},"content":"                INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"samyipsh"},"content":"        Model expectedModel \u003d new ModelManager(model.getContactBook(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"CommanderW324"},"content":"        showPersonAtIndex(expectedModel, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"CommanderW324"},"content":"        assertCommandSuccess(showCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"CommanderW324"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"CommanderW324"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"CommanderW324"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"CommanderW324"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"CommanderW324"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"e0543403"},"content":"        // ensures that outOfBoundIndex is still in bounds of contact book list","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"samyipsh"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getContactBook().getPersonList().size());","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"CommanderW324"},"content":"        ShowCommand showCommand \u003d new ShowCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"CommanderW324"},"content":"        assertCommandFailure(showCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"CommanderW324"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"CommanderW324"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"CommanderW324"},"content":"    public void equals() {","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"CommanderW324"},"content":"        ShowCommand showFirstCommand \u003d new ShowCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"CommanderW324"},"content":"        ShowCommand showSecondCommand \u003d new ShowCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"CommanderW324"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"CommanderW324"},"content":"        assertTrue(showFirstCommand.equals(showFirstCommand));","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"CommanderW324"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"CommanderW324"},"content":"        ShowCommand showFirstCommandCopy \u003d new ShowCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"CommanderW324"},"content":"        assertTrue(showFirstCommand.equals(showFirstCommandCopy));","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"CommanderW324"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"CommanderW324"},"content":"        assertFalse(showFirstCommand.equals(1));","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"CommanderW324"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"CommanderW324"},"content":"        assertFalse(showFirstCommand.equals(null));","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"CommanderW324"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"CommanderW324"},"content":"        assertFalse(showFirstCommand.equals(showSecondCommand));","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"CommanderW324"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"CommanderW324"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"CommanderW324"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"CommanderW324"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"CommanderW324"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"CommanderW324"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"CommanderW324"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"CommanderW324"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"CommanderW324"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"samyipsh":4,"e0543403":1,"CommanderW324":98}},{"path":"src/test/java/seedu/address/logic/commands/ShowTagsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DystoriaX"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"DystoriaX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"DystoriaX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"DystoriaX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_CLARA;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"DystoriaX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"DystoriaX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"DystoriaX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"DystoriaX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"DystoriaX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_WIFE;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"DystoriaX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"DystoriaX"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.ContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"DystoriaX"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"DystoriaX"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"DystoriaX"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"DystoriaX"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"DystoriaX"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"samyipsh"},"content":"import seedu.address.testutil.ContactBookBuilder;","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"DystoriaX"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"DystoriaX"},"content":"class ShowTagsCommandTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"DystoriaX"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"DystoriaX"},"content":"    void execute_emptyAddressBook_success() {","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"DystoriaX"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"DystoriaX"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"DystoriaX"},"content":"        String expectedMessage \u003d ShowTagsCommand.MESSAGE_SUCCESS + \"\\n\";","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"DystoriaX"},"content":"        assertCommandSuccess(new ShowTagsCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"DystoriaX"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"DystoriaX"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"DystoriaX"},"content":"    void execute_noTags_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"DystoriaX"},"content":"        final Person amy \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"DystoriaX"},"content":"        final Person bob \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"samyipsh"},"content":"        ContactBook addressBook \u003d new ContactBookBuilder().withPerson(amy).withPerson(bob).build();","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"DystoriaX"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"DystoriaX"},"content":"        Model model \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"DystoriaX"},"content":"        Model expectedModel \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"DystoriaX"},"content":"        String expectedMessage \u003d ShowTagsCommand.MESSAGE_SUCCESS + \"\\n\";","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"DystoriaX"},"content":"        assertCommandSuccess(new ShowTagsCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"DystoriaX"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"DystoriaX"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"DystoriaX"},"content":"    void execute_noDuplicateTags_success() {","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"DystoriaX"},"content":"        Person person \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"DystoriaX"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"samyipsh"},"content":"        ContactBook addressBook \u003d new ContactBookBuilder().withPerson(person).build();","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"DystoriaX"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"DystoriaX"},"content":"        Model model \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"DystoriaX"},"content":"        Model expectedModel \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"DystoriaX"},"content":"        String expectedMessage \u003d ShowTagsCommand.MESSAGE_SUCCESS + \"\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"DystoriaX"},"content":"                + new Tag(VALID_TAG_FRIEND);","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"DystoriaX"},"content":"        assertCommandSuccess(new ShowTagsCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"DystoriaX"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"DystoriaX"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"DystoriaX"},"content":"    void execute_duplicateTags_success() {","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"DystoriaX"},"content":"        final Person amy \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"DystoriaX"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"DystoriaX"},"content":"        final Person bob \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"DystoriaX"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"samyipsh"},"content":"        ContactBook addressBook \u003d new ContactBookBuilder().withPerson(amy).withPerson(bob).build();","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"DystoriaX"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"DystoriaX"},"content":"        Model model \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"DystoriaX"},"content":"        Model expectedModel \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"DystoriaX"},"content":"        String expectedMessage \u003d ShowTagsCommand.MESSAGE_SUCCESS + \"\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"DystoriaX"},"content":"                + new Tag(VALID_TAG_FRIEND);","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"DystoriaX"},"content":"        assertCommandSuccess(new ShowTagsCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"DystoriaX"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"DystoriaX"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"DystoriaX"},"content":"    void execute_multiplePersons_success() {","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"DystoriaX"},"content":"        final Person amy \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"DystoriaX"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"DystoriaX"},"content":"        final Person bob \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"DystoriaX"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"DystoriaX"},"content":"        final Person clara \u003d new PersonBuilder().withName(VALID_NAME_CLARA).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"DystoriaX"},"content":"                .withTags(VALID_TAG_WIFE).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":99,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":100,"author":{"gitId":"samyipsh"},"content":"        ContactBook addressBook \u003d new ContactBookBuilder().withPerson(amy).withPerson(bob)","lastModifiedDate":"2021-11-05"},{"lineNumber":101,"author":{"gitId":"DystoriaX"},"content":"                .withPerson(clara).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":102,"author":{"gitId":"DystoriaX"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2021-10-22"},{"lineNumber":103,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":104,"author":{"gitId":"DystoriaX"},"content":"        Model model \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2021-10-22"},{"lineNumber":105,"author":{"gitId":"DystoriaX"},"content":"        Model expectedModel \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2021-10-22"},{"lineNumber":106,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":107,"author":{"gitId":"DystoriaX"},"content":"        String expectedMessage \u003d ShowTagsCommand.MESSAGE_SUCCESS + \"\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"DystoriaX"},"content":"                + new Tag(VALID_TAG_FRIEND) + \" \"","lastModifiedDate":"2021-10-22"},{"lineNumber":109,"author":{"gitId":"DystoriaX"},"content":"                + new Tag(VALID_TAG_HUSBAND) + \" \"","lastModifiedDate":"2021-10-22"},{"lineNumber":110,"author":{"gitId":"DystoriaX"},"content":"                + new Tag(VALID_TAG_WIFE);","lastModifiedDate":"2021-10-22"},{"lineNumber":111,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":112,"author":{"gitId":"DystoriaX"},"content":"        assertCommandSuccess(new ShowTagsCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"DystoriaX"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":114,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":115,"author":{"gitId":"DystoriaX"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":116,"author":{"gitId":"DystoriaX"},"content":"    void execute_filteredPersons_success() {","lastModifiedDate":"2021-10-22"},{"lineNumber":117,"author":{"gitId":"DystoriaX"},"content":"        final Person amy \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2021-10-22"},{"lineNumber":118,"author":{"gitId":"DystoriaX"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":119,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":120,"author":{"gitId":"DystoriaX"},"content":"        final Person bob \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-22"},{"lineNumber":121,"author":{"gitId":"DystoriaX"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":122,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":123,"author":{"gitId":"DystoriaX"},"content":"        final Person clara \u003d new PersonBuilder().withName(VALID_NAME_CLARA).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-22"},{"lineNumber":124,"author":{"gitId":"DystoriaX"},"content":"                .withTags(VALID_TAG_WIFE).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":125,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":126,"author":{"gitId":"samyipsh"},"content":"        ContactBook addressBook \u003d new ContactBookBuilder().withPerson(amy).withPerson(bob)","lastModifiedDate":"2021-11-05"},{"lineNumber":127,"author":{"gitId":"DystoriaX"},"content":"                .withPerson(clara).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":128,"author":{"gitId":"DystoriaX"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2021-10-22"},{"lineNumber":129,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":130,"author":{"gitId":"DystoriaX"},"content":"        Model model \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2021-10-22"},{"lineNumber":131,"author":{"gitId":"DystoriaX"},"content":"        Model expectedModel \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2021-10-22"},{"lineNumber":132,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":133,"author":{"gitId":"DystoriaX"},"content":"        model.updateFilteredPersonList(person -\u003e person.getName().equals(VALID_NAME_AMY));","lastModifiedDate":"2021-10-22"},{"lineNumber":134,"author":{"gitId":"DystoriaX"},"content":"        expectedModel.updateFilteredPersonList(person -\u003e person.getName().equals(VALID_NAME_AMY));","lastModifiedDate":"2021-10-22"},{"lineNumber":135,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":136,"author":{"gitId":"DystoriaX"},"content":"        String expectedMessage \u003d ShowTagsCommand.MESSAGE_SUCCESS + \"\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"DystoriaX"},"content":"                + new Tag(VALID_TAG_FRIEND) + \" \"","lastModifiedDate":"2021-10-22"},{"lineNumber":138,"author":{"gitId":"DystoriaX"},"content":"                + new Tag(VALID_TAG_HUSBAND) + \" \"","lastModifiedDate":"2021-10-22"},{"lineNumber":139,"author":{"gitId":"DystoriaX"},"content":"                + new Tag(VALID_TAG_WIFE);","lastModifiedDate":"2021-10-22"},{"lineNumber":140,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":141,"author":{"gitId":"DystoriaX"},"content":"        assertCommandSuccess(new ShowTagsCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"DystoriaX"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":143,"author":{"gitId":"DystoriaX"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"samyipsh":7,"DystoriaX":136}},{"path":"src/test/java/seedu/address/logic/commands/TagAllCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0543403"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"e0543403"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"e0543403"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"e0543403"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"e0543403"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"e0543403"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"e0543403"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"e0543403"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"samyipsh"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"e0543403"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"e0543403"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"e0543403"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.ContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"e0543403"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"e0543403"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"e0543403"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"e0543403"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"e0543403"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"e0543403"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"e0543403"},"content":"class TagAllCommandTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"samyipsh"},"content":"    private Model model \u003d new ModelManager(getTypicalContactBook(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"e0543403"},"content":"    private Tag tag \u003d new Tag(\"tag\");","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"e0543403"},"content":"    private final Predicate\u003cPerson\u003e predicateNoPersons \u003d unused -\u003e false;","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"e0543403"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"e0543403"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"e0543403"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"e0543403"},"content":"        showPersonAtIndex(model, indexLastPerson);","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"e0543403"},"content":"        Tag tagToAdd \u003d new Tag(VALID_TAG_HUSBAND);","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"e0543403"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"e0543403"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(firstPerson);","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"e0543403"},"content":"        Person taggedPerson \u003d personInList.withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"e0543403"},"content":"        TagAllCommand tagAllCommand \u003d new TagAllCommand(tagToAdd);","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"samyipsh"},"content":"        Model expectedModel \u003d new ModelManager(new ContactBook(model.getContactBook()), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"e0543403"},"content":"        expectedModel.setPerson(firstPerson, taggedPerson);","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"e0543403"},"content":"        showPersonAtIndex(expectedModel, indexLastPerson);","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"e0543403"},"content":"        String expectedMessage \u003d TagAllCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"e0543403"},"content":"        assertCommandSuccess(tagAllCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"e0543403"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"e0543403"},"content":"    public void execute_emptyList_failure() {","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"e0543403"},"content":"        model.updateFilteredPersonList(predicateNoPersons);","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"e0543403"},"content":"        TagAllCommand tagAllCommand \u003d new TagAllCommand(tag);","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"e0543403"},"content":"        assertCommandFailure(tagAllCommand, model,","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"e0543403"},"content":"                TagAllCommand.MESSAGE_NO_PERSONS_TO_TAG);","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"e0543403"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"e0543403"},"content":"    public void equals() {","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"e0543403"},"content":"        final TagAllCommand standardCommand \u003d new TagAllCommand(tag);","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"e0543403"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"e0543403"},"content":"        TagAllCommand commandWithSameValues \u003d new TagAllCommand(tag);","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"e0543403"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"e0543403"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"e0543403"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"e0543403"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"e0543403"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"e0543403"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"e0543403"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"e0543403"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"e0543403"},"content":"        assertFalse(standardCommand.equals(new TagAllCommand(new Tag(\"gat\"))));","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"e0543403"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"samyipsh":4,"e0543403":79}},{"path":"src/test/java/seedu/address/logic/commands/TagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0543403"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"e0543403"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"e0543403"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"e0543403"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"e0543403"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"e0543403"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"e0543403"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"e0543403"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"e0543403"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"e0543403"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"samyipsh"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"e0543403"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"e0543403"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"e0543403"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"e0543403"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"e0543403"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.ContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"e0543403"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"e0543403"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"e0543403"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"e0543403"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"e0543403"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"e0543403"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"e0543403"},"content":"public class TagCommandTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"samyipsh"},"content":"    private Model model \u003d new ModelManager(getTypicalContactBook(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"e0543403"},"content":"    private Tag tag \u003d new Tag(\"tag\");","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"e0543403"},"content":"    private final Predicate\u003cPerson\u003e predicateNoPersons \u003d unused -\u003e false;","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"e0543403"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"e0543403"},"content":"    public void execute_unfilteredList_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"e0543403"},"content":"        Tag tagToAdd \u003d new Tag(VALID_TAG_HUSBAND);","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"e0543403"},"content":"        List\u003cIndex\u003e thirdIndex \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"e0543403"},"content":"        thirdIndex.add(INDEX_THIRD_PERSON);","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"e0543403"},"content":"        Person thirdPerson \u003d model.getFilteredPersonList().get(INDEX_THIRD_PERSON.getZeroBased());","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"e0543403"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(thirdPerson);","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"e0543403"},"content":"        Person taggedPerson \u003d personInList.withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"e0543403"},"content":"        TagCommand tagCommand \u003d new TagCommand(thirdIndex, tagToAdd);","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"samyipsh"},"content":"        Model expectedModel \u003d new ModelManager(new ContactBook(model.getContactBook()), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"e0543403"},"content":"        expectedModel.setPerson(thirdPerson, taggedPerson);","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"e0543403"},"content":"        String expectedMessage \u003d TagCommand.MESSAGE_TAG_PERSON_SUCCESS;","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"e0543403"},"content":"        assertCommandSuccess(tagCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"e0543403"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"e0543403"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"e0543403"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"e0543403"},"content":"        showPersonAtIndex(model, indexLastPerson);","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"e0543403"},"content":"        Tag tagToAdd \u003d new Tag(VALID_TAG_HUSBAND);","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"e0543403"},"content":"        List\u003cIndex\u003e firstIndex \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"e0543403"},"content":"        firstIndex.add(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"e0543403"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"e0543403"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(firstPerson);","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"e0543403"},"content":"        Person taggedPerson \u003d personInList.withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"e0543403"},"content":"        TagCommand tagCommand \u003d new TagCommand(firstIndex, tagToAdd);","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"samyipsh"},"content":"        Model expectedModel \u003d new ModelManager(new ContactBook(model.getContactBook()), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"e0543403"},"content":"        expectedModel.setPerson(firstPerson, taggedPerson);","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"e0543403"},"content":"        showPersonAtIndex(expectedModel, indexLastPerson);","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"e0543403"},"content":"        String expectedMessage \u003d TagCommand.MESSAGE_TAG_PERSON_SUCCESS;","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"e0543403"},"content":"        assertCommandSuccess(tagCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":80,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"e0543403"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":82,"author":{"gitId":"e0543403"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"e0543403"},"content":"        int modelSize \u003d model.getFilteredPersonList().size();","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"e0543403"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(modelSize + 1);","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"e0543403"},"content":"        List\u003cIndex\u003e invalidIndex \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"e0543403"},"content":"        invalidIndex.add(outOfBoundIndex);","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":89,"author":{"gitId":"e0543403"},"content":"        TagCommand tagCommand \u003d new TagCommand(invalidIndex, tag);","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"e0543403"},"content":"        assertCommandFailure(tagCommand, model,","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"e0543403"},"content":"                String.format(TagCommand.MESSAGE_OUT_OF_BOUNDS_INDEX_DISPLAYED, modelSize + 1, modelSize));","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"e0543403"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":96,"author":{"gitId":"e0543403"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2021-10-16"},{"lineNumber":97,"author":{"gitId":"e0543403"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-16"},{"lineNumber":98,"author":{"gitId":"e0543403"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-16"},{"lineNumber":99,"author":{"gitId":"e0543403"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-16"},{"lineNumber":100,"author":{"gitId":"samyipsh"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getContactBook().getPersonList().size());","lastModifiedDate":"2021-11-05"},{"lineNumber":101,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":102,"author":{"gitId":"e0543403"},"content":"        List\u003cIndex\u003e invalidIndex \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"e0543403"},"content":"        invalidIndex.add(outOfBoundIndex);","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"e0543403"},"content":"        TagCommand tagCommand \u003d new TagCommand(invalidIndex, tag);","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":107,"author":{"gitId":"e0543403"},"content":"        assertCommandFailure(tagCommand, model,","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"e0543403"},"content":"                String.format(TagCommand.MESSAGE_OUT_OF_BOUNDS_INDEX_DISPLAYED, 2, 1));","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"e0543403"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"e0543403"},"content":"    public void execute_emptyList_failure() {","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"e0543403"},"content":"        model.updateFilteredPersonList(predicateNoPersons);","lastModifiedDate":"2021-10-20"},{"lineNumber":114,"author":{"gitId":"e0543403"},"content":"        Index outOfBoundIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-20"},{"lineNumber":115,"author":{"gitId":"e0543403"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"samyipsh"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getContactBook().getPersonList().size());","lastModifiedDate":"2021-11-05"},{"lineNumber":117,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":118,"author":{"gitId":"e0543403"},"content":"        List\u003cIndex\u003e invalidIndex \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"e0543403"},"content":"        invalidIndex.add(outOfBoundIndex);","lastModifiedDate":"2021-10-20"},{"lineNumber":120,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"e0543403"},"content":"        TagCommand tagCommand \u003d new TagCommand(invalidIndex, tag);","lastModifiedDate":"2021-10-23"},{"lineNumber":122,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"e0543403"},"content":"        assertCommandFailure(tagCommand, model,","lastModifiedDate":"2021-10-23"},{"lineNumber":124,"author":{"gitId":"e0543403"},"content":"                TagCommand.MESSAGE_NO_DISPLAYED_PERSONS);","lastModifiedDate":"2021-10-23"},{"lineNumber":125,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":126,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":127,"author":{"gitId":"e0543403"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":128,"author":{"gitId":"e0543403"},"content":"    public void equals() {","lastModifiedDate":"2021-10-16"},{"lineNumber":129,"author":{"gitId":"e0543403"},"content":"        List\u003cIndex\u003e firstIndex \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"e0543403"},"content":"        List\u003cIndex\u003e secondIndex \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":131,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":132,"author":{"gitId":"e0543403"},"content":"        firstIndex.add(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-19"},{"lineNumber":133,"author":{"gitId":"e0543403"},"content":"        secondIndex.add(INDEX_SECOND_PERSON);","lastModifiedDate":"2021-10-19"},{"lineNumber":134,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"e0543403"},"content":"        final TagCommand standardCommand \u003d new TagCommand(firstIndex, tag);","lastModifiedDate":"2021-10-23"},{"lineNumber":136,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":137,"author":{"gitId":"e0543403"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-16"},{"lineNumber":138,"author":{"gitId":"e0543403"},"content":"        TagCommand commandWithSameValues \u003d new TagCommand(firstIndex, tag);","lastModifiedDate":"2021-10-23"},{"lineNumber":139,"author":{"gitId":"e0543403"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-10-16"},{"lineNumber":140,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":141,"author":{"gitId":"e0543403"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-16"},{"lineNumber":142,"author":{"gitId":"e0543403"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-10-16"},{"lineNumber":143,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":144,"author":{"gitId":"e0543403"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":145,"author":{"gitId":"e0543403"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-10-16"},{"lineNumber":146,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":147,"author":{"gitId":"e0543403"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":148,"author":{"gitId":"e0543403"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2021-10-16"},{"lineNumber":149,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":150,"author":{"gitId":"e0543403"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":151,"author":{"gitId":"e0543403"},"content":"        assertFalse(standardCommand.equals(new TagCommand(secondIndex, tag)));","lastModifiedDate":"2021-10-23"},{"lineNumber":152,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":153,"author":{"gitId":"e0543403"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":154,"author":{"gitId":"e0543403"},"content":"        assertFalse(standardCommand.equals(new TagCommand(firstIndex, new Tag(\"gat\"))));","lastModifiedDate":"2021-10-23"},{"lineNumber":155,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":156,"author":{"gitId":"e0543403"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"samyipsh":7,"e0543403":149}},{"path":"src/test/java/seedu/address/logic/commands/UntagAllCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromewjj"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"jeromewjj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"jeromewjj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"jeromewjj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"jeromewjj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"jeromewjj"},"content":"import static seedu.address.logic.commands.UntagAllCommand.MESSAGE_TAG_NOT_EXIST;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"jeromewjj"},"content":"import static seedu.address.logic.commands.UntagAllCommand.MESSAGE_UNTAG_ALL_SUCCESS;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"jeromewjj"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"jeromewjj"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"samyipsh"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"jeromewjj"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"jeromewjj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.ContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.person.TagsPresentPredicate;","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"jeromewjj"},"content":"class UntagAllCommandTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"samyipsh"},"content":"    private Model model \u003d new ModelManager(getTypicalContactBook(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"jeromewjj"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"jeromewjj"},"content":"    void execute_tagPresent_success() {","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"jeromewjj"},"content":"        Tag friendTag \u003d new Tag(\"friends\");","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"jeromewjj"},"content":"        TagsPresentPredicate friendTagPredicate \u003d new TagsPresentPredicate(Arrays.asList(\"friends\"));","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"jeromewjj"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"jeromewjj"},"content":"        Person secondPerson \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"jeromewjj"},"content":"        Person forthPerson \u003d model.getFilteredPersonList().get(Index.fromOneBased(4).getZeroBased());","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"jeromewjj"},"content":"        Person firstUntaggedPerson \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"jeromewjj"},"content":"                .withEmail(\"alice@example.com\")","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"jeromewjj"},"content":"                .withPhone(\"94351253\")","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"jeromewjj"},"content":"                .withGithub(\"aliceio\")","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"jeromewjj"},"content":"                .withLinkedIn(\"https://www.linkedin.com/in/alice/\")","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"jeromewjj"},"content":"                .withDetail(\"Y1 CS\").build();","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"jeromewjj"},"content":"        Person secondUntaggedPerson \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"jeromewjj"},"content":"                .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"jeromewjj"},"content":"                .withGithub(\"bensonio\").withLinkedIn(\"https://www.linkedin.com/in/benson/\")","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"jeromewjj"},"content":"                .withDetail(\"Y2 CS\").withTags(\"owesMoney\").build();","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"jeromewjj"},"content":"        Person forthUntaggedPerson \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"jeromewjj"},"content":"                .withEmail(\"cornelia@example.com\").withGithub(\"danielio\")","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"jeromewjj"},"content":"                .withLinkedIn(\"https://www.linkedin.com/in/danya/\").build();","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"jeromewjj"},"content":"        UntagAllCommand untagAllCommand \u003d new UntagAllCommand(friendTag, friendTagPredicate);","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"samyipsh"},"content":"        Model expectedModel \u003d new ModelManager(new ContactBook(model.getContactBook()), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"jeromewjj"},"content":"        expectedModel.setPerson(firstPerson, firstUntaggedPerson);","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"jeromewjj"},"content":"        expectedModel.setPerson(secondPerson, secondUntaggedPerson);","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"jeromewjj"},"content":"        expectedModel.setPerson(forthPerson, forthUntaggedPerson);","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"jeromewjj"},"content":"        String expectedMessage \u003d String.format(MESSAGE_UNTAG_ALL_SUCCESS, friendTag);","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"jeromewjj"},"content":"        assertCommandSuccess(untagAllCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"jeromewjj"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"jeromewjj"},"content":"    void execute_tagNotFound_failure() {","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"jeromewjj"},"content":"        Tag enemyTag \u003d new Tag(\"enemy\");","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"jeromewjj"},"content":"        TagsPresentPredicate friendTagPredicate \u003d new TagsPresentPredicate(Arrays.asList(\"enemy\"));","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"jeromewjj"},"content":"        UntagAllCommand untagAllCommand \u003d new UntagAllCommand(enemyTag, friendTagPredicate);","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"jeromewjj"},"content":"        assertCommandFailure(untagAllCommand, model,","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"jeromewjj"},"content":"                String.format(MESSAGE_TAG_NOT_EXIST, enemyTag));","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"jeromewjj"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"jeromewjj"},"content":"    void testEquals() {","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"jeromewjj"},"content":"        Tag friendTag \u003d new Tag(\"friend\");","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"jeromewjj"},"content":"        Tag enemyTag \u003d new Tag(\"enemy\");","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"jeromewjj"},"content":"        TagsPresentPredicate friendTagPredicate \u003d new TagsPresentPredicate(Arrays.asList(\"friend\"));","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"jeromewjj"},"content":"        TagsPresentPredicate enemyTagPredicate \u003d new TagsPresentPredicate(Arrays.asList(\"enemy\"));","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"jeromewjj"},"content":"        final UntagAllCommand standardCommand \u003d new UntagAllCommand(friendTag, friendTagPredicate);","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"jeromewjj"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"jeromewjj"},"content":"        UntagAllCommand standardCommandCopy \u003d new UntagAllCommand(friendTag, friendTagPredicate);","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"jeromewjj"},"content":"        assertTrue(standardCommand.equals(standardCommandCopy));","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"jeromewjj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"jeromewjj"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"jeromewjj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"jeromewjj"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":99,"author":{"gitId":"jeromewjj"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-22"},{"lineNumber":100,"author":{"gitId":"jeromewjj"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2021-10-22"},{"lineNumber":101,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":102,"author":{"gitId":"jeromewjj"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2021-10-22"},{"lineNumber":103,"author":{"gitId":"jeromewjj"},"content":"        UntagAllCommand differentTagCommand \u003d new UntagAllCommand(enemyTag, enemyTagPredicate);","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"jeromewjj"},"content":"        assertFalse(standardCommand.equals(differentTagCommand));","lastModifiedDate":"2021-10-22"},{"lineNumber":105,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":106,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":107,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":108,"author":{"gitId":"jeromewjj"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"samyipsh":4,"jeromewjj":104}},{"path":"src/test/java/seedu/address/logic/commands/UntagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromewjj"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"jeromewjj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"jeromewjj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"jeromewjj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"jeromewjj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"jeromewjj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"jeromewjj"},"content":"import static seedu.address.logic.commands.UntagCommand.MESSAGE_UNTAG_PERSON_SUCCESS;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"jeromewjj"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"jeromewjj"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"samyipsh"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"jeromewjj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"jeromewjj"},"content":"import java.util.List;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"jeromewjj"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"jeromewjj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.ContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"jeromewjj"},"content":"class UntagCommandTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"samyipsh"},"content":"    private Model model \u003d new ModelManager(getTypicalContactBook(), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"jeromewjj"},"content":"    private Tag tag \u003d new Tag(\"tag\");","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"jeromewjj"},"content":"    private final Predicate\u003cPerson\u003e predicateNoPersons \u003d unused -\u003e false;","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"jeromewjj"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"jeromewjj"},"content":"    void execute_unfilteredList_success() {","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"jeromewjj"},"content":"        Tag untag \u003d new Tag(\"friends\");","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"jeromewjj"},"content":"        List\u003cIndex\u003e secondIndex \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"jeromewjj"},"content":"        secondIndex.add(INDEX_SECOND_PERSON);","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"jeromewjj"},"content":"        Person secondPerson \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"jeromewjj"},"content":"        Person untaggedPerson \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"jeromewjj"},"content":"                .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"jeromewjj"},"content":"                .withGithub(\"bensonio\").withLinkedIn(\"https://www.linkedin.com/in/benson/\")","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"jeromewjj"},"content":"                .withDetail(\"Y2 CS\").withTags(\"owesMoney\").build();","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"jeromewjj"},"content":"        UntagCommand untagCommand \u003d new UntagCommand(secondIndex, untag);","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"samyipsh"},"content":"        Model expectedModel \u003d new ModelManager(new ContactBook(model.getContactBook()), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"jeromewjj"},"content":"        expectedModel.setPerson(secondPerson, untaggedPerson);","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"jeromewjj"},"content":"        String expectedMessage \u003d String.format(MESSAGE_UNTAG_PERSON_SUCCESS, untag);","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"jeromewjj"},"content":"        assertCommandSuccess(untagCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"jeromewjj"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"jeromewjj"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"jeromewjj"},"content":"        Index indexSecondPerson \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"jeromewjj"},"content":"        showPersonAtIndex(model, indexSecondPerson);","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"jeromewjj"},"content":"        Tag untag \u003d new Tag(\"owesMoney\");","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"jeromewjj"},"content":"        List\u003cIndex\u003e firstIndex \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"jeromewjj"},"content":"        firstIndex.add(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"jeromewjj"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"jeromewjj"},"content":"        Person untaggedPerson \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"jeromewjj"},"content":"                .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"jeromewjj"},"content":"                .withGithub(\"bensonio\").withLinkedIn(\"https://www.linkedin.com/in/benson/\")","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"jeromewjj"},"content":"                .withDetail(\"Y2 CS\").withTags(\"friends\").build();","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"jeromewjj"},"content":"        UntagCommand untagCommand \u003d new UntagCommand(firstIndex, untag);","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"samyipsh"},"content":"        Model expectedModel \u003d new ModelManager(new ContactBook(model.getContactBook()), new UserPrefs());","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"jeromewjj"},"content":"        expectedModel.setPerson(firstPerson, untaggedPerson);","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"jeromewjj"},"content":"        showPersonAtIndex(expectedModel, indexSecondPerson);","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"jeromewjj"},"content":"        String expectedMessage \u003d String.format(MESSAGE_UNTAG_PERSON_SUCCESS, untag);","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"jeromewjj"},"content":"        assertCommandSuccess(untagCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"jeromewjj"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"jeromewjj"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"jeromewjj"},"content":"        int modelSize \u003d model.getFilteredPersonList().size();","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"jeromewjj"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(modelSize + 1);","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"jeromewjj"},"content":"        List\u003cIndex\u003e invalidIndex \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"jeromewjj"},"content":"        invalidIndex.add(outOfBoundIndex);","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"jeromewjj"},"content":"        UntagCommand untagCommand \u003d new UntagCommand(invalidIndex, tag);","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"jeromewjj"},"content":"        assertCommandFailure(untagCommand, model,","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"jeromewjj"},"content":"                String.format(UntagCommand.MESSAGE_OUT_OF_BOUNDS_INDEX_DISPLAYED, modelSize + 1, modelSize));","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":99,"author":{"gitId":"jeromewjj"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":100,"author":{"gitId":"jeromewjj"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2021-10-22"},{"lineNumber":101,"author":{"gitId":"jeromewjj"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-22"},{"lineNumber":102,"author":{"gitId":"jeromewjj"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-22"},{"lineNumber":103,"author":{"gitId":"jeromewjj"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-22"},{"lineNumber":104,"author":{"gitId":"samyipsh"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getContactBook().getPersonList().size());","lastModifiedDate":"2021-11-05"},{"lineNumber":105,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":106,"author":{"gitId":"jeromewjj"},"content":"        List\u003cIndex\u003e invalidIndex \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":107,"author":{"gitId":"jeromewjj"},"content":"        invalidIndex.add(outOfBoundIndex);","lastModifiedDate":"2021-10-22"},{"lineNumber":108,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":109,"author":{"gitId":"jeromewjj"},"content":"        UntagCommand untagCommand \u003d new UntagCommand(invalidIndex, tag);","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":111,"author":{"gitId":"jeromewjj"},"content":"        assertCommandFailure(untagCommand, model,","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"jeromewjj"},"content":"                String.format(UntagCommand.MESSAGE_OUT_OF_BOUNDS_INDEX_DISPLAYED, 2, 1));","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":114,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":115,"author":{"gitId":"jeromewjj"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":116,"author":{"gitId":"jeromewjj"},"content":"    public void execute_emptyList_failure() {","lastModifiedDate":"2021-10-22"},{"lineNumber":117,"author":{"gitId":"jeromewjj"},"content":"        model.updateFilteredPersonList(predicateNoPersons);","lastModifiedDate":"2021-10-22"},{"lineNumber":118,"author":{"gitId":"jeromewjj"},"content":"        Index outOfBoundIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-22"},{"lineNumber":119,"author":{"gitId":"jeromewjj"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-22"},{"lineNumber":120,"author":{"gitId":"samyipsh"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getContactBook().getPersonList().size());","lastModifiedDate":"2021-11-05"},{"lineNumber":121,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":122,"author":{"gitId":"jeromewjj"},"content":"        List\u003cIndex\u003e invalidIndex \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":123,"author":{"gitId":"jeromewjj"},"content":"        invalidIndex.add(outOfBoundIndex);","lastModifiedDate":"2021-10-22"},{"lineNumber":124,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":125,"author":{"gitId":"jeromewjj"},"content":"        UntagCommand untagCommand \u003d new UntagCommand(invalidIndex, tag);","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":127,"author":{"gitId":"jeromewjj"},"content":"        assertCommandFailure(untagCommand, model,","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"jeromewjj"},"content":"                UntagCommand.MESSAGE_NO_DISPLAYED_PERSONS);","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":130,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":131,"author":{"gitId":"jeromewjj"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":132,"author":{"gitId":"jeromewjj"},"content":"    public void execute_tagNotFound_failure() {","lastModifiedDate":"2021-11-07"},{"lineNumber":133,"author":{"gitId":"jeromewjj"},"content":"        Index indexSecondPerson \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-11-07"},{"lineNumber":134,"author":{"gitId":"jeromewjj"},"content":"        List\u003cIndex\u003e secondIndex \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-07"},{"lineNumber":135,"author":{"gitId":"jeromewjj"},"content":"        secondIndex.add(INDEX_SECOND_PERSON);","lastModifiedDate":"2021-11-07"},{"lineNumber":136,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":137,"author":{"gitId":"jeromewjj"},"content":"        UntagCommand untagCommand \u003d new UntagCommand(secondIndex, tag);","lastModifiedDate":"2021-11-07"},{"lineNumber":138,"author":{"gitId":"jeromewjj"},"content":"        assertCommandFailure(untagCommand, model,","lastModifiedDate":"2021-11-07"},{"lineNumber":139,"author":{"gitId":"jeromewjj"},"content":"                String.format(UntagCommand.MESSAGE_TAG_NOT_EXIST, tag));","lastModifiedDate":"2021-11-07"},{"lineNumber":140,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":141,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":142,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":143,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":144,"author":{"gitId":"jeromewjj"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":145,"author":{"gitId":"jeromewjj"},"content":"    void testEquals() {","lastModifiedDate":"2021-10-22"},{"lineNumber":146,"author":{"gitId":"jeromewjj"},"content":"        List\u003cIndex\u003e firstIndex \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":147,"author":{"gitId":"jeromewjj"},"content":"        List\u003cIndex\u003e secondIndex \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":148,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":149,"author":{"gitId":"jeromewjj"},"content":"        firstIndex.add(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-22"},{"lineNumber":150,"author":{"gitId":"jeromewjj"},"content":"        secondIndex.add(INDEX_SECOND_PERSON);","lastModifiedDate":"2021-10-22"},{"lineNumber":151,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":152,"author":{"gitId":"jeromewjj"},"content":"        final UntagCommand standardCommand \u003d new UntagCommand(firstIndex, tag);","lastModifiedDate":"2021-10-24"},{"lineNumber":153,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":154,"author":{"gitId":"jeromewjj"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-22"},{"lineNumber":155,"author":{"gitId":"jeromewjj"},"content":"        UntagCommand commandWithSameValues \u003d new UntagCommand(firstIndex, tag);","lastModifiedDate":"2021-10-24"},{"lineNumber":156,"author":{"gitId":"jeromewjj"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-10-22"},{"lineNumber":157,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":158,"author":{"gitId":"jeromewjj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-22"},{"lineNumber":159,"author":{"gitId":"jeromewjj"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-10-22"},{"lineNumber":160,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":161,"author":{"gitId":"jeromewjj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-22"},{"lineNumber":162,"author":{"gitId":"jeromewjj"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-10-22"},{"lineNumber":163,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":164,"author":{"gitId":"jeromewjj"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-22"},{"lineNumber":165,"author":{"gitId":"jeromewjj"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2021-10-22"},{"lineNumber":166,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":167,"author":{"gitId":"jeromewjj"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-10-22"},{"lineNumber":168,"author":{"gitId":"jeromewjj"},"content":"        assertFalse(standardCommand.equals(new UntagCommand(secondIndex, tag)));","lastModifiedDate":"2021-10-24"},{"lineNumber":169,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":170,"author":{"gitId":"jeromewjj"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2021-10-22"},{"lineNumber":171,"author":{"gitId":"jeromewjj"},"content":"        assertFalse(standardCommand.equals(new UntagCommand(firstIndex, new Tag(\"gat\"))));","lastModifiedDate":"2021-10-24"},{"lineNumber":172,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":173,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":174,"author":{"gitId":"jeromewjj"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"samyipsh":7,"jeromewjj":167}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"DystoriaX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DETAIL_DESC_AMY;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"DystoriaX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DETAIL_DESC_BOB;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"samyipsh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GITHUB_DESC_AMY;","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"samyipsh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GITHUB_DESC_BOB;","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"samyipsh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GITHUB_DESC;","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"CommanderW324"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_LINKEDIN_DESC;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"CommanderW324"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LINKEDIN_DESC_AMY;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"CommanderW324"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LINKEDIN_DESC_BOB;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"DystoriaX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"DystoriaX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GITHUB_AMY;","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"DystoriaX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LINKEDIN_AMY;","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"DystoriaX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"DystoriaX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.person.Github;","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"CommanderW324"},"content":"import seedu.address.model.person.LinkedIn;","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"DystoriaX"},"content":"                + GITHUB_DESC_BOB + LINKEDIN_DESC_BOB + DETAIL_DESC_BOB","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"jeromewjj"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-09-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"DystoriaX"},"content":"                + GITHUB_DESC_BOB + LINKEDIN_DESC_BOB + DETAIL_DESC_BOB","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"jeromewjj"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"DystoriaX"},"content":"                + GITHUB_DESC_BOB + LINKEDIN_DESC_BOB + DETAIL_DESC_BOB","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"jeromewjj"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-09-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":77,"author":{"gitId":"DystoriaX"},"content":"                + GITHUB_DESC_BOB + LINKEDIN_DESC_BOB + DETAIL_DESC_BOB","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"jeromewjj"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-09-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"jeromewjj"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-09-30"},{"lineNumber":82,"author":{"gitId":"DystoriaX"},"content":"                + GITHUB_DESC_BOB + LINKEDIN_DESC_BOB + DETAIL_DESC_BOB","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"CommanderW324"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":85,"author":{"gitId":"samyipsh"},"content":"        // multiple github - last github accepted","lastModifiedDate":"2021-09-30"},{"lineNumber":86,"author":{"gitId":"jeromewjj"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"DystoriaX"},"content":"                + GITHUB_DESC_AMY + GITHUB_DESC_BOB + LINKEDIN_DESC_BOB + DETAIL_DESC_BOB","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"jeromewjj"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2021-09-30"},{"lineNumber":89,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"DystoriaX"},"content":"        // multiple detail - last detail accepted","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"DystoriaX"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + GITHUB_DESC_BOB","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"DystoriaX"},"content":"                + LINKEDIN_DESC_BOB + DETAIL_DESC_AMY + DETAIL_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"DystoriaX"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":98,"author":{"gitId":"jeromewjj"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-09-30"},{"lineNumber":99,"author":{"gitId":"DystoriaX"},"content":"                + GITHUB_DESC_BOB + LINKEDIN_DESC_BOB + DETAIL_DESC_BOB","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2017-12-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"DystoriaX"},"content":"        Person expectedZeroTagPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"DystoriaX"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"DystoriaX"},"content":"                + GITHUB_DESC_AMY + LINKEDIN_DESC_AMY + DETAIL_DESC_AMY, new AddCommand(expectedZeroTagPerson));","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":110,"author":{"gitId":"DystoriaX"},"content":"        // no detail","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"DystoriaX"},"content":"        Person expectedNoDetailPerson \u003d new PersonBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"DystoriaX"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"DystoriaX"},"content":"                .withGithub(VALID_GITHUB_AMY).withLinkedIn(VALID_LINKEDIN_AMY)","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"DystoriaX"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"jeromewjj"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"DystoriaX"},"content":"                + GITHUB_DESC_AMY + LINKEDIN_DESC_AMY + TAG_DESC_FRIEND, new AddCommand(expectedNoDetailPerson));","lastModifiedDate":"2021-10-06"},{"lineNumber":118,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":119,"author":{"gitId":"jeromewjj"},"content":"        // only name","lastModifiedDate":"2021-10-22"},{"lineNumber":120,"author":{"gitId":"jeromewjj"},"content":"        Person onlyNamePerson \u003d new PersonBuilder().withName(VALID_NAME_AMY).withEmptyPhone()","lastModifiedDate":"2021-10-22"},{"lineNumber":121,"author":{"gitId":"jeromewjj"},"content":"                .withEmptyEmail().withEmptyGithub().withEmptyLinkedin().build();","lastModifiedDate":"2021-10-22"},{"lineNumber":122,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":123,"author":{"gitId":"jeromewjj"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY, new AddCommand(onlyNamePerson));","lastModifiedDate":"2021-10-22"},{"lineNumber":124,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":125,"author":{"gitId":"jeromewjj"},"content":"        // no phone","lastModifiedDate":"2021-10-22"},{"lineNumber":126,"author":{"gitId":"jeromewjj"},"content":"        Person expectedNoPhonePerson \u003d new PersonBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-10-22"},{"lineNumber":127,"author":{"gitId":"jeromewjj"},"content":"                .withEmptyPhone().withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2021-10-22"},{"lineNumber":128,"author":{"gitId":"jeromewjj"},"content":"                .withGithub(VALID_GITHUB_AMY).withLinkedIn(VALID_LINKEDIN_AMY)","lastModifiedDate":"2021-10-22"},{"lineNumber":129,"author":{"gitId":"jeromewjj"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":130,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":131,"author":{"gitId":"jeromewjj"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-10-22"},{"lineNumber":132,"author":{"gitId":"jeromewjj"},"content":"                + GITHUB_DESC_AMY + LINKEDIN_DESC_AMY + TAG_DESC_FRIEND, new AddCommand(expectedNoPhonePerson));","lastModifiedDate":"2021-10-22"},{"lineNumber":133,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":134,"author":{"gitId":"jeromewjj"},"content":"        // no email","lastModifiedDate":"2021-10-22"},{"lineNumber":135,"author":{"gitId":"jeromewjj"},"content":"        Person expectedNoEmailPerson \u003d new PersonBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-10-22"},{"lineNumber":136,"author":{"gitId":"jeromewjj"},"content":"                .withPhone(VALID_PHONE_AMY).withEmptyEmail()","lastModifiedDate":"2021-10-22"},{"lineNumber":137,"author":{"gitId":"jeromewjj"},"content":"                .withGithub(VALID_GITHUB_AMY).withLinkedIn(VALID_LINKEDIN_AMY)","lastModifiedDate":"2021-10-22"},{"lineNumber":138,"author":{"gitId":"jeromewjj"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":139,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":140,"author":{"gitId":"jeromewjj"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2021-10-22"},{"lineNumber":141,"author":{"gitId":"jeromewjj"},"content":"                + GITHUB_DESC_AMY + LINKEDIN_DESC_AMY + TAG_DESC_FRIEND, new AddCommand(expectedNoEmailPerson));","lastModifiedDate":"2021-10-22"},{"lineNumber":142,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":143,"author":{"gitId":"jeromewjj"},"content":"        // no github","lastModifiedDate":"2021-10-22"},{"lineNumber":144,"author":{"gitId":"jeromewjj"},"content":"        Person expectedNoGithubPerson \u003d new PersonBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-10-22"},{"lineNumber":145,"author":{"gitId":"jeromewjj"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2021-10-22"},{"lineNumber":146,"author":{"gitId":"jeromewjj"},"content":"                .withEmptyGithub().withLinkedIn(VALID_LINKEDIN_AMY)","lastModifiedDate":"2021-10-22"},{"lineNumber":147,"author":{"gitId":"jeromewjj"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":148,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":149,"author":{"gitId":"jeromewjj"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-10-22"},{"lineNumber":150,"author":{"gitId":"jeromewjj"},"content":"                + LINKEDIN_DESC_AMY + TAG_DESC_FRIEND, new AddCommand(expectedNoGithubPerson));","lastModifiedDate":"2021-10-22"},{"lineNumber":151,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":152,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":153,"author":{"gitId":"jeromewjj"},"content":"        // no linkedin","lastModifiedDate":"2021-10-22"},{"lineNumber":154,"author":{"gitId":"jeromewjj"},"content":"        Person expectedNoLinkedinPerson \u003d new PersonBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-10-22"},{"lineNumber":155,"author":{"gitId":"jeromewjj"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2021-10-22"},{"lineNumber":156,"author":{"gitId":"jeromewjj"},"content":"                .withGithub(VALID_GITHUB_AMY).withEmptyLinkedin()","lastModifiedDate":"2021-10-22"},{"lineNumber":157,"author":{"gitId":"jeromewjj"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":158,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":159,"author":{"gitId":"jeromewjj"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-10-22"},{"lineNumber":160,"author":{"gitId":"jeromewjj"},"content":"                + GITHUB_DESC_AMY + TAG_DESC_FRIEND, new AddCommand(expectedNoLinkedinPerson));","lastModifiedDate":"2021-10-22"},{"lineNumber":161,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":169,"author":{"gitId":"jeromewjj"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB,","lastModifiedDate":"2021-09-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":173,"author":{"gitId":"jeromewjj"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB,","lastModifiedDate":"2021-09-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":180,"author":{"gitId":"jeromewjj"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-09-30"},{"lineNumber":181,"author":{"gitId":"CommanderW324"},"content":"                + GITHUB_DESC_BOB + LINKEDIN_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":184,"author":{"gitId":"jeromewjj"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB","lastModifiedDate":"2021-09-30"},{"lineNumber":185,"author":{"gitId":"CommanderW324"},"content":"                + GITHUB_DESC_BOB + LINKEDIN_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":188,"author":{"gitId":"jeromewjj"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC","lastModifiedDate":"2021-09-30"},{"lineNumber":189,"author":{"gitId":"CommanderW324"},"content":"                + GITHUB_DESC_BOB + LINKEDIN_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":190,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":191,"author":{"gitId":"samyipsh"},"content":"        // invalid github","lastModifiedDate":"2021-09-30"},{"lineNumber":192,"author":{"gitId":"jeromewjj"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-06"},{"lineNumber":193,"author":{"gitId":"CommanderW324"},"content":"                + INVALID_GITHUB_DESC + LINKEDIN_DESC_BOB","lastModifiedDate":"2021-10-06"},{"lineNumber":194,"author":{"gitId":"CommanderW324"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Github.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":196,"author":{"gitId":"CommanderW324"},"content":"        //invalid linkedin","lastModifiedDate":"2021-10-06"},{"lineNumber":197,"author":{"gitId":"jeromewjj"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-06"},{"lineNumber":198,"author":{"gitId":"CommanderW324"},"content":"                + GITHUB_DESC_BOB + INVALID_LINKEDIN_DESC","lastModifiedDate":"2021-10-06"},{"lineNumber":199,"author":{"gitId":"CommanderW324"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, LinkedIn.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":202,"author":{"gitId":"jeromewjj"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-09-30"},{"lineNumber":203,"author":{"gitId":"CommanderW324"},"content":"                + GITHUB_DESC_BOB + LINKEDIN_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":206,"author":{"gitId":"jeromewjj"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-06"},{"lineNumber":207,"author":{"gitId":"CommanderW324"},"content":"                + GITHUB_DESC_BOB + LINKEDIN_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":211,"author":{"gitId":"jeromewjj"},"content":"                + GITHUB_DESC_BOB + LINKEDIN_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-10-06"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"samyipsh":8,"CommanderW324":15,"jeromewjj":63,"-":98,"DystoriaX":30}},{"path":"src/test/java/seedu/address/logic/parser/AliasCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DystoriaX"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"DystoriaX"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"DystoriaX"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"DystoriaX"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"DystoriaX"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"DystoriaX"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"DystoriaX"},"content":"import seedu.address.logic.commands.AliasCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"DystoriaX"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"DystoriaX"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"DystoriaX"},"content":"import seedu.address.logic.commands.TagAllCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"DystoriaX"},"content":"class AliasCommandParserTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"DystoriaX"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"DystoriaX"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, AliasCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"DystoriaX"},"content":"    private static final String ALIAS_NO_SPACE \u003d \"myalias\";","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"DystoriaX"},"content":"    private static final String ALIAS_WITH_SPACES \u003d \"oh my alias\";","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"DystoriaX"},"content":"    private static final String INVALID_COMMAND \u003d \"nonexist\";","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"DystoriaX"},"content":"    private AliasCommandParser parser \u003d new AliasCommandParser();","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"DystoriaX"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"DystoriaX"},"content":"    void parse_missingParts_failure() {","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"DystoriaX"},"content":"        // Empty arguments","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"DystoriaX"},"content":"        assertParseFailure(parser, \" \", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"DystoriaX"},"content":"        // Missing alias","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"DystoriaX"},"content":"        assertParseFailure(parser, EditCommand.COMMAND_WORD, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"DystoriaX"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"DystoriaX"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"DystoriaX"},"content":"    void parse_invalidCommandWord_failure() {","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"DystoriaX"},"content":"        assertParseFailure(parser, INVALID_COMMAND + \" \" + ALIAS_WITH_SPACES,","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"DystoriaX"},"content":"                String.format(AliasCommandParser.MESSAGE_INVALID_COMMAND_ALIAS, INVALID_COMMAND));","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"DystoriaX"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"DystoriaX"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"DystoriaX"},"content":"    void parse_aliasNoSpace_success() {","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"DystoriaX"},"content":"        assertParseSuccess(parser, EditCommand.COMMAND_WORD + \" \" + ALIAS_NO_SPACE,","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"DystoriaX"},"content":"                new AliasCommand(ALIAS_NO_SPACE, EditCommand.COMMAND_WORD));","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"DystoriaX"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"DystoriaX"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"DystoriaX"},"content":"    void parse_aliasWithSpace_success() {","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"DystoriaX"},"content":"        assertParseSuccess(parser, TagAllCommand.COMMAND_WORD + \" \" + ALIAS_WITH_SPACES,","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"DystoriaX"},"content":"                new AliasCommand(ALIAS_WITH_SPACES, TagAllCommand.COMMAND_WORD));","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"DystoriaX"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"DystoriaX"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"DystoriaX"},"content":"    void parse_allValidCommands_success() {","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"DystoriaX"},"content":"        List\u003cString\u003e existingCommandWords \u003d Command.getExistingCommandWords();","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"DystoriaX"},"content":"        for (String commandWord : existingCommandWords) {","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"DystoriaX"},"content":"            String userInput \u003d commandWord + \" \" + ALIAS_WITH_SPACES;","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"DystoriaX"},"content":"            AliasCommand expectedCommand \u003d new AliasCommand(ALIAS_WITH_SPACES, commandWord);","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"DystoriaX"},"content":"            assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"DystoriaX"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"DystoriaX"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"DystoriaX"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"DystoriaX":65}},{"path":"src/test/java/seedu/address/logic/parser/ContactBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"e0543403"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"jeromewjj"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"jeromewjj"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"DystoriaX"},"content":"import seedu.address.logic.commands.AliasCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.logic.commands.ReplaceTagCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"CommanderW324"},"content":"import seedu.address.logic.commands.ShowCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"DystoriaX"},"content":"import seedu.address.logic.commands.ShowTagsCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"e0543403"},"content":"import seedu.address.logic.commands.TagAllCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"e0543403"},"content":"import seedu.address.logic.commands.TagCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.logic.commands.UntagAllCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.logic.commands.UntagCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"DystoriaX"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"DystoriaX"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"e0543403"},"content":"import seedu.address.model.person.FoundInNameOrTagsPredicate;","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.person.TagsPresentPredicate;","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"samyipsh"},"content":"public class ContactBookParserTest {","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"samyipsh"},"content":"    private final ContactBookParser parser \u003d new ContactBookParser(new ModelManager());","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"e0543403"},"content":"        assertEquals(new FindCommand(new FoundInNameOrTagsPredicate(keywords)), command);","lastModifiedDate":"2021-11-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"e0543403"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"e0543403"},"content":"    public void parseCommand_addTag() throws Exception {","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"e0543403"},"content":"        List\u003cIndex\u003e firstIndex \u003d Arrays.asList(INDEX_FIRST_PERSON, INDEX_SECOND_PERSON);","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"e0543403"},"content":"        String validTagName \u003d \"programmer\";","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"e0543403"},"content":"        Tag tag \u003d ParserUtil.parseTag(validTagName);","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"e0543403"},"content":"        TagCommand command \u003d (TagCommand) parser.parseCommand(","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"e0543403"},"content":"                TagCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"e0543403"},"content":"                        + \" \" + INDEX_SECOND_PERSON.getOneBased() + \" \" + validTagName);","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"e0543403"},"content":"        assertEquals(new TagCommand(firstIndex, tag), command);","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"jeromewjj"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":107,"author":{"gitId":"jeromewjj"},"content":"    public void parseCommand_untag() throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"jeromewjj"},"content":"        List\u003cIndex\u003e firstIndex \u003d Arrays.asList(INDEX_FIRST_PERSON, INDEX_SECOND_PERSON);","lastModifiedDate":"2021-10-22"},{"lineNumber":109,"author":{"gitId":"jeromewjj"},"content":"        String validTagName \u003d \"programmer\";","lastModifiedDate":"2021-10-22"},{"lineNumber":110,"author":{"gitId":"jeromewjj"},"content":"        Tag tag \u003d ParserUtil.parseTag(validTagName);","lastModifiedDate":"2021-10-22"},{"lineNumber":111,"author":{"gitId":"jeromewjj"},"content":"        UntagCommand command \u003d (UntagCommand) parser.parseCommand(","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"jeromewjj"},"content":"                UntagCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"jeromewjj"},"content":"                        + \" \" + INDEX_SECOND_PERSON.getOneBased() + \" \" + validTagName);","lastModifiedDate":"2021-10-22"},{"lineNumber":114,"author":{"gitId":"jeromewjj"},"content":"        assertEquals(new UntagCommand(firstIndex, tag), command);","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":116,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":117,"author":{"gitId":"jeromewjj"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":118,"author":{"gitId":"jeromewjj"},"content":"    public void parseCommand_untagAll() throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"jeromewjj"},"content":"        String validTagName \u003d \"programmer\";","lastModifiedDate":"2021-10-22"},{"lineNumber":120,"author":{"gitId":"jeromewjj"},"content":"        Tag tag \u003d ParserUtil.parseTag(validTagName);","lastModifiedDate":"2021-10-22"},{"lineNumber":121,"author":{"gitId":"jeromewjj"},"content":"        TagsPresentPredicate predicate \u003d new TagsPresentPredicate(Collections.singletonList(validTagName));","lastModifiedDate":"2021-10-22"},{"lineNumber":122,"author":{"gitId":"jeromewjj"},"content":"        UntagAllCommand command \u003d (UntagAllCommand) parser.parseCommand(","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"jeromewjj"},"content":"                UntagAllCommand.COMMAND_WORD + \" \" + validTagName);","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"jeromewjj"},"content":"        assertEquals(new UntagAllCommand(tag, predicate), command);","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":126,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":127,"author":{"gitId":"jeromewjj"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":128,"author":{"gitId":"jeromewjj"},"content":"    public void parseCommand_replaceTag() throws Exception {","lastModifiedDate":"2021-10-22"},{"lineNumber":129,"author":{"gitId":"jeromewjj"},"content":"        String validDeleteTagName \u003d \"noob\";","lastModifiedDate":"2021-10-22"},{"lineNumber":130,"author":{"gitId":"jeromewjj"},"content":"        String validAddTagName \u003d \"programmer\";","lastModifiedDate":"2021-10-22"},{"lineNumber":131,"author":{"gitId":"jeromewjj"},"content":"        Tag deleteTag \u003d ParserUtil.parseTag(validDeleteTagName);","lastModifiedDate":"2021-10-22"},{"lineNumber":132,"author":{"gitId":"jeromewjj"},"content":"        Tag addTag \u003d ParserUtil.parseTag(validAddTagName);","lastModifiedDate":"2021-10-22"},{"lineNumber":133,"author":{"gitId":"jeromewjj"},"content":"        TagsPresentPredicate predicate \u003d new TagsPresentPredicate(Collections.singletonList(validDeleteTagName));","lastModifiedDate":"2021-10-22"},{"lineNumber":134,"author":{"gitId":"jeromewjj"},"content":"        ReplaceTagCommand command \u003d (ReplaceTagCommand) parser.parseCommand(","lastModifiedDate":"2021-10-22"},{"lineNumber":135,"author":{"gitId":"jeromewjj"},"content":"                ReplaceTagCommand.COMMAND_WORD + \" \" + validDeleteTagName + \" \" + validAddTagName);","lastModifiedDate":"2021-10-22"},{"lineNumber":136,"author":{"gitId":"jeromewjj"},"content":"        assertEquals(new ReplaceTagCommand(deleteTag, addTag, predicate), command);","lastModifiedDate":"2021-10-22"},{"lineNumber":137,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":138,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":150,"author":{"gitId":"CommanderW324"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":151,"author":{"gitId":"CommanderW324"},"content":"    public void parseCommand_show() throws Exception {","lastModifiedDate":"2021-10-26"},{"lineNumber":152,"author":{"gitId":"CommanderW324"},"content":"        ShowCommand command \u003d (ShowCommand) parser.parseCommand(","lastModifiedDate":"2021-10-26"},{"lineNumber":153,"author":{"gitId":"CommanderW324"},"content":"                ShowCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2021-10-26"},{"lineNumber":154,"author":{"gitId":"CommanderW324"},"content":"        assertEquals(new ShowCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2021-10-26"},{"lineNumber":155,"author":{"gitId":"CommanderW324"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":157,"author":{"gitId":"e0543403"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"e0543403"},"content":"    public void parseCommand_addAllTag() throws Exception {","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"e0543403"},"content":"        TagAllCommand command \u003d (TagAllCommand) parser.parseCommand(","lastModifiedDate":"2021-10-23"},{"lineNumber":160,"author":{"gitId":"e0543403"},"content":"                TagAllCommand.COMMAND_WORD + \" \" + VALID_TAG_HUSBAND);","lastModifiedDate":"2021-10-23"},{"lineNumber":161,"author":{"gitId":"e0543403"},"content":"        assertEquals(new TagAllCommand(ParserUtil.parseTag(VALID_TAG_HUSBAND)), command);","lastModifiedDate":"2021-10-23"},{"lineNumber":162,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"DystoriaX"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":165,"author":{"gitId":"DystoriaX"},"content":"    public void parseCommand_showtags() throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":166,"author":{"gitId":"DystoriaX"},"content":"        assertTrue(parser.parseCommand(ShowTagsCommand.COMMAND_WORD) instanceof ShowTagsCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":167,"author":{"gitId":"DystoriaX"},"content":"        assertTrue(parser.parseCommand(ShowTagsCommand.COMMAND_WORD + \" 3\") instanceof ShowTagsCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":168,"author":{"gitId":"DystoriaX"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":169,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":170,"author":{"gitId":"DystoriaX"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":171,"author":{"gitId":"DystoriaX"},"content":"    public void parseCommand_alias() throws Exception {","lastModifiedDate":"2021-10-26"},{"lineNumber":172,"author":{"gitId":"DystoriaX"},"content":"        String alias \u003d \"tag -A\";","lastModifiedDate":"2021-10-26"},{"lineNumber":173,"author":{"gitId":"DystoriaX"},"content":"        String command \u003d TagAllCommand.COMMAND_WORD;","lastModifiedDate":"2021-10-26"},{"lineNumber":174,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":175,"author":{"gitId":"DystoriaX"},"content":"        assertEquals(parser.parseCommand(AliasCommand.COMMAND_WORD + \" \" + command + \" \" + alias),","lastModifiedDate":"2021-10-26"},{"lineNumber":176,"author":{"gitId":"DystoriaX"},"content":"                new AliasCommand(alias, command));","lastModifiedDate":"2021-10-26"},{"lineNumber":177,"author":{"gitId":"DystoriaX"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":178,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":189,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":190,"author":{"gitId":"DystoriaX"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":191,"author":{"gitId":"DystoriaX"},"content":"    public void replaceAlias() {","lastModifiedDate":"2021-11-03"},{"lineNumber":192,"author":{"gitId":"DystoriaX"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2021-11-03"},{"lineNumber":193,"author":{"gitId":"DystoriaX"},"content":"        model.addAlias(\"h\", \"help\");","lastModifiedDate":"2021-11-03"},{"lineNumber":194,"author":{"gitId":"DystoriaX"},"content":"        model.addAlias(\"ta\", \"tagall\");","lastModifiedDate":"2021-11-03"},{"lineNumber":195,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":196,"author":{"gitId":"samyipsh"},"content":"        ContactBookParser parser \u003d new ContactBookParser(model);","lastModifiedDate":"2021-11-05"},{"lineNumber":197,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":198,"author":{"gitId":"DystoriaX"},"content":"        // EP: no-param commands","lastModifiedDate":"2021-11-03"},{"lineNumber":199,"author":{"gitId":"DystoriaX"},"content":"        assertEquals(\"help\", parser.replaceAlias(\"h\"));","lastModifiedDate":"2021-11-03"},{"lineNumber":200,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":201,"author":{"gitId":"DystoriaX"},"content":"        // EP: param commands","lastModifiedDate":"2021-11-03"},{"lineNumber":202,"author":{"gitId":"DystoriaX"},"content":"        assertEquals(\"tagall os\", parser.replaceAlias(\"ta os\"));","lastModifiedDate":"2021-11-03"},{"lineNumber":203,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":204,"author":{"gitId":"DystoriaX"},"content":"        // EP: matching substring (not whole string) that matches at index 0","lastModifiedDate":"2021-11-03"},{"lineNumber":205,"author":{"gitId":"DystoriaX"},"content":"        assertEquals(\"taga\", parser.replaceAlias(\"taga\"));","lastModifiedDate":"2021-11-03"},{"lineNumber":206,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":207,"author":{"gitId":"DystoriaX"},"content":"        // EP: matching word whose matching index !\u003d 0","lastModifiedDate":"2021-11-03"},{"lineNumber":208,"author":{"gitId":"DystoriaX"},"content":"        assertEquals(\"tagall ta\", parser.replaceAlias(\"tagall ta\"));","lastModifiedDate":"2021-11-03"},{"lineNumber":209,"author":{"gitId":"DystoriaX"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"samyipsh":3,"e0543403":23,"CommanderW324":7,"jeromewjj":41,"-":97,"DystoriaX":39}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"DystoriaX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DETAIL_DESC_AMY;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"DystoriaX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GITHUB_DESC_AMY;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"DystoriaX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DETAIL_AMY;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"DystoriaX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GITHUB_AMY;","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"DystoriaX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DETAIL;","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"DystoriaX"},"content":"    private static final String DETAIL_EMPTY \u003d \" \" + PREFIX_DETAIL;","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"jeromewjj"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_PHONE_AMY,","lastModifiedDate":"2021-09-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":111,"author":{"gitId":"DystoriaX"},"content":"                + EMAIL_DESC_AMY + NAME_DESC_AMY + GITHUB_DESC_AMY + DETAIL_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"jeromewjj"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2021-09-30"},{"lineNumber":115,"author":{"gitId":"DystoriaX"},"content":"                .withGithub(VALID_GITHUB_AMY).withDetail(VALID_DETAIL_AMY)","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":165,"author":{"gitId":"jeromewjj"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-09-30"},{"lineNumber":166,"author":{"gitId":"jeromewjj"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2021-09-30"},{"lineNumber":167,"author":{"gitId":"jeromewjj"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2021-09-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"jeromewjj"},"content":"                .withEmail(VALID_EMAIL_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2021-09-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"jeromewjj"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2021-09-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"jeromewjj"},"content":"                .build();","lastModifiedDate":"2021-09-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"DystoriaX"},"content":"    public void parse_emptyDetail_success() {","lastModifiedDate":"2021-10-06"},{"lineNumber":196,"author":{"gitId":"DystoriaX"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-06"},{"lineNumber":197,"author":{"gitId":"DystoriaX"},"content":"        String userInput \u003d targetIndex.getOneBased() + DETAIL_EMPTY;","lastModifiedDate":"2021-10-06"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"DystoriaX"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withDetail(\"\").build();","lastModifiedDate":"2021-10-06"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-06"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"jeromewjj":8,"-":194,"DystoriaX":13}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"e0543403"},"content":"import seedu.address.model.person.FoundInNameOrTagsPredicate;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"e0543403"},"content":"                new FindCommand(new FoundInNameOrTagsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"e0543403":2,"-":32}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.person.Detail;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.person.Github;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.person.LinkedIn;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"jeromewjj"},"content":"    private static final String INVALID_GITHUB \u003d \"sam--yipsh\";","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"jeromewjj"},"content":"    private static final String INVALID_LINKEDIN \u003d \"google.com/hello\";","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"jeromewjj"},"content":"    private static final String VALID_GITHUB \u003d \"rachwalk\";","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"jeromewjj"},"content":"    private static final String VALID_LINKEDIN \u003d \"https://www.linkedin.com/in/rachelwalker/\";","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"jeromewjj"},"content":"    private static final String VALID_DETAIL \u003d \"OMG!! RACHEL IS CRAZY!!!\";","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":42,"author":{"gitId":"jeromewjj"},"content":"    private static final String EMPTY_PHONE \u003d \"\";","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"jeromewjj"},"content":"    private static final String EMPTY_EMAIL \u003d \"\";","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"jeromewjj"},"content":"    private static final String EMPTY_GITHUB \u003d \"\";","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"jeromewjj"},"content":"    private static final String EMPTY_LINKEDIN \u003d \"\";","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"jeromewjj"},"content":"    public void parsePhone_validEmptyValue_returnsEmptyPhone() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"jeromewjj"},"content":"        Phone emptyPhone \u003d Phone.getEmptyPhone();","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"jeromewjj"},"content":"        assertEquals(emptyPhone, ParserUtil.parsePhone(EMPTY_PHONE));","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"jeromewjj"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":147,"author":{"gitId":"jeromewjj"},"content":"    public void parseEmail_validEmptyValue_returnsEmptyEmail() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":148,"author":{"gitId":"jeromewjj"},"content":"        Email emptyEmail \u003d Email.getEmptyEmail();","lastModifiedDate":"2021-10-11"},{"lineNumber":149,"author":{"gitId":"jeromewjj"},"content":"        assertEquals(emptyEmail, ParserUtil.parseEmail(EMPTY_EMAIL));","lastModifiedDate":"2021-10-11"},{"lineNumber":150,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":151,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":152,"author":{"gitId":"jeromewjj"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":153,"author":{"gitId":"jeromewjj"},"content":"    public void parseGithub_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":154,"author":{"gitId":"jeromewjj"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseGithub((String) null));","lastModifiedDate":"2021-10-11"},{"lineNumber":155,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":156,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":157,"author":{"gitId":"jeromewjj"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":158,"author":{"gitId":"jeromewjj"},"content":"    public void parseGithub_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":159,"author":{"gitId":"jeromewjj"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseGithub(INVALID_GITHUB));","lastModifiedDate":"2021-10-11"},{"lineNumber":160,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":161,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":162,"author":{"gitId":"jeromewjj"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":163,"author":{"gitId":"jeromewjj"},"content":"    public void parseGithub_validValueWithoutWhitespace_returnsGithub() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":164,"author":{"gitId":"jeromewjj"},"content":"        Github expectedGithub \u003d new Github(VALID_GITHUB);","lastModifiedDate":"2021-10-11"},{"lineNumber":165,"author":{"gitId":"jeromewjj"},"content":"        assertEquals(expectedGithub, ParserUtil.parseGithub(VALID_GITHUB));","lastModifiedDate":"2021-10-11"},{"lineNumber":166,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":167,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":168,"author":{"gitId":"jeromewjj"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":169,"author":{"gitId":"jeromewjj"},"content":"    public void parseGithub_validValueWithWhitespace_returnsTrimmedGithub() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":170,"author":{"gitId":"jeromewjj"},"content":"        String githubWithWhitespace \u003d WHITESPACE + VALID_GITHUB + WHITESPACE;","lastModifiedDate":"2021-10-11"},{"lineNumber":171,"author":{"gitId":"jeromewjj"},"content":"        Github expectedGithub \u003d new Github(VALID_GITHUB);","lastModifiedDate":"2021-10-11"},{"lineNumber":172,"author":{"gitId":"jeromewjj"},"content":"        assertEquals(expectedGithub, ParserUtil.parseGithub(githubWithWhitespace));","lastModifiedDate":"2021-10-11"},{"lineNumber":173,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":174,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":175,"author":{"gitId":"jeromewjj"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":176,"author":{"gitId":"jeromewjj"},"content":"    public void parseGithub_validEmptyValue_returnsEmptyGithub() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":177,"author":{"gitId":"jeromewjj"},"content":"        Github emptyGithub \u003d Github.getEmptyGithub();","lastModifiedDate":"2021-10-11"},{"lineNumber":178,"author":{"gitId":"jeromewjj"},"content":"        assertEquals(emptyGithub, ParserUtil.parseGithub(EMPTY_GITHUB));","lastModifiedDate":"2021-10-11"},{"lineNumber":179,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":180,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":181,"author":{"gitId":"jeromewjj"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":182,"author":{"gitId":"jeromewjj"},"content":"    public void parseLinkedIn_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":183,"author":{"gitId":"jeromewjj"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseLinkedIn((String) null));","lastModifiedDate":"2021-10-11"},{"lineNumber":184,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":185,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":186,"author":{"gitId":"jeromewjj"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":187,"author":{"gitId":"jeromewjj"},"content":"    public void parseLinkedIn_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":188,"author":{"gitId":"jeromewjj"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseLinkedIn(INVALID_LINKEDIN));","lastModifiedDate":"2021-10-11"},{"lineNumber":189,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":190,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":191,"author":{"gitId":"jeromewjj"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":192,"author":{"gitId":"jeromewjj"},"content":"    public void parseLinkedIn_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":193,"author":{"gitId":"jeromewjj"},"content":"        LinkedIn expectedLinkedIn \u003d new LinkedIn(VALID_LINKEDIN);","lastModifiedDate":"2021-10-11"},{"lineNumber":194,"author":{"gitId":"jeromewjj"},"content":"        assertEquals(expectedLinkedIn, ParserUtil.parseLinkedIn(VALID_LINKEDIN));","lastModifiedDate":"2021-10-11"},{"lineNumber":195,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":196,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":197,"author":{"gitId":"jeromewjj"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":198,"author":{"gitId":"jeromewjj"},"content":"    public void parseLinkedIn_validValueWithWhitespace_returnsTrimmedLinkedIn() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":199,"author":{"gitId":"jeromewjj"},"content":"        String linkedInWithWhitespace \u003d WHITESPACE + VALID_LINKEDIN + WHITESPACE;","lastModifiedDate":"2021-10-11"},{"lineNumber":200,"author":{"gitId":"jeromewjj"},"content":"        LinkedIn expectedLinkedIn \u003d new LinkedIn(VALID_LINKEDIN);","lastModifiedDate":"2021-10-11"},{"lineNumber":201,"author":{"gitId":"jeromewjj"},"content":"        assertEquals(expectedLinkedIn, ParserUtil.parseLinkedIn(linkedInWithWhitespace));","lastModifiedDate":"2021-10-11"},{"lineNumber":202,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":203,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":204,"author":{"gitId":"jeromewjj"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":205,"author":{"gitId":"jeromewjj"},"content":"    public void parseLinkedIn_validEmptyValue_returnsEmptyLinkedIn() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":206,"author":{"gitId":"jeromewjj"},"content":"        LinkedIn emptyLinkedIn \u003d LinkedIn.getEmptyLinkedin();","lastModifiedDate":"2021-10-11"},{"lineNumber":207,"author":{"gitId":"jeromewjj"},"content":"        assertEquals(emptyLinkedIn, ParserUtil.parseLinkedIn(EMPTY_LINKEDIN));","lastModifiedDate":"2021-10-11"},{"lineNumber":208,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":209,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":210,"author":{"gitId":"jeromewjj"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":211,"author":{"gitId":"jeromewjj"},"content":"    public void parseDetail_validValueWithoutWhitespace_returnsDetail() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":212,"author":{"gitId":"jeromewjj"},"content":"        Detail expectedDetail \u003d new Detail(VALID_DETAIL);","lastModifiedDate":"2021-10-11"},{"lineNumber":213,"author":{"gitId":"jeromewjj"},"content":"        assertEquals(expectedDetail, ParserUtil.parseDetail(VALID_DETAIL));","lastModifiedDate":"2021-10-11"},{"lineNumber":214,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":215,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":216,"author":{"gitId":"jeromewjj"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":217,"author":{"gitId":"jeromewjj"},"content":"    public void parseDetail_validValueWithWhitespace_returnsTrimmedDetail() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":218,"author":{"gitId":"jeromewjj"},"content":"        String detailWithWhitespace \u003d WHITESPACE + VALID_DETAIL + WHITESPACE;","lastModifiedDate":"2021-10-11"},{"lineNumber":219,"author":{"gitId":"jeromewjj"},"content":"        Detail expectedDetail \u003d new Detail(VALID_DETAIL);","lastModifiedDate":"2021-10-11"},{"lineNumber":220,"author":{"gitId":"jeromewjj"},"content":"        assertEquals(expectedDetail, ParserUtil.parseDetail(detailWithWhitespace));","lastModifiedDate":"2021-10-11"},{"lineNumber":221,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":222,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":223,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"jeromewjj":95,"-":174}},{"path":"src/test/java/seedu/address/logic/parser/ReplaceTagCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromewjj"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"jeromewjj"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"jeromewjj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"jeromewjj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"jeromewjj"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"jeromewjj"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"jeromewjj"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"jeromewjj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.logic.commands.ReplaceTagCommand;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.person.TagsPresentPredicate;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"jeromewjj"},"content":"class ReplaceTagCommandParserTest {","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"jeromewjj"},"content":"    private ReplaceTagCommandParser parser \u003d new ReplaceTagCommandParser();","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"jeromewjj"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"jeromewjj"},"content":"    void parse_validArgs_success() {","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"jeromewjj"},"content":"        Tag validDeleteTag \u003d new Tag(VALID_TAG_HUSBAND);","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"jeromewjj"},"content":"        Tag validAddTag \u003d new Tag(VALID_TAG_FRIEND);","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"jeromewjj"},"content":"        TagsPresentPredicate validPredicate \u003d new TagsPresentPredicate(Arrays.asList(VALID_TAG_HUSBAND));","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"jeromewjj"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"jeromewjj"},"content":"        assertParseSuccess(parser, VALID_TAG_HUSBAND + \" \" + VALID_TAG_FRIEND,","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"jeromewjj"},"content":"                new ReplaceTagCommand(validDeleteTag, validAddTag, validPredicate));","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"jeromewjj"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"jeromewjj"},"content":"        assertParseSuccess(parser, VALID_TAG_HUSBAND + \"    \\n\" + VALID_TAG_FRIEND + \" \\n\",","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"jeromewjj"},"content":"                new ReplaceTagCommand(validDeleteTag, validAddTag, validPredicate));","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"jeromewjj"},"content":"        // multiple tags","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"jeromewjj"},"content":"        assertParseSuccess(parser, VALID_TAG_HUSBAND + \" \" + VALID_TAG_FRIEND + \" clown\",","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"jeromewjj"},"content":"                new ReplaceTagCommand(validDeleteTag, validAddTag, validPredicate));","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"jeromewjj"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"jeromewjj"},"content":"    public void parse_invalidFormat_failure() {","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"jeromewjj"},"content":"        // Not enough arguments","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"jeromewjj"},"content":"        assertParseFailure(parser, \"CS2100\",","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"jeromewjj"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReplaceTagCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"jeromewjj"},"content":"        // No arguments","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"jeromewjj"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"jeromewjj"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReplaceTagCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"jeromewjj"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"jeromewjj"},"content":"    public void parse_invalidTag_throwsParseException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"jeromewjj"},"content":"        // non-alphanumeric deleteTag","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"jeromewjj"},"content":"        assertParseFailure(parser, \"C$2100 CS2040\", Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"jeromewjj"},"content":"        // non-alphanumeric addTag","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"jeromewjj"},"content":"        assertParseFailure(parser, \"CS2100 C$2040\", Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"jeromewjj"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"jeromewjj":61}},{"path":"src/test/java/seedu/address/logic/parser/ShowCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CommanderW324"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"CommanderW324"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"CommanderW324"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"CommanderW324"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"CommanderW324"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"CommanderW324"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"CommanderW324"},"content":"import seedu.address.logic.commands.ShowCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"CommanderW324"},"content":"public class ShowCommandParserTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"CommanderW324"},"content":"    private ShowCommandParser parser \u003d new ShowCommandParser();","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"CommanderW324"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"CommanderW324"},"content":"    public void parse_validArgs_returnsShowCommand() {","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"CommanderW324"},"content":"        assertParseSuccess(parser, \"1\", new ShowCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"CommanderW324"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"CommanderW324"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"CommanderW324"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"CommanderW324"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, ShowCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"CommanderW324"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"CommanderW324"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"CommanderW324":24}},{"path":"src/test/java/seedu/address/logic/parser/TagAllCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0543403"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"e0543403"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"e0543403"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"e0543403"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"e0543403"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"e0543403"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"e0543403"},"content":"import seedu.address.logic.commands.TagAllCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"e0543403"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"e0543403"},"content":"class TagAllCommandParserTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"e0543403"},"content":"    private TagAllCommandParser parser \u003d new TagAllCommandParser();","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"e0543403"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"e0543403"},"content":"    public void parse_validArgs_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"e0543403"},"content":"        assertParseSuccess(parser, VALID_TAG_HUSBAND,","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"e0543403"},"content":"                new TagAllCommand(new Tag(VALID_TAG_HUSBAND)));","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"e0543403"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"e0543403"},"content":"    public void parse_invalidTag_failure() {","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"e0543403"},"content":"        // non-alphanumeric","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"e0543403"},"content":"        assertParseFailure(parser, \"#hashtag\",","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"e0543403"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"e0543403"},"content":"        // whitespace","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"e0543403"},"content":"        assertParseFailure(parser, \"good guy\",","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"e0543403"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"e0543403"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"e0543403"},"content":"    public void parse_invalidFormat_failure() {","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"e0543403"},"content":"        // No arguments","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"e0543403"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"e0543403"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, TagAllCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"e0543403"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"e0543403":40}},{"path":"src/test/java/seedu/address/logic/parser/TagCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"e0543403"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"e0543403"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"e0543403"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"e0543403"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"e0543403"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"e0543403"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"e0543403"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"e0543403"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"e0543403"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"e0543403"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"e0543403"},"content":"import seedu.address.logic.commands.TagCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"e0543403"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"e0543403"},"content":"public class TagCommandParserTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"e0543403"},"content":"    private TagCommandParser parser \u003d new TagCommandParser();","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"e0543403"},"content":"    private List\u003cIndex\u003e firstIndex \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"e0543403"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"e0543403"},"content":"    public void parse_validArgs_success() {","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"e0543403"},"content":"        firstIndex.add(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"e0543403"},"content":"        assertParseSuccess(parser, \"1 \" + VALID_TAG_HUSBAND,","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"e0543403"},"content":"                new TagCommand(firstIndex, new Tag(VALID_TAG_HUSBAND)));","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"e0543403"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"e0543403"},"content":"    public void parse_invalidIndex_failure() {","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"e0543403"},"content":"        // negative index","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"e0543403"},"content":"        assertParseFailure(parser, \"-1 \" + VALID_TAG_HUSBAND,","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"e0543403"},"content":"                String.format(TagCommandParser.MESSAGE_INVALID_INDEX_AT, 1, TagCommand.MESSAGE_PARAMS));","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"e0543403"},"content":"        // zero index","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"e0543403"},"content":"        assertParseFailure(parser, \"0 \" + VALID_TAG_HUSBAND,","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"e0543403"},"content":"                String.format(TagCommandParser.MESSAGE_INVALID_INDEX_AT, 1, TagCommand.MESSAGE_PARAMS));","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"e0543403"},"content":"        // signed-integer index","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"e0543403"},"content":"        assertParseFailure(parser, \"+1 \" + VALID_TAG_HUSBAND,","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"e0543403"},"content":"                String.format(TagCommandParser.MESSAGE_INVALID_INDEX_AT, 1, TagCommand.MESSAGE_PARAMS));","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"e0543403"},"content":"        // non-numeric index","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"e0543403"},"content":"        assertParseFailure(parser, \"abc \" + VALID_TAG_HUSBAND,","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"e0543403"},"content":"                String.format(TagCommandParser.MESSAGE_INVALID_INDEX_AT, 1, TagCommand.MESSAGE_PARAMS));","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"e0543403"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"e0543403"},"content":"    public void parse_invalidTag_failure() {","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"e0543403"},"content":"        // non-alphanumeric","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"e0543403"},"content":"        assertParseFailure(parser, \"1 \" + \"#hashtag\",","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"e0543403"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"e0543403"},"content":"        // not single word, first word treated as an Index","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"e0543403"},"content":"        assertParseFailure(parser, \"1 \" + \"good guy\",","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"e0543403"},"content":"                String.format(TagCommandParser.MESSAGE_INVALID_INDEX_AT, 2, TagCommand.MESSAGE_PARAMS));","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"e0543403"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"e0543403"},"content":"    public void parse_invalidFormat_failure() {","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"e0543403"},"content":"        // Not enough arguments","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"e0543403"},"content":"        assertParseFailure(parser, \"only\",","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"e0543403"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, TagCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"e0543403"},"content":"        // No arguments","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"e0543403"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"e0543403"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, TagCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"e0543403"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"e0543403":72}},{"path":"src/test/java/seedu/address/logic/parser/UntagAllCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromewjj"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"jeromewjj"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"jeromewjj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"jeromewjj"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"jeromewjj"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"jeromewjj"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"jeromewjj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.logic.commands.UntagAllCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.person.TagsPresentPredicate;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"jeromewjj"},"content":"class UntagAllCommandParserTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"jeromewjj"},"content":"    private UntagAllCommandParser parser \u003d new UntagAllCommandParser();","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"jeromewjj"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"jeromewjj"},"content":"    void parse_validArgs_success() {","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"jeromewjj"},"content":"        Tag validTag \u003d new Tag(VALID_TAG_HUSBAND);","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"jeromewjj"},"content":"        TagsPresentPredicate validPredicate \u003d new TagsPresentPredicate(Arrays.asList(VALID_TAG_HUSBAND));","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"jeromewjj"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"jeromewjj"},"content":"        assertParseSuccess(parser, VALID_TAG_HUSBAND, new UntagAllCommand(validTag, validPredicate));","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"jeromewjj"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"jeromewjj"},"content":"        assertParseSuccess(parser, \"  \\n\" + VALID_TAG_HUSBAND, new UntagAllCommand(validTag, validPredicate));","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"jeromewjj"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"jeromewjj"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"jeromewjj"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"jeromewjj"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, UntagAllCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"jeromewjj"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"jeromewjj"},"content":"    public void parse_invalidTag_throwsParseException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"jeromewjj"},"content":"        // non-alphanumeric","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"jeromewjj"},"content":"        assertParseFailure(parser, \"C$2100\", Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"jeromewjj"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"jeromewjj":43}},{"path":"src/test/java/seedu/address/logic/parser/UntagCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromewjj"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"jeromewjj"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"jeromewjj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"jeromewjj"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"jeromewjj"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"jeromewjj"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"jeromewjj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"jeromewjj"},"content":"import java.util.List;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"jeromewjj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.logic.commands.UntagCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"jeromewjj"},"content":"class UntagCommandParserTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"jeromewjj"},"content":"    private UntagCommandParser parser \u003d new UntagCommandParser();","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"jeromewjj"},"content":"    private List\u003cIndex\u003e firstIndex \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"jeromewjj"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"jeromewjj"},"content":"    public void parse_validArgs_success() {","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"jeromewjj"},"content":"        firstIndex.add(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"jeromewjj"},"content":"        assertParseSuccess(parser, \"1 \" + VALID_TAG_HUSBAND,","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"jeromewjj"},"content":"                new UntagCommand(firstIndex, new Tag(VALID_TAG_HUSBAND)));","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"jeromewjj"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"jeromewjj"},"content":"    public void parse_invalidIndex_failure() {","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"jeromewjj"},"content":"        // negative index","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"jeromewjj"},"content":"        assertParseFailure(parser, \"-1 \" + VALID_TAG_HUSBAND,","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"jeromewjj"},"content":"                String.format(UntagCommandParser.MESSAGE_INVALID_INDEX_AT, 1, UntagCommand.MESSAGE_PARAMS));","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"jeromewjj"},"content":"        // zero index","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"jeromewjj"},"content":"        assertParseFailure(parser, \"0 \" + VALID_TAG_HUSBAND,","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"jeromewjj"},"content":"                String.format(UntagCommandParser.MESSAGE_INVALID_INDEX_AT, 1, UntagCommand.MESSAGE_PARAMS));","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"jeromewjj"},"content":"        // signed-integer index","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"jeromewjj"},"content":"        assertParseFailure(parser, \"+1 \" + VALID_TAG_HUSBAND,","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"jeromewjj"},"content":"                String.format(UntagCommandParser.MESSAGE_INVALID_INDEX_AT, 1, UntagCommand.MESSAGE_PARAMS));","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"jeromewjj"},"content":"        // non-numeric index","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"jeromewjj"},"content":"        assertParseFailure(parser, \"abc \" + VALID_TAG_HUSBAND,","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"jeromewjj"},"content":"                String.format(UntagCommandParser.MESSAGE_INVALID_INDEX_AT, 1, UntagCommand.MESSAGE_PARAMS));","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"jeromewjj"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"jeromewjj"},"content":"    public void parse_invalidTag_failure() {","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"jeromewjj"},"content":"        // non-alphanumeric","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"jeromewjj"},"content":"        assertParseFailure(parser, \"1 \" + \"#hashtag\",","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"jeromewjj"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"jeromewjj"},"content":"        // not single word, first word treated as an Index","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"jeromewjj"},"content":"        assertParseFailure(parser, \"1 \" + \"good guy\",","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"jeromewjj"},"content":"                String.format(UntagCommandParser.MESSAGE_INVALID_INDEX_AT, 2, UntagCommand.MESSAGE_PARAMS));","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"jeromewjj"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"jeromewjj"},"content":"    public void parse_invalidFormat_failure() {","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"jeromewjj"},"content":"        // Not enough arguments","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"jeromewjj"},"content":"        assertParseFailure(parser, \"only\",","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"jeromewjj"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, UntagCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"jeromewjj"},"content":"        // No arguments","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"jeromewjj"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"jeromewjj"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, UntagCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"jeromewjj"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"jeromewjj":72}},{"path":"src/test/java/seedu/address/model/ContactBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"e0543403"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"e0543403"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GITHUB_AMY;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"e0543403"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LINKEDIN_AMY;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"e0543403"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":13,"author":{"gitId":"e0543403"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"samyipsh"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"samyipsh"},"content":"public class ContactBookTest {","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"samyipsh"},"content":"    private final ContactBook contactBook \u003d new ContactBook();","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"samyipsh"},"content":"        assertEquals(Collections.emptyList(), contactBook.getPersonList());","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"samyipsh"},"content":"        assertThrows(NullPointerException.class, () -\u003e contactBook.resetData(null));","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"samyipsh"},"content":"    public void resetData_withValidReadOnlyContactBook_replacesData() {","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"samyipsh"},"content":"        ContactBook newData \u003d getTypicalContactBook();","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"samyipsh"},"content":"        contactBook.resetData(newData);","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"samyipsh"},"content":"        assertEquals(newData, contactBook);","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"jeromewjj"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"samyipsh"},"content":"        ContactBookStub newData \u003d new ContactBookStub(newPersons);","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"samyipsh"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e contactBook.resetData(newData));","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"samyipsh"},"content":"        assertThrows(NullPointerException.class, () -\u003e contactBook.hasPerson(null));","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"samyipsh"},"content":"    public void hasPerson_personNotInContactBook_returnsFalse() {","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"samyipsh"},"content":"        assertFalse(contactBook.hasPerson(ALICE));","lastModifiedDate":"2021-11-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"samyipsh"},"content":"    public void hasPerson_personInContactBook_returnsTrue() {","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"samyipsh"},"content":"        contactBook.addPerson(ALICE);","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"samyipsh"},"content":"        assertTrue(contactBook.hasPerson(ALICE));","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"samyipsh"},"content":"    public void hasPerson_personWithSameIdentityFieldsInContactBook_returnsTrue() {","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"samyipsh"},"content":"        contactBook.addPerson(ALICE);","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"jeromewjj"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-09-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"samyipsh"},"content":"        assertTrue(contactBook.hasPerson(editedAlice));","lastModifiedDate":"2021-11-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"e0543403"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"samyipsh"},"content":"    public void hasPerson_personWithNoSameIdentityFieldsInContactBook_returnsFalse() {","lastModifiedDate":"2021-11-05"},{"lineNumber":87,"author":{"gitId":"samyipsh"},"content":"        contactBook.addPerson(ALICE);","lastModifiedDate":"2021-11-05"},{"lineNumber":88,"author":{"gitId":"e0543403"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"e0543403"},"content":"                .withGithub(VALID_GITHUB_AMY).withLinkedIn(VALID_LINKEDIN_AMY).withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"samyipsh"},"content":"        assertFalse(contactBook.hasPerson(editedAlice));","lastModifiedDate":"2021-11-05"},{"lineNumber":91,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"e0543403"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"e0543403"},"content":"    public void hasPersonExcludingOtherPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"samyipsh"},"content":"        assertThrows(NullPointerException.class, () -\u003e contactBook.hasPersonExcludingOtherPerson(null, ALICE));","lastModifiedDate":"2021-11-05"},{"lineNumber":96,"author":{"gitId":"samyipsh"},"content":"        assertThrows(NullPointerException.class, () -\u003e contactBook.hasPersonExcludingOtherPerson(ALICE, null));","lastModifiedDate":"2021-11-05"},{"lineNumber":97,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"e0543403"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"samyipsh"},"content":"    public void hasPersonExcludingOtherPerson_personInContactBook_returnsTrue() {","lastModifiedDate":"2021-11-05"},{"lineNumber":101,"author":{"gitId":"samyipsh"},"content":"        contactBook.addPerson(ALICE);","lastModifiedDate":"2021-11-05"},{"lineNumber":102,"author":{"gitId":"samyipsh"},"content":"        assertTrue(contactBook.hasPersonExcludingOtherPerson(ALICE, BENSON));","lastModifiedDate":"2021-11-05"},{"lineNumber":103,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"e0543403"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"samyipsh"},"content":"    public void hasPersonExcludingOtherPerson_personInContactBook_returnsFalse() {","lastModifiedDate":"2021-11-05"},{"lineNumber":107,"author":{"gitId":"samyipsh"},"content":"        contactBook.addPerson(ALICE);","lastModifiedDate":"2021-11-05"},{"lineNumber":108,"author":{"gitId":"samyipsh"},"content":"        assertFalse(contactBook.hasPersonExcludingOtherPerson(ALICE, ALICE));","lastModifiedDate":"2021-11-05"},{"lineNumber":109,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":111,"author":{"gitId":"e0543403"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":112,"author":{"gitId":"samyipsh"},"content":"    public void hasPersonExcludingOtherPerson_personWithSameIdentityFieldsInContactBook_returnsTrue() {","lastModifiedDate":"2021-11-05"},{"lineNumber":113,"author":{"gitId":"samyipsh"},"content":"        contactBook.addPerson(ALICE);","lastModifiedDate":"2021-11-05"},{"lineNumber":114,"author":{"gitId":"e0543403"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-23"},{"lineNumber":115,"author":{"gitId":"e0543403"},"content":"                .build();","lastModifiedDate":"2021-10-23"},{"lineNumber":116,"author":{"gitId":"samyipsh"},"content":"        assertTrue(contactBook.hasPersonExcludingOtherPerson(editedAlice, BENSON));","lastModifiedDate":"2021-11-05"},{"lineNumber":117,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":118,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":119,"author":{"gitId":"e0543403"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":120,"author":{"gitId":"samyipsh"},"content":"    public void hasPersonExcludingOtherPerson_personWithSameIdentityFieldsInContactBook_returnsFalse() {","lastModifiedDate":"2021-11-05"},{"lineNumber":121,"author":{"gitId":"samyipsh"},"content":"        contactBook.addPerson(ALICE);","lastModifiedDate":"2021-11-05"},{"lineNumber":122,"author":{"gitId":"e0543403"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-23"},{"lineNumber":123,"author":{"gitId":"e0543403"},"content":"                .build();","lastModifiedDate":"2021-10-23"},{"lineNumber":124,"author":{"gitId":"samyipsh"},"content":"        assertFalse(contactBook.hasPersonExcludingOtherPerson(editedAlice, ALICE));","lastModifiedDate":"2021-11-05"},{"lineNumber":125,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":126,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":127,"author":{"gitId":"e0543403"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":128,"author":{"gitId":"e0543403"},"content":"    public void hasPersonExcludingOtherPerson_personWithNoSameIdentityFieldsInContactBook_returnsFalse() {","lastModifiedDate":"2021-11-07"},{"lineNumber":129,"author":{"gitId":"samyipsh"},"content":"        contactBook.addPerson(ALICE);","lastModifiedDate":"2021-11-05"},{"lineNumber":130,"author":{"gitId":"e0543403"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2021-10-23"},{"lineNumber":131,"author":{"gitId":"e0543403"},"content":"                .withGithub(VALID_GITHUB_AMY).withLinkedIn(VALID_LINKEDIN_AMY).withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":132,"author":{"gitId":"samyipsh"},"content":"        assertFalse(contactBook.hasPersonExcludingOtherPerson(editedAlice, ALICE));","lastModifiedDate":"2021-11-05"},{"lineNumber":133,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":134,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":135,"author":{"gitId":"e0543403"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":136,"author":{"gitId":"e0543403"},"content":"    public void hasPersonExcludingOtherPerson_anotherPersonWithSameIdentityFieldsInContactBook_returnsTrue() {","lastModifiedDate":"2021-11-07"},{"lineNumber":137,"author":{"gitId":"samyipsh"},"content":"        contactBook.addPerson(ALICE);","lastModifiedDate":"2021-11-05"},{"lineNumber":138,"author":{"gitId":"samyipsh"},"content":"        contactBook.addPerson(BENSON);","lastModifiedDate":"2021-11-05"},{"lineNumber":139,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":140,"author":{"gitId":"samyipsh"},"content":"        assertTrue(contactBook.hasPersonExcludingOtherPerson(BENSON, ALICE));","lastModifiedDate":"2021-11-05"},{"lineNumber":141,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":142,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":145,"author":{"gitId":"samyipsh"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e contactBook.getPersonList().remove(0));","lastModifiedDate":"2021-11-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":149,"author":{"gitId":"samyipsh"},"content":"     * A stub ReadOnlyContactBook whose persons list can violate interface constraints.","lastModifiedDate":"2021-11-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":151,"author":{"gitId":"samyipsh"},"content":"    private static class ContactBookStub implements ReadOnlyContactBook {","lastModifiedDate":"2021-11-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":154,"author":{"gitId":"samyipsh"},"content":"        ContactBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2021-11-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"samyipsh":46,"e0543403":41,"jeromewjj":2,"-":75}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"e0543403"},"content":"import seedu.address.model.person.FoundInNameOrTagsPredicate;","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"samyipsh"},"content":"import seedu.address.testutil.ContactBookBuilder;","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"samyipsh"},"content":"        assertEquals(new ContactBook(), new ContactBook(modelManager.getContactBook()));","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"samyipsh"},"content":"        userPrefs.setContactBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"samyipsh"},"content":"        userPrefs.setContactBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"samyipsh"},"content":"    public void setContactBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"samyipsh"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setContactBookFilePath(null));","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"samyipsh"},"content":"    public void setContactBookFilePath_validPath_setsContactBookFilePath() {","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"samyipsh"},"content":"        modelManager.setContactBookFilePath(path);","lastModifiedDate":"2021-11-05"},{"lineNumber":72,"author":{"gitId":"samyipsh"},"content":"        assertEquals(path, modelManager.getContactBookFilePath());","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"samyipsh"},"content":"    public void hasPerson_personNotInContactBook_returnsFalse() {","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"samyipsh"},"content":"    public void hasPerson_personInContactBook_returnsTrue() {","lastModifiedDate":"2021-11-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"e0543403"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"e0543403"},"content":"    public void hasPersonExcludingOtherPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"e0543403"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPersonExcludingOtherPerson(null, ALICE));","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"e0543403"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPersonExcludingOtherPerson(ALICE, null));","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"e0543403"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"samyipsh"},"content":"    public void hasPersonExcludingOtherPerson_personInContactBook_returnsTrue() {","lastModifiedDate":"2021-11-05"},{"lineNumber":99,"author":{"gitId":"e0543403"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"e0543403"},"content":"        assertTrue(modelManager.hasPersonExcludingOtherPerson(ALICE, BENSON));","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"e0543403"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"samyipsh"},"content":"    public void hasPersonExcludingOtherPerson_personInContactBook_returnsFalse() {","lastModifiedDate":"2021-11-05"},{"lineNumber":105,"author":{"gitId":"e0543403"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"e0543403"},"content":"        assertFalse(modelManager.hasPersonExcludingOtherPerson(ALICE, ALICE));","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":116,"author":{"gitId":"samyipsh"},"content":"        ContactBook contactBook \u003d new ContactBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2021-11-05"},{"lineNumber":117,"author":{"gitId":"samyipsh"},"content":"        ContactBook differentContactBook \u003d new ContactBook();","lastModifiedDate":"2021-11-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"samyipsh"},"content":"        modelManager \u003d new ModelManager(contactBook, userPrefs);","lastModifiedDate":"2021-11-05"},{"lineNumber":122,"author":{"gitId":"samyipsh"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(contactBook, userPrefs);","lastModifiedDate":"2021-11-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"samyipsh"},"content":"        // different ContactBook -\u003e returns false","lastModifiedDate":"2021-11-05"},{"lineNumber":135,"author":{"gitId":"samyipsh"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentContactBook, userPrefs)));","lastModifiedDate":"2021-11-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":139,"author":{"gitId":"e0543403"},"content":"        modelManager.updateFilteredPersonList(new FoundInNameOrTagsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-11-06"},{"lineNumber":140,"author":{"gitId":"samyipsh"},"content":"        assertFalse(modelManager.equals(new ModelManager(contactBook, userPrefs)));","lastModifiedDate":"2021-11-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"samyipsh"},"content":"        differentUserPrefs.setContactBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2021-11-05"},{"lineNumber":148,"author":{"gitId":"samyipsh"},"content":"        assertFalse(modelManager.equals(new ModelManager(contactBook, differentUserPrefs)));","lastModifiedDate":"2021-11-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"samyipsh":22,"e0543403":18,"-":110}},{"path":"src/test/java/seedu/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"samyipsh"},"content":"    public void setContactBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"samyipsh"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setContactBookFilePath(null));","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"samyipsh":2,"-":19}},{"path":"src/test/java/seedu/address/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"e0543403"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"e0543403"},"content":"    public void isEmptyTest() {","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"e0543403"},"content":"        assertTrue(Email.getEmptyEmail().isEmpty());","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"e0543403"},"content":"        assertFalse(new Email(\"PeterJack_1190@example.com\").isEmpty());","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"e0543403"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"e0543403"},"content":"    public void isSameEmailTest() {","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"e0543403"},"content":"        Email emptyEmail \u003d Email.getEmptyEmail();","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"e0543403"},"content":"        Email otherEmptyEmail \u003d Email.getEmptyEmail();","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"e0543403"},"content":"        Email firstEmail \u003d new Email(\"PeterJack_1190@example.com\");","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"e0543403"},"content":"        Email similarFirstEmail \u003d new Email(\"PeterJack_1190@example.com\");","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"e0543403"},"content":"        Email secondEmail \u003d new Email(\"if.you.dream.it_you.can.do.it@example.com\");","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"e0543403"},"content":"        // null email","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"e0543403"},"content":"        assertFalse(firstEmail.isSameEmail(null));","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"e0543403"},"content":"        // empty email -  not the same as any email","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"e0543403"},"content":"        assertFalse(emptyEmail.isSameEmail(firstEmail));","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"e0543403"},"content":"        assertFalse(emptyEmail.isSameEmail(emptyEmail));","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"e0543403"},"content":"        assertFalse(emptyEmail.isSameEmail(otherEmptyEmail));","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"e0543403"},"content":"        assertFalse(otherEmptyEmail.isSameEmail(emptyEmail));","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"e0543403"},"content":"        // different email","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"e0543403"},"content":"        assertFalse(firstEmail.isSameEmail(secondEmail));","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"e0543403"},"content":"        assertFalse(firstEmail.isSameEmail(emptyEmail));","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"e0543403"},"content":"        // similar email","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"e0543403"},"content":"        assertTrue(firstEmail.isSameEmail(firstEmail));","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"e0543403"},"content":"        assertTrue(firstEmail.isSameEmail(similarFirstEmail));","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"e0543403":32,"-":68}},{"path":"src/test/java/seedu/address/model/person/FoundInNameOrTagsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"e0543403"},"content":"public class FoundInNameOrTagsPredicateTest {","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"e0543403"},"content":"        FoundInNameOrTagsPredicate firstPredicate \u003d new FoundInNameOrTagsPredicate(","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"e0543403"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"e0543403"},"content":"        FoundInNameOrTagsPredicate secondPredicate \u003d new FoundInNameOrTagsPredicate(","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"e0543403"},"content":"                secondPredicateKeywordList);","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"e0543403"},"content":"        FoundInNameOrTagsPredicate firstPredicateCopy \u003d new FoundInNameOrTagsPredicate(","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"e0543403"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"e0543403"},"content":"        FoundInNameOrTagsPredicate predicate \u003d new FoundInNameOrTagsPredicate(Collections","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"e0543403"},"content":"                .singletonList(\"Alice\"));","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"e0543403"},"content":"        predicate \u003d new FoundInNameOrTagsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"e0543403"},"content":"        predicate \u003d new FoundInNameOrTagsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"e0543403"},"content":"        predicate \u003d new FoundInNameOrTagsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"e0543403"},"content":"    public void test_tagsContainKeywords_returnsTrue() {","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"e0543403"},"content":"        // One keyword","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"e0543403"},"content":"        FoundInNameOrTagsPredicate predicate \u003d new FoundInNameOrTagsPredicate(Collections","lastModifiedDate":"2021-11-06"},{"lineNumber":68,"author":{"gitId":"e0543403"},"content":"                .singletonList(\"programmer\"));","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"e0543403"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"programmer\").build()));","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"e0543403"},"content":"        // Multiple keywords","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"e0543403"},"content":"        predicate \u003d new FoundInNameOrTagsPredicate(Arrays.asList(\"programmer\", \"designer\"));","lastModifiedDate":"2021-11-06"},{"lineNumber":73,"author":{"gitId":"e0543403"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"programmer\", \"designer\").build()));","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"e0543403"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"e0543403"},"content":"        predicate \u003d new FoundInNameOrTagsPredicate(Arrays.asList(\"programmer\", \"designer\"));","lastModifiedDate":"2021-11-06"},{"lineNumber":77,"author":{"gitId":"e0543403"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"designer\", \"tester\").build()));","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"e0543403"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"e0543403"},"content":"        predicate \u003d new FoundInNameOrTagsPredicate(Arrays.asList(\"pROGrammer\", \"DESigner\"));","lastModifiedDate":"2021-11-06"},{"lineNumber":81,"author":{"gitId":"e0543403"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"programmer\", \"designer\").build()));","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"e0543403"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"e0543403"},"content":"    public void test_nameAndTagsDoNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"e0543403"},"content":"        FoundInNameOrTagsPredicate predicate \u003d new FoundInNameOrTagsPredicate(Collections","lastModifiedDate":"2021-11-06"},{"lineNumber":88,"author":{"gitId":"e0543403"},"content":"                .emptyList());","lastModifiedDate":"2021-10-01"},{"lineNumber":89,"author":{"gitId":"e0543403"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withTags(\"programmer\").build()));","lastModifiedDate":"2021-10-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":92,"author":{"gitId":"e0543403"},"content":"        predicate \u003d new FoundInNameOrTagsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2021-11-06"},{"lineNumber":93,"author":{"gitId":"e0543403"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").withTags(\"programmer\").build()));","lastModifiedDate":"2021-10-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":95,"author":{"gitId":"e0543403"},"content":"        // Keywords match phone, email, github, linkedin and detail but does not match name or tags","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"e0543403"},"content":"        predicate \u003d new FoundInNameOrTagsPredicate(Arrays","lastModifiedDate":"2021-11-06"},{"lineNumber":97,"author":{"gitId":"e0543403"},"content":"                .asList(\"12345\", \"alice@email.com\", \"Alicio\",","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"e0543403"},"content":"                        \"https://www.linkedin.com/in/alice\", \"uses\", \"real\", \"name\", \"for\", \"username\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":100,"author":{"gitId":"jeromewjj"},"content":"                .withEmail(\"alice@email.com\").withTags(\"programmer\")","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"e0543403"},"content":"                .withGithub(\"Alicio\").withLinkedIn(\"https://www.linkedin.com/in/alice\")","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"e0543403"},"content":"                .withDetail(\"uses real name for username\").build()));","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"e0543403":44,"jeromewjj":1,"-":59}},{"path":"src/test/java/seedu/address/model/person/GithubTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samyipsh"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"samyipsh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"samyipsh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"samyipsh"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"samyipsh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"samyipsh"},"content":"public class GithubTest {","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"samyipsh"},"content":"    @Test","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"samyipsh"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"samyipsh"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Github(null));","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"samyipsh"},"content":"    @Test","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"samyipsh"},"content":"    public void constructor_invalidGithub_throwsIllegalArgumentException() {","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"samyipsh"},"content":"        String invalidGithub \u003d \"\";","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"samyipsh"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Github(invalidGithub));","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"samyipsh"},"content":"    @Test","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"samyipsh"},"content":"    public void isValidGithub() {","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"samyipsh"},"content":"        // null github","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"samyipsh"},"content":"        assertThrows(NullPointerException.class, () -\u003e Github.isValidGithub(null));","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"samyipsh"},"content":"        // blank github","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"samyipsh"},"content":"        assertFalse(Github.isValidGithub(\"\")); // empty string","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"samyipsh"},"content":"        assertFalse(Github.isValidGithub(\" \")); // spaces only","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"samyipsh"},"content":"        // invalid parts","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"samyipsh"},"content":"        assertFalse(Github.isValidGithub(\"a\u0026s\")); // invalid char (not alphanumeric)","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"samyipsh"},"content":"        assertFalse(Github.isValidGithub(\"-samyipsh\")); // invalid start char","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"samyipsh"},"content":"        assertFalse(Github.isValidGithub(\"samyipsh-\")); // invalid end char","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"samyipsh"},"content":"        assertFalse(Github.isValidGithub(\" samyipsh\")); // leading space","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"samyipsh"},"content":"        assertFalse(Github.isValidGithub(\"samyipsh \")); // trailing space","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"samyipsh"},"content":"        assertFalse(Github.isValidGithub(\"samyip--sh\")); // consecutive -- not allowed","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"samyipsh"},"content":"        assertFalse(Github.isValidGithub(\"samyipshsamyipshsamyipshsamyipshsamyipsh\")); // more than max of 39 char","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"samyipsh"},"content":"        // valid github","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"samyipsh"},"content":"        assertTrue(Github.isValidGithub(\"alicio\")); // alphabets only","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"samyipsh"},"content":"        assertTrue(Github.isValidGithub(\"ALICIO\")); // caps only","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"samyipsh"},"content":"        assertTrue(Github.isValidGithub(\"123456\")); // numbers only","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"samyipsh"},"content":"        assertTrue(Github.isValidGithub(\"alice-io\")); // - within username","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"samyipsh"},"content":"        assertTrue(Github.isValidGithub(\"Alice-io\")); // mixture of alphanumeric and hyphen","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"samyipsh"},"content":"        assertTrue(Github.isValidGithub(\"samyipshsamyipshsamyipshsamyipshsamyips\")); // long username of 39 char","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"e0543403"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"e0543403"},"content":"    public void isEmptyTest() {","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"e0543403"},"content":"        assertTrue(Github.getEmptyGithub().isEmpty());","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"e0543403"},"content":"        assertFalse(new Github(\"alicio\").isEmpty());","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"e0543403"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"e0543403"},"content":"    public void isSameGithubTest() {","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"e0543403"},"content":"        Github emptyGithub \u003d Github.getEmptyGithub();","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"e0543403"},"content":"        Github otherEmptyGithub \u003d Github.getEmptyGithub();","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"e0543403"},"content":"        Github firstGithub \u003d new Github(\"alicio\");","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"e0543403"},"content":"        Github similarFirstGithub \u003d new Github(\"alicio\");","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"e0543403"},"content":"        Github secondGithub \u003d new Github(\"samyipshsamyipshsamyipshsamyipshsamyips\");","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"e0543403"},"content":"        // null github username","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"e0543403"},"content":"        assertFalse(firstGithub.isSameGithub(null));","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"e0543403"},"content":"        // empty github username - not the same as any github username","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"e0543403"},"content":"        assertFalse(emptyGithub.isSameGithub(firstGithub));","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"e0543403"},"content":"        assertFalse(emptyGithub.isSameGithub(otherEmptyGithub));","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"e0543403"},"content":"        assertFalse(emptyGithub.isSameGithub(emptyGithub));","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"e0543403"},"content":"        assertFalse(otherEmptyGithub.isSameGithub(emptyGithub));","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"e0543403"},"content":"        // different github username","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"e0543403"},"content":"        assertFalse(firstGithub.isSameGithub(secondGithub));","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"e0543403"},"content":"        assertFalse(firstGithub.isSameGithub(emptyGithub));","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"e0543403"},"content":"        // similar github username","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"e0543403"},"content":"        assertTrue(firstGithub.isSameGithub(firstGithub));","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"e0543403"},"content":"        assertTrue(firstGithub.isSameGithub(similarFirstGithub));","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"samyipsh"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"samyipsh":50,"e0543403":32}},{"path":"src/test/java/seedu/address/model/person/LinkedInTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CommanderW324"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"CommanderW324"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"CommanderW324"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"CommanderW324"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"CommanderW324"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"CommanderW324"},"content":"public class LinkedInTest {","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"CommanderW324"},"content":"    @Test","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"CommanderW324"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"CommanderW324"},"content":"        assertThrows(NullPointerException.class, () -\u003e new LinkedIn(null));","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"CommanderW324"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"CommanderW324"},"content":"    @Test","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"CommanderW324"},"content":"    public void constructor_invalidLinkedIn_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"CommanderW324"},"content":"        String invalidLinkedIn \u003d \"www.link.in.com/hello\";","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"CommanderW324"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new LinkedIn(invalidLinkedIn));","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"CommanderW324"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"CommanderW324"},"content":"    @Test","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"CommanderW324"},"content":"    public void isValidLinkedIn() {","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"CommanderW324"},"content":"        // null email","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"CommanderW324"},"content":"        assertThrows(NullPointerException.class, () -\u003e LinkedIn.isValidLinkedIn(null));","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"CommanderW324"},"content":"        // missing parts","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"CommanderW324"},"content":"        assertFalse(LinkedIn.isValidLinkedIn(\"linkedin.com\")); // missing local part","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"CommanderW324"},"content":"        assertFalse(LinkedIn.isValidLinkedIn(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"CommanderW324"},"content":"        assertFalse(LinkedIn.isValidLinkedIn(\"linkedin/12345\")); // missing domain name","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"CommanderW324"},"content":"        // valid LinkedIn","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"CommanderW324"},"content":"        assertTrue(LinkedIn.isValidLinkedIn(\"https://ca.linkedin.com/in/winston-cahya/\")); // period in local part","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"CommanderW324"},"content":"        assertTrue(LinkedIn.isValidLinkedIn(\"https://www.linkedin.com/in/winston\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"CommanderW324"},"content":"        assertTrue(LinkedIn.isValidLinkedIn(\"https://linkedin.com/in/winston-cahya/\"));","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"CommanderW324"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":40,"author":{"gitId":"e0543403"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"e0543403"},"content":"    public void isEmptyTest() {","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"e0543403"},"content":"        assertTrue(LinkedIn.getEmptyLinkedin().isEmpty());","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"e0543403"},"content":"        assertFalse(new LinkedIn(\"https://ca.linkedin.com/in/winston-cahya/\").isEmpty());","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"e0543403"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"e0543403"},"content":"    public void isSameLinkedInTest() {","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"e0543403"},"content":"        LinkedIn emptyLinkedIn \u003d LinkedIn.getEmptyLinkedin();","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"e0543403"},"content":"        LinkedIn otherEmptyLinkedIn \u003d LinkedIn.getEmptyLinkedin();","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"e0543403"},"content":"        LinkedIn firstLinkedIn \u003d new LinkedIn(\"https://ca.linkedin.com/in/winston-cahya/\");","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"e0543403"},"content":"        LinkedIn similarFirstLinkedIn \u003d new LinkedIn(\"https://ca.linkedin.com/in/winston-cahya/\");","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"e0543403"},"content":"        LinkedIn secondLinkedIn \u003d new LinkedIn(\"https://www.linkedin.com/in/winston\");","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"e0543403"},"content":"        // null LinkedIn","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"e0543403"},"content":"        assertFalse(firstLinkedIn.isSameLinkedIn(null));","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"e0543403"},"content":"        // empty LinkedIn - not the same as any LinkedIn","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"e0543403"},"content":"        assertFalse(emptyLinkedIn.isSameLinkedIn(firstLinkedIn));","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"e0543403"},"content":"        assertFalse(emptyLinkedIn.isSameLinkedIn(otherEmptyLinkedIn));","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"e0543403"},"content":"        assertFalse(emptyLinkedIn.isSameLinkedIn(emptyLinkedIn));","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"e0543403"},"content":"        assertFalse(otherEmptyLinkedIn.isSameLinkedIn(emptyLinkedIn));","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"e0543403"},"content":"        // different LinkedIn","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"e0543403"},"content":"        assertFalse(firstLinkedIn.isSameLinkedIn(secondLinkedIn));","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"e0543403"},"content":"        assertFalse(firstLinkedIn.isSameLinkedIn(emptyLinkedIn));","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"e0543403"},"content":"        // similar LinkedIn","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"e0543403"},"content":"        assertTrue(firstLinkedIn.isSameLinkedIn(firstLinkedIn));","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"e0543403"},"content":"        assertTrue(firstLinkedIn.isSameLinkedIn(similarFirstLinkedIn));","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"CommanderW324"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"e0543403":31,"CommanderW324":40}},{"path":"src/test/java/seedu/address/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"e0543403"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"e0543403"},"content":"    public void isSameNameTest() {","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"e0543403"},"content":"        Name firstName \u003d new Name(\"peter jack\");","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"e0543403"},"content":"        Name similarFirstName \u003d new Name(\"peter jack\");","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"e0543403"},"content":"        Name spacedFirstName \u003d new Name(\"peter   jack   \");","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"e0543403"},"content":"        Name cappedFirstName \u003d new Name (\"Peter Jack\");","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"e0543403"},"content":"        Name spacedCappedFirstName \u003d new Name(\"Peter    Jack  \");","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"e0543403"},"content":"        Name secondName \u003d new Name(\"peter the 2nd\");","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"e0543403"},"content":"        // null name","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"e0543403"},"content":"        assertFalse(firstName.isSameName(null));","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"e0543403"},"content":"        // different name","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"e0543403"},"content":"        assertFalse(firstName.isSameName(secondName));","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"e0543403"},"content":"        // similar name","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"e0543403"},"content":"        assertTrue(firstName.isSameName(firstName));","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"e0543403"},"content":"        assertTrue(firstName.isSameName(similarFirstName));","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"e0543403"},"content":"        assertTrue(firstName.isSameName(spacedFirstName));","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"e0543403"},"content":"        assertTrue(spacedFirstName.isSameName(firstName));","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"e0543403"},"content":"        assertTrue(firstName.isSameName(cappedFirstName));","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"e0543403"},"content":"        assertTrue(cappedFirstName.isSameName(firstName));","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"e0543403"},"content":"        assertTrue(firstName.isSameName(spacedCappedFirstName));","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"e0543403"},"content":"        assertTrue(spacedCappedFirstName.isSameName(firstName));","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"e0543403":26,"-":40}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"e0543403"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DETAIL_BOB;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"e0543403"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GITHUB_AMY;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"e0543403"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LINKEDIN_AMY;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"e0543403"},"content":"        // same name, all other attributes different -\u003e returns false","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"e0543403"},"content":"                .withTags(VALID_TAG_HUSBAND).withGithub(VALID_GITHUB_AMY).withLinkedIn(VALID_LINKEDIN_AMY)","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"e0543403"},"content":"                .withDetail(VALID_DETAIL_BOB).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"e0543403"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"e0543403"},"content":"        // same name, all other attributes different except LinkedIn -\u003e returns true","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"e0543403"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"e0543403"},"content":"                .withTags(VALID_TAG_HUSBAND).withGithub(VALID_GITHUB_AMY).withDetail(VALID_DETAIL_BOB).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"e0543403"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"e0543403"},"content":"        // same name, all other attributes different except Github -\u003e returns true","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"e0543403"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"e0543403"},"content":"                .withTags(VALID_TAG_HUSBAND).withLinkedIn(VALID_LINKEDIN_AMY).withDetail(VALID_DETAIL_BOB).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"e0543403"},"content":"        // same name, all other attributes different except Email -\u003e returns true","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"e0543403"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"e0543403"},"content":"                .withGithub(VALID_GITHUB_AMY).withLinkedIn(VALID_LINKEDIN_AMY).withDetail(VALID_DETAIL_BOB).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"e0543403"},"content":"        // same name, all other attributes different except Phone -\u003e returns true","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"e0543403"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"e0543403"},"content":"                .withGithub(VALID_GITHUB_AMY).withLinkedIn(VALID_LINKEDIN_AMY).withDetail(VALID_DETAIL_BOB).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"e0543403"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"e0543403"},"content":"        // same name, all other attributes empty -\u003e returns false","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"e0543403"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmptyEmail().withEmptyPhone()","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"e0543403"},"content":"                .withEmptyGithub().withEmptyLinkedin().build();","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"e0543403"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"e0543403"},"content":"        assertFalse(editedAlice.isSamePerson(ALICE));","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"e0543403"},"content":"        // same name, both of all attributes empty -\u003e returns true","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"e0543403"},"content":"        Person emptyAlice \u003d new PersonBuilder(ALICE).withEmptyEmail().withEmptyPhone()","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"e0543403"},"content":"                .withEmptyGithub().withEmptyLinkedin().build();","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"e0543403"},"content":"        assertTrue(emptyAlice.isSamePerson(editedAlice));","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"e0543403"},"content":"        assertTrue(editedAlice.isSamePerson(emptyAlice));","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"e0543403"},"content":"        // name differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":81,"author":{"gitId":"e0543403"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"e0543403"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns true","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":86,"author":{"gitId":"e0543403"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"e0543403"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"e0543403"},"content":"    public void hasSameNameTest() {","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"e0543403"},"content":"        // null person -\u003e return false","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"e0543403"},"content":"        assertFalse(ALICE.hasSameName(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"e0543403"},"content":"        // same person -\u003e return true","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"e0543403"},"content":"        assertTrue(ALICE.hasSameName(ALICE));","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"e0543403"},"content":"        // same name -\u003e return true","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"e0543403"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withEmptyEmail().withEmptyGithub()","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"e0543403"},"content":"                .withEmptyLinkedin().withEmptyPhone().build();","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"e0543403"},"content":"        assertTrue(ALICE.hasSameName(editedAlice));","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"e0543403"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"e0543403"},"content":"    public void hasSameUniqueFieldTest() {","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"e0543403"},"content":"        // null person -\u003e return false","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"e0543403"},"content":"        assertFalse(ALICE.hasSameUniqueField(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"e0543403"},"content":"        // same person -\u003e return true","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"e0543403"},"content":"        assertTrue(ALICE.hasSameUniqueField(ALICE));","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"e0543403"},"content":"        // person with no similar unique field -\u003e return false","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"e0543403"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withEmptyEmail().withEmptyGithub()","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"e0543403"},"content":"                .withEmptyLinkedin().withEmptyPhone().build();","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"e0543403"},"content":"        assertFalse(ALICE.hasSameUniqueField(editedAlice));","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"e0543403"},"content":"        // person with similar phone -\u003e return true","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"e0543403"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmptyEmail().withEmptyGithub()","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"e0543403"},"content":"                .withEmptyLinkedin().build();","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"e0543403"},"content":"        assertTrue(ALICE.hasSameUniqueField(editedAlice));","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"e0543403"},"content":"        // person with similar linkedin -\u003e return true","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"e0543403"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmptyEmail().withEmptyGithub()","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"e0543403"},"content":"                .withEmptyPhone().build();","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"e0543403"},"content":"        assertTrue(ALICE.hasSameUniqueField(editedAlice));","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"e0543403"},"content":"        // person with similar github -\u003e return true","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"e0543403"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmptyEmail()","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"e0543403"},"content":"                .withEmptyLinkedin().withEmptyPhone().build();","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"e0543403"},"content":"        assertTrue(ALICE.hasSameUniqueField(editedAlice));","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"e0543403"},"content":"        // person with similar email -\u003e return true","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"e0543403"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmptyGithub()","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"e0543403"},"content":"                .withEmptyLinkedin().withEmptyPhone().build();","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"e0543403"},"content":"        assertTrue(ALICE.hasSameUniqueField(editedAlice));","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"e0543403"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"e0543403"},"content":"    public void hasEmptyUniqueFieldsTest() {","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"e0543403"},"content":"        // all fields empty -\u003e returns true","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"e0543403"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withEmptyEmail().withEmptyGithub()","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"e0543403"},"content":"                .withEmptyLinkedin().withEmptyPhone().build();","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"e0543403"},"content":"        assertTrue(editedAlice.hasEmptyUniqueFields());","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"e0543403"},"content":"        // all fields empty except phone -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"e0543403"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmptyEmail().withEmptyGithub()","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"e0543403"},"content":"                .withEmptyLinkedin().build();","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"e0543403"},"content":"        assertFalse(editedAlice.hasEmptyUniqueFields());","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"e0543403"},"content":"        // all fields empty except linkedin -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":150,"author":{"gitId":"e0543403"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmptyEmail().withEmptyGithub()","lastModifiedDate":"2021-10-24"},{"lineNumber":151,"author":{"gitId":"e0543403"},"content":"                .withEmptyPhone().build();","lastModifiedDate":"2021-10-24"},{"lineNumber":152,"author":{"gitId":"e0543403"},"content":"        assertFalse(editedAlice.hasEmptyUniqueFields());","lastModifiedDate":"2021-10-24"},{"lineNumber":153,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":154,"author":{"gitId":"e0543403"},"content":"        // all fields empty except github -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":155,"author":{"gitId":"e0543403"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmptyEmail()","lastModifiedDate":"2021-10-24"},{"lineNumber":156,"author":{"gitId":"e0543403"},"content":"                .withEmptyLinkedin().withEmptyPhone().build();","lastModifiedDate":"2021-10-24"},{"lineNumber":157,"author":{"gitId":"e0543403"},"content":"        assertFalse(editedAlice.hasEmptyUniqueFields());","lastModifiedDate":"2021-10-24"},{"lineNumber":158,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":159,"author":{"gitId":"e0543403"},"content":"        // all fields empty except email -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":160,"author":{"gitId":"e0543403"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmptyGithub()","lastModifiedDate":"2021-10-24"},{"lineNumber":161,"author":{"gitId":"e0543403"},"content":"                .withEmptyLinkedin().withEmptyPhone().build();","lastModifiedDate":"2021-10-24"},{"lineNumber":162,"author":{"gitId":"e0543403"},"content":"        assertFalse(editedAlice.hasEmptyUniqueFields());","lastModifiedDate":"2021-10-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"e0543403":115,"-":84}},{"path":"src/test/java/seedu/address/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"e0543403"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"e0543403"},"content":"    public void isEmptyTest() {","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"e0543403"},"content":"        assertTrue(Phone.getEmptyPhone().isEmpty());","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"e0543403"},"content":"        assertFalse(new Phone(\"911\").isEmpty());","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"e0543403"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"e0543403"},"content":"    public void isSamePhoneTest() {","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"e0543403"},"content":"        Phone emptyPhone \u003d Phone.getEmptyPhone();","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"e0543403"},"content":"        Phone otherEmptyPhone \u003d Phone.getEmptyPhone();","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"e0543403"},"content":"        Phone firstPhone \u003d new Phone(\"999\");","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"e0543403"},"content":"        Phone secondPhone \u003d new Phone(\"911\");","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"e0543403"},"content":"        Phone sameFirstPhone \u003d new Phone(\"999\");","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"e0543403"},"content":"        // null phone number","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"e0543403"},"content":"        assertFalse(firstPhone.isSamePhone(null));","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"e0543403"},"content":"        // empty phone number - not the same as any phone number","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"e0543403"},"content":"        assertFalse(emptyPhone.isSamePhone(firstPhone));","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"e0543403"},"content":"        assertFalse(emptyPhone.isSamePhone(emptyPhone));","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"e0543403"},"content":"        assertFalse(emptyPhone.isSamePhone(otherEmptyPhone));","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"e0543403"},"content":"        assertFalse(otherEmptyPhone.isSamePhone(emptyPhone));","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"e0543403"},"content":"        // different phone number","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"e0543403"},"content":"        assertFalse(firstPhone.isSamePhone(secondPhone));","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"e0543403"},"content":"        assertFalse(firstPhone.isSamePhone(emptyPhone));","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"e0543403"},"content":"        // similar phone number","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"e0543403"},"content":"        assertTrue(firstPhone.isSamePhone(firstPhone));","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"e0543403"},"content":"        assertTrue(firstPhone.isSamePhone(sameFirstPhone));","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"e0543403":32,"-":40}},{"path":"src/test/java/seedu/address/model/person/TagsPresentPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromewjj"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"jeromewjj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"jeromewjj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"jeromewjj"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"jeromewjj"},"content":"import java.util.List;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"jeromewjj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"jeromewjj"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"jeromewjj"},"content":"public class TagsPresentPredicateTest {","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"jeromewjj"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"jeromewjj"},"content":"    public void test1() {","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"jeromewjj"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"jeromewjj"},"content":"    public void equals() {","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"jeromewjj"},"content":"        List\u003cString\u003e firstTag \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"jeromewjj"},"content":"        List\u003cString\u003e secondTag \u003d Collections.singletonList(\"second\");","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"jeromewjj"},"content":"        TagsPresentPredicate firstPredicate \u003d new TagsPresentPredicate(firstTag);","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"jeromewjj"},"content":"        TagsPresentPredicate secondPredicate \u003d new TagsPresentPredicate(secondTag);","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"jeromewjj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"jeromewjj"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"jeromewjj"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"jeromewjj"},"content":"        TagsPresentPredicate firstPredicateCopy \u003d new TagsPresentPredicate(firstTag);","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"jeromewjj"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"jeromewjj"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"jeromewjj"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"jeromewjj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"jeromewjj"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"jeromewjj"},"content":"        // different predicate -\u003e returns false","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"jeromewjj"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"jeromewjj"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"jeromewjj"},"content":"    public void test_tagPresent_returnsTrue() {","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"jeromewjj"},"content":"        // Normal Tag","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"jeromewjj"},"content":"        TagsPresentPredicate predicate \u003d new TagsPresentPredicate(Collections.singletonList(\"friend\"));","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"jeromewjj"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").withTags(\"friend\").build()));","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"jeromewjj"},"content":"        // Tag with mixed-case","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"jeromewjj"},"content":"        predicate \u003d new TagsPresentPredicate(Collections.singletonList(\"fRieNd\"));","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"jeromewjj"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").withTags(\"friend\").build()));","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"jeromewjj"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"jeromewjj"},"content":"    public void test_tagNotPresent_returnsFalse() {","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"jeromewjj"},"content":"        TagsPresentPredicate predicate \u003d new TagsPresentPredicate(Collections.singletonList(\"friend\"));","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"jeromewjj"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"jeromewjj"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"jeromewjj":62}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"e0543403"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"e0543403"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GITHUB_AMY;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"e0543403"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LINKEDIN_AMY;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"e0543403"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"e0543403"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"jeromewjj"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"e0543403"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"e0543403"},"content":"    public void contains_personWithNoSameIdentityFieldsInList_returnsFalse() {","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"e0543403"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"e0543403"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_AMY).withLinkedIn(VALID_LINKEDIN_AMY)","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"e0543403"},"content":"                .withGithub(VALID_GITHUB_AMY).withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"e0543403"},"content":"        assertFalse(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"e0543403"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"e0543403"},"content":"    public void containsExcludingPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"e0543403"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.containsExcludingPerson(null, ALICE));","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"e0543403"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.containsExcludingPerson(ALICE, null));","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"e0543403"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"e0543403"},"content":"    public void containsExcludingPerson_personInList_returnsTrue() {","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"e0543403"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"e0543403"},"content":"        assertTrue(uniquePersonList.containsExcludingPerson(ALICE, BENSON));","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"e0543403"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"e0543403"},"content":"    public void containsExcludingPerson_personInList_returnsFalse() {","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"e0543403"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"e0543403"},"content":"        assertFalse(uniquePersonList.containsExcludingPerson(ALICE, ALICE));","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"e0543403"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"e0543403"},"content":"    public void containsExcludingPerson_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"e0543403"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"e0543403"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"e0543403"},"content":"                .build();","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"e0543403"},"content":"        assertTrue(uniquePersonList.containsExcludingPerson(editedAlice, BENSON));","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"e0543403"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"e0543403"},"content":"    public void containsExcludingPerson_personWithSameIdentityFieldsInList_returnsFalse() {","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"e0543403"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"e0543403"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"e0543403"},"content":"                .build();","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"e0543403"},"content":"        assertFalse(uniquePersonList.containsExcludingPerson(editedAlice, ALICE));","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"e0543403"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"e0543403"},"content":"    public void containsExcludingPerson_personWithNoSameIdentityFieldsInList_returnsFalse() {","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"e0543403"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"e0543403"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_AMY).withLinkedIn(VALID_LINKEDIN_AMY)","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"e0543403"},"content":"                .withGithub(VALID_GITHUB_AMY).withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"e0543403"},"content":"        assertFalse(uniquePersonList.containsExcludingPerson(editedAlice, ALICE));","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"e0543403"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"e0543403"},"content":"    public void containsExcludingPerson_anotherPersonWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"e0543403"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"e0543403"},"content":"        uniquePersonList.add(BENSON);","lastModifiedDate":"2021-11-04"},{"lineNumber":108,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":109,"author":{"gitId":"e0543403"},"content":"        assertTrue(uniquePersonList.containsExcludingPerson(BENSON, ALICE));","lastModifiedDate":"2021-11-04"},{"lineNumber":110,"author":{"gitId":"e0543403"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":111,"author":{"gitId":"e0543403"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"jeromewjj"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-09-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"e0543403":63,"jeromewjj":2,"-":167}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"jeromewjj"},"content":"import static seedu.address.testutil.TypicalPersons.JOHN;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"DystoriaX"},"content":"import seedu.address.model.person.Detail;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.person.Github;","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"CommanderW324"},"content":"import seedu.address.model.person.LinkedIn;","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"samyipsh"},"content":"    private static final String INVALID_GITHUB \u003d \"sam--yipsh\"; //consecutive hyphens not allowed","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"CommanderW324"},"content":"    private static final String INVALID_LINKEDIN \u003d \"google.com/hello\";","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"samyipsh"},"content":"    private static final String VALID_GITHUB \u003d BENSON.getGithub().toString();","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"DystoriaX"},"content":"    private static final String VALID_LINKEDIN \u003d BENSON.getLinkedin().toString();","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"DystoriaX"},"content":"    private static final String VALID_DETAIL \u003d BENSON.getDetail().toString();","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"jeromewjj"},"content":"    private static final String NON_EMPTY_VALID_NAME \u003d JOHN.getName().toString();","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"jeromewjj"},"content":"    private static final String NON_EMPTY_VALID_PHONE \u003d JOHN.getPhone().toString();","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"jeromewjj"},"content":"    private static final String EMPTY_EMAIL \u003d JOHN.getEmail().toString();","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"jeromewjj"},"content":"    private static final String EMPTY_GITHUB \u003d JOHN.getGithub().toString();","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"jeromewjj"},"content":"    private static final String EMPTY_LINKEDIN \u003d JOHN.getLinkedin().toString();","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"jeromewjj"},"content":"    private static final String EMPTY_DETAIL \u003d JOHN.getDetail().toString();","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"jeromewjj"},"content":"    private static final List\u003cJsonAdaptedTag\u003e EMPTY_TAGS \u003d JOHN.getTags().stream()","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"jeromewjj"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"jeromewjj"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"CommanderW324"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"DystoriaX"},"content":"                VALID_GITHUB, VALID_LINKEDIN, VALID_DETAIL, VALID_TAGS);","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"jeromewjj"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"DystoriaX"},"content":"                VALID_GITHUB, VALID_LINKEDIN, VALID_DETAIL, VALID_TAGS);","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"jeromewjj"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"DystoriaX"},"content":"                VALID_GITHUB, VALID_LINKEDIN, VALID_DETAIL, VALID_TAGS);","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"samyipsh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL,","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"DystoriaX"},"content":"                VALID_GITHUB, VALID_LINKEDIN, VALID_DETAIL, VALID_TAGS);","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"CommanderW324"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL,","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"DystoriaX"},"content":"                VALID_GITHUB, VALID_LINKEDIN, VALID_DETAIL, VALID_TAGS);","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"samyipsh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null,","lastModifiedDate":"2021-10-05"},{"lineNumber":100,"author":{"gitId":"DystoriaX"},"content":"                VALID_GITHUB, VALID_LINKEDIN, VALID_DETAIL, VALID_TAGS);","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"samyipsh"},"content":"    public void toModelType_invalidGithub_throwsIllegalValueException() {","lastModifiedDate":"2021-09-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"CommanderW324"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"DystoriaX"},"content":"                        INVALID_GITHUB, VALID_LINKEDIN, VALID_DETAIL, VALID_TAGS);","lastModifiedDate":"2021-10-06"},{"lineNumber":110,"author":{"gitId":"samyipsh"},"content":"        String expectedMessage \u003d Github.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-09-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"samyipsh"},"content":"    public void toModelType_nullGithub_throwsIllegalValueException() {","lastModifiedDate":"2021-09-30"},{"lineNumber":116,"author":{"gitId":"samyipsh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-05"},{"lineNumber":117,"author":{"gitId":"DystoriaX"},"content":"                null, VALID_LINKEDIN, VALID_DETAIL, VALID_TAGS);","lastModifiedDate":"2021-10-06"},{"lineNumber":118,"author":{"gitId":"samyipsh"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Github.class.getSimpleName());","lastModifiedDate":"2021-09-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"samyipsh"},"content":"    @Test","lastModifiedDate":"2021-09-30"},{"lineNumber":123,"author":{"gitId":"CommanderW324"},"content":"    public void toModelType_invalidlinkedIn_throwsIllegalValueException() {","lastModifiedDate":"2021-10-03"},{"lineNumber":124,"author":{"gitId":"CommanderW324"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE,","lastModifiedDate":"2021-10-03"},{"lineNumber":125,"author":{"gitId":"DystoriaX"},"content":"                VALID_EMAIL, VALID_GITHUB, INVALID_LINKEDIN, VALID_DETAIL, VALID_TAGS);","lastModifiedDate":"2021-10-06"},{"lineNumber":126,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":129,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":130,"author":{"gitId":"samyipsh"},"content":"    @Test","lastModifiedDate":"2021-09-30"},{"lineNumber":131,"author":{"gitId":"CommanderW324"},"content":"    public void toModelType_nullLinkedIn_throwsIllegalValueException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":132,"author":{"gitId":"samyipsh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-05"},{"lineNumber":133,"author":{"gitId":"DystoriaX"},"content":"                VALID_GITHUB, null, VALID_DETAIL, VALID_TAGS);","lastModifiedDate":"2021-10-06"},{"lineNumber":134,"author":{"gitId":"CommanderW324"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, LinkedIn.class.getSimpleName());","lastModifiedDate":"2021-10-06"},{"lineNumber":135,"author":{"gitId":"samyipsh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-09-30"},{"lineNumber":136,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":137,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":138,"author":{"gitId":"DystoriaX"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":139,"author":{"gitId":"DystoriaX"},"content":"    public void toModelType_nullDetail_throwsIllegalValueException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":140,"author":{"gitId":"DystoriaX"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-06"},{"lineNumber":141,"author":{"gitId":"DystoriaX"},"content":"                VALID_GITHUB, VALID_LINKEDIN, null, VALID_TAGS);","lastModifiedDate":"2021-10-06"},{"lineNumber":142,"author":{"gitId":"DystoriaX"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Detail.class.getSimpleName());","lastModifiedDate":"2021-10-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":150,"author":{"gitId":"DystoriaX"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-06"},{"lineNumber":151,"author":{"gitId":"DystoriaX"},"content":"                        VALID_GITHUB, VALID_LINKEDIN, VALID_DETAIL, invalidTags);","lastModifiedDate":"2021-10-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":155,"author":{"gitId":"DystoriaX"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":156,"author":{"gitId":"DystoriaX"},"content":"    public void toModelType_validlinkedIn_returnsPerson() throws Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":157,"author":{"gitId":"DystoriaX"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":158,"author":{"gitId":"DystoriaX"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-06"},{"lineNumber":159,"author":{"gitId":"DystoriaX"},"content":"                        VALID_GITHUB, VALID_LINKEDIN, VALID_DETAIL, VALID_TAGS);","lastModifiedDate":"2021-10-06"},{"lineNumber":160,"author":{"gitId":"DystoriaX"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2021-10-06"},{"lineNumber":161,"author":{"gitId":"DystoriaX"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":162,"author":{"gitId":"CommanderW324"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":163,"author":{"gitId":"jeromewjj"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":164,"author":{"gitId":"jeromewjj"},"content":"    public void toModelType_validEmptyFieldPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":165,"author":{"gitId":"jeromewjj"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":166,"author":{"gitId":"jeromewjj"},"content":"                new JsonAdaptedPerson(NON_EMPTY_VALID_NAME, NON_EMPTY_VALID_PHONE, EMPTY_EMAIL,","lastModifiedDate":"2021-10-11"},{"lineNumber":167,"author":{"gitId":"jeromewjj"},"content":"                        EMPTY_GITHUB, EMPTY_LINKEDIN, EMPTY_DETAIL, EMPTY_TAGS);","lastModifiedDate":"2021-10-11"},{"lineNumber":168,"author":{"gitId":"jeromewjj"},"content":"        assertEquals(JOHN, person.toModelType());","lastModifiedDate":"2021-10-11"},{"lineNumber":169,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":170,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"samyipsh":18,"CommanderW324":11,"jeromewjj":20,"-":95,"DystoriaX":27}},{"path":"src/test/java/seedu/address/storage/JsonContactBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samyipsh"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-11-05"},{"lineNumber":2,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"samyipsh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"samyipsh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"samyipsh"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"samyipsh"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"samyipsh"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"samyipsh"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"samyipsh"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"samyipsh"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"samyipsh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"samyipsh"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"samyipsh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"samyipsh"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"samyipsh"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.ContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.ReadOnlyContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"samyipsh"},"content":"public class JsonContactBookStorageTest {","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"samyipsh"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonContactBookStorageTest\");","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"samyipsh"},"content":"    @TempDir","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"samyipsh"},"content":"    public Path testFolder;","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"samyipsh"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"samyipsh"},"content":"    public void readContactBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"samyipsh"},"content":"        assertThrows(NullPointerException.class, () -\u003e readContactBook(null));","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"samyipsh"},"content":"    private java.util.Optional\u003cReadOnlyContactBook\u003e readContactBook(String filePath) throws Exception {","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"samyipsh"},"content":"        return new JsonContactBookStorage(Paths.get(filePath)).readContactBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"samyipsh"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"samyipsh"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"samyipsh"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"samyipsh"},"content":"                : null;","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"samyipsh"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"samyipsh"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"samyipsh"},"content":"        assertFalse(readContactBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"samyipsh"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"samyipsh"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"samyipsh"},"content":"        assertThrows(DataConversionException.class, () -\u003e readContactBook(\"notJsonFormatContactBook.json\"));","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"samyipsh"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"samyipsh"},"content":"    public void readContactBook_invalidPersonContactBook_throwDataConversionException() {","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"samyipsh"},"content":"        assertThrows(DataConversionException.class, () -\u003e readContactBook(\"invalidPersonContactBook.json\"));","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"samyipsh"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"samyipsh"},"content":"    public void readContactBook_invalidAndValidPersonContactBook_throwDataConversionException() {","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"samyipsh"},"content":"        assertThrows(DataConversionException.class, () -\u003e readContactBook(\"invalidAndValidPersonContactBook.json\"));","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"samyipsh"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"samyipsh"},"content":"    public void readAndSaveContactBook_allInOrder_success() throws Exception {","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"samyipsh"},"content":"        Path filePath \u003d testFolder.resolve(\"TempContactBook.json\");","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"samyipsh"},"content":"        ContactBook original \u003d getTypicalContactBook();","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"samyipsh"},"content":"        JsonContactBookStorage jsonContactBookStorage \u003d new JsonContactBookStorage(filePath);","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":69,"author":{"gitId":"samyipsh"},"content":"        // Save in new file and read back","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"samyipsh"},"content":"        jsonContactBookStorage.saveContactBook(original, filePath);","lastModifiedDate":"2021-11-05"},{"lineNumber":71,"author":{"gitId":"samyipsh"},"content":"        ReadOnlyContactBook readBack \u003d jsonContactBookStorage.readContactBook(filePath).get();","lastModifiedDate":"2021-11-05"},{"lineNumber":72,"author":{"gitId":"samyipsh"},"content":"        assertEquals(original, new ContactBook(readBack));","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"samyipsh"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"samyipsh"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"samyipsh"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"samyipsh"},"content":"        jsonContactBookStorage.saveContactBook(original, filePath);","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"samyipsh"},"content":"        readBack \u003d jsonContactBookStorage.readContactBook(filePath).get();","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"samyipsh"},"content":"        assertEquals(original, new ContactBook(readBack));","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":81,"author":{"gitId":"samyipsh"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"samyipsh"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2021-11-05"},{"lineNumber":83,"author":{"gitId":"samyipsh"},"content":"        jsonContactBookStorage.saveContactBook(original); // file path not specified","lastModifiedDate":"2021-11-05"},{"lineNumber":84,"author":{"gitId":"samyipsh"},"content":"        readBack \u003d jsonContactBookStorage.readContactBook().get(); // file path not specified","lastModifiedDate":"2021-11-05"},{"lineNumber":85,"author":{"gitId":"samyipsh"},"content":"        assertEquals(original, new ContactBook(readBack));","lastModifiedDate":"2021-11-05"},{"lineNumber":86,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":87,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":88,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":89,"author":{"gitId":"samyipsh"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":90,"author":{"gitId":"samyipsh"},"content":"    public void saveContactBook_nullContactBook_throwsNullPointerException() {","lastModifiedDate":"2021-11-05"},{"lineNumber":91,"author":{"gitId":"samyipsh"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveContactBook(null, \"SomeFile.json\"));","lastModifiedDate":"2021-11-05"},{"lineNumber":92,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":93,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":94,"author":{"gitId":"samyipsh"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":95,"author":{"gitId":"samyipsh"},"content":"     * Saves {@code contactBook} at the specified {@code filePath}.","lastModifiedDate":"2021-11-05"},{"lineNumber":96,"author":{"gitId":"samyipsh"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":97,"author":{"gitId":"samyipsh"},"content":"    private void saveContactBook(ReadOnlyContactBook contactBook, String filePath) {","lastModifiedDate":"2021-11-05"},{"lineNumber":98,"author":{"gitId":"samyipsh"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":99,"author":{"gitId":"samyipsh"},"content":"            new JsonContactBookStorage(Paths.get(filePath))","lastModifiedDate":"2021-11-05"},{"lineNumber":100,"author":{"gitId":"samyipsh"},"content":"                    .saveContactBook(contactBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-11-05"},{"lineNumber":101,"author":{"gitId":"samyipsh"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-11-05"},{"lineNumber":102,"author":{"gitId":"samyipsh"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2021-11-05"},{"lineNumber":103,"author":{"gitId":"samyipsh"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":104,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":105,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":106,"author":{"gitId":"samyipsh"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":107,"author":{"gitId":"samyipsh"},"content":"    public void saveContactBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-11-05"},{"lineNumber":108,"author":{"gitId":"samyipsh"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveContactBook(new ContactBook(), null));","lastModifiedDate":"2021-11-05"},{"lineNumber":109,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":110,"author":{"gitId":"samyipsh"},"content":"}","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"samyipsh":110}},{"path":"src/test/java/seedu/address/storage/JsonSerializableContactBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.ContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"samyipsh"},"content":"public class JsonSerializableContactBookTest {","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"samyipsh"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableContactBookTest\");","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"samyipsh"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsContactBook.json\");","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"samyipsh"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonContactBook.json\");","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"samyipsh"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonContactBook.json\");","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"samyipsh"},"content":"        JsonSerializableContactBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"samyipsh"},"content":"                JsonSerializableContactBook.class).get();","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"samyipsh"},"content":"        ContactBook contactBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"samyipsh"},"content":"        ContactBook typicalPersonsContactBook \u003d TypicalPersons.getTypicalContactBook();","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"samyipsh"},"content":"        assertEquals(contactBookFromFile, typicalPersonsContactBook);","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"samyipsh"},"content":"        JsonSerializableContactBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"samyipsh"},"content":"                JsonSerializableContactBook.class).get();","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"samyipsh"},"content":"        JsonSerializableContactBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"samyipsh"},"content":"                JsonSerializableContactBook.class).get();","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"samyipsh"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableContactBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"samyipsh":16,"-":31}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"samyipsh"},"content":"        userPrefs.setContactBookFilePath(Paths.get(\"contactbook.json\"));","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"samyipsh":1,"-":122}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"samyipsh"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.ContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.ReadOnlyContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"samyipsh"},"content":"        JsonContactBookStorage contactBookStorage \u003d new JsonContactBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"samyipsh"},"content":"        storageManager \u003d new StorageManager(contactBookStorage, userPrefsStorage);","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"samyipsh"},"content":"    public void contactBookReadSave() throws Exception {","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"samyipsh"},"content":"         * {@link JsonContactBookStorage} class.","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"samyipsh"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonContactBookStorageTest} class.","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"samyipsh"},"content":"        ContactBook original \u003d getTypicalContactBook();","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"samyipsh"},"content":"        storageManager.saveContactBook(original);","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"samyipsh"},"content":"        ReadOnlyContactBook retrieved \u003d storageManager.readContactBook().get();","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"samyipsh"},"content":"        assertEquals(original, new ContactBook(retrieved));","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"samyipsh"},"content":"    public void getContactBookFilePath() {","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"samyipsh"},"content":"        assertNotNull(storageManager.getContactBookFilePath());","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"samyipsh":14,"-":54}},{"path":"src/test/java/seedu/address/testutil/ContactBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samyipsh"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-11-05"},{"lineNumber":2,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.ContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"samyipsh"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"e0543403"},"content":" * A utility class to help with building Contactbook objects.","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"samyipsh"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"samyipsh"},"content":" *     {@code ContactBook ab \u003d new ContactBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"samyipsh"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"samyipsh"},"content":"public class ContactBookBuilder {","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"e0543403"},"content":"    private ContactBook contactBook;","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"samyipsh"},"content":"    public ContactBookBuilder() {","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"e0543403"},"content":"        contactBook \u003d new ContactBook();","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"e0543403"},"content":"    public ContactBookBuilder(ContactBook contactBook) {","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"e0543403"},"content":"        this.contactBook \u003d contactBook;","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"samyipsh"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"samyipsh"},"content":"     * Adds a new {@code Person} to the {@code ContactBook} that we are building.","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"samyipsh"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"samyipsh"},"content":"    public ContactBookBuilder withPerson(Person person) {","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"e0543403"},"content":"        contactBook.addPerson(person);","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"samyipsh"},"content":"        return this;","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"samyipsh"},"content":"    public ContactBook build() {","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"e0543403"},"content":"        return contactBook;","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"samyipsh"},"content":"}","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"samyipsh":27,"e0543403":7}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"DystoriaX"},"content":"import seedu.address.model.person.Detail;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.person.Github;","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"CommanderW324"},"content":"import seedu.address.model.person.LinkedIn;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"samyipsh"},"content":"        descriptor.setGithub(person.getGithub());","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"CommanderW324"},"content":"        descriptor.setLinkedIn(person.getLinkedin());","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"DystoriaX"},"content":"        descriptor.setDetail(person.getDetail());","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"samyipsh"},"content":"     * Sets the {@code Github} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-09-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"samyipsh"},"content":"    public EditPersonDescriptorBuilder withGithub(String github) {","lastModifiedDate":"2021-09-30"},{"lineNumber":74,"author":{"gitId":"samyipsh"},"content":"        descriptor.setGithub(new Github(github));","lastModifiedDate":"2021-09-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":78,"author":{"gitId":"samyipsh"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":79,"author":{"gitId":"CommanderW324"},"content":"     * Sets the {@code LinkedIn} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"samyipsh"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":81,"author":{"gitId":"CommanderW324"},"content":"    public EditPersonDescriptorBuilder withLinkedIn(String linkedin) {","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"CommanderW324"},"content":"        descriptor.setLinkedIn(new LinkedIn(linkedin));","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"samyipsh"},"content":"        return this;","lastModifiedDate":"2021-09-30"},{"lineNumber":84,"author":{"gitId":"samyipsh"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":85,"author":{"gitId":"samyipsh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":86,"author":{"gitId":"DystoriaX"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"DystoriaX"},"content":"     * Sets the {@code Detail} of the {@Code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"DystoriaX"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"DystoriaX"},"content":"    public EditPersonDescriptorBuilder withDetail(String detail) {","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"DystoriaX"},"content":"        descriptor.setDetail(new Detail(detail));","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"samyipsh":10,"CommanderW324":5,"-":85,"DystoriaX":7}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"DystoriaX"},"content":"import seedu.address.model.person.Detail;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.person.Github;","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"CommanderW324"},"content":"import seedu.address.model.person.LinkedIn;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"samyipsh"},"content":"    public static final String DEFAULT_GITHUB \u003d \"amyio\";","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"CommanderW324"},"content":"    public static final String DEFAULT_LINKEDIN \u003d \"https://www.linkedin.com/in/amybee/\";","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"DystoriaX"},"content":"    public static final String DEFAULT_DETAIL \u003d \"\";","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"samyipsh"},"content":"    private Github github;","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"CommanderW324"},"content":"    private LinkedIn linkedin;","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"DystoriaX"},"content":"    private Detail detail;","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"samyipsh"},"content":"        github \u003d new Github(DEFAULT_GITHUB);","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"CommanderW324"},"content":"        linkedin \u003d new LinkedIn(DEFAULT_LINKEDIN);","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"DystoriaX"},"content":"        detail \u003d new Detail(DEFAULT_DETAIL);","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"samyipsh"},"content":"        github \u003d personToCopy.getGithub();","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"CommanderW324"},"content":"        linkedin \u003d personToCopy.getLinkedin();","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"DystoriaX"},"content":"        detail \u003d personToCopy.getDetail();","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"e0543403"},"content":"     * Sets the {@code Github} of the {@code Person} that we are building.","lastModifiedDate":"2021-11-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"samyipsh"},"content":"    public PersonBuilder withGithub(String github) {","lastModifiedDate":"2021-09-30"},{"lineNumber":82,"author":{"gitId":"samyipsh"},"content":"        this.github \u003d new Github(github);","lastModifiedDate":"2021-09-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"samyipsh"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":87,"author":{"gitId":"e0543403"},"content":"     * Sets the {@code Linkedin} of the {@code Person} that we are building.","lastModifiedDate":"2021-11-07"},{"lineNumber":88,"author":{"gitId":"samyipsh"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":89,"author":{"gitId":"CommanderW324"},"content":"    public PersonBuilder withLinkedIn(String linkedin) {","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"CommanderW324"},"content":"        this.linkedin \u003d new LinkedIn(linkedin);","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-09-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":110,"author":{"gitId":"DystoriaX"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"DystoriaX"},"content":"     * Sets the {@code Detail} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"DystoriaX"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"DystoriaX"},"content":"    public PersonBuilder withDetail(String detail) {","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"DystoriaX"},"content":"        this.detail \u003d new Detail(detail);","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"DystoriaX"},"content":"        return this;","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"DystoriaX"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"DystoriaX"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":118,"author":{"gitId":"jeromewjj"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"jeromewjj"},"content":"     * Build person with empty phone.","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"jeromewjj"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"jeromewjj"},"content":"     * @return PersonBuilder with empty phone.","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"jeromewjj"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"jeromewjj"},"content":"    public PersonBuilder withEmptyPhone() {","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"jeromewjj"},"content":"        this.phone \u003d Phone.getEmptyPhone();","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"jeromewjj"},"content":"        return this;","lastModifiedDate":"2021-10-11"},{"lineNumber":126,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"jeromewjj"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"jeromewjj"},"content":"     * Build person with empty email.","lastModifiedDate":"2021-10-11"},{"lineNumber":130,"author":{"gitId":"jeromewjj"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":131,"author":{"gitId":"jeromewjj"},"content":"     * @return PersonBuilder with empty email.","lastModifiedDate":"2021-10-11"},{"lineNumber":132,"author":{"gitId":"jeromewjj"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":133,"author":{"gitId":"jeromewjj"},"content":"    public PersonBuilder withEmptyEmail() {","lastModifiedDate":"2021-10-11"},{"lineNumber":134,"author":{"gitId":"jeromewjj"},"content":"        this.email \u003d Email.getEmptyEmail();","lastModifiedDate":"2021-10-11"},{"lineNumber":135,"author":{"gitId":"jeromewjj"},"content":"        return this;","lastModifiedDate":"2021-10-11"},{"lineNumber":136,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":137,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":138,"author":{"gitId":"jeromewjj"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":139,"author":{"gitId":"jeromewjj"},"content":"     * Build person with empty Github.","lastModifiedDate":"2021-10-11"},{"lineNumber":140,"author":{"gitId":"jeromewjj"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":141,"author":{"gitId":"jeromewjj"},"content":"     * @return PersonBuilder with empty Github.","lastModifiedDate":"2021-10-11"},{"lineNumber":142,"author":{"gitId":"jeromewjj"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":143,"author":{"gitId":"jeromewjj"},"content":"    public PersonBuilder withEmptyGithub() {","lastModifiedDate":"2021-10-11"},{"lineNumber":144,"author":{"gitId":"jeromewjj"},"content":"        this.github \u003d Github.getEmptyGithub();","lastModifiedDate":"2021-10-11"},{"lineNumber":145,"author":{"gitId":"jeromewjj"},"content":"        return this;","lastModifiedDate":"2021-10-11"},{"lineNumber":146,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":147,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":148,"author":{"gitId":"jeromewjj"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":149,"author":{"gitId":"jeromewjj"},"content":"     * Build person with empty LinkedIn.","lastModifiedDate":"2021-10-11"},{"lineNumber":150,"author":{"gitId":"jeromewjj"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":151,"author":{"gitId":"jeromewjj"},"content":"     * @return PersonBuilder with empty LinkedIn.","lastModifiedDate":"2021-10-11"},{"lineNumber":152,"author":{"gitId":"jeromewjj"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":153,"author":{"gitId":"jeromewjj"},"content":"    public PersonBuilder withEmptyLinkedin() {","lastModifiedDate":"2021-10-11"},{"lineNumber":154,"author":{"gitId":"jeromewjj"},"content":"        this.linkedin \u003d LinkedIn.getEmptyLinkedin();","lastModifiedDate":"2021-10-11"},{"lineNumber":155,"author":{"gitId":"jeromewjj"},"content":"        return this;","lastModifiedDate":"2021-10-11"},{"lineNumber":156,"author":{"gitId":"jeromewjj"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":157,"author":{"gitId":"jeromewjj"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":159,"author":{"gitId":"DystoriaX"},"content":"        return new Person(name, phone, email, github, linkedin, detail, tags);","lastModifiedDate":"2021-10-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"samyipsh":9,"e0543403":2,"CommanderW324":7,"jeromewjj":40,"-":90,"DystoriaX":14}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"DystoriaX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DETAIL;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"samyipsh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GITHUB;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"CommanderW324"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LINKEDIN;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"samyipsh"},"content":"        sb.append(PREFIX_GITHUB + person.getGithub().githubUsername + \" \");","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"CommanderW324"},"content":"        sb.append(PREFIX_LINKEDIN + person.getLinkedin().value + \" \");","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"DystoriaX"},"content":"        sb.append(PREFIX_DETAIL + person.getDetail().value + \" \");","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"samyipsh"},"content":"        descriptor.getGithub().ifPresent(github -\u003e sb.append(PREFIX_GITHUB).append(github.githubUsername).append(\" \"));","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"CommanderW324"},"content":"        descriptor.getLinkedIn().ifPresent(linkedin -\u003e sb.append(PREFIX_LINKEDIN).append(linkedin.value).append(\" \"));","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"DystoriaX"},"content":"        descriptor.getDetail().ifPresent(detail -\u003e sb.append(PREFIX_DETAIL).append(detail.value).append(\" \"));","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"samyipsh":3,"CommanderW324":3,"-":59,"DystoriaX":3}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"samyipsh"},"content":"    public static final Index INDEX_EMPTY_FIELD_PERSON \u003d Index.fromOneBased(7);","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"samyipsh":1,"-":12}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"DystoriaX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DETAIL_AMY;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"DystoriaX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DETAIL_BOB;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"samyipsh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GITHUB_AMY;","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"samyipsh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GITHUB_BOB;","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"CommanderW324"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LINKEDIN_AMY;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"CommanderW324"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LINKEDIN_BOB;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"samyipsh"},"content":"import seedu.address.model.ContactBook;","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"jeromewjj"},"content":"            .withEmail(\"alice@example.com\")","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"samyipsh"},"content":"            .withGithub(\"aliceio\")","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"CommanderW324"},"content":"            .withLinkedIn(\"https://www.linkedin.com/in/alice/\")","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"DystoriaX"},"content":"            .withDetail(\"Y1 CS\")","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"CommanderW324"},"content":"            .withGithub(\"bensonio\").withLinkedIn(\"https://www.linkedin.com/in/benson/\")","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"DystoriaX"},"content":"            .withDetail(\"Y2 CS\").withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"jeromewjj"},"content":"            .withEmail(\"heinz@example.com\")","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"CommanderW324"},"content":"            .withGithub(\"carlio\").withLinkedIn(\"https://www.linkedin.com/in/carljkurtz/\").build();","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"jeromewjj"},"content":"            .withEmail(\"cornelia@example.com\").withGithub(\"danielio\")","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"jeromewjj"},"content":"            .withLinkedIn(\"https://www.linkedin.com/in/danya/\").withTags(\"friends\").build();","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"jeromewjj"},"content":"            .withEmail(\"werner@example.com\").withLinkedIn(\"https://www.linkedin.com/in/elle/\")","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"jeromewjj"},"content":"            .withGithub(\"elleio\").build();","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"jeromewjj"},"content":"            .withEmail(\"lydia@example.com\").withGithub(\"fionaio\")","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"jeromewjj"},"content":"            .withLinkedIn(\"https://www.linkedin.com/in/fiona/\").build();","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"jeromewjj"},"content":"            .withEmail(\"anna@example.com\").withGithub(\"georgeio\")","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"jeromewjj"},"content":"            .withLinkedIn(\"https://www.linkedin.com/in/georges/\").build();","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"jeromewjj"},"content":"            .withEmail(\"stefan@example.com\").withGithub(\"hoonio\")","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"jeromewjj"},"content":"            .withLinkedIn(\"https://www.linkedin.com/in/hoonmei/\").build();","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":62,"author":{"gitId":"jeromewjj"},"content":"            .withEmail(\"hans@example.com\").withGithub(\"idaio\")","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"jeromewjj"},"content":"            .withLinkedIn(\"https://www.linkedin.com/in/idaho/\").build();","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":65,"author":{"gitId":"jeromewjj"},"content":"    // Contact with emptyfield","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"jeromewjj"},"content":"    public static final Person JOHN \u003d new PersonBuilder().withName(\"John Lim\").withPhone(\"92020124\")","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"jeromewjj"},"content":"            .withEmptyEmail().withEmptyGithub().withEmptyLinkedin().build();","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"jeromewjj"},"content":"            .withEmail(VALID_EMAIL_AMY).withGithub(VALID_GITHUB_AMY)","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"DystoriaX"},"content":"            .withLinkedIn(VALID_LINKEDIN_AMY).withDetail(VALID_DETAIL_AMY)","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"DystoriaX"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":75,"author":{"gitId":"jeromewjj"},"content":"            .withEmail(VALID_EMAIL_BOB).withGithub(VALID_GITHUB_BOB)","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"DystoriaX"},"content":"            .withLinkedIn(VALID_LINKEDIN_BOB).withDetail(VALID_DETAIL_BOB)","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"DystoriaX"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"samyipsh"},"content":"     * Returns an {@code ContactBook} with all the typical persons.","lastModifiedDate":"2021-11-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"samyipsh"},"content":"    public static ContactBook getTypicalContactBook() {","lastModifiedDate":"2021-11-05"},{"lineNumber":87,"author":{"gitId":"samyipsh"},"content":"        ContactBook ab \u003d new ContactBook();","lastModifiedDate":"2021-11-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"samyipsh":7,"CommanderW324":5,"jeromewjj":19,"-":58,"DystoriaX":8}}]
