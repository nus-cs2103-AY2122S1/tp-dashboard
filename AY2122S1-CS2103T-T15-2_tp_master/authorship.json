[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-T15-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-T15-2/tp/actions)","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-T15-2/tp/branch/master/graph/badge.svg?token\u003d0U1WFQS7S3)](https://codecov.io/gh/AY2122S1-CS2103T-T15-2/tp)","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"# About Ailurus","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"* **Ailurus** is a desktop app that helps organising committees account for details of their members.","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"  It provides users with convenient viewing and editing access to all information,","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"  thus providing much convenience in their work.","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"* For the detailed documentation of this project, see the **[Ailurus Product Website](https://ay2122s1-cs2103t-t15-2.github.io/tp/)**.","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"# Mock UI","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"GWphua"},"content":"![Ui](docs/images/sampleUi.png)","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"# Acknowledgement","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"* The project simulates an ongoing software project for a desktop application (called AddressBook) used for managing contact details.","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"  * It is written in OOP fashion. It provides a reasonably well-written code base bigger (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"  * It comes with a reasonable level of user and developer documentation.","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"GWphua":1,"-":4,"tsiyuk":8,"leeroy999":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"Samuel-bit-prog"},"content":"    archiveFileName \u003d \u0027ailurus.jar\u0027","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"tsiyuk"},"content":"run {","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"tsiyuk"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":73,"tsiyuk":2,"Samuel-bit-prog":1}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"LiuZhi1an"},"content":"### Leeroy Liu","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"LiuZhi1an"},"content":"\u003cimg src\u003d\"images/leeroy999.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"LiuZhi1an"},"content":"[[github](https://github.com/leeroy999)]","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"[[portfolio](team/leeroy999.md)]","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"LiuZhi1an"},"content":"* Role: Team Lead","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"LiuZhi1an"},"content":"* Responsibilities:","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"LiuZhi1an"},"content":"    * Responsible for overall project coordination.","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"LiuZhi1an"},"content":"    * Ensure deadlines are met","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"LiuZhi1an"},"content":"### Phua Guan Wei","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"LiuZhi1an"},"content":"\u003cimg src\u003d\"images/gwphua.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"LiuZhi1an"},"content":"[[github](http://github.com/gwphua)]","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"[[portfolio](team/gwphua.md)]","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"LiuZhi1an"},"content":"* Role: Developer","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"LiuZhi1an"},"content":"* Responsibilities:","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"LiuZhi1an"},"content":"    * Documentation","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"LiuZhi1an"},"content":"    * Code quality","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"LiuZhi1an"},"content":"    * GUI","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"LiuZhi1an"},"content":"### Samuel Lau Yi Ren","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"LiuZhi1an"},"content":"\u003cimg src\u003d\"images/samuel-bit-prog.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"LiuZhi1an"},"content":"[[github](http://github.com/samuel-bit-prog)]","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"leeroy999"},"content":"[[portfolio](team/samuel-bit-prog.md)]","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"LiuZhi1an"},"content":"* Responsibilities:","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"LiuZhi1an"},"content":"    * Intellij Expert","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"LiuZhi1an"},"content":"    * Git Expert","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"LiuZhi1an"},"content":"    * Program and component structure","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"LiuZhi1an"},"content":"### Chi Xu","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"LiuZhi1an"},"content":"\u003cimg src\u003d\"images/tsiyuk.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"LiuZhi1an"},"content":"[[github](http://github.com/tsiyuk)]","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"leeroy999"},"content":"[[portfolio](team/tsiyuk.md)]","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"LiuZhi1an"},"content":"* Responsibilities:","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"leeroy999"},"content":"    * Dev-ops \u0026 Continuous Integration","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"LiuZhi1an"},"content":"### Liu Zhilan","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"LiuZhi1an"},"content":"\u003cimg src\u003d\"images/liuzhi1an.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"leeroy999"},"content":"[[github](http://github.com/liuzhi1an)]","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"leeroy999"},"content":"[[portfolio](team/liuzhi1an.md)]","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"LiuZhi1an"},"content":"* Responsibilities: testing","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"LiuZhi1an":29,"-":33,"leeroy999":7}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"Ailurus is a **desktop app** that helps to organise committees account for details of their members. It provides users with convenient viewing and editing access to all information, thus providing much convenience in their work.","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"The Developer Guide seeks to provide detailed documentation for developers to set up their environment, and understand the architecure and the different components, as well as their implementations in various commands. It also informs developers of the requirements and instructions for manual testing for the Ailurus product.","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"* [SE-EDU AddressBook Level-3](https://se-education.org/addressbook-level3/)","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2122S1-CS2103T-T15-2/tp/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"leeroy999"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2122S1-CS2103T-T15-2/tp/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2122S1-CS2103T-T15-2/tp/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"leeroy999"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `mdel 1`.","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"leeroy999"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2122S1-CS2103T-T15-2/tp/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-09-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"GWphua"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `MemberListPanel`, ","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"GWphua"},"content":"`EventListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` ","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"GWphua"},"content":"class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"GWphua"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files ","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"GWphua"},"content":"that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"GWphua"},"content":"com/AY2122S1-CS2103T-T15-2/tp/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in ","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"GWphua"},"content":"[`MainWindow.fxml`](https://github.com/AY2122S1-CS2103T-T15-2/tp/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"GWphua"},"content":"* depends on some classes in the `Model` component, as it displays `Member` and `Event` object residing in the `Model`.","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"leeroy999"},"content":"#### Current Implementations of UI","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"GWphua"},"content":"The GUI currently reflects the entered events and members recorded in Ailurus. Currently, there are two main windows ","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"GWphua"},"content":"that reflect the `Event` and `Member` objects that are residing in the `Model`. Directly adding or removing `Event` ","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"GWphua"},"content":"or `Member` would update the `EventListPanel` and `MemberListPanel` to show their respective `EventCard` ","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"GWphua"},"content":"and `MemberCard` accordingly. Each of the `EventCard` and `MemberCard` would display the fields under the ","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"GWphua"},"content":"corresponding `Event` and `Member` objects as discussed under [Model Component](#model-component).","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"GWphua"},"content":"However, there are problems faced when the fields inside `Event` and `Member` are being changed. There seems to be ","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"GWphua"},"content":"some difficulty in updating the `MemberCard` when a `Task` object is being created under the `Member` object, or is ","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"GWphua"},"content":"removed. Similarly, the same problem also lies in `EventCard` not updating when a `Member` object associated with ","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"GWphua"},"content":"the `Event` object is being removed.","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"leeroy999"},"content":"#### Future Plans for UI","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"GWphua"},"content":"To address the above-mentioned bug where the `EventCard` and `MemberCard` are not updated spontaneously, we decided ","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"GWphua"},"content":"to implement a third column featuring `Task` objects. As such, we are able to totally remove the `Member` and `Task` ","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"GWphua"},"content":"from `EventCard` and `MemberCard` respectively. ","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"GWphua"},"content":"We plan to support this implementation by using the `elist`, `mlist` and `tlist` commands to determine what is being ","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"GWphua"},"content":"displayed in the `MainWindow`.","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"leeroy999"},"content":"**API** : [`Logic.java`](https://github.com/AY2122S1-CS2103T-T15-2/tp/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-09-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"leeroy999"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `MaddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"tsiyuk"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a member).","lastModifiedDate":"2021-10-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"leeroy999"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"mdel 1\")` API call.","lastModifiedDate":"2021-10-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"leeroy999"},"content":"![Interactions Inside the Logic Component for the `mdel 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"leeroy999"},"content":"Here is the Activity Diagram for a User when choosing the module and command to interact with in Ailurus:","lastModifiedDate":"2021-10-21"},{"lineNumber":148,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":149,"author":{"gitId":"leeroy999"},"content":"![Activity Diagram for User Commands](images/CommandActivityDiagram.jpg)","lastModifiedDate":"2021-10-21"},{"lineNumber":150,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":151,"author":{"gitId":"leeroy999"},"content":"#### Current Implementation of Event","lastModifiedDate":"2021-10-23"},{"lineNumber":152,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":153,"author":{"gitId":"leeroy999"},"content":"New feature: Events","lastModifiedDate":"2021-10-21"},{"lineNumber":154,"author":{"gitId":"leeroy999"},"content":"* Events can be added and deleted from event list via `eadd` and `edel` commands","lastModifiedDate":"2021-10-26"},{"lineNumber":155,"author":{"gitId":"leeroy999"},"content":"* The participating members can be listed using the command `mlist /v EVENT_ID`","lastModifiedDate":"2021-10-21"},{"lineNumber":156,"author":{"gitId":"leeroy999"},"content":"* New events created can have many participants selected from member list.","lastModifiedDate":"2021-10-21"},{"lineNumber":157,"author":{"gitId":"leeroy999"},"content":"* \u003cu\u003eDesign Decision\u003c/u\u003e: Instead of only allowing adding of events and creating a command","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"leeroy999"},"content":"for adding participants separately, eadd command allows creation of complete event to","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"leeroy999"},"content":"minimise commands required to add them individually. The format is similar to `mdel` and `mlist` commands","lastModifiedDate":"2021-10-26"},{"lineNumber":160,"author":{"gitId":"leeroy999"},"content":"for familiarity with similar commands for other modules.","lastModifiedDate":"2021-10-21"},{"lineNumber":161,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"leeroy999"},"content":"#### Future Plans for Event","lastModifiedDate":"2021-10-23"},{"lineNumber":164,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":165,"author":{"gitId":"leeroy999"},"content":"Future plans for Events","lastModifiedDate":"2021-10-21"},{"lineNumber":166,"author":{"gitId":"leeroy999"},"content":"* Include adding and deleting of participants, as well as marking whether a participant has attended the event.","lastModifiedDate":"2021-10-21"},{"lineNumber":167,"author":{"gitId":"leeroy999"},"content":"* Include updating of event with participants and different name","lastModifiedDate":"2021-10-21"},{"lineNumber":168,"author":{"gitId":"leeroy999"},"content":"* Include searching for the list of events for a participant","lastModifiedDate":"2021-10-21"},{"lineNumber":169,"author":{"gitId":"leeroy999"},"content":"* Include filtering of events by month or events that are happening today.","lastModifiedDate":"2021-10-21"},{"lineNumber":170,"author":{"gitId":"leeroy999"},"content":"* Include sorting of events by date, name or number of participants.","lastModifiedDate":"2021-10-21"},{"lineNumber":171,"author":{"gitId":"leeroy999"},"content":"  * Dates should be in reverse chronological order so that upcoming events are shown first","lastModifiedDate":"2021-10-21"},{"lineNumber":172,"author":{"gitId":"leeroy999"},"content":"* Include additional remarks or description for an event","lastModifiedDate":"2021-10-21"},{"lineNumber":173,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":174,"author":{"gitId":"LiuZhi1an"},"content":"### Add a task feature for a member or several members","lastModifiedDate":"2021-10-21"},{"lineNumber":175,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":176,"author":{"gitId":"leeroy999"},"content":"#### Current Implementation for adding tasks","lastModifiedDate":"2021-10-23"},{"lineNumber":177,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":178,"author":{"gitId":"LiuZhi1an"},"content":"The proposed feature is achieved by getting the member(s) from the filtered member list","lastModifiedDate":"2021-10-21"},{"lineNumber":179,"author":{"gitId":"LiuZhi1an"},"content":"and use API from the model manager to add the task with given task name to each of the members.","lastModifiedDate":"2021-10-21"},{"lineNumber":180,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":181,"author":{"gitId":"LiuZhi1an"},"content":"The operations are exposed in the `Model` interface as `Model#getFilteredMemberlist()` and `Model#addTask()`.","lastModifiedDate":"2021-10-21"},{"lineNumber":182,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":183,"author":{"gitId":"LiuZhi1an"},"content":"Given below is an example usage scenario:","lastModifiedDate":"2021-10-21"},{"lineNumber":184,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":185,"author":{"gitId":"LiuZhi1an"},"content":"The user executes `tadd /n take attendance /m 1 /m 2`. The parser will be called upon to create a TaddCommandParser.","lastModifiedDate":"2021-10-21"},{"lineNumber":186,"author":{"gitId":"LiuZhi1an"},"content":"The parser will then parse the input to create a TaddCommand with task name as \"take attendance\" and member ids 1 and 2.","lastModifiedDate":"2021-10-21"},{"lineNumber":187,"author":{"gitId":"LiuZhi1an"},"content":"This command will add the task \"take attendance\" to the first and second member of the member list.","lastModifiedDate":"2021-10-21"},{"lineNumber":188,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":189,"author":{"gitId":"LiuZhi1an"},"content":"### Delete a task feature for a member","lastModifiedDate":"2021-10-21"},{"lineNumber":190,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":191,"author":{"gitId":"leeroy999"},"content":"#### Current Implementation for deleting tasks","lastModifiedDate":"2021-10-23"},{"lineNumber":192,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":193,"author":{"gitId":"LiuZhi1an"},"content":"The proposed feature is achieved by getting the member(s) from the filtered member list","lastModifiedDate":"2021-10-21"},{"lineNumber":194,"author":{"gitId":"LiuZhi1an"},"content":"and use API from the model manager to delete the task with given task id from the member with given member id.","lastModifiedDate":"2021-10-21"},{"lineNumber":195,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":196,"author":{"gitId":"LiuZhi1an"},"content":"The operations are exposed in the `Model` interface as `Model#getFilteredMemberlist()` and `Model#deleteTask()`.","lastModifiedDate":"2021-10-21"},{"lineNumber":197,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":198,"author":{"gitId":"LiuZhi1an"},"content":"Given below is an example usage scenario:","lastModifiedDate":"2021-10-21"},{"lineNumber":199,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":200,"author":{"gitId":"LiuZhi1an"},"content":"The user executes `tdel /t 1 /m 1`. The parser will be called upon to create a TdelCommandParser.","lastModifiedDate":"2021-10-21"},{"lineNumber":201,"author":{"gitId":"LiuZhi1an"},"content":"The parser will then parse the input to create a TdelCommand with task id as 1 and member id as 1.","lastModifiedDate":"2021-10-21"},{"lineNumber":202,"author":{"gitId":"LiuZhi1an"},"content":"This command will delete the first task from the task list of the first member of the member list.","lastModifiedDate":"2021-10-21"},{"lineNumber":203,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":204,"author":{"gitId":"LiuZhi1an"},"content":"### List tasks feature for a member","lastModifiedDate":"2021-10-21"},{"lineNumber":205,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":206,"author":{"gitId":"leeroy999"},"content":"#### Current Implementation for lists","lastModifiedDate":"2021-10-23"},{"lineNumber":207,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":208,"author":{"gitId":"LiuZhi1an"},"content":"The proposed feature is achieved by getting the member with given member id from the filtered member list","lastModifiedDate":"2021-10-21"},{"lineNumber":209,"author":{"gitId":"LiuZhi1an"},"content":"and use API from the model manager to list all the tasks of the member.","lastModifiedDate":"2021-10-21"},{"lineNumber":210,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":211,"author":{"gitId":"LiuZhi1an"},"content":"The operations are exposed in the `Model` interface as `Model#getFilteredMemberlist()` and `Model#updateFilteredTaskList()`.","lastModifiedDate":"2021-10-21"},{"lineNumber":212,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":213,"author":{"gitId":"LiuZhi1an"},"content":"Given below is an example usage scenario:","lastModifiedDate":"2021-10-21"},{"lineNumber":214,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":215,"author":{"gitId":"LiuZhi1an"},"content":"The user executes `tlist /m 1`. The parser will be called upon to create a TlistCommandParser.","lastModifiedDate":"2021-10-21"},{"lineNumber":216,"author":{"gitId":"LiuZhi1an"},"content":"The parser will then parse the input to create a TlistCommand with member id as 1.","lastModifiedDate":"2021-10-21"},{"lineNumber":217,"author":{"gitId":"LiuZhi1an"},"content":"This command will display all the tasks of the first member of the member list.","lastModifiedDate":"2021-10-21"},{"lineNumber":218,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"leeroy999"},"content":"**API** : [`Model.java`](https://github.com/AY2122S1-CS2103T-T15-2/tp/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2021-09-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"Samuel-bit-prog"},"content":"* stores the address book data i.e., all `Member` objects (which are contained in a `UniqueMemberList` object), all `Event` objects (which are contained in a `UniqueEventList` object).","lastModifiedDate":"2021-10-21"},{"lineNumber":228,"author":{"gitId":"tsiyuk"},"content":"* stores a `TaskList` reference that points to the `TaskList` object that contains all the `Task` objects of the currently \u0027selected\u0027 `Member` object (e.g. result of a \u0027tlist\u0027 command)","lastModifiedDate":"2021-10-21"},{"lineNumber":229,"author":{"gitId":"Samuel-bit-prog"},"content":"* stores the currently \u0027selected\u0027 `Member`, `Event` and `Task` objects (e.g., results of a search query) as separate _filtered_ lists which are exposed to outsiders as an unmodifiable `ObservableList\u003cMember\u003e`, `ObservableList\u003cEvent\u003e` and `ObservableList\u003cTask\u003e` respectively that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-10-21"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":231,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":233,"author":{"gitId":"Samuel-bit-prog"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Position` list in the `AddressBook`, which `Member` references. This allows `AddressBook` to only require one `Position` object per unique POSITION, instead of each `Member` needing their own set of `Position` objects.\u003cbr\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":234,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":236,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"Samuel-bit-prog"},"content":"#### Current Implementations","lastModifiedDate":"2021-10-21"},{"lineNumber":241,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":242,"author":{"gitId":"Samuel-bit-prog"},"content":"The model that we implemented currently has `Event`, `Task` and `Member`. `Member` has a field with `TaskList` which contains","lastModifiedDate":"2021-10-21"},{"lineNumber":243,"author":{"gitId":"Samuel-bit-prog"},"content":"`Task` belonging to the `Member`. `Event` has a `Name` field, `EventDate` field, and a field of a HashMap\u003cMember, Boolean\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":244,"author":{"gitId":"Samuel-bit-prog"},"content":"to serve as a participant list with attendance. Event and Member both extend from the abstract class `Module` to reduce class duplication.","lastModifiedDate":"2021-10-21"},{"lineNumber":245,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":246,"author":{"gitId":"tsiyuk"},"content":"The `Task` model we implemented currently has a task name and a state that represents it is done or not.","lastModifiedDate":"2021-10-21"},{"lineNumber":247,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":248,"author":{"gitId":"Samuel-bit-prog"},"content":"#### Future Plans","lastModifiedDate":"2021-10-21"},{"lineNumber":249,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":250,"author":{"gitId":"Samuel-bit-prog"},"content":"The future plan for the model is to have `Task` extend from module. The search functions in regard to name will be greatly helped ny the `Module` class.","lastModifiedDate":"2021-10-21"},{"lineNumber":251,"author":{"gitId":"Samuel-bit-prog"},"content":"We also plan to make the `Position` objects unique to reduce space cost, Each member would contain a reference to the `Position` object instead.","lastModifiedDate":"2021-10-21"},{"lineNumber":252,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":253,"author":{"gitId":"tsiyuk"},"content":"* Make `Task` a subclass of `Module`, which involves adding `TaskName` class.","lastModifiedDate":"2021-10-21"},{"lineNumber":254,"author":{"gitId":"tsiyuk"},"content":"* Add deadline field to `Task`","lastModifiedDate":"2021-10-21"},{"lineNumber":255,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"leeroy999"},"content":"**API** : [`Storage.java`](https://github.com/AY2122S1-CS2103T-T15-2/tp/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2021-09-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":266,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"tsiyuk"},"content":"#### Current Implementation","lastModifiedDate":"2021-10-21"},{"lineNumber":269,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":270,"author":{"gitId":"tsiyuk"},"content":"`JsonAdaptedTask` allows `Task` to be stored in a json format and `JsonAdaptedMember` allows `Member` to store an array of `Task`","lastModifiedDate":"2021-10-21"},{"lineNumber":271,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":272,"author":{"gitId":"Samuel-bit-prog"},"content":"`JsonAdaptedEvent` allows `Event` to be stored in Json format. Ailurus can now store `Event`, enabling the saving and ","lastModifiedDate":"2021-10-21"},{"lineNumber":273,"author":{"gitId":"Samuel-bit-prog"},"content":"loading of files with `Event` objects. The Map of participants of the `Event` are saved into Json format by splitting them into two separate lists of `JsonAdaptedMember` and `Boolean` respectively.","lastModifiedDate":"2021-10-21"},{"lineNumber":274,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":275,"author":{"gitId":"Samuel-bit-prog"},"content":"#### Future Plans","lastModifiedDate":"2021-10-21"},{"lineNumber":276,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":277,"author":{"gitId":"Samuel-bit-prog"},"content":"Storing `Position` in a unique list would reduce the amount of `Position` objects needed.","lastModifiedDate":"2021-10-21"},{"lineNumber":278,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":279,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"leeroy999"},"content":"Step 2. The user executes `mdel 5` command to delete the 5th member in the address book. The `mdel` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `mdel 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2021-10-26"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"leeroy999"},"content":"Step 3. The user executes `madd /n David …​` to add a new member. The `madd` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2021-10-21"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"tsiyuk"},"content":"Step 4. The user now decides that adding the member was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2021-10-06"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"GWphua"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add /n David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2021-10-07"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"leeroy999"},"content":"  * Pros: Will use less memory (e.g. for `mdel`, just save the member being deleted).","lastModifiedDate":"2021-10-26"},{"lineNumber":365,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":379,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":380,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":381,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":382,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"Samuel-bit-prog"},"content":"* has trouble managing the multitude of details related to the members of his club","lastModifiedDate":"2021-09-29"},{"lineNumber":394,"author":{"gitId":"Samuel-bit-prog"},"content":"* want to assign tasks for members","lastModifiedDate":"2021-09-29"},{"lineNumber":395,"author":{"gitId":"Samuel-bit-prog"},"content":"* has a need to organize and plan events for members","lastModifiedDate":"2021-09-29"},{"lineNumber":396,"author":{"gitId":"Samuel-bit-prog"},"content":"* likes typing and comfortable with CLI","lastModifiedDate":"2021-09-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"Samuel-bit-prog"},"content":"**Value proposition**: ","lastModifiedDate":"2021-09-29"},{"lineNumber":400,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":401,"author":{"gitId":"Samuel-bit-prog"},"content":"* manage contacts faster than a typical mouse/GUI driven app","lastModifiedDate":"2021-09-29"},{"lineNumber":402,"author":{"gitId":"Samuel-bit-prog"},"content":"* manage club events and tasks/activities for large amount of members","lastModifiedDate":"2021-09-29"},{"lineNumber":403,"author":{"gitId":"Samuel-bit-prog"},"content":"* contact and personal information of members collated in an easily accessible location","lastModifiedDate":"2021-09-29"},{"lineNumber":404,"author":{"gitId":"Samuel-bit-prog"},"content":"* able to update details relating to members","lastModifiedDate":"2021-09-29"},{"lineNumber":405,"author":{"gitId":"Samuel-bit-prog"},"content":"* categorise members into groups for smoother planning","lastModifiedDate":"2021-09-29"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"Samuel-bit-prog"},"content":"#### Member-related Functions","lastModifiedDate":"2021-09-29"},{"lineNumber":413,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":414,"author":{"gitId":"Samuel-bit-prog"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                                        |","lastModifiedDate":"2021-09-29"},{"lineNumber":415,"author":{"gitId":"Samuel-bit-prog"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2021-09-29"},{"lineNumber":416,"author":{"gitId":"tsiyuk"},"content":"| `* * *`  | user                                       | add a new member               | update the increase or change in members |","lastModifiedDate":"2021-10-06"},{"lineNumber":417,"author":{"gitId":"tsiyuk"},"content":"| `* * *`  | user                                       | have address fields for members | |","lastModifiedDate":"2021-10-06"},{"lineNumber":418,"author":{"gitId":"tsiyuk"},"content":"| `* * *`  | user                                       | kick a member                | remove members or troublemakers from the club |","lastModifiedDate":"2021-10-06"},{"lineNumber":419,"author":{"gitId":"tsiyuk"},"content":"| `* * *`  | user                                       | have email address field for members | |","lastModifiedDate":"2021-10-06"},{"lineNumber":420,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":421,"author":{"gitId":"Samuel-bit-prog"},"content":"#### Task Functions","lastModifiedDate":"2021-09-29"},{"lineNumber":422,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":423,"author":{"gitId":"Samuel-bit-prog"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                                        |","lastModifiedDate":"2021-09-29"},{"lineNumber":424,"author":{"gitId":"Samuel-bit-prog"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2021-09-29"},{"lineNumber":425,"author":{"gitId":"tsiyuk"},"content":"| `* * *`  | user                                       | create tasks for my members or myself | |","lastModifiedDate":"2021-10-06"},{"lineNumber":426,"author":{"gitId":"Samuel-bit-prog"},"content":"| `* *`  | user                                       | see the completion status and description of tasks for members | know the requirements and status of the task |","lastModifiedDate":"2021-09-29"},{"lineNumber":427,"author":{"gitId":"Samuel-bit-prog"},"content":"| `*`  | user                                       | mark a task as completed, overdue or uncompleted | keep track of my tasks that are on-hand |","lastModifiedDate":"2021-09-29"},{"lineNumber":428,"author":{"gitId":"Samuel-bit-prog"},"content":"| `* *`  | user                                       | add a deadline to task | keep track of who has overdue tasks |","lastModifiedDate":"2021-10-07"},{"lineNumber":429,"author":{"gitId":"Samuel-bit-prog"},"content":"| `* * *`  | user                                       | delete already obscure and unnecessary tasks | have a cleaner task list |","lastModifiedDate":"2021-10-07"},{"lineNumber":430,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":431,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":432,"author":{"gitId":"Samuel-bit-prog"},"content":"#### Storage Functions","lastModifiedDate":"2021-09-29"},{"lineNumber":433,"author":{"gitId":"Samuel-bit-prog"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                                        |","lastModifiedDate":"2021-09-29"},{"lineNumber":434,"author":{"gitId":"Samuel-bit-prog"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2021-09-29"},{"lineNumber":435,"author":{"gitId":"tsiyuk"},"content":"| `* * *`  | user                                       | load members from other files | access and manage different sets of data |","lastModifiedDate":"2021-10-06"},{"lineNumber":436,"author":{"gitId":"Samuel-bit-prog"},"content":"| `* * *`  | user                                       | write my data to a file as save data | access them and resume at a later date |","lastModifiedDate":"2021-09-29"},{"lineNumber":437,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":438,"author":{"gitId":"Samuel-bit-prog"},"content":"#### Event Functions","lastModifiedDate":"2021-09-29"},{"lineNumber":439,"author":{"gitId":"Samuel-bit-prog"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                                        |","lastModifiedDate":"2021-09-29"},{"lineNumber":440,"author":{"gitId":"Samuel-bit-prog"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2021-09-29"},{"lineNumber":441,"author":{"gitId":"tsiyuk"},"content":"| `* * *`  | user                                       | add all members of a particular event to one group | send notifications to only those involved |","lastModifiedDate":"2021-10-06"},{"lineNumber":442,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":443,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":444,"author":{"gitId":"Samuel-bit-prog"},"content":"#### Other miscellaneous Functions","lastModifiedDate":"2021-09-29"},{"lineNumber":445,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                   | see usage instructions         | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"tsiyuk"},"content":"| `* * *`  | user                                       | find a member by name          | locate details of members without having to go through the entire list |","lastModifiedDate":"2021-10-06"},{"lineNumber":449,"author":{"gitId":"-"},"content":"| `* *`    | user                                       | hide private contact details   | minimize chance of someone else seeing them by accident                |","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"tsiyuk"},"content":"| `*`      | user with many members in the address book | sort members by name           | locate a member easily                                                 |","lastModifiedDate":"2021-10-06"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"leeroy999"},"content":"(For all use cases below, the **System** is the `Ailurus` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-09-29"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"tsiyuk"},"content":"**Use case: UC1 - Add a member**","lastModifiedDate":"2021-10-06"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":460,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":462,"author":{"gitId":"tsiyuk"},"content":"1.  User requests to add a member, providing necessary details.","lastModifiedDate":"2021-10-06"},{"lineNumber":463,"author":{"gitId":"tsiyuk"},"content":"2.  Ailurus adds the member.","lastModifiedDate":"2021-10-06"},{"lineNumber":464,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":465,"author":{"gitId":"leeroy999"},"content":"    Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":466,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":467,"author":{"gitId":"leeroy999"},"content":"**Extensions**","lastModifiedDate":"2021-09-29"},{"lineNumber":468,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":469,"author":{"gitId":"leeroy999"},"content":"* 1a. Invalid format or incomplete details provided by user","lastModifiedDate":"2021-09-29"},{"lineNumber":470,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":471,"author":{"gitId":"leeroy999"},"content":"    * 1a1. Ailurus shows an error message about missing or invalid input.","lastModifiedDate":"2021-09-29"},{"lineNumber":472,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":473,"author":{"gitId":"leeroy999"},"content":"      Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":474,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":475,"author":{"gitId":"tsiyuk"},"content":"**Use case: UC2 - Delete a member**","lastModifiedDate":"2021-10-06"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"tsiyuk"},"content":"1.  User requests to list members","lastModifiedDate":"2021-10-06"},{"lineNumber":480,"author":{"gitId":"tsiyuk"},"content":"2.  Ailurus shows a list of members","lastModifiedDate":"2021-10-06"},{"lineNumber":481,"author":{"gitId":"tsiyuk"},"content":"3.  User requests to delete a specific member in the list","lastModifiedDate":"2021-10-06"},{"lineNumber":482,"author":{"gitId":"tsiyuk"},"content":"4.  Ailurus deletes the member","lastModifiedDate":"2021-10-06"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"leeroy999"},"content":"    * 3a1. Ailurus shows an error message.","lastModifiedDate":"2021-09-29"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":496,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-29"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":498,"author":{"gitId":"tsiyuk"},"content":"**Use case: UC3 - Add a task to a member**","lastModifiedDate":"2021-10-06"},{"lineNumber":499,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":500,"author":{"gitId":"leeroy999"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":501,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":502,"author":{"gitId":"tsiyuk"},"content":"1.  User requests to add a task to a specific member, providing details if necessary.","lastModifiedDate":"2021-10-06"},{"lineNumber":503,"author":{"gitId":"tsiyuk"},"content":"2.  Ailurus adds the task to the member.","lastModifiedDate":"2021-10-06"},{"lineNumber":504,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":505,"author":{"gitId":"leeroy999"},"content":"    Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":506,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":507,"author":{"gitId":"leeroy999"},"content":"**Extensions**","lastModifiedDate":"2021-09-29"},{"lineNumber":508,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":509,"author":{"gitId":"leeroy999"},"content":"* 1a. Invalid format or incomplete details provided by user","lastModifiedDate":"2021-09-29"},{"lineNumber":510,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":511,"author":{"gitId":"leeroy999"},"content":"    * 1a1. Ailurus shows an error message about missing or invalid input.","lastModifiedDate":"2021-09-29"},{"lineNumber":512,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":513,"author":{"gitId":"leeroy999"},"content":"      Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":514,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":515,"author":{"gitId":"leeroy999"},"content":"* 1b. The given index is invalid.","lastModifiedDate":"2021-09-29"},{"lineNumber":516,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":517,"author":{"gitId":"leeroy999"},"content":"    * 1b1. Ailurus shows an error message about invalid index.","lastModifiedDate":"2021-09-29"},{"lineNumber":518,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":519,"author":{"gitId":"leeroy999"},"content":"      Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":520,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":521,"author":{"gitId":"tsiyuk"},"content":"**Use case: UC4 - Delete a task from a member**","lastModifiedDate":"2021-10-06"},{"lineNumber":522,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":523,"author":{"gitId":"leeroy999"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":524,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":525,"author":{"gitId":"tsiyuk"},"content":"1.  User requests to list tasks of a specific member","lastModifiedDate":"2021-10-06"},{"lineNumber":526,"author":{"gitId":"leeroy999"},"content":"2.  Ailurus shows a list of tasks","lastModifiedDate":"2021-09-29"},{"lineNumber":527,"author":{"gitId":"leeroy999"},"content":"3.  User requests to delete a specific task in the list","lastModifiedDate":"2021-09-29"},{"lineNumber":528,"author":{"gitId":"leeroy999"},"content":"4.  Ailurus deletes the task","lastModifiedDate":"2021-09-29"},{"lineNumber":529,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":530,"author":{"gitId":"leeroy999"},"content":"    Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":531,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":532,"author":{"gitId":"leeroy999"},"content":"**Extensions**","lastModifiedDate":"2021-09-29"},{"lineNumber":533,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":534,"author":{"gitId":"tsiyuk"},"content":"* 1a. The given index of member is invalid","lastModifiedDate":"2021-10-06"},{"lineNumber":535,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":536,"author":{"gitId":"leeroy999"},"content":"    * 1a1. Ailurus shows an error message.","lastModifiedDate":"2021-09-29"},{"lineNumber":537,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":538,"author":{"gitId":"leeroy999"},"content":"      Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":539,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":540,"author":{"gitId":"leeroy999"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-09-29"},{"lineNumber":541,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":542,"author":{"gitId":"leeroy999"},"content":"  Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":543,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":544,"author":{"gitId":"leeroy999"},"content":"* 3a. The given index of task is invalid.","lastModifiedDate":"2021-09-29"},{"lineNumber":545,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":546,"author":{"gitId":"leeroy999"},"content":"    * 3a1. Ailurus shows an error message.","lastModifiedDate":"2021-09-29"},{"lineNumber":547,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":548,"author":{"gitId":"leeroy999"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-29"},{"lineNumber":549,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":550,"author":{"gitId":"leeroy999"},"content":"**Use case: UC5 - Mark a task as done**","lastModifiedDate":"2021-09-29"},{"lineNumber":551,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":552,"author":{"gitId":"leeroy999"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":553,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":554,"author":{"gitId":"tsiyuk"},"content":"1.  User requests to list tasks of a specific member","lastModifiedDate":"2021-10-06"},{"lineNumber":555,"author":{"gitId":"leeroy999"},"content":"2.  Ailurus shows a list of tasks","lastModifiedDate":"2021-09-29"},{"lineNumber":556,"author":{"gitId":"leeroy999"},"content":"3.  User requests to mark a specific task as done","lastModifiedDate":"2021-09-29"},{"lineNumber":557,"author":{"gitId":"leeroy999"},"content":"4.  Ailurus marks task as done","lastModifiedDate":"2021-09-29"},{"lineNumber":558,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":559,"author":{"gitId":"leeroy999"},"content":"    Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":560,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":561,"author":{"gitId":"leeroy999"},"content":"**Extensions**","lastModifiedDate":"2021-09-29"},{"lineNumber":562,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":563,"author":{"gitId":"tsiyuk"},"content":"* 1a. The given index of member is invalid","lastModifiedDate":"2021-10-06"},{"lineNumber":564,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":565,"author":{"gitId":"leeroy999"},"content":"    * 1a1. Ailurus shows an error message.","lastModifiedDate":"2021-09-29"},{"lineNumber":566,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":567,"author":{"gitId":"leeroy999"},"content":"      Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":568,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":569,"author":{"gitId":"leeroy999"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-09-29"},{"lineNumber":570,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":571,"author":{"gitId":"leeroy999"},"content":"  Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":572,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":573,"author":{"gitId":"leeroy999"},"content":"* 3a. The given index of task is invalid.","lastModifiedDate":"2021-09-29"},{"lineNumber":574,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":575,"author":{"gitId":"leeroy999"},"content":"    * 3a1. Ailurus shows an error message.","lastModifiedDate":"2021-09-29"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"LiuZhi1an"},"content":"**Use case: UC6 - Add an event**","lastModifiedDate":"2021-09-30"},{"lineNumber":580,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":581,"author":{"gitId":"LiuZhi1an"},"content":"**MSS**","lastModifiedDate":"2021-09-30"},{"lineNumber":582,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":583,"author":{"gitId":"LiuZhi1an"},"content":"1.  User requests to add an event, providing necessary details.","lastModifiedDate":"2021-09-30"},{"lineNumber":584,"author":{"gitId":"LiuZhi1an"},"content":"2.  Ailurus adds the event.","lastModifiedDate":"2021-09-30"},{"lineNumber":585,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":586,"author":{"gitId":"LiuZhi1an"},"content":"    Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":587,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":588,"author":{"gitId":"LiuZhi1an"},"content":"**Extensions**","lastModifiedDate":"2021-09-30"},{"lineNumber":589,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":590,"author":{"gitId":"LiuZhi1an"},"content":"* 1a. Invalid format or incomplete details provided by user","lastModifiedDate":"2021-09-30"},{"lineNumber":591,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":592,"author":{"gitId":"LiuZhi1an"},"content":"    * 1a1. Ailurus shows an error message about missing or invalid input.","lastModifiedDate":"2021-09-30"},{"lineNumber":593,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":594,"author":{"gitId":"LiuZhi1an"},"content":"      Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":595,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":596,"author":{"gitId":"LiuZhi1an"},"content":"**Use case: UC7 - Delete an event**","lastModifiedDate":"2021-09-30"},{"lineNumber":597,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":598,"author":{"gitId":"LiuZhi1an"},"content":"**MSS**","lastModifiedDate":"2021-09-30"},{"lineNumber":599,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":600,"author":{"gitId":"LiuZhi1an"},"content":"1.  User requests to list events","lastModifiedDate":"2021-09-30"},{"lineNumber":601,"author":{"gitId":"LiuZhi1an"},"content":"2.  Ailurus shows a list of events","lastModifiedDate":"2021-09-30"},{"lineNumber":602,"author":{"gitId":"LiuZhi1an"},"content":"3.  User requests to delete a specific event in the list","lastModifiedDate":"2021-09-30"},{"lineNumber":603,"author":{"gitId":"LiuZhi1an"},"content":"4.  Ailurus deletes the event","lastModifiedDate":"2021-09-30"},{"lineNumber":604,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":605,"author":{"gitId":"LiuZhi1an"},"content":"    Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":606,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":607,"author":{"gitId":"LiuZhi1an"},"content":"**Extensions**","lastModifiedDate":"2021-09-30"},{"lineNumber":608,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":609,"author":{"gitId":"LiuZhi1an"},"content":"* 1a. Invalid format or incomplete details provided by user","lastModifiedDate":"2021-09-30"},{"lineNumber":610,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":611,"author":{"gitId":"LiuZhi1an"},"content":"    * 1a1. Ailurus shows an error message about missing or invalid input.","lastModifiedDate":"2021-09-30"},{"lineNumber":612,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":613,"author":{"gitId":"LiuZhi1an"},"content":"      Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":614,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":615,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":616,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":618,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"tsiyuk"},"content":"2.  Should be able to hold up to 1000 members without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-10-06"},{"lineNumber":621,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":622,"author":{"gitId":"LiuZhi1an"},"content":"4.  Should run on user computer with double-click - no installer or additional libraries required.","lastModifiedDate":"2021-09-30"},{"lineNumber":623,"author":{"gitId":"LiuZhi1an"},"content":"5.  The system should respond within two seconds.","lastModifiedDate":"2021-09-30"},{"lineNumber":624,"author":{"gitId":"LiuZhi1an"},"content":"6.  The system should work on both 32-bit and 64-bit environments.","lastModifiedDate":"2021-10-06"},{"lineNumber":625,"author":{"gitId":"LiuZhi1an"},"content":"7.  The system should be usable by a novice who has never used a CLI app before.","lastModifiedDate":"2021-10-06"},{"lineNumber":626,"author":{"gitId":"LiuZhi1an"},"content":"8.  The project is expected to adhere to a schedule that delivers features of a milestone for every two weeks.    ","lastModifiedDate":"2021-10-06"},{"lineNumber":627,"author":{"gitId":"LiuZhi1an"},"content":"9.  Should be able to hold up to 1000 event managers and participants without a noticeable delay (less than 2 seconds) in performance for typical usage.","lastModifiedDate":"2021-10-06"},{"lineNumber":628,"author":{"gitId":"LiuZhi1an"},"content":"10. The product should be for a single user i.e. (not a multi-user product), and should not depend on a remote server and does not require an installer. ","lastModifiedDate":"2021-10-07"},{"lineNumber":629,"author":{"gitId":"LiuZhi1an"},"content":"11. The software should work on the Windows, Linux, and OS-X platforms.","lastModifiedDate":"2021-10-07"},{"lineNumber":630,"author":{"gitId":"LiuZhi1an"},"content":"12. The GUI should work well with standard screen resolutions 1920x1080 and higher, and","lastModifiedDate":"2021-10-07"},{"lineNumber":631,"author":{"gitId":"LiuZhi1an"},"content":"    for screen scales 100% and 125%. It should be usable for resolutions 1280x720 and higher, and","lastModifiedDate":"2021-10-07"},{"lineNumber":632,"author":{"gitId":"LiuZhi1an"},"content":"    for screen scales 150%.    ","lastModifiedDate":"2021-10-07"},{"lineNumber":633,"author":{"gitId":"-"},"content":"    *{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":634,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":635,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":636,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":637,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":638,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":639,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":640,"author":{"gitId":"LiuZhi1an"},"content":"*{More to be added}*","lastModifiedDate":"2021-09-30"},{"lineNumber":641,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":642,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":643,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":644,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":645,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":646,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":647,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":648,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":649,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":650,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":651,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":652,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":653,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":654,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":655,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":656,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":657,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":658,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":659,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":660,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":661,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":662,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":663,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":664,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":665,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":666,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":667,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":668,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":669,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":670,"author":{"gitId":"tsiyuk"},"content":"### Deleting a member","lastModifiedDate":"2021-10-06"},{"lineNumber":671,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":672,"author":{"gitId":"tsiyuk"},"content":"1. Deleting a member while all members are being shown","lastModifiedDate":"2021-10-06"},{"lineNumber":673,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":674,"author":{"gitId":"tsiyuk"},"content":"   1. Prerequisites: List all members using the `list` command. Multiple members in the list.","lastModifiedDate":"2021-10-06"},{"lineNumber":675,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":676,"author":{"gitId":"leeroy999"},"content":"   1. Test case: `mdel 1`\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":677,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":678,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":679,"author":{"gitId":"leeroy999"},"content":"   1. Test case: `mdel 0`\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":680,"author":{"gitId":"tsiyuk"},"content":"      Expected: No member is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-10-06"},{"lineNumber":681,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":682,"author":{"gitId":"leeroy999"},"content":"   1. Other incorrect delete commands to try: `mdel`, `mdel x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":683,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":684,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":685,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":686,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":687,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":688,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":689,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":690,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":691,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":692,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":693,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"GWphua":29,"LiuZhi1an":92,"-":336,"tsiyuk":43,"leeroy999":136,"Samuel-bit-prog":57}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"GWphua"},"content":"Ailurus is a **desktop application** designed to aid Organising Committees from the Computing Faculty in managing and accounting for their administrative concerns. It provides users with the ability to plan and manage events and tasks for their members.","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"GWphua"},"content":"Ailurus is catered for people that are familiar with [Command Line Interfaces](https://en.wikipedia.org/wiki/Command-line_interface) (CLI), and are able to type fast. It also preserves the benefits of a [Graphical User Interface](https://en.wikipedia.org/wiki/Graphical_user_interface) (GUI) via [JavaFX](https://en.wikipedia.org/wiki/JavaFX).","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"* Table of Contents","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"{:toc}","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"GWphua"},"content":"## Welcome to the Ailurus User Guide","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"GWphua"},"content":"This User Guide aims to introduce new users to Ailurus, while also providing them with a comprehensive guide to all the commands in Ailurus. This User Guide aims to introduce new users to Ailurus, while also providing them with a comprehensive guide to all the commands in Ailurus.","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"GWphua"},"content":"Texts highlighted in light-blue such as [this](https://en.wikipedia.org/wiki/This_(computer_programming)) will direct the user to areas where more information about the highlighted text can be found. This is useful especially when the user wants to navigate to a certain section via the Table of Contents.","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"GWphua"},"content":"It is recommended to follow along and try out the commands listed in this User Guide. Ailurus is designed such that the commands will come as intuitive after a short period of use.","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"GWphua"},"content":"1. Ensure you have [Java 11](https://www.oracle.com/java/technologies/downloads/) or above installed in your Computer.","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"2. Download the latest `ailurus.jar` from [here](https://github.com/AY2122S1-CS2103T-T15-2/tp/releases).","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"GWphua"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for Ailurus.","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"GWphua"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"GWphua"},"content":"   ![Ui](images/sampleUi.png)","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"GWphua"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will ","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"GWphua"},"content":"open the help window.\u003cbr\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"GWphua"},"content":"   * **`mlist`** : Lists all members in Ailurus.","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"GWphua"},"content":"   * **`madd`**`/n John Doe /ph 98765432 /em johnd@example.com /a John street, block 123, #01-01` : Adds a contact named `John Doe` to Ailurus.","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"   * **`mdel`**`3` : Deletes the 3rd contact shown in the current list of people.","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"GWphua"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"GWphua"},"content":"* Commands are usually abbreviated to facilitate faster typing for user convenience. As a general rule of thumb, `m`, `e` and `t` are used to represent `Member`, `Event` and `Task` respectively.","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"leeroy999"},"content":"  e.g. in `madd /n NAME`, `NAME` is a parameter which can be used as `madd /n John Doe`.","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"GWphua"},"content":"  e.g. `/n NAME [/p POSITION]` can be used as `/n John Doe /p friend` or as `/n John Doe`.","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"GWphua"},"content":"  e.g. `[/p POSITION]…​` can be used as ` ` (i.e. 0 times), `/p friend`, `/p friend /p family` etc.","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"GWphua"},"content":"  e.g. if the command specifies `/n NAME /ph PHONE_NUMBER`, `/ph PHONE_NUMBER /n NAME` is also acceptable.","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"GWphua"},"content":"* If a parameter is expected only once in the command, but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"GWphua"},"content":"  e.g. if you specify `/ph 12341234 /ph 56785678`, only `/ph 56785678` will be taken.","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":72,"author":{"gitId":"GWphua"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list` and `exit`) will be ignored.","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"GWphua"},"content":"  \u003cbr\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":76,"author":{"gitId":"GWphua"},"content":"* Some commands require the user to enter the `EVENT_ID`, `MEMBER_ID` or `TASK_ID`. The `ID` refers to the order on ","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"GWphua"},"content":"  the display list.\u003cbr\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"GWphua"},"content":"  e.g. `Financial Planning` has a `EVENT_ID` of `1` and `Charlotte Oliveiro` has a `MEMBER_ID` ","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"GWphua"},"content":"  of `3` according to the diagram below.","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"GWphua"},"content":"  ![idNumberExample](images/idNumberExample.png)","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"GWphua"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2021-09-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"leeroy999"},"content":"### Member Commands","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"leeroy999"},"content":"#### Adding a member: `madd`","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"tsiyuk"},"content":"Adds a member to Ailurus.","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"GWphua"},"content":"Format: `madd /n NAME /ph PHONE_NUMBER /em EMAIL [/a ADDRESS] [/p POSITION]…​`","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"GWphua"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e ","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"GWphua"},"content":":bulb: **Tip:** A member can have any number of positions (including 0). A member MUST have a name, phone number and email address, but mailing address and positions are optional.","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-09-14"},{"lineNumber":105,"author":{"gitId":"GWphua"},"content":"* `madd /n John Doe /ph 98765432 /em johnd@example.com`","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"leeroy999"},"content":"* `madd /n Betsy Crowe /p Programs Head /em betsycrowe@example.com /a Newgate Prison /ph 1234567 /p Finance Assistant`","lastModifiedDate":"2021-10-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":108,"author":{"gitId":"leeroy999"},"content":"#### Listing all members : `mlist`","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"tsiyuk"},"content":"Shows a list of all members (of an event optionally).","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"Samuel-bit-prog"},"content":"Format: `mlist [/e EVENT_ID] [/att] [/abs]`","lastModifiedDate":"2021-10-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"GWphua"},"content":"* `EVENT_ID` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"GWphua"},"content":"* List everyone recorded in Ailurus if `EVENT_ID` is not given.","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"GWphua"},"content":"* If  `EVENT_ID` is provided, list everyone who is participating in the event.","lastModifiedDate":"2021-09-29"},{"lineNumber":117,"author":{"gitId":"GWphua"},"content":"* `EVENT_ID` refers to the index number shown in the displayed event list.","lastModifiedDate":"2021-09-29"},{"lineNumber":118,"author":{"gitId":"Samuel-bit-prog"},"content":"* Only one of `/att` or `/abs` may be provided if EVENT_ID is present.","lastModifiedDate":"2021-10-29"},{"lineNumber":119,"author":{"gitId":"Samuel-bit-prog"},"content":"* `/att` filters the list to those that attended the event.","lastModifiedDate":"2021-10-29"},{"lineNumber":120,"author":{"gitId":"Samuel-bit-prog"},"content":"* `/abs` filters the list to those that were absent from the event.","lastModifiedDate":"2021-10-29"},{"lineNumber":121,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"Example:","lastModifiedDate":"2021-09-15"},{"lineNumber":124,"author":{"gitId":"leeroy999"},"content":"* `mlist` lists everyone in Ailurus.","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"leeroy999"},"content":"* `mlist /e 1` lists all members of the event with index number 1.","lastModifiedDate":"2021-10-31"},{"lineNumber":126,"author":{"gitId":"leeroy999"},"content":"* `mlist /e 1 /att` lists all members who attended the event with index number 1.","lastModifiedDate":"2021-10-31"},{"lineNumber":127,"author":{"gitId":"leeroy999"},"content":"* `mlist /e 1 /abs` lists all members who were absent from the event with index number 1.","lastModifiedDate":"2021-10-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":129,"author":{"gitId":"GWphua"},"content":"#### Editing a member : `medit`","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"GWphua"},"content":"Edits an existing member in Ailurus. ","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"GWphua"},"content":"Format: `medit /m MEMBER_ID [/n NAME] [/ph PHONE] [/em EMAIL] [/a ADDRESS] [/p POSITION]…​`","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"GWphua"},"content":"* `MEMBER_ID` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-25"},{"lineNumber":136,"author":{"gitId":"GWphua"},"content":"* Edits the member at the specified `MEMBER_ID`. The index refers to the index number shown in the displayed member list.","lastModifiedDate":"2021-10-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"GWphua"},"content":"* When editing positions, the existing positions of the member will be removed i.e. adding of positions is not cumulative.","lastModifiedDate":"2021-10-27"},{"lineNumber":140,"author":{"gitId":"GWphua"},"content":"* You can remove all the member’s positions by typing `/p` without specifying any positions after it.","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"leeroy999"},"content":"* `medit /m 1 /ph 91234567 /em johndoe@example.com` Edits the phone number and email address of the 1st member to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2021-10-31"},{"lineNumber":144,"author":{"gitId":"leeroy999"},"content":"* `medit /m 2 /n Betsy Crower /p` Edits the name of the 2nd member to be `Betsy Crower` and clears all existing positions.","lastModifiedDate":"2021-10-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"GWphua"},"content":"#### Locating members by name: `mfind`","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"tsiyuk"},"content":"Finds members whose names contain any of the given keywords.","lastModifiedDate":"2021-10-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"GWphua"},"content":"Format: `mfind KEYWORD [MORE_KEYWORDS]…​`","lastModifiedDate":"2021-10-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"GWphua"},"content":"* The search is case-insensitive. e.g. `hans` will match `Hans`","lastModifiedDate":"2021-10-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"leeroy999"},"content":"* Members matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2021-10-07"},{"lineNumber":157,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"leeroy999"},"content":"* `mfind John` returns `john` and `John Doe`","lastModifiedDate":"2021-10-26"},{"lineNumber":161,"author":{"gitId":"leeroy999"},"content":"* `mfind alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":162,"author":{"gitId":"leeroy999"},"content":"  ![result for \u0027mfind alex david\u0027](images/findAlexDavid.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"tsiyuk"},"content":"#### Locating members by their tasks : `mtfind`","lastModifiedDate":"2021-10-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":166,"author":{"gitId":"tsiyuk"},"content":"Finds members whose tasks\u0027 names contains the given keyword.","lastModifiedDate":"2021-10-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":168,"author":{"gitId":"tsiyuk"},"content":"Format: `mtfind KEY_WORD`","lastModifiedDate":"2021-10-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":170,"author":{"gitId":"tsiyuk"},"content":"* The search is case-insensitive. e.g. `form` will match `Form`","lastModifiedDate":"2021-10-29"},{"lineNumber":171,"author":{"gitId":"tsiyuk"},"content":"* Only the name of the task is searched.","lastModifiedDate":"2021-10-29"},{"lineNumber":172,"author":{"gitId":"tsiyuk"},"content":"* Only full words will be matched e.g. `form` will not match `forms`","lastModifiedDate":"2021-10-29"},{"lineNumber":173,"author":{"gitId":"tsiyuk"},"content":"* Members with at least one task matching the given keyword will be returned.","lastModifiedDate":"2021-10-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":175,"author":{"gitId":"tsiyuk"},"content":"Examples:","lastModifiedDate":"2021-10-29"},{"lineNumber":176,"author":{"gitId":"tsiyuk"},"content":"* `mtfind form` returns `Alex Yeoh`, `Charlotte Oliveiro`, `David Li` and `Irfan Ibrahim` because task `submit form` was assigned to them.","lastModifiedDate":"2021-10-29"},{"lineNumber":177,"author":{"gitId":"tsiyuk"},"content":" ![result for \u0027mtfind form\u0027](images/mtfind_example.png)","lastModifiedDate":"2021-10-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":179,"author":{"gitId":"Samuel-bit-prog"},"content":"#### Locating members by their positions: `pfind`","lastModifiedDate":"2021-10-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":181,"author":{"gitId":"Samuel-bit-prog"},"content":"Find positions whose names contain any of the given keywords.","lastModifiedDate":"2021-10-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":183,"author":{"gitId":"Samuel-bit-prog"},"content":"Format: `pfind KEYWORD [MORE_KEYWORDS]...`","lastModifiedDate":"2021-10-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":185,"author":{"gitId":"Samuel-bit-prog"},"content":"* The search is case-insensitive. e.g `friend` will match `Friend`","lastModifiedDate":"2021-10-29"},{"lineNumber":186,"author":{"gitId":"Samuel-bit-prog"},"content":"* The order of the keywords does not matter. e.g. `work Buddies` will match `Buddies work`","lastModifiedDate":"2021-10-29"},{"lineNumber":187,"author":{"gitId":"Samuel-bit-prog"},"content":"* Only the name of the position is searched.","lastModifiedDate":"2021-10-29"},{"lineNumber":188,"author":{"gitId":"Samuel-bit-prog"},"content":"* Member with positions with names matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2021-10-29"},{"lineNumber":189,"author":{"gitId":"Samuel-bit-prog"},"content":"  e.g. `work Buddies` will return `Best Buddies`, `workaholic`","lastModifiedDate":"2021-10-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":191,"author":{"gitId":"leeroy999"},"content":"Examples:","lastModifiedDate":"2021-10-31"},{"lineNumber":192,"author":{"gitId":"leeroy999"},"content":"* `pfind assist` returns `David Li`, `Irfan Ibrahim` and `Betsy Crowe` because they have the following positions: `Logistics Assistant`, `Logistics Assistant` and `Finance Assistant` respectively.","lastModifiedDate":"2021-10-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":194,"author":{"gitId":"leeroy999"},"content":"#### Deleting a member : `mdel`","lastModifiedDate":"2021-10-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"GWphua"},"content":"Deletes the specified member from Ailurus.","lastModifiedDate":"2021-10-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"leeroy999"},"content":"Format: `mdel /m MEMBER_ID`","lastModifiedDate":"2021-10-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"GWphua"},"content":"* `MEMBER_ID` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-24"},{"lineNumber":201,"author":{"gitId":"tsiyuk"},"content":"* Deletes the member at the specified `MEMBER_ID`.","lastModifiedDate":"2021-10-06"},{"lineNumber":202,"author":{"gitId":"tsiyuk"},"content":"* `MEMBER_ID` refers to the index number shown in the displayed member list.","lastModifiedDate":"2021-10-06"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"GWphua"},"content":"* `mdel /m 2` deletes the 2nd member in Ailurus.","lastModifiedDate":"2021-10-25"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":207,"author":{"gitId":"leeroy999"},"content":"### Task Commands","lastModifiedDate":"2021-10-24"},{"lineNumber":208,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":209,"author":{"gitId":"leeroy999"},"content":"#### Adding a task: `tadd`","lastModifiedDate":"2021-10-24"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":211,"author":{"gitId":"Samuel-bit-prog"},"content":"Adds a task to the specified members in Ailurus.","lastModifiedDate":"2021-10-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":213,"author":{"gitId":"leeroy999"},"content":"Format: `tadd /n TASKNAME /d DATE_TIME /m MEMBER_ID [/m MORE_MEMBER_ID]…​`","lastModifiedDate":"2021-10-31"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":215,"author":{"gitId":"GWphua"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":216,"author":{"gitId":"GWphua"},"content":":bulb: Note: A task must be assigned to a member.","lastModifiedDate":"2021-10-24"},{"lineNumber":217,"author":{"gitId":"leeroy999"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":218,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":219,"author":{"gitId":"GWphua"},"content":"* `MEMBER_ID` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-25"},{"lineNumber":220,"author":{"gitId":"GWphua"},"content":"* Tasks can be added to multiple members if there is more than one `MEMBER_ID` provided.","lastModifiedDate":"2021-10-25"},{"lineNumber":221,"author":{"gitId":"leeroy999"},"content":"* `DATE_TIME` must be of format: `dd/MM/yyyy HH:mm`","lastModifiedDate":"2021-10-31"},{"lineNumber":222,"author":{"gitId":"GWphua"},"content":"* `MEMBER_ID` refers to the index number shown in the displayed member list.","lastModifiedDate":"2021-10-25"},{"lineNumber":223,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":224,"author":{"gitId":"leeroy999"},"content":"Examples:","lastModifiedDate":"2021-10-24"},{"lineNumber":225,"author":{"gitId":"leeroy999"},"content":"* `tadd /n Collect payment from members /d 20/11/2021 11:30 /m 3` adds task `Collect payment from members` to the third member on the  member list.","lastModifiedDate":"2021-10-31"},{"lineNumber":226,"author":{"gitId":"leeroy999"},"content":"* `tadd /n Collect dogtag /d 20/11/2021 11:30 /m 1 /m 2 /m 3` adds task `Collect dogtag` to the first three members on the member list.","lastModifiedDate":"2021-10-31"},{"lineNumber":227,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":228,"author":{"gitId":"leeroy999"},"content":"#### Listing all tasks of a member : `tlist`","lastModifiedDate":"2021-10-24"},{"lineNumber":229,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":230,"author":{"gitId":"Samuel-bit-prog"},"content":"Shows a list of tasks of a member with the specified `MEMBER_ID`. Optional fields are provided to further filter the list","lastModifiedDate":"2021-10-29"},{"lineNumber":231,"author":{"gitId":"Samuel-bit-prog"},"content":"to completed, uncompleted or overdue tasks.","lastModifiedDate":"2021-10-29"},{"lineNumber":232,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":233,"author":{"gitId":"Samuel-bit-prog"},"content":"Format: `tlist /m MEMBER_ID [/dn OPTION] [/ovd]`","lastModifiedDate":"2021-10-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":235,"author":{"gitId":"leeroy999"},"content":"* `MEMBER_ID` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-24"},{"lineNumber":236,"author":{"gitId":"GWphua"},"content":"* `MEMBER_ID` refers to the index number of the member of concern in the displayed member list.","lastModifiedDate":"2021-10-24"},{"lineNumber":237,"author":{"gitId":"Samuel-bit-prog"},"content":"* `OPTION` must be either **y** or **n** to indicate yes or no respectively.","lastModifiedDate":"2021-10-29"},{"lineNumber":238,"author":{"gitId":"Samuel-bit-prog"},"content":"* Only one of `/dn` or `/ovd` may be present when in use.","lastModifiedDate":"2021-10-29"},{"lineNumber":239,"author":{"gitId":"Samuel-bit-prog"},"content":"* `/dn` filters the list of tasks to either done tasks or not done tasks based on `OPTION`.","lastModifiedDate":"2021-10-29"},{"lineNumber":240,"author":{"gitId":"Samuel-bit-prog"},"content":"* `/ovd` filters the list to tasks that are overdue.","lastModifiedDate":"2021-10-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":242,"author":{"gitId":"tsiyuk"},"content":"Example:","lastModifiedDate":"2021-10-28"},{"lineNumber":243,"author":{"gitId":"tsiyuk"},"content":"* `tlist /m 2` lists all tasks of the member with index number 2.","lastModifiedDate":"2021-10-28"},{"lineNumber":244,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":245,"author":{"gitId":"GWphua"},"content":"#### Mark a task as done : `tdone`","lastModifiedDate":"2021-10-25"},{"lineNumber":246,"author":{"gitId":"Samuel-bit-prog"},"content":"Marks the specified tasks of the specified member as done. Only can be used when the task list has entries (accessible via `tlist /m MEMBER_ID`).","lastModifiedDate":"2021-10-29"},{"lineNumber":247,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":248,"author":{"gitId":"GWphua"},"content":"Format: `tdone /t TASK_ID [/t MORE_TASK_ID]…​`","lastModifiedDate":"2021-10-26"},{"lineNumber":249,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":250,"author":{"gitId":"GWphua"},"content":"* Can **only be used when task list has entries**.","lastModifiedDate":"2021-10-25"},{"lineNumber":251,"author":{"gitId":"GWphua"},"content":"* Multiple tasks can be marked as done when there is more than one `TASK_ID` provided.","lastModifiedDate":"2021-10-25"},{"lineNumber":252,"author":{"gitId":"GWphua"},"content":"* `TASK_ID` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-25"},{"lineNumber":253,"author":{"gitId":"GWphua"},"content":"* Marks the task specified by `TASK_ID`.","lastModifiedDate":"2021-10-25"},{"lineNumber":254,"author":{"gitId":"GWphua"},"content":"* `TASK_ID` refers to the index number shown in the displayed task list.","lastModifiedDate":"2021-10-25"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":256,"author":{"gitId":"-"},"content":"Example:","lastModifiedDate":"2021-10-25"},{"lineNumber":257,"author":{"gitId":"leeroy999"},"content":"* `tdone /t 1 /t 2` marks the 1st and 2nd task on the displayed task list as done in Ailurus.","lastModifiedDate":"2021-10-31"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":259,"author":{"gitId":"leeroy999"},"content":"#### Mark a task as undone : `tundone`","lastModifiedDate":"2021-10-29"},{"lineNumber":260,"author":{"gitId":"tsiyuk"},"content":"Marks the specified completed task of the specified member as undone. Only can be used when the task list has entries (accessible via `tlist /m MEMBER_ID`).","lastModifiedDate":"2021-10-28"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":262,"author":{"gitId":"tsiyuk"},"content":"Format: `tundone /t TASK_ID [/t MORE_TASK_ID]…​`","lastModifiedDate":"2021-10-28"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":264,"author":{"gitId":"tsiyuk"},"content":"* Can **only be used when task list has entries**.","lastModifiedDate":"2021-10-28"},{"lineNumber":265,"author":{"gitId":"tsiyuk"},"content":"* Multiple completed tasks can be marked as undone when there is more than one `TASK_ID` provided.","lastModifiedDate":"2021-10-28"},{"lineNumber":266,"author":{"gitId":"tsiyuk"},"content":"* `TASK_ID` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-28"},{"lineNumber":267,"author":{"gitId":"tsiyuk"},"content":"* Marks the task specified by `TASK_ID`.","lastModifiedDate":"2021-10-28"},{"lineNumber":268,"author":{"gitId":"tsiyuk"},"content":"* `TASK_ID` refers to the index number shown in the displayed task list.","lastModifiedDate":"2021-10-28"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":270,"author":{"gitId":"tsiyuk"},"content":"Example:","lastModifiedDate":"2021-10-28"},{"lineNumber":271,"author":{"gitId":"leeroy999"},"content":"* `tundone /t 1 /t 2` marks the 1st and 2nd completed task on the displayed task list as undone in Ailurus.","lastModifiedDate":"2021-10-31"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":273,"author":{"gitId":"GWphua"},"content":"#### Editing a task: `tedit`","lastModifiedDate":"2021-10-25"},{"lineNumber":274,"author":{"gitId":"GWphua"},"content":"Edits an existing task within Ailurus.","lastModifiedDate":"2021-10-25"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":276,"author":{"gitId":"GWphua"},"content":"Format: `tedit /t TASK_ID [/n TASK_NAME] [/d TASK_DEADLINE]`","lastModifiedDate":"2021-10-25"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":278,"author":{"gitId":"GWphua"},"content":"* `TASK_ID` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-25"},{"lineNumber":279,"author":{"gitId":"GWphua"},"content":"* Edits the task at the specified `TASK_ID`. The index refers to the index number shown in the displayed task ","lastModifiedDate":"2021-10-26"},{"lineNumber":280,"author":{"gitId":"GWphua"},"content":"  list.","lastModifiedDate":"2021-10-26"},{"lineNumber":281,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2021-10-25"},{"lineNumber":282,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2021-10-25"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":284,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-25"},{"lineNumber":285,"author":{"gitId":"GWphua"},"content":"* `tedit /t 1 /n Vaccinate Myself` Edits the task name of the 1st task on task list to be `Vaccinate Myself`.","lastModifiedDate":"2021-10-25"},{"lineNumber":286,"author":{"gitId":"GWphua"},"content":"* `tedit /t 2 /n Do OSA Quiz /d 21/10/2021 23:59` Edits the task name and deadline of the 2nd task on task list to be `Do OSA Quiz` and `21/10/2021 23:59` respectively.","lastModifiedDate":"2021-10-25"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":288,"author":{"gitId":"tsiyuk"},"content":"#### Deleting a task belonging to a member : `tdel`","lastModifiedDate":"2021-10-06"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":290,"author":{"gitId":"GWphua"},"content":"Deletes the specified task of a specified member from Ailurus. Only can be used when the task list has entries (accessible via `tlist /m MEMBER_ID`).","lastModifiedDate":"2021-10-24"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"leeroy999"},"content":"Format: `tdel /t TASK_ID`","lastModifiedDate":"2021-10-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":294,"author":{"gitId":"GWphua"},"content":"* Can **only be used when task list has entries**.","lastModifiedDate":"2021-10-24"},{"lineNumber":295,"author":{"gitId":"GWphua"},"content":"* `TASK_ID` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-09-29"},{"lineNumber":296,"author":{"gitId":"GWphua"},"content":"* Deletes the task according to the specified `TASK_ID`.","lastModifiedDate":"2021-10-24"},{"lineNumber":297,"author":{"gitId":"GWphua"},"content":"* `TASK_ID` refers to the index number shown in the displayed task list.","lastModifiedDate":"2021-10-24"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-09-15"},{"lineNumber":300,"author":{"gitId":"leeroy999"},"content":"* `tdel /t 1` deletes the 1st task on the displayed task list in Ailurus.","lastModifiedDate":"2021-10-31"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":302,"author":{"gitId":"LiuZhi1an"},"content":"#### Locating tasks by name: `tfind`","lastModifiedDate":"2021-10-28"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":304,"author":{"gitId":"Samuel-bit-prog"},"content":"Find tasks whose names contain any of the given keywords.","lastModifiedDate":"2021-10-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":306,"author":{"gitId":"LiuZhi1an"},"content":"Format: `tfind KEYWORD [MORE_KEYWORDS]...`","lastModifiedDate":"2021-10-28"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":308,"author":{"gitId":"LiuZhi1an"},"content":"* The search is case-insensitive. e.g `submit` will match `Submit`","lastModifiedDate":"2021-10-28"},{"lineNumber":309,"author":{"gitId":"LiuZhi1an"},"content":"* The order of the keywords does not matter. e.g. `submit form` will match `form submit`","lastModifiedDate":"2021-10-28"},{"lineNumber":310,"author":{"gitId":"LiuZhi1an"},"content":"* Only the name is searched.","lastModifiedDate":"2021-10-28"},{"lineNumber":311,"author":{"gitId":"LiuZhi1an"},"content":"* Tasks matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2021-10-28"},{"lineNumber":312,"author":{"gitId":"LiuZhi1an"},"content":"  e.g. `Submit form` will return `Submit homework`, `Edit form`","lastModifiedDate":"2021-10-28"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":314,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-28"},{"lineNumber":315,"author":{"gitId":"tsiyuk"},"content":"* `tfind form` returns `form` and `submit form`","lastModifiedDate":"2021-10-28"},{"lineNumber":316,"author":{"gitId":"tsiyuk"},"content":"* `tfind Submit form` returns `Submit homework`, `Edit form`\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":317,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":318,"author":{"gitId":"leeroy999"},"content":"### Event Commands","lastModifiedDate":"2021-10-24"},{"lineNumber":319,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":320,"author":{"gitId":"leeroy999"},"content":"#### Adding an event: `eadd`","lastModifiedDate":"2021-10-24"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":322,"author":{"gitId":"leeroy999"},"content":"Adds an event to the Ailurus.","lastModifiedDate":"2021-10-24"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":324,"author":{"gitId":"leeroy999"},"content":"Format: `eadd /n EVENTNAME /d DATE [/m MEMBER_ID]…​`","lastModifiedDate":"2021-10-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"leeroy999"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: Note:","lastModifiedDate":"2021-10-24"},{"lineNumber":327,"author":{"gitId":"leeroy999"},"content":"You can add multiple members to an event e.g. /m 2 /m 3 /m 4...","lastModifiedDate":"2021-10-24"},{"lineNumber":328,"author":{"gitId":"leeroy999"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"leeroy999"},"content":"* `EVENT_ID` and `MEMBER_ID` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-29"},{"lineNumber":331,"author":{"gitId":"leeroy999"},"content":"* `DATE` must be of format: dd/MM/yyyy","lastModifiedDate":"2021-10-29"},{"lineNumber":332,"author":{"gitId":"leeroy999"},"content":"* `EVENT_ID` and `MEMBER_ID` are the INDEX of the event and member list respectively.","lastModifiedDate":"2021-10-29"},{"lineNumber":333,"author":{"gitId":"leeroy999"},"content":"* Multiple members can be added to an event when more than one `MEMBER_ID` is provided.","lastModifiedDate":"2021-10-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-29"},{"lineNumber":336,"author":{"gitId":"leeroy999"},"content":"* `eadd /n Computing Freshmen Orientation Camp 2021 /d 22/11/2021 /m 4 /m 5 /m 6` adds a `Computing Freshmen Orientation Camp 2021` event dated `22/11/2021` and has the 4th, 5th and 6th members of the member list added to it.","lastModifiedDate":"2021-10-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"#### Deleting an event : `edel`","lastModifiedDate":"2021-10-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":340,"author":{"gitId":"leeroy999"},"content":"Deletes the specified event from Ailurus.","lastModifiedDate":"2021-10-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"Format: `edel /e EVENT_ID`","lastModifiedDate":"2021-10-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":344,"author":{"gitId":"leeroy999"},"content":"* `EVENT_ID` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"* Deletes the event at the specified `EVENT_ID`.","lastModifiedDate":"2021-10-29"},{"lineNumber":346,"author":{"gitId":"leeroy999"},"content":"* `EVENT_ID` refers to the index number shown in the displayed event list.","lastModifiedDate":"2021-10-31"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-24"},{"lineNumber":349,"author":{"gitId":"leeroy999"},"content":"* `edel /e 10` deletes the 10th event in Ailurus.","lastModifiedDate":"2021-10-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":351,"author":{"gitId":"Samuel-bit-prog"},"content":"#### Listing all events : `elist`","lastModifiedDate":"2021-10-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":353,"author":{"gitId":"leeroy999"},"content":"Shows a list of all events.","lastModifiedDate":"2021-10-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":355,"author":{"gitId":"leeroy999"},"content":"Format: `elist`","lastModifiedDate":"2021-10-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"Example:","lastModifiedDate":"2021-10-29"},{"lineNumber":358,"author":{"gitId":"Samuel-bit-prog"},"content":"* `elist` lists all events in Ailurus.","lastModifiedDate":"2021-10-29"},{"lineNumber":359,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":360,"author":{"gitId":"GWphua"},"content":"#### Marking participants as attended : `emark`","lastModifiedDate":"2021-10-25"},{"lineNumber":361,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":362,"author":{"gitId":"GWphua"},"content":"Marks the attendance of a participant in a specific event.","lastModifiedDate":"2021-10-27"},{"lineNumber":363,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":364,"author":{"gitId":"GWphua"},"content":"Format: `emark /e EVENT_ID /m MEMBER_ID [/m MORE_MEMBER_ID]…​`","lastModifiedDate":"2021-10-26"},{"lineNumber":365,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":366,"author":{"gitId":"GWphua"},"content":"* `EVENT_ID` and `MEMBER_ID` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-26"},{"lineNumber":367,"author":{"gitId":"leeroy999"},"content":"* `EVENT_ID` and `MEMBER_ID` are the INDEX of the event and member list respectively.","lastModifiedDate":"2021-10-29"},{"lineNumber":368,"author":{"gitId":"GWphua"},"content":"* Multiple members under the event can be marked when more than one `MEMBER_ID` is provided.","lastModifiedDate":"2021-10-26"},{"lineNumber":369,"author":{"gitId":"GWphua"},"content":"* It is recommended for `emark` to be used when the member list shows all entries that are participating in the event (accessible via `mlist /e EVENT_ID`).","lastModifiedDate":"2021-10-26"},{"lineNumber":370,"author":{"gitId":"GWphua"},"content":"* If the specified member is not participating in the event, an error is thrown to the user.","lastModifiedDate":"2021-10-26"},{"lineNumber":371,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":372,"author":{"gitId":"GWphua"},"content":"Examples:","lastModifiedDate":"2021-10-25"},{"lineNumber":373,"author":{"gitId":"GWphua"},"content":"* `emark /e 1 /m 2 /m 3` marks the attendance of the 2nd and 3rd person in the member list in Event 1. ","lastModifiedDate":"2021-10-26"},{"lineNumber":374,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":375,"author":{"gitId":"GWphua"},"content":"#### Marking all participants in the event as attended : `emarkall`","lastModifiedDate":"2021-10-27"},{"lineNumber":376,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":377,"author":{"gitId":"GWphua"},"content":"Marks the attendance of all participants in the specific event.","lastModifiedDate":"2021-10-27"},{"lineNumber":378,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":379,"author":{"gitId":"GWphua"},"content":"Format: `emarkall /e EVENT_ID`","lastModifiedDate":"2021-10-27"},{"lineNumber":380,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":381,"author":{"gitId":"GWphua"},"content":"* `EVENT_ID` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-27"},{"lineNumber":382,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":383,"author":{"gitId":"GWphua"},"content":"Examples:","lastModifiedDate":"2021-10-27"},{"lineNumber":384,"author":{"gitId":"GWphua"},"content":"* `markall /e 3` marks the attendance of all participants in Event 3.","lastModifiedDate":"2021-10-27"},{"lineNumber":385,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":386,"author":{"gitId":"GWphua"},"content":"#### Undo marking participants as attended : `eunmark`","lastModifiedDate":"2021-10-26"},{"lineNumber":387,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":388,"author":{"gitId":"GWphua"},"content":"Undo the marking of the attendance of a participant in a specific event.","lastModifiedDate":"2021-10-27"},{"lineNumber":389,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":390,"author":{"gitId":"leeroy999"},"content":"Format: `eunmark /e EVENT_ID /m MEMBER_ID [/m MORE_MEMBER_ID]…​`","lastModifiedDate":"2021-10-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":392,"author":{"gitId":"GWphua"},"content":"* `EVENT_ID` and `MEMBER_ID` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-26"},{"lineNumber":393,"author":{"gitId":"leeroy999"},"content":"* `EVENT_ID` and `MEMBER_ID` are the INDEX of the event and member list respectively.","lastModifiedDate":"2021-10-29"},{"lineNumber":394,"author":{"gitId":"GWphua"},"content":"* Multiple members under the event can be unmarked when more than one `MEMBER_ID` is provided.","lastModifiedDate":"2021-10-26"},{"lineNumber":395,"author":{"gitId":"GWphua"},"content":"* It is recommended for `eunmark` to be used when the member list shows all entries that are participating in the event (accessible via `mlist /e EVENT_ID`).","lastModifiedDate":"2021-10-26"},{"lineNumber":396,"author":{"gitId":"GWphua"},"content":"* If the specified member is not participating in the event, an error is thrown to the user.","lastModifiedDate":"2021-10-26"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":398,"author":{"gitId":"GWphua"},"content":"Examples:","lastModifiedDate":"2021-10-26"},{"lineNumber":399,"author":{"gitId":"GWphua"},"content":"* `eunmark /e 2 /m 3 /m 4` unmark the attendance of the 3rd and 4th person in the member list in Event 2.","lastModifiedDate":"2021-10-27"},{"lineNumber":400,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":401,"author":{"gitId":"GWphua"},"content":"#### Editing an event : `eedit`","lastModifiedDate":"2021-10-25"},{"lineNumber":402,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":403,"author":{"gitId":"GWphua"},"content":"Edits an existing event in Ailurus.","lastModifiedDate":"2021-10-25"},{"lineNumber":404,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":405,"author":{"gitId":"GWphua"},"content":"Format: `eedit /e EVENT_ID [/n EVENT_NAME] [/d EVENT_DATE] [/m MEMBER_ID]…​`","lastModifiedDate":"2021-10-26"},{"lineNumber":406,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":407,"author":{"gitId":"GWphua"},"content":"* `EVENT_ID` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-25"},{"lineNumber":408,"author":{"gitId":"leeroy999"},"content":"* `DATE` must be of format: dd/MM/yyyy","lastModifiedDate":"2021-10-29"},{"lineNumber":409,"author":{"gitId":"leeroy999"},"content":"* `EVENT_ID` and `MEMBER_ID` are the INDEX of the event and member list respectively.","lastModifiedDate":"2021-10-29"},{"lineNumber":410,"author":{"gitId":"GWphua"},"content":"* Edits the member at the specified `EVENT_ID`. `EVENT_ID` refers to the index number shown in the displayed event list.","lastModifiedDate":"2021-10-25"},{"lineNumber":411,"author":{"gitId":"GWphua"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2021-10-25"},{"lineNumber":412,"author":{"gitId":"GWphua"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2021-10-25"},{"lineNumber":413,"author":{"gitId":"GWphua"},"content":"* You can remove all the members by typing `/m` without specifying any members after it.","lastModifiedDate":"2021-10-25"},{"lineNumber":414,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":415,"author":{"gitId":"GWphua"},"content":"Examples:","lastModifiedDate":"2021-10-25"},{"lineNumber":416,"author":{"gitId":"leeroy999"},"content":"* `eedit /e 1 /n Freshman Orientation Project Discussion /d 22/11/2021` edits the event name of the 1st event on the event list to be `Freshman Orientation Project Discussion` and date to be `22/11/2021`.","lastModifiedDate":"2021-10-29"},{"lineNumber":417,"author":{"gitId":"GWphua"},"content":"* `eedit /e 2 /m 1 /m 2 /m 3` edits the participants in the event to be the 1st, 2nd and 3rd members on the member list.","lastModifiedDate":"2021-10-25"},{"lineNumber":418,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":419,"author":{"gitId":"Samuel-bit-prog"},"content":"#### Locating events by their names: `efind`","lastModifiedDate":"2021-10-29"},{"lineNumber":420,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":421,"author":{"gitId":"Samuel-bit-prog"},"content":"Finds events whose names contain any of the given keywords.","lastModifiedDate":"2021-10-29"},{"lineNumber":422,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":423,"author":{"gitId":"Samuel-bit-prog"},"content":"Format: `efind KEYWORD [MORE_KEYWORDS]…​`","lastModifiedDate":"2021-10-29"},{"lineNumber":424,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":425,"author":{"gitId":"Samuel-bit-prog"},"content":"* The search is case-insensitive. e.g. `cycling` will match `Cycling`","lastModifiedDate":"2021-10-29"},{"lineNumber":426,"author":{"gitId":"Samuel-bit-prog"},"content":"* The order of the keywords does not matter. e.g. `Dance crazy` will match `crazy Dance`","lastModifiedDate":"2021-10-29"},{"lineNumber":427,"author":{"gitId":"Samuel-bit-prog"},"content":"* Only the name of events is searched.","lastModifiedDate":"2021-10-29"},{"lineNumber":428,"author":{"gitId":"Samuel-bit-prog"},"content":"* Events matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2021-10-29"},{"lineNumber":429,"author":{"gitId":"Samuel-bit-prog"},"content":"  e.g. `Happy Cycling` will return `Happy Birthday Party`, `Cycling at Park`","lastModifiedDate":"2021-10-29"},{"lineNumber":430,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":431,"author":{"gitId":"leeroy999"},"content":"#### Adding participants to an event : `emadd`","lastModifiedDate":"2021-10-29"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":433,"author":{"gitId":"leeroy999"},"content":"Adds selected participant(s) to a specific event.","lastModifiedDate":"2021-10-29"},{"lineNumber":434,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":435,"author":{"gitId":"leeroy999"},"content":"Format: `emadd /e EVENT_ID /m MEMBER_ID [/m MORE_MEMBER_ID]…​`","lastModifiedDate":"2021-10-29"},{"lineNumber":436,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":437,"author":{"gitId":"leeroy999"},"content":"* `EVENT_ID` and `MEMBER_ID` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-29"},{"lineNumber":438,"author":{"gitId":"leeroy999"},"content":"* `EVENT_ID` and `MEMBER_ID` are the INDEX of the event and member list respectively.","lastModifiedDate":"2021-10-29"},{"lineNumber":439,"author":{"gitId":"leeroy999"},"content":"* Multiple members can be added to the event when more than one `MEMBER_ID` is provided.","lastModifiedDate":"2021-10-29"},{"lineNumber":440,"author":{"gitId":"leeroy999"},"content":"* If the specified member already participating in the event, an error is thrown to the user.","lastModifiedDate":"2021-10-29"},{"lineNumber":441,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":442,"author":{"gitId":"leeroy999"},"content":"Examples:","lastModifiedDate":"2021-10-24"},{"lineNumber":443,"author":{"gitId":"leeroy999"},"content":"* `emadd /e 1 /m 2 /m 3` adds the 2nd and 3rd person in the member list to Event 1.","lastModifiedDate":"2021-10-29"},{"lineNumber":444,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":445,"author":{"gitId":"leeroy999"},"content":"#### Deleting participants from an event : `emdel`","lastModifiedDate":"2021-10-29"},{"lineNumber":446,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":447,"author":{"gitId":"leeroy999"},"content":"Deletes selected participant(s) to a specific event.","lastModifiedDate":"2021-10-29"},{"lineNumber":448,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":449,"author":{"gitId":"leeroy999"},"content":"Format: `emdel /e EVENT_ID /m MEMBER_ID [/m MORE_MEMBER_ID]…​`","lastModifiedDate":"2021-10-29"},{"lineNumber":450,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":451,"author":{"gitId":"leeroy999"},"content":"* `EVENT_ID` and `MEMBER_ID` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-29"},{"lineNumber":452,"author":{"gitId":"leeroy999"},"content":"* `EVENT_ID` and `MEMBER_ID` are the INDEX of the event and member list respectively.","lastModifiedDate":"2021-10-29"},{"lineNumber":453,"author":{"gitId":"leeroy999"},"content":"* Multiple members can be deleted from the event when more than one `MEMBER_ID` is provided.","lastModifiedDate":"2021-10-29"},{"lineNumber":454,"author":{"gitId":"leeroy999"},"content":"* It is recommended for `emdel` to be used when the member list shows all entries that are participating in the event (accessible via `mlist /e EVENT_ID`).","lastModifiedDate":"2021-10-29"},{"lineNumber":455,"author":{"gitId":"leeroy999"},"content":"* If the specified member is not participating in the event, an error is thrown to the user.","lastModifiedDate":"2021-10-29"},{"lineNumber":456,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":457,"author":{"gitId":"leeroy999"},"content":"Examples:","lastModifiedDate":"2021-10-29"},{"lineNumber":458,"author":{"gitId":"leeroy999"},"content":"* `emdel /e 1 /m 2 /m 3` deletes the 2nd and 3rd person in the member list from Event 1.","lastModifiedDate":"2021-10-29"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"GWphua"},"content":"Ailurus data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-09-29"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":472,"author":{"gitId":"GWphua"},"content":"Ailurus data are saved as a JSON file `[JAR file location]/data/Ailurus.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-10-24"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":474,"author":{"gitId":"GWphua"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":475,"author":{"gitId":"GWphua"},"content":":exclamation: **Caution:** If your changes to the data file makes its format invalid, Ailurus will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-10-24"},{"lineNumber":476,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":478,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"GWphua"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous Ailurus home folder.","lastModifiedDate":"2021-10-24"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"**help** | `help`","lastModifiedDate":"2021-09-29"},{"lineNumber":492,"author":{"gitId":"GWphua"},"content":"**madd** | `madd /n NAME /ph PHONE_NUMBER /em EMAIL /a ADDRESS [/p POSITION]…​` \u003cbr\u003e e.g., `madd /n James Ho /ph 22224444 /em jamesho@example.com /a 123, Clementi Rd, 1234665 /p friend /p colleague`","lastModifiedDate":"2021-10-24"},{"lineNumber":493,"author":{"gitId":"Samuel-bit-prog"},"content":"**mlist** | `mlist [/e EVENT_ID] [/att] [/abs]` \u003cbr\u003e e.g., `mlist /e 3 /att`","lastModifiedDate":"2021-10-29"},{"lineNumber":494,"author":{"gitId":"GWphua"},"content":"**medit** | `medit /m MEMBER_ID [/n NAME] [/ph PHONE_NUMBER] [/em EMAIL] [/a ADDRESS] [/p POSITION]…​`\u003cbr\u003e e.g.,`edit /m 2 /n James Lee /em jameslee@example.com`","lastModifiedDate":"2021-10-25"},{"lineNumber":495,"author":{"gitId":"GWphua"},"content":"**mfind** | `mfind KEYWORD [MORE_KEYWORDS]…​`\u003cbr\u003e e.g., `mfind James Jake`","lastModifiedDate":"2021-10-26"},{"lineNumber":496,"author":{"gitId":"leeroy999"},"content":"**mtfind** | `mtfind KEYWORD [MORE_KEYWORDS]…​`\u003cbr\u003e e.g., `mtfind form`","lastModifiedDate":"2021-10-29"},{"lineNumber":497,"author":{"gitId":"Samuel-bit-prog"},"content":"**pfind** | `pfind KEYWORD [MORE_KEYWORDS]…​`\u003cbr\u003e e.g., `pfind colleague`","lastModifiedDate":"2021-10-29"},{"lineNumber":498,"author":{"gitId":"leeroy999"},"content":"**mdel** | `mdel /m MEMBER_ID` \u003cbr\u003e e.g., `mdel /m 5`","lastModifiedDate":"2021-10-29"},{"lineNumber":499,"author":{"gitId":"leeroy999"},"content":"**tadd** | `tadd /n TASKNAME /m MEMBER_ID` \u003cbr\u003e e.g., `tadd /n Collect payment from members /m 3`","lastModifiedDate":"2021-10-21"},{"lineNumber":500,"author":{"gitId":"leeroy999"},"content":"**tfind** | `tfind KEYWORD [MORE_KEYWORDS]…​`\u003cbr\u003e e.g., `tfind form`","lastModifiedDate":"2021-10-29"},{"lineNumber":501,"author":{"gitId":"Samuel-bit-prog"},"content":"**tlist** | `tlist /m MEMBER_ID [/dn OPTION] [/ovd]` \u003cbr\u003e e.g., `tlist /m 2 /dn y`","lastModifiedDate":"2021-10-29"},{"lineNumber":502,"author":{"gitId":"GWphua"},"content":"**tdone** | `tdone /t TASK_ID [/t MORE_TASK_ID]…​`\u003cbr\u003e e.g. `tdone /t 3 /t 4`","lastModifiedDate":"2021-10-26"},{"lineNumber":503,"author":{"gitId":"leeroy999"},"content":"**tundone** | `tundone /t TASK_ID [/t MORE_TASK_ID]…​`\u003cbr\u003e e.g. `tundone /t 3 /t 4`","lastModifiedDate":"2021-10-29"},{"lineNumber":504,"author":{"gitId":"GWphua"},"content":"**tedit** | `tedit /t TASK_ID [/n TASK_NAME] [/d TASK_DEADLINE]` \u003cbr\u003e e.g. `tedit /t 2 /n Do OSA Quiz /d 21/10/2021 23:59`","lastModifiedDate":"2021-10-25"},{"lineNumber":505,"author":{"gitId":"leeroy999"},"content":"**tdel** | `tdel /t TASK_ID` \u003cbr\u003e e.g., `tdel /t 1`","lastModifiedDate":"2021-10-29"},{"lineNumber":506,"author":{"gitId":"GWphua"},"content":"**eadd** | `eadd /n EVENTNAME [/m MEMBER_ID]…​` \u003cbr\u003e e.g., `eadd /n Computing Freshmen Orientation Camp 2021 /m 4 /m 5 /m 6`","lastModifiedDate":"2021-10-24"},{"lineNumber":507,"author":{"gitId":"leeroy999"},"content":"**edel** | `edel /e EVENT_ID ` \u003cbr\u003e e.g., `edel /e 7`","lastModifiedDate":"2021-10-29"},{"lineNumber":508,"author":{"gitId":"leeroy999"},"content":"**elist** | `elist`","lastModifiedDate":"2021-10-29"},{"lineNumber":509,"author":{"gitId":"GWphua"},"content":"**emark** | `emark /e EVENT_ID /m MEMBER_ID [/m MORE_MEMBER_ID]…​` \u003cbr\u003e e.g. `emark /e 1 /m 2 /m 3`","lastModifiedDate":"2021-10-26"},{"lineNumber":510,"author":{"gitId":"GWphua"},"content":"**emarkall** | `emarkall /e EVENT_ID` \u003cbr\u003e e.g. `emarkall /e 5`","lastModifiedDate":"2021-10-27"},{"lineNumber":511,"author":{"gitId":"GWphua"},"content":"**eunmark** | `unmark /e EVENT_ID /m MEMBER_ID [/m MORE_MEMBER_ID]…​` \u003cbr\u003e e.g. `eunmark /e 2 /m 2 /m 5`","lastModifiedDate":"2021-10-27"},{"lineNumber":512,"author":{"gitId":"GWphua"},"content":"**eedit** | `eedit /e EVENT_ID [/n EVENT_NAME] [/d EVENT_DATE] [/m MEMBER_ID]…​` \u003cbr\u003e e.g. `eedit /e 1 /n Freshman Orientation Project Discussion`","lastModifiedDate":"2021-10-26"},{"lineNumber":513,"author":{"gitId":"Samuel-bit-prog"},"content":"**efind** | `efind KEYWORD [MORE_KEYWORDS]…​`\u003cbr\u003e e.g., `efind competition`","lastModifiedDate":"2021-10-29"},{"lineNumber":514,"author":{"gitId":"leeroy999"},"content":"**emadd** | `emadd /e EVENT_ID /m MEMBER_ID [/m MORE_MEMBER_ID]…​` \u003cbr\u003e e.g. `emadd /e 1 /m 2 /m 3`","lastModifiedDate":"2021-10-29"},{"lineNumber":515,"author":{"gitId":"leeroy999"},"content":"**emdel** | `emdel /e EVENT_ID /m MEMBER_ID [/m MORE_MEMBER_ID]…​` \u003cbr\u003e e.g. `emdel /e 1 /m 2 /m 3`","lastModifiedDate":"2021-10-29"},{"lineNumber":516,"author":{"gitId":"GWphua"},"content":"**exit** | `exit`","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"GWphua":148,"LiuZhi1an":8,"-":181,"tsiyuk":29,"leeroy999":109,"Samuel-bit-prog":41}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"leeroy999"},"content":"    content: \"Ailurus\";","lastModifiedDate":"2021-09-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"-":294,"leeroy999":1}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"user -[USER_COLOR]\u003e ui : \"mdel 1\"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"mdel 1\")","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteMember(p)","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":35,"leeroy999":3}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"LiuZhi1an"},"content":"AddressBook *-right-\u003e \"1\" UniqueMemberList","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"LiuZhi1an"},"content":"AddressBook *-right-\u003e \"1\" UniquePositionList","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"LiuZhi1an"},"content":"UniquePositionList -[hidden]down- UniqueMemberList","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"LiuZhi1an"},"content":"UniquePositionList -[hidden]down- UniqueMemberList","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"LiuZhi1an"},"content":"UniquePositionList *-right-\u003e \"*\" Position","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"UniqueMemberList -right-\u003e Member","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"LiuZhi1an"},"content":"Member -up-\u003e \"*\" Position","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"Member *--\u003e Phone","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"Member *--\u003e Email","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"Member *--\u003e Address","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"Samuel-bit-prog"},"content":"AddressBook *--\u003e \"1\" UniqueEventList","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"Samuel-bit-prog"},"content":"UniqueEventList --\u003e \"~*\" Event","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"Samuel-bit-prog"},"content":"Event .up.|\u003e Module","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"Samuel-bit-prog"},"content":"Module *--\u003e Name","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"Samuel-bit-prog"},"content":"Event *--\u003e EventDate","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"Samuel-bit-prog"},"content":"Event --\u003e \"~*\" Member","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"Samuel-bit-prog"},"content":"Member .right.|\u003eModule","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"LiuZhi1an":6,"-":10,"leeroy999":4,"Samuel-bit-prog":10}},{"path":"docs/diagrams/CommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"@startuml","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"start","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"repeat","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":":User chooses to look into one of the modules;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"switch ()","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"case ([Event chosen])","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"    :list events;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"    if () then ([select events of a member])","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"        :list members of specific event;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"    else ([else])","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"        :list all events;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"    endif","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"    :User chooses what to do with events;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"    :User executes event command;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"case ([Member chosen])","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"    :list members;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"    if () then ([select members of an event])","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"        :list members of specific event;","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"    else ([else])","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"        :list all members;","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"    endif","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"    :User chooses what to do with the members;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"    :User executes member command;","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"case ([Task chosen])","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"    :list all tasks of a member;","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"    :User chooses what to do with the tasks;","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"    :User executes task command;","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"endswitch","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":":AddressBook saves changes to Storage;","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"repeat while () is ([else])","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"-\u003e//[Program exited?]//;","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"stop","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"@enduml","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"leeroy999":33}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"[-\u003e LogicManager : execute(\"mdel 1\")","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"mdel 1\")","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"leeroy999"},"content":"DeleteCommand -\u003e Model : deleteMember(1)","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":66,"leeroy999":3}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface ReadOnlyAddressBook \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Interface ReadOnlyUserPrefs \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-05-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class Model","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"Samuel-bit-prog"},"content":"Class Module","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"Class UniqueMemberList","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"Class Member","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"LiuZhi1an"},"content":"Class Position","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"Class UniqueEventList","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"Class Event","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"Class EventName","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"Class EventDate","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"Class TaskList","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"Class Task","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"Class TaskDeadline","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"Model ..left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"ModelManager --left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"tsiyuk"},"content":"ModelManager -\u003e \"1\\n manager\" TaskList","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"leeroy999"},"content":"AddressBook *--\u003e \"1\" UniqueMemberList","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"leeroy999"},"content":"UniqueMemberList --\u003e \"~* all\" Member","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"Samuel-bit-prog"},"content":"Member .up.|\u003e Module","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"leeroy999"},"content":"Member *--\u003e Phone","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"leeroy999"},"content":"Member *--\u003e Email","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"leeroy999"},"content":"Member *--\u003e Address","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"LiuZhi1an"},"content":"Member *--\u003e \"*\" Position","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"tsiyuk"},"content":"Member *--\u003e \"1\" TaskList","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"leeroy999"},"content":"AddressBook *--\u003e \"1\" UniqueEventList","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"leeroy999"},"content":"UniqueEventList --\u003e \"~*\" Event","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"Samuel-bit-prog"},"content":"Event .up.|\u003e Module","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"Samuel-bit-prog"},"content":"Module *--\u003e Name","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"leeroy999"},"content":"Event *--\u003e EventDate","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"leeroy999"},"content":"Event --\u003e \"~*\" Member","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"leeroy999"},"content":"ModelManager --\u003e\"~* filtered\" Member","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"tsiyuk"},"content":"TaskList *--\u003e \"~*\"Task","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"tsiyuk"},"content":"Task .up.|\u003e Module","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"tsiyuk"},"content":"Task --\u003e \"1\" TaskDeadline","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"LiuZhi1an":2,"-":41,"tsiyuk":11,"Samuel-bit-prog":4,"leeroy999":17}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface UserPrefsStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Interface Storage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Interface AddressBookStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"Class JsonAdaptedMember","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"LiuZhi1an"},"content":"Class JsonAdaptedPosition","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"Samuel-bit-prog"},"content":"Class JsonAdaptedEvent","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"Class JsonAdaptedTask","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedMember","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"JsonAdaptedMember --\u003e \"*\" JsonAdaptedTask","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"Samuel-bit-prog"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedEvent","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"Samuel-bit-prog"},"content":"JsonAdaptedEvent --\u003e \"*\" JsonAdaptedMember","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"LiuZhi1an"},"content":"JsonAdaptedMember --\u003e \"*\" JsonAdaptedPosition","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"LiuZhi1an":3,"-":39,"tsiyuk":3,"leeroy999":2,"Samuel-bit-prog":3}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface Ui \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"Class MemberListPanel","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"Class MemberCard","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"GWphua"},"content":"Class EventListPanel","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"GWphua"},"content":"Class EventCard","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"GWphua"},"content":"HiddenOutside .right..\u003e Ui","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"GWphua"},"content":"UiManager .right.|\u003e Logic","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"GWphua"},"content":"MainWindow .right.|\u003e Logic","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"GWphua"},"content":"Logic -[hidden]down- UiManager","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"GWphua"},"content":"UiManager .up.|\u003e Ui","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"GWphua"},"content":"MainWindow -right-|\u003e UiPart","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"MainWindow *-down-\u003e \"1\" MemberListPanel","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"GWphua"},"content":"MainWindow *-down-\u003e \"1\" EventListPanel","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"GWphua"},"content":"MainWindow *-right-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"GWphua"},"content":"MainWindow *-right-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"GWphua"},"content":"MainWindow *-right-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"GWphua"},"content":"StatusBarFooter -[hidden]left- HelpWindow","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"GWphua"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"GWphua"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"GWphua"},"content":"EventListPanel -[hidden]left- MemberListPanel","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"GWphua"},"content":"MemberListPanel -up-|\u003e UiPart","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"GWphua"},"content":"MemberCard -up-|\u003e UiPart","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"GWphua"},"content":"EventListPanel -up-|\u003e UiPart","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"GWphua"},"content":"EventCard -up-|\u003e UiPart","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"GWphua"},"content":"MemberListPanel -down-\u003e \"*\" MemberCard","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"GWphua"},"content":"EventListPanel -down-\u003e \"*\" EventCard","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"GWphua"},"content":"EventCard -..\u003e Model","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"GWphua"},"content":"MemberCard -..\u003e Model","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"GWphua":25,"-":38,"leeroy999":3}},{"path":"docs/diagrams/UndoRedoState1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"title After command \"mdel 5\"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    class State1 as \"__ab0:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    class State2 as \"__ab1:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    class State3 as \"__ab2:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":21,"leeroy999":1}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":AddressBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"ecp -\u003e ec ++: index, editMemberDescriptor","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"-":20,"leeroy999":1}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"title: Ailurus","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-T15-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-T15-2/tp/actions)","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-T15-2/tp/branch/master/graph/badge.svg?token\u003d0U1WFQS7S3)](https://codecov.io/gh/AY2122S1-CS2103T-T15-2/tp)","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"GWphua"},"content":"![Ui](images/sampleUi.png)","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"**Ailurus is a desktop application for organizing committees to manage details of their members.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"* If you are interested in using Ailurus, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"* If you are interested about developing Ailurus, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"GWphua":1,"-":14,"leeroy999":4}},{"path":"docs/team/gwphua.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"---","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"layout: page","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"title: Phua Guan Wei\u0027s Project Portfolio Page","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"---","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"### Project: Ailurus","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"Ailurus helps organizing committees account for details of their members. ","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"It provides users with convenient viewing and editing access to all information, thus providing much convenience in their work.","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"* **New Feature**:","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dgwphua)","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"* **Project management**:","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"* **Documentation**:","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"* **Community**:","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"* **Tools**:","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"leeroy999":26}},{"path":"docs/team/leeroy999.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"---","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"layout: page","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"title: Leeroy Liu\u0027s Project Portfolio Page","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"---","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"### Project: Ailurus","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"Ailurus helps organizing committees account for details of their members. ","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"It provides users with convenient viewing and editing access to all information, thus providing much convenience in their work.","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"* **New Feature**:","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dleeroy999)","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"* **Project management**:","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"* **Documentation**:","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"* **Community**:","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"* **Tools**:","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"leeroy999":26}},{"path":"docs/team/liuzhi1an.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"---","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"layout: page","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"title: Liu Zhilan\u0027s Project Portfolio Page","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"---","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"### Project: Ailurus","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"Ailurus helps organizing committees account for details of their members. ","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"It provides users with convenient viewing and editing access to all information, thus providing much convenience in their work.","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"* **New Feature**:","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dliuzhi1an)","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"* **Project management**:","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"* **Documentation**:","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"* **Community**:","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"* **Tools**:","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"leeroy999":26}},{"path":"docs/team/sample.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: John Doe\u0027s Project Portfolio Page","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-07-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"    * Added documentation for the features `mdel` and `mfind` [\\#72]()","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"    * Added implementation details of the `mdel` feature.","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":44,"leeroy999":2}},{"path":"docs/team/samuel-bit-prog.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"---","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"layout: page","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"title: Samuel Lau Yi Ren\u0027s Project Portfolio Page","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"---","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"### Project: Ailurus","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"Ailurus helps organizing committees account for details of their members. ","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"It provides users with convenient viewing and editing access to all information, thus providing much convenience in their work.","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"* **New Feature**:","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dsamuel-bit-prog)","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"* **Project management**:","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"* **Documentation**:","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"* **Community**:","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"* **Tools**:","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"leeroy999":26}},{"path":"docs/team/tsiyuk.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"---","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"layout: page","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"title: Chi Xu\u0027s Project Portfolio Page","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"---","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"### Project: Ailurus","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"Ailurus helps organizing committees account for details of their members. ","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"It provides users with convenient viewing and editing access to all information, thus providing much convenience in their work.","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"* **New Feature**:","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dtsiyuk)","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"* **Project management**:","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"* **Documentation**:","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"* **Community**:","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"* **Tools**:","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"leeroy999":26}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47).","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47) after you are done.","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-fc19ecee89c3732a62fbc8c840250508).","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"leeroy999"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Member` model. Each field in a Member is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2021-10-07"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"Samuel-bit-prog"},"content":"Create a new `Remark` in `seedu.address.model.data.event.member`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2021-10-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-af2f075d24dfcd333876f0fbce321f25). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"leeroy999"},"content":"Simply add the following to [`seedu.address.ui.MemberCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-0c6b6abcfac8c205e075294f25e851fe).","lastModifiedDate":"2021-10-07"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"leeroy999"},"content":"**`MemberCard.java`:**","lastModifiedDate":"2021-10-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"leeroy999"},"content":"Then insert the following into [`main/resources/view/MemberListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-12580431f55d7880578aa4c16f249e71).","lastModifiedDate":"2021-10-07"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"leeroy999"},"content":"**`MemberListCard.fxml`:**","lastModifiedDate":"2021-10-07"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"leeroy999"},"content":"## Modify `Member` to support a `Remark` field","lastModifiedDate":"2021-10-07"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"leeroy999"},"content":"Since `MemberCard` displays data from a `Member`, we need to update `Member` to get our `Remark` displayed!","lastModifiedDate":"2021-10-07"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"leeroy999"},"content":"### Modify `Member`","lastModifiedDate":"2021-10-07"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"leeroy999"},"content":"We change the constructor of `Member` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2021-10-07"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"leeroy999"},"content":"### Update other usages of `Member`","lastModifiedDate":"2021-10-07"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"leeroy999"},"content":"Unfortunately, a change to `Member` will cause other commands to break, you will have to modify these commands to use the updated `Member`!","lastModifiedDate":"2021-10-07"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"leeroy999"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Member` class to find these commands.","lastModifiedDate":"2021-10-07"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"leeroy999"},"content":"AddressBook stores data by serializing `JsonAdaptedMember` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedMember` to work with our new `Member`!","lastModifiedDate":"2021-10-07"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"leeroy999"},"content":"Now that we have finalized the `Member` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2021-10-07"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"leeroy999"},"content":"**`MemberCard.java`:**","lastModifiedDate":"2021-10-07"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"leeroy999"},"content":"public MemberCard(Member person, int displayedIndex) {","lastModifiedDate":"2021-10-07"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"leeroy999"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Member`. Since all fields in a `Member` are immutable, we create a new instance of a `Member` with the values that we want and","lastModifiedDate":"2021-10-07"},{"lineNumber":329,"author":{"gitId":"leeroy999"},"content":"save it with `Model#setMember()`.","lastModifiedDate":"2021-10-07"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"leeroy999"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Member: %1$s\";","lastModifiedDate":"2021-10-07"},{"lineNumber":336,"author":{"gitId":"leeroy999"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Member: %1$s\";","lastModifiedDate":"2021-10-07"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"leeroy999"},"content":"        List\u003cMember\u003e lastShownList \u003d model.getFilteredMemberList();","lastModifiedDate":"2021-10-07"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"leeroy999"},"content":"        Member personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-07"},{"lineNumber":347,"author":{"gitId":"leeroy999"},"content":"        Member editedMember \u003d new Member(","lastModifiedDate":"2021-10-07"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"LiuZhi1an"},"content":"                personToEdit.getAddress(), remark, personToEdit.getPositions());","lastModifiedDate":"2021-10-07"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"leeroy999"},"content":"        model.setMember(personToEdit, editedMember);","lastModifiedDate":"2021-10-07"},{"lineNumber":352,"author":{"gitId":"leeroy999"},"content":"        model.updateFilteredMemberList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-07"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"leeroy999"},"content":"        return new CommandResult(generateSuccessMessage(editedMember));","lastModifiedDate":"2021-10-07"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"leeroy999"},"content":"    private String generateSuccessMessage(Member personToEdit) {","lastModifiedDate":"2021-10-07"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2021-08-01"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9).","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"LiuZhi1an":1,"-":372,"leeroy999":27,"Samuel-bit-prog":1}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Member` class.","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"Samuel-bit-prog"},"content":"The `address` field in `Member` is actually an instance of the `Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditMemberDescriptor` may require more careful inspection.","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"leeroy999"},"content":"Let’s try removing references to `Address` in `EditMemberDescriptor`.","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"1. Safe delete the field `address` in `EditMemberDescriptor`.","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"leeroy999"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Member` class will require you to modify its constructor.","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"leeroy999"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `MemberCard` that has not been removed nor identified.","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"leeroy999"},"content":"A quick look at the `MemberCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"leeroy999"},"content":"**`MemberCard.java`**","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"leeroy999"},"content":"**`MemberCard.fxml`**","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"leeroy999"},"content":"**`invalidMemberAddressBook.json`:**","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"leeroy999"},"content":"    \"name\": \"Member with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":100,"leeroy999":11,"Samuel-bit-prog":1}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"leeroy999"},"content":"Recall from the User Guide that the `medit` command has the format: `medit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/POSITION]…​` For this tutorial we will be issuing the command `medit 1 n/Alice Yeoh`.","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"leeroy999"},"content":"1. When the GUI appears, enter `medit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"leeroy999"},"content":"1. We see that the value of `commandWord` is now `medit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2021-10-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"leeroy999"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `medit` command and store any possible changes in an `EditMemberDescriptor`. Recall that we can verify the contents of `editMemberDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"leeroy999"},"content":"    ![Tracing an `medit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"leeroy999"},"content":"       Member personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-07"},{"lineNumber":193,"author":{"gitId":"leeroy999"},"content":"       Member editedMember \u003d createEditedMember(personToEdit, editMemberDescriptor);","lastModifiedDate":"2021-10-07"},{"lineNumber":194,"author":{"gitId":"leeroy999"},"content":"       if (!personToEdit.isSameMember(editedMember) \u0026\u0026 model.hasMember(editedMember)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"leeroy999"},"content":"       model.setMember(personToEdit, editedMember);","lastModifiedDate":"2021-10-07"},{"lineNumber":198,"author":{"gitId":"leeroy999"},"content":"       model.updateFilteredMemberList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-07"},{"lineNumber":199,"author":{"gitId":"leeroy999"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedMember));","lastModifiedDate":"2021-10-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"leeroy999"},"content":"   * it uses the `setMember()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-10-07"},{"lineNumber":205,"author":{"gitId":"leeroy999"},"content":"   * it uses the `updateFilteredMemberList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":206,"author":{"gitId":"leeroy999"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `medit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"leeroy999"},"content":"            source.getMemberList()","lastModifiedDate":"2021-10-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"leeroy999"},"content":"                  .map(JsonAdaptedMember::new)","lastModifiedDate":"2021-10-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"leeroy999"},"content":"1. It appears that a `JsonAdaptedMember` is created for each `Member` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2021-10-07"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"leeroy999"},"content":"    2.  `medit 0 n/Alice Yu`","lastModifiedDate":"2021-10-26"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"leeroy999"},"content":"    3.  `medit 1 n/Alex Yeoh`","lastModifiedDate":"2021-10-26"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"leeroy999"},"content":"    4.  `medit 1`","lastModifiedDate":"2021-10-26"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"leeroy999"},"content":"    5.  `medit 1 n/アリス ユー`","lastModifiedDate":"2021-10-26"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"leeroy999"},"content":"    6.  `medit 1 t/one t/two t/three t/one`","lastModifiedDate":"2021-10-26"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"leeroy999"},"content":"    5.  Add a new field to `Member`","lastModifiedDate":"2021-10-07"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":278,"leeroy999":23}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 0, true);","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"GWphua"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing Ailurus ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"GWphua"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s data file and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"GWphua"},"content":"     * The data from the sample data file will be used instead if {@code storage}\u0027s data file is not found,","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"GWphua"},"content":"     * or an empty data file will be used instead if errors occur when reading {@code storage}\u0027s data file.","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"GWphua"},"content":"                logger.info(\"Data file not found. Will be starting with sample Data File\");","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"GWphua"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty Data File\");","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"GWphua"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty Data File\");","lastModifiedDate":"2021-10-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"GWphua"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty file\");","lastModifiedDate":"2021-10-28"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"GWphua"},"content":"        logger.info(\"Starting Ailurus \" + MainApp.VERSION);","lastModifiedDate":"2021-10-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"GWphua"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Ailurus ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-10-27"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"GWphua":10,"-":172,"tsiyuk":1}},{"path":"src/main/java/seedu/address/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"    private static final double DEFAULT_HEIGHT \u003d 700;","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"    private static final double DEFAULT_WIDTH \u003d 750;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":77,"leeroy999":2}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"LiuZhi1an"},"content":"    public static final String MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX \u003d \"The member index provided is invalid\";","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"    public static final String MESSAGE_INVALID_EVENT_DISPLAYED_INDEX \u003d \"The event index provided is invalid\";","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Samuel-bit-prog"},"content":"    public static final String MESSAGE_MEMBERS_LISTED_OVERVIEW \u003d \"%1$d member(s) listed!\";","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"Samuel-bit-prog"},"content":"    public static final String MESSAGE_TASKS_LISTED_OVERVIEW \u003d \"%1$d task(s) listed!\";","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"Samuel-bit-prog"},"content":"    public static final String MESSAGE_EVENTS_LISTED_OVERVIEW \u003d \"%1$d event(s) listed!\";","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LiuZhi1an":1,"-":10,"leeroy999":1,"Samuel-bit-prog":3}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"Samuel-bit-prog"},"content":"     *   Ignores case and a full word match is not required.","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"Samuel-bit-prog"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d true //not a full word match","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"Samuel-bit-prog"},"content":"                .anyMatch(s -\u003e s.toLowerCase().contains(preppedWord.toLowerCase()));","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":65,"Samuel-bit-prog":3}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"GWphua"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":12,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.event.Event;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"GWphua"},"content":"import seedu.address.model.module.task.Task;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"GWphua"},"content":"     * Returns an unmodifiable view of the filtered list of members.","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"    ObservableList\u003cMember\u003e getFilteredMemberList();","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":41,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"GWphua"},"content":"     * Returns an unmodifiable view of the filtered list of events.","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"GWphua"},"content":"    ObservableList\u003cEvent\u003e getFilteredEventList();","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"GWphua"},"content":"     * Returns an unmodifiable view of the filtered list of tasks.","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"GWphua"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"GWphua"},"content":"     * Returns the member that tList is currently displaying.","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"GWphua"},"content":"    Optional\u003cMember\u003e getCurrentMember();","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"GWphua"},"content":"     * Returns the event that mList is currently displaying.","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"GWphua"},"content":"    Optional\u003cEvent\u003e getCurrentEvent();","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"GWphua":24,"-":48,"Samuel-bit-prog":2,"leeroy999":1}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"GWphua"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.event.Event;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"GWphua"},"content":"import seedu.address.model.module.task.Task;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"leeroy999"},"content":"    public ObservableList\u003cMember\u003e getFilteredMemberList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"leeroy999"},"content":"        return model.getFilteredMemberList();","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":70,"author":{"gitId":"leeroy999"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"leeroy999"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"leeroy999"},"content":"        return model.getFilteredEventList();","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"GWphua"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"GWphua"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"GWphua"},"content":"        return model.getFilteredTaskList();","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":95,"author":{"gitId":"GWphua"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":96,"author":{"gitId":"GWphua"},"content":"    public Optional\u003cMember\u003e getCurrentMember() {","lastModifiedDate":"2021-10-28"},{"lineNumber":97,"author":{"gitId":"GWphua"},"content":"        return model.getCurrentMember();","lastModifiedDate":"2021-10-28"},{"lineNumber":98,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":99,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":100,"author":{"gitId":"GWphua"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":101,"author":{"gitId":"GWphua"},"content":"    public Optional\u003cEvent\u003e getCurrentEvent() {","lastModifiedDate":"2021-10-28"},{"lineNumber":102,"author":{"gitId":"GWphua"},"content":"        return model.getCurrentEvent();","lastModifiedDate":"2021-10-28"},{"lineNumber":103,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"GWphua":15,"-":80,"Samuel-bit-prog":2,"leeroy999":7}},{"path":"src/main/java/seedu/address/logic/commands/event/EaddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package seedu.address.logic.commands.event;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER_ID;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.event.Event;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.event.EventDate;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":" * Adds a member to the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"public class EaddCommand extends Command {","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"    public static final String COMMAND_WORD \u003d \"eadd\";","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an event to Ailurus. \"","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Parameters:\"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"            + PREFIX_DATE + \"DATE (format: \" + EventDate.DATE_TIME_FORMAT + \") \"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"            + \"[\" + PREFIX_MEMBER_ID + \"MEMBER_INDEX (must be a positive integer)]...\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"            + PREFIX_NAME + \"Freshmen Orientation Week \"","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"            + PREFIX_DATE + \"11/07/2021 \"","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"leeroy999"},"content":"            + PREFIX_MEMBER_ID + \"1 \"","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"leeroy999"},"content":"            + PREFIX_MEMBER_ID + \"2\";","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New event added: %1$s\";","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"This event already exists in the Ailurus\";","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"leeroy999"},"content":"    private final Event toAdd;","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"    private final Set\u003cIndex\u003e indexSet;","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"leeroy999"},"content":"    private final Set\u003cMember\u003e memberSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"leeroy999"},"content":"     * Creates an EaddCommand to add the specified {@code Event} with specified {@code Set\u003cIndex\u003e}","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"leeroy999"},"content":"    public EaddCommand(Event event, Set\u003cIndex\u003e indexList) {","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"leeroy999"},"content":"        requireNonNull(event);","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"leeroy999"},"content":"        toAdd \u003d event;","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"leeroy999"},"content":"        indexSet \u003d indexList;","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"leeroy999"},"content":"        List\u003cMember\u003e lastShownList \u003d model.getFilteredMemberList();","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"leeroy999"},"content":"        // adds all members in indexSet to participant list in event","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"leeroy999"},"content":"        for (Index targetIndex : indexSet) {","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"leeroy999"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"leeroy999"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"leeroy999"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"leeroy999"},"content":"            Member memberAsParticipant \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"leeroy999"},"content":"            memberSet.add(memberAsParticipant);","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"leeroy999"},"content":"        toAdd.addParticipants(memberSet);","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"leeroy999"},"content":"        if (model.hasEvent(toAdd)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"leeroy999"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"leeroy999"},"content":"        model.addEvent(toAdd);","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"leeroy999"},"content":"                || (other instanceof EaddCommand // instanceof handles nulls","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"leeroy999"},"content":"                \u0026\u0026 toAdd.equals(((EaddCommand) other).toAdd)","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"leeroy999"},"content":"                \u0026\u0026 indexSet.equals(((EaddCommand) other).indexSet));","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":32,"leeroy999":51,"Samuel-bit-prog":3}},{"path":"src/main/java/seedu/address/logic/commands/event/EdelCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package seedu.address.logic.commands.event;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_ID;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.event.Event;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":" * Deletes an event identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"public class EdelCommand extends Command {","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"    public static final String COMMAND_WORD \u003d \"edel\";","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"            + \": Deletes the event identified by the index number used in the displayed event list.\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"            + \"Parameters: \" + PREFIX_EVENT_ID + \" EVENT_ID (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_EVENT_ID + \" 1\";","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"    public static final String MESSAGE_DELETE_EVENT_SUCCESS \u003d \"Deleted Event: %1$s\";","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"    public EdelCommand(Index targetIndex) {","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"leeroy999"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"leeroy999"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"        List\u003cEvent\u003e lastShownList \u003d model.getFilteredEventList();","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"leeroy999"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"leeroy999"},"content":"        Event eventToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"leeroy999"},"content":"        model.deleteEvent(eventToDelete);","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"leeroy999"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_EVENT_SUCCESS, eventToDelete));","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"leeroy999"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"leeroy999"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"leeroy999"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"leeroy999"},"content":"                || (other instanceof EdelCommand // instanceof handles nulls","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"leeroy999"},"content":"                \u0026\u0026 targetIndex.equals(((EdelCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"leeroy999"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"leeroy999":55,"Samuel-bit-prog":1}},{"path":"src/main/java/seedu/address/logic/commands/event/EeditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package seedu.address.logic.commands.event;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_ID;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER_ID;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_EVENTS;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"import java.util.List;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"import seedu.address.model.module.Name;","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"import seedu.address.model.module.event.Event;","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"import seedu.address.model.module.event.EventDate;","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":" * Edits the details of an existing event in the Ailurus.","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"public class EeditCommand extends Command {","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"    public static final String COMMAND_WORD \u003d \"eedit\";","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the event identified \"","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"leeroy999"},"content":"            + \"by the index number used in the displayed member list. \"","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"leeroy999"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"            + PREFIX_EVENT_ID + \"EVENT_ID (must be a positive integer)\"","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"leeroy999"},"content":"            + \"[\" + PREFIX_DATE + \"DATE] \"","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"leeroy999"},"content":"            + \"[\" + PREFIX_MEMBER_ID + \"MEMBER_ID]...\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_EVENT_ID + \" 1\"","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"leeroy999"},"content":"            + PREFIX_NAME + \"Freshman Orientation Week \"","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"leeroy999"},"content":"            + PREFIX_DATE + \"11/11/2021 \"","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"leeroy999"},"content":"            + PREFIX_MEMBER_ID + \"1 \" + PREFIX_MEMBER_ID + \"2\";","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"leeroy999"},"content":"    public static final String MESSAGE_EDIT_EVENT_SUCCESS \u003d \"Edited Event: %1$s\";","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"leeroy999"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"leeroy999"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"This event already exists in Ailurus\";","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"leeroy999"},"content":"    private final Index index;","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"leeroy999"},"content":"    private final EditEventDescriptor editEventDescriptor;","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"leeroy999"},"content":"    private final Set\u003cIndex\u003e indexSet;","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"leeroy999"},"content":"     * Constructor for EeditCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"leeroy999"},"content":"     * @param index of the event in the filtered member list to edit","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"leeroy999"},"content":"     * @param editEventDescriptor details to edit the event with","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"leeroy999"},"content":"    public EeditCommand(Index index, EditEventDescriptor editEventDescriptor, Set\u003cIndex\u003e indices) {","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"leeroy999"},"content":"        requireAllNonNull(index, editEventDescriptor, indices);","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"leeroy999"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"leeroy999"},"content":"        this.editEventDescriptor \u003d new EditEventDescriptor(editEventDescriptor);","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"leeroy999"},"content":"        this.indexSet \u003d indices;","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"leeroy999"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"leeroy999"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"leeroy999"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"leeroy999"},"content":"        List\u003cEvent\u003e lastShownList \u003d model.getFilteredEventList();","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"leeroy999"},"content":"        List\u003cMember\u003e lastShownMemberList \u003d model.getFilteredMemberList();","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"leeroy999"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"leeroy999"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"leeroy999"},"content":"        Set\u003cMember\u003e memberSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"leeroy999"},"content":"        // adds all members in indexSet to participant list in event","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"leeroy999"},"content":"        for (Index targetIndex : indexSet) {","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"leeroy999"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d lastShownMemberList.size()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"leeroy999"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"leeroy999"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"leeroy999"},"content":"            Member memberAsParticipant \u003d lastShownMemberList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"leeroy999"},"content":"            memberSet.add(memberAsParticipant);","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"leeroy999"},"content":"        if (!memberSet.isEmpty()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"leeroy999"},"content":"            editEventDescriptor.setMemberSet(memberSet);","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"leeroy999"},"content":"        Event eventToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"leeroy999"},"content":"        Event editedEvent \u003d createEditedEvent(eventToEdit, editEventDescriptor);","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"leeroy999"},"content":"        if (!eventToEdit.isSameType(editedEvent) \u0026\u0026 model.hasEvent(editedEvent)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"leeroy999"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"leeroy999"},"content":"        model.setEvent(eventToEdit, editedEvent);","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"leeroy999"},"content":"        model.updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"leeroy999"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_EVENT_SUCCESS, editedEvent));","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"leeroy999"},"content":"     * Creates and returns a {@code Event} with the details of {@code eventToEdit}","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"leeroy999"},"content":"     * edited with {@code editEventDescriptor}.","lastModifiedDate":"2021-10-27"},{"lineNumber":109,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"leeroy999"},"content":"    private static Event createEditedEvent(Event eventToEdit, EditEventDescriptor editEventDescriptor) {","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"leeroy999"},"content":"        assert eventToEdit !\u003d null;","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"leeroy999"},"content":"        Name updatedName \u003d editEventDescriptor.getName().orElse(eventToEdit.getName());","lastModifiedDate":"2021-10-27"},{"lineNumber":114,"author":{"gitId":"leeroy999"},"content":"        EventDate updatedDate \u003d editEventDescriptor.getDate().orElse(eventToEdit.getDate());","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"leeroy999"},"content":"        Set\u003cMember\u003e updatedMemberSet \u003d editEventDescriptor.getMemberSet().orElse(eventToEdit.getParticipants());","lastModifiedDate":"2021-10-27"},{"lineNumber":116,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"leeroy999"},"content":"        return new Event(updatedName, updatedDate, updatedMemberSet);","lastModifiedDate":"2021-10-27"},{"lineNumber":118,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":119,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":120,"author":{"gitId":"leeroy999"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"leeroy999"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"leeroy999"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"leeroy999"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"leeroy999"},"content":"            return true;","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"leeroy999"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-27"},{"lineNumber":128,"author":{"gitId":"leeroy999"},"content":"        if (!(other instanceof EeditCommand)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":129,"author":{"gitId":"leeroy999"},"content":"            return false;","lastModifiedDate":"2021-10-27"},{"lineNumber":130,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":131,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":132,"author":{"gitId":"leeroy999"},"content":"        // state check","lastModifiedDate":"2021-10-27"},{"lineNumber":133,"author":{"gitId":"leeroy999"},"content":"        EeditCommand e \u003d (EeditCommand) other;","lastModifiedDate":"2021-10-27"},{"lineNumber":134,"author":{"gitId":"leeroy999"},"content":"        return index.equals(e.index)","lastModifiedDate":"2021-10-27"},{"lineNumber":135,"author":{"gitId":"leeroy999"},"content":"                \u0026\u0026 editEventDescriptor.equals(e.editEventDescriptor);","lastModifiedDate":"2021-10-27"},{"lineNumber":136,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":137,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":138,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":139,"author":{"gitId":"leeroy999"},"content":"     * Stores the details to edit the event with. Each non-empty field value will replace the","lastModifiedDate":"2021-10-27"},{"lineNumber":140,"author":{"gitId":"leeroy999"},"content":"     * corresponding field value of the event.","lastModifiedDate":"2021-10-27"},{"lineNumber":141,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":142,"author":{"gitId":"leeroy999"},"content":"    public static class EditEventDescriptor {","lastModifiedDate":"2021-10-27"},{"lineNumber":143,"author":{"gitId":"leeroy999"},"content":"        private Name name;","lastModifiedDate":"2021-10-27"},{"lineNumber":144,"author":{"gitId":"leeroy999"},"content":"        private EventDate date;","lastModifiedDate":"2021-10-27"},{"lineNumber":145,"author":{"gitId":"leeroy999"},"content":"        private Set\u003cMember\u003e memberSet;","lastModifiedDate":"2021-10-27"},{"lineNumber":146,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":147,"author":{"gitId":"leeroy999"},"content":"        public EditEventDescriptor() {}","lastModifiedDate":"2021-10-27"},{"lineNumber":148,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":149,"author":{"gitId":"leeroy999"},"content":"        /**","lastModifiedDate":"2021-10-27"},{"lineNumber":150,"author":{"gitId":"leeroy999"},"content":"         * Copy constructor.","lastModifiedDate":"2021-10-27"},{"lineNumber":151,"author":{"gitId":"leeroy999"},"content":"         * A defensive copy of {@code memberSet} is used internally.","lastModifiedDate":"2021-10-27"},{"lineNumber":152,"author":{"gitId":"leeroy999"},"content":"         */","lastModifiedDate":"2021-10-27"},{"lineNumber":153,"author":{"gitId":"leeroy999"},"content":"        public EditEventDescriptor(EditEventDescriptor toCopy) {","lastModifiedDate":"2021-10-27"},{"lineNumber":154,"author":{"gitId":"leeroy999"},"content":"            setName(toCopy.name);","lastModifiedDate":"2021-10-27"},{"lineNumber":155,"author":{"gitId":"leeroy999"},"content":"            setDate(toCopy.date);","lastModifiedDate":"2021-10-27"},{"lineNumber":156,"author":{"gitId":"leeroy999"},"content":"            setMemberSet(toCopy.memberSet);","lastModifiedDate":"2021-10-27"},{"lineNumber":157,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":158,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":159,"author":{"gitId":"leeroy999"},"content":"        /**","lastModifiedDate":"2021-10-27"},{"lineNumber":160,"author":{"gitId":"leeroy999"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2021-10-27"},{"lineNumber":161,"author":{"gitId":"leeroy999"},"content":"         */","lastModifiedDate":"2021-10-27"},{"lineNumber":162,"author":{"gitId":"leeroy999"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-10-27"},{"lineNumber":163,"author":{"gitId":"leeroy999"},"content":"            return CollectionUtil.isAnyNonNull(name, date, memberSet);","lastModifiedDate":"2021-10-27"},{"lineNumber":164,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":165,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":166,"author":{"gitId":"leeroy999"},"content":"        public void setName(Name name) {","lastModifiedDate":"2021-10-27"},{"lineNumber":167,"author":{"gitId":"leeroy999"},"content":"            this.name \u003d name;","lastModifiedDate":"2021-10-27"},{"lineNumber":168,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":169,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":170,"author":{"gitId":"leeroy999"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2021-10-27"},{"lineNumber":171,"author":{"gitId":"leeroy999"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2021-10-27"},{"lineNumber":172,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":173,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":174,"author":{"gitId":"leeroy999"},"content":"        public void setDate(EventDate date) {","lastModifiedDate":"2021-10-27"},{"lineNumber":175,"author":{"gitId":"leeroy999"},"content":"            this.date \u003d date;","lastModifiedDate":"2021-10-27"},{"lineNumber":176,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":177,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":178,"author":{"gitId":"leeroy999"},"content":"        public Optional\u003cEventDate\u003e getDate() {","lastModifiedDate":"2021-10-27"},{"lineNumber":179,"author":{"gitId":"leeroy999"},"content":"            return Optional.ofNullable(date);","lastModifiedDate":"2021-10-27"},{"lineNumber":180,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":181,"author":{"gitId":"leeroy999"},"content":"        /**","lastModifiedDate":"2021-10-27"},{"lineNumber":182,"author":{"gitId":"leeroy999"},"content":"         * Sets {@code members} to this object\u0027s {@code member}.","lastModifiedDate":"2021-10-27"},{"lineNumber":183,"author":{"gitId":"leeroy999"},"content":"         * A defensive copy of {@code memberSet} is used internally.","lastModifiedDate":"2021-10-27"},{"lineNumber":184,"author":{"gitId":"leeroy999"},"content":"         */","lastModifiedDate":"2021-10-27"},{"lineNumber":185,"author":{"gitId":"leeroy999"},"content":"        public void setMemberSet(Set\u003cMember\u003e memberSet) {","lastModifiedDate":"2021-10-27"},{"lineNumber":186,"author":{"gitId":"leeroy999"},"content":"            this.memberSet \u003d (memberSet !\u003d null) ? new HashSet\u003c\u003e(memberSet) : null;","lastModifiedDate":"2021-10-27"},{"lineNumber":187,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":188,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":189,"author":{"gitId":"leeroy999"},"content":"        /**","lastModifiedDate":"2021-10-27"},{"lineNumber":190,"author":{"gitId":"leeroy999"},"content":"         * Returns an unmodifiable member set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-27"},{"lineNumber":191,"author":{"gitId":"leeroy999"},"content":"         * if modification is attempted.","lastModifiedDate":"2021-10-27"},{"lineNumber":192,"author":{"gitId":"leeroy999"},"content":"         * Returns {@code Optional#empty()} if {@code memberSet} is null.","lastModifiedDate":"2021-10-27"},{"lineNumber":193,"author":{"gitId":"leeroy999"},"content":"         */","lastModifiedDate":"2021-10-27"},{"lineNumber":194,"author":{"gitId":"leeroy999"},"content":"        public Optional\u003cSet\u003cMember\u003e\u003e getMemberSet() {","lastModifiedDate":"2021-10-27"},{"lineNumber":195,"author":{"gitId":"leeroy999"},"content":"            return (memberSet !\u003d null) ? Optional.of(Collections.unmodifiableSet(memberSet)) : Optional.empty();","lastModifiedDate":"2021-10-27"},{"lineNumber":196,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":197,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":198,"author":{"gitId":"leeroy999"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":199,"author":{"gitId":"leeroy999"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-10-27"},{"lineNumber":200,"author":{"gitId":"leeroy999"},"content":"            // short circuit if same object","lastModifiedDate":"2021-10-27"},{"lineNumber":201,"author":{"gitId":"leeroy999"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-27"},{"lineNumber":202,"author":{"gitId":"leeroy999"},"content":"                return true;","lastModifiedDate":"2021-10-27"},{"lineNumber":203,"author":{"gitId":"leeroy999"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":204,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":205,"author":{"gitId":"leeroy999"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-10-27"},{"lineNumber":206,"author":{"gitId":"leeroy999"},"content":"            if (!(other instanceof EditEventDescriptor)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":207,"author":{"gitId":"leeroy999"},"content":"                return false;","lastModifiedDate":"2021-10-27"},{"lineNumber":208,"author":{"gitId":"leeroy999"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":209,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":210,"author":{"gitId":"leeroy999"},"content":"            // state check","lastModifiedDate":"2021-10-27"},{"lineNumber":211,"author":{"gitId":"leeroy999"},"content":"            EditEventDescriptor e \u003d (EditEventDescriptor) other;","lastModifiedDate":"2021-10-27"},{"lineNumber":212,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":213,"author":{"gitId":"leeroy999"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2021-10-27"},{"lineNumber":214,"author":{"gitId":"leeroy999"},"content":"                    \u0026\u0026 getDate().equals(e.getDate())","lastModifiedDate":"2021-10-27"},{"lineNumber":215,"author":{"gitId":"leeroy999"},"content":"                    \u0026\u0026 getMemberSet().equals(e.getMemberSet());","lastModifiedDate":"2021-10-27"},{"lineNumber":216,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":217,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":218,"author":{"gitId":"leeroy999"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"leeroy999":218}},{"path":"src/main/java/seedu/address/logic/commands/event/EfindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Samuel-bit-prog"},"content":"package seedu.address.logic.commands.event;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"Samuel-bit-prog"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.event.Event;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"Samuel-bit-prog"},"content":"/**","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"Samuel-bit-prog"},"content":" * Finds and lists all events in Ailurus whose name contains any of the argument keywords.","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"Samuel-bit-prog"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"Samuel-bit-prog"},"content":" */","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"Samuel-bit-prog"},"content":"public class EfindCommand extends Command {","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"Samuel-bit-prog"},"content":"    public static final String COMMAND_WORD \u003d \"efind\";","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"Samuel-bit-prog"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all events whose names contain any of \"","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"Samuel-bit-prog"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"Samuel-bit-prog"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"            + \"Example: \" + COMMAND_WORD + \" fresh\";","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"Samuel-bit-prog"},"content":"    private final NameContainsKeywordsPredicate\u003cEvent\u003e predicate;","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"Samuel-bit-prog"},"content":"    public EfindCommand(NameContainsKeywordsPredicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"Samuel-bit-prog"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"Samuel-bit-prog"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"Samuel-bit-prog"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"Samuel-bit-prog"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"Samuel-bit-prog"},"content":"        model.updateFilteredEventList(predicate);","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"Samuel-bit-prog"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"Samuel-bit-prog"},"content":"                String.format(Messages.MESSAGE_EVENTS_LISTED_OVERVIEW, model.getFilteredEventList().size()));","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"Samuel-bit-prog"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"Samuel-bit-prog"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"Samuel-bit-prog"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"Samuel-bit-prog"},"content":"                || (other instanceof EfindCommand // instanceof handles nulls","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"Samuel-bit-prog"},"content":"                \u0026\u0026 predicate.equals(((EfindCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"Samuel-bit-prog"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"Samuel-bit-prog":44,"leeroy999":1}},{"path":"src/main/java/seedu/address/logic/commands/event/ElistCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package seedu.address.logic.commands.event;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_EVENTS;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":" * Lists all members in the address book to the user.","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"public class ElistCommand extends Command {","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"    public static final String COMMAND_WORD \u003d \"elist\";","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all events\";","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"        model.updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"leeroy999":26}},{"path":"src/main/java/seedu/address/logic/commands/event/EmaddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package seedu.address.logic.commands.event;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_ID;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER_ID;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"import java.util.List;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"import seedu.address.model.module.event.Event;","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":" * Add a member to an event identified using it\u0027s displayed index from the Ailurus.","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"public class EmaddCommand extends Command {","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"    public static final String COMMAND_WORD \u003d \"emadd\";","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"            + \": Add members to event identified by index number used in the displayed event list.\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"            + PREFIX_EVENT_ID + \"EVENT_ID (must be a positive integer)\"","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"            + PREFIX_MEMBER_ID + \"MEMBER_INDEX (must be a positive integer)...\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"            + PREFIX_EVENT_ID + \"1 \"","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"            + PREFIX_MEMBER_ID + \"1 \" + PREFIX_MEMBER_ID + \"2\";","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"leeroy999"},"content":"    public static final String MESSAGE_ADD_MEMBER_SUCCESS \u003d \"Added members: %1$s. Event: %2$s. \";","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"    public static final String MESSAGE_MEMBER_ALREADY_IN_EVENT \u003d \"The following member is already in the event: %1$s\";","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"    private final Index eventIndex;","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"leeroy999"},"content":"    private final Set\u003cIndex\u003e indexSet;","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"leeroy999"},"content":"    private final Set\u003cMember\u003e memberSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"leeroy999"},"content":"     * Constructor for EmaddCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"leeroy999"},"content":"     * @param index eventIndex to add members","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"leeroy999"},"content":"     * @param indexList indices of members to be added","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"leeroy999"},"content":"    public EmaddCommand(Index index, Set\u003cIndex\u003e indexList) {","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"leeroy999"},"content":"        requireAllNonNull(index, indexList);","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"leeroy999"},"content":"        this.eventIndex \u003d index;","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"leeroy999"},"content":"        this.indexSet \u003d indexList;","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"leeroy999"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"leeroy999"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"leeroy999"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"leeroy999"},"content":"        List\u003cEvent\u003e lastShownEventList \u003d model.getFilteredEventList();","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"leeroy999"},"content":"        List\u003cMember\u003e lastShownMemberList \u003d model.getFilteredMemberList();","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"leeroy999"},"content":"        if (eventIndex.getZeroBased() \u003e\u003d lastShownEventList.size()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"leeroy999"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"leeroy999"},"content":"        Event selectedEvent \u003d lastShownEventList.get(eventIndex.getZeroBased());","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"leeroy999"},"content":"        // adds all members in indexSet to event","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"leeroy999"},"content":"        for (Index targetIndex : indexSet) {","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"leeroy999"},"content":"            int index \u003d targetIndex.getZeroBased();","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"leeroy999"},"content":"            if (index \u003e\u003d lastShownMemberList.size()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"leeroy999"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"leeroy999"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"leeroy999"},"content":"            Member memberToAdd \u003d lastShownMemberList.get(index);","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"leeroy999"},"content":"            if (selectedEvent.isParticipatingInEvent(memberToAdd)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"leeroy999"},"content":"                throw new CommandException(String.format(MESSAGE_MEMBER_ALREADY_IN_EVENT, memberToAdd.getName()));","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"leeroy999"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"leeroy999"},"content":"            memberSet.add(memberToAdd);","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"leeroy999"},"content":"        selectedEvent.addParticipants(memberSet);","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"leeroy999"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_MEMBER_SUCCESS,","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"leeroy999"},"content":"                ParserUtil.memberSetToString(memberSet),","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"leeroy999"},"content":"                selectedEvent));","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"leeroy999"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"leeroy999"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"leeroy999"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"leeroy999"},"content":"                || (other instanceof EmaddCommand // instanceof handles nulls","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"leeroy999"},"content":"                \u0026\u0026 eventIndex.equals(((EmaddCommand) other).eventIndex)","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"leeroy999"},"content":"                \u0026\u0026 indexSet.equals(((EmaddCommand) other).indexSet)); // state check","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"leeroy999"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"leeroy999":94}},{"path":"src/main/java/seedu/address/logic/commands/event/EmarkAllCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package seedu.address.logic.commands.event;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_ID;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"import java.util.List;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"import seedu.address.model.module.event.Event;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":" * Marks all member in event identified using it\u0027s displayed index from the Ailurus.","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"public class EmarkAllCommand extends Command {","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"    public static final String COMMAND_WORD \u003d \"emarkall\";","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"            + \": Mark all members as present for the event.\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"            + PREFIX_EVENT_ID + \"EVENT_ID (must be a positive integer)\"","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"            + PREFIX_EVENT_ID + \"1 \";","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"    public static final String MESSAGE_MARK_MEMBER_SUCCESS \u003d \"Marked all members in event: %1$s\";","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"    private final Index eventIndex;","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"     * Constructor for EmarkAllCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"leeroy999"},"content":"     * @param index eventIndex to mark all as present","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"    public EmarkAllCommand(Index index) {","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"        this.eventIndex \u003d index;","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"leeroy999"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"leeroy999"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"leeroy999"},"content":"        List\u003cEvent\u003e lastShownEventList \u003d model.getFilteredEventList();","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"leeroy999"},"content":"        if (eventIndex.getZeroBased() \u003e\u003d lastShownEventList.size()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"leeroy999"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"leeroy999"},"content":"        Event selectedEvent \u003d lastShownEventList.get(eventIndex.getZeroBased());","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"leeroy999"},"content":"        selectedEvent.markAttendanceForAll();","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"leeroy999"},"content":"        return new CommandResult(String.format(MESSAGE_MARK_MEMBER_SUCCESS, selectedEvent));","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"leeroy999"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"leeroy999"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"leeroy999"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"leeroy999"},"content":"                || (other instanceof EmarkAllCommand // instanceof handles nulls","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"leeroy999"},"content":"                \u0026\u0026 eventIndex.equals(((EmarkAllCommand) other).eventIndex)); // state check","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"leeroy999"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"leeroy999":64}},{"path":"src/main/java/seedu/address/logic/commands/event/EmarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package seedu.address.logic.commands.event;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_ID;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER_ID;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"import java.util.List;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"import seedu.address.model.module.event.Event;","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":" * Marks a member in event identified using it\u0027s displayed index from the Ailurus.","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"public class EmarkCommand extends Command {","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"    public static final String COMMAND_WORD \u003d \"emark\";","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"            + \": Mark members identified by index number used in the displayed member list as present for the event.\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"            + PREFIX_EVENT_ID + \"EVENT_ID (must be a positive integer)\"","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"            + PREFIX_MEMBER_ID + \"MEMBER_INDEX (must be a positive integer)...\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"            + PREFIX_EVENT_ID + \"1 \"","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"            + PREFIX_MEMBER_ID + \"1 \" + PREFIX_MEMBER_ID + \"2\";","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"leeroy999"},"content":"    public static final String MESSAGE_MARK_MEMBER_SUCCESS \u003d \"Marked members: %1$s, Event: %2$s\";","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"    public static final String MESSAGE_MEMBER_NOT_IN_EVENT \u003d \"The following member is not in the event: %1$s\";","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"    private final Index eventIndex;","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"leeroy999"},"content":"    private final Set\u003cIndex\u003e indexSet;","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"leeroy999"},"content":"    private final Set\u003cMember\u003e memberSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"leeroy999"},"content":"     * Constructor for EmarkCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"leeroy999"},"content":"     * @param index eventIndex of event to mark attendance","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"leeroy999"},"content":"     * @param indexList list of indices of members to mark present","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"leeroy999"},"content":"    public EmarkCommand(Index index, Set\u003cIndex\u003e indexList) {","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"leeroy999"},"content":"        requireAllNonNull(index, indexList);","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"leeroy999"},"content":"        this.eventIndex \u003d index;","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"leeroy999"},"content":"        this.indexSet \u003d indexList;","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"leeroy999"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"leeroy999"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"leeroy999"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"leeroy999"},"content":"        List\u003cEvent\u003e lastShownEventList \u003d model.getFilteredEventList();","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"leeroy999"},"content":"        List\u003cMember\u003e lastShownMemberList \u003d model.getFilteredMemberList();","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"leeroy999"},"content":"        if (eventIndex.getZeroBased() \u003e\u003d lastShownEventList.size()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"leeroy999"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"leeroy999"},"content":"        Event selectedEvent \u003d lastShownEventList.get(eventIndex.getZeroBased());","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"leeroy999"},"content":"        // marks all members in indexSet as present in event","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"leeroy999"},"content":"        for (Index targetIndex : indexSet) {","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"leeroy999"},"content":"            int index \u003d targetIndex.getZeroBased();","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"leeroy999"},"content":"            if (index \u003e\u003d lastShownMemberList.size()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"leeroy999"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"leeroy999"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"leeroy999"},"content":"            Member memberAsPresent \u003d lastShownMemberList.get(index);","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"leeroy999"},"content":"            if (!selectedEvent.isParticipatingInEvent(memberAsPresent)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"leeroy999"},"content":"                throw new CommandException(String.format(MESSAGE_MEMBER_NOT_IN_EVENT, memberAsPresent.getName()));","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"leeroy999"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"leeroy999"},"content":"            memberSet.add(memberAsPresent);","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"leeroy999"},"content":"        selectedEvent.markAttendance(memberSet);","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"leeroy999"},"content":"        return new CommandResult(String.format(MESSAGE_MARK_MEMBER_SUCCESS,","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"leeroy999"},"content":"                ParserUtil.memberSetToString(memberSet),","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"leeroy999"},"content":"                selectedEvent));","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"leeroy999"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"leeroy999"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"leeroy999"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"leeroy999"},"content":"                || (other instanceof EmarkCommand // instanceof handles nulls","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"leeroy999"},"content":"                \u0026\u0026 eventIndex.equals(((EmarkCommand) other).eventIndex)","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"leeroy999"},"content":"                \u0026\u0026 indexSet.equals(((EmarkCommand) other).indexSet)); // state check","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"leeroy999"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"leeroy999":93}},{"path":"src/main/java/seedu/address/logic/commands/event/EmdelCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package seedu.address.logic.commands.event;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_ID;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER_ID;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"import java.util.List;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"import seedu.address.model.module.event.Event;","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":" * Add a member to an event identified using it\u0027s displayed index from the Ailurus.","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"public class EmdelCommand extends Command {","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"    public static final String COMMAND_WORD \u003d \"emdel\";","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"            + \": Remove members from event identified by index number used in the displayed event list.\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"            + PREFIX_EVENT_ID + \"EVENT_ID (must be a positive integer)\"","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"            + PREFIX_MEMBER_ID + \"MEMBER_INDEX (must be a positive integer)...\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"            + PREFIX_EVENT_ID + \"1 \"","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"            + PREFIX_MEMBER_ID + \"1 \" + PREFIX_MEMBER_ID + \"2\";","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"leeroy999"},"content":"    public static final String MESSAGE_DELETE_MEMBER_SUCCESS \u003d \"Removed members: %1$s. Event: %2$s. \";","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"    public static final String MESSAGE_MEMBER_NOT_IN_EVENT \u003d \"The following member is not in the event: %1$s\";","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"    private final Index eventIndex;","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"leeroy999"},"content":"    private final Set\u003cIndex\u003e indexSet;","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"leeroy999"},"content":"    private final Set\u003cMember\u003e memberSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"leeroy999"},"content":"     * Constructor for EmdelCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"leeroy999"},"content":"     * @param index of the event in filtered event list to delete members","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"leeroy999"},"content":"     * @param indexList list of member indices to delete","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"leeroy999"},"content":"    public EmdelCommand(Index index, Set\u003cIndex\u003e indexList) {","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"leeroy999"},"content":"        requireAllNonNull(index, indexList);","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"leeroy999"},"content":"        this.eventIndex \u003d index;","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"leeroy999"},"content":"        this.indexSet \u003d indexList;","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"leeroy999"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"leeroy999"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"leeroy999"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"leeroy999"},"content":"        List\u003cEvent\u003e lastShownEventList \u003d model.getFilteredEventList();","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"leeroy999"},"content":"        List\u003cMember\u003e lastShownMemberList \u003d model.getFilteredMemberList();","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"leeroy999"},"content":"        if (eventIndex.getZeroBased() \u003e\u003d lastShownEventList.size()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"leeroy999"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"leeroy999"},"content":"        Event selectedEvent \u003d lastShownEventList.get(eventIndex.getZeroBased());","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"leeroy999"},"content":"        // adds all members in indexSet to event","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"leeroy999"},"content":"        for (Index targetIndex : indexSet) {","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"leeroy999"},"content":"            int index \u003d targetIndex.getZeroBased();","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"leeroy999"},"content":"            if (index \u003e\u003d lastShownMemberList.size()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"leeroy999"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"leeroy999"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"leeroy999"},"content":"            Member memberToAdd \u003d lastShownMemberList.get(index);","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"leeroy999"},"content":"            if (!selectedEvent.isParticipatingInEvent(memberToAdd)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"leeroy999"},"content":"                throw new CommandException(String.format(MESSAGE_MEMBER_NOT_IN_EVENT, memberToAdd.getName()));","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"leeroy999"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"leeroy999"},"content":"            memberSet.add(memberToAdd);","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"leeroy999"},"content":"        selectedEvent.removeParticipants(memberSet);","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"leeroy999"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_MEMBER_SUCCESS,","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"leeroy999"},"content":"                ParserUtil.memberSetToString(memberSet),","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"leeroy999"},"content":"                selectedEvent));","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"leeroy999"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"leeroy999"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"leeroy999"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"leeroy999"},"content":"                || (other instanceof EmdelCommand // instanceof handles nulls","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"leeroy999"},"content":"                \u0026\u0026 eventIndex.equals(((EmdelCommand) other).eventIndex)","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"leeroy999"},"content":"                \u0026\u0026 indexSet.equals(((EmdelCommand) other).indexSet)); // state check","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"leeroy999"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"leeroy999":93}},{"path":"src/main/java/seedu/address/logic/commands/event/EunmarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package seedu.address.logic.commands.event;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_ID;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER_ID;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"import java.util.List;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"import seedu.address.model.module.event.Event;","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":" * Unmarks a member in an event identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"public class EunmarkCommand extends Command {","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"    public static final String COMMAND_WORD \u003d \"eunmark\";","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"            + \": Unmark members identified by index number used in the displayed member list.\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"            + PREFIX_EVENT_ID + \"EVENT_ID (must be a positive integer)\"","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"            + PREFIX_MEMBER_ID + \"MEMBER_INDEX (must be a positive integer)...\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"            + PREFIX_EVENT_ID + \"1 \"","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"            + PREFIX_MEMBER_ID + \"1 \" + PREFIX_MEMBER_ID + \"2\";","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"leeroy999"},"content":"    public static final String MESSAGE_UNMARK_MEMBER_SUCCESS \u003d \"Unmarked members: %1$s, Event: %2$s\";","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"    public static final String MESSAGE_MEMBER_NOT_IN_EVENT \u003d \"The following member is not in the event: %1$s\";","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"    private final Index eventIndex;","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"leeroy999"},"content":"    private final Set\u003cIndex\u003e indexSet;","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"leeroy999"},"content":"    private final Set\u003cMember\u003e memberSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"leeroy999"},"content":"     * Constructor for EunmarkCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"leeroy999"},"content":"     * @param index of the event      * @param index of the event in filtered event list to unmark members","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"leeroy999"},"content":"     * @param indexList list of member indices to unmark","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"leeroy999"},"content":"    public EunmarkCommand(Index index, Set\u003cIndex\u003e indexList) {","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"leeroy999"},"content":"        requireAllNonNull(index, indexList);","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"leeroy999"},"content":"        this.eventIndex \u003d index;","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"leeroy999"},"content":"        this.indexSet \u003d indexList;","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"leeroy999"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"leeroy999"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"leeroy999"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"leeroy999"},"content":"        List\u003cEvent\u003e lastShownEventList \u003d model.getFilteredEventList();","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"leeroy999"},"content":"        List\u003cMember\u003e lastShownMemberList \u003d model.getFilteredMemberList();","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"leeroy999"},"content":"        if (eventIndex.getZeroBased() \u003e\u003d lastShownEventList.size()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"leeroy999"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"leeroy999"},"content":"        Event selectedEvent \u003d lastShownEventList.get(eventIndex.getZeroBased());","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"leeroy999"},"content":"        // marks all members in indexSet as present in event","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"leeroy999"},"content":"        for (Index targetIndex : indexSet) {","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"leeroy999"},"content":"            int index \u003d targetIndex.getZeroBased();","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"leeroy999"},"content":"            if (index \u003e\u003d lastShownMemberList.size()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"leeroy999"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"leeroy999"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"leeroy999"},"content":"            Member memberAsAbsent \u003d lastShownMemberList.get(index);","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"leeroy999"},"content":"            if (!selectedEvent.isParticipatingInEvent(memberAsAbsent)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"leeroy999"},"content":"                throw new CommandException(String.format(MESSAGE_MEMBER_NOT_IN_EVENT, memberAsAbsent.getName()));","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"leeroy999"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"leeroy999"},"content":"            memberSet.add(memberAsAbsent);","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"leeroy999"},"content":"        selectedEvent.markAbsent(memberSet);","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"leeroy999"},"content":"        return new CommandResult(String.format(MESSAGE_UNMARK_MEMBER_SUCCESS,","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"leeroy999"},"content":"                ParserUtil.memberSetToString(memberSet),","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"leeroy999"},"content":"                selectedEvent));","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"leeroy999"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"leeroy999"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"leeroy999"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"leeroy999"},"content":"                || (other instanceof EunmarkCommand // instanceof handles nulls","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"leeroy999"},"content":"                \u0026\u0026 eventIndex.equals(((EunmarkCommand) other).eventIndex)","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"leeroy999"},"content":"                \u0026\u0026 indexSet.equals(((EunmarkCommand) other).indexSet)); // state check","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"leeroy999"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"leeroy999":93}},{"path":"src/main/java/seedu/address/logic/commands/member/MaddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package seedu.address.logic.commands.member;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":" * Adds a member to the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"public class MaddCommand extends Command {","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"    public static final String COMMAND_WORD \u003d \"madd\";","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a member to the Ailurus. \"","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"LiuZhi1an"},"content":"            + \"[\" + PREFIX_POSITION + \"POSITION]...\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"            + PREFIX_POSITION + \"Admin Assistant \"","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"            + PREFIX_POSITION + \"Logistics Assistant\";","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"leeroy999"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New member added: %1$s\";","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"    public static final String MESSAGE_DUPLICATE_MEMBER \u003d \"This member already exists in the address book\";","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"    private final Member toAdd;","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"     * Creates an PaddCommand to add the specified {@code Person}","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"leeroy999"},"content":"    public MaddCommand(Member member) {","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"leeroy999"},"content":"        requireNonNull(member);","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"leeroy999"},"content":"        toAdd \u003d member;","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"leeroy999"},"content":"        if (model.hasMember(toAdd)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"tsiyuk"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_MEMBER);","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"leeroy999"},"content":"        model.addMember(toAdd);","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"leeroy999"},"content":"                || (other instanceof MaddCommand // instanceof handles nulls","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"leeroy999"},"content":"                \u0026\u0026 toAdd.equals(((MaddCommand) other).toAdd));","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LiuZhi1an":2,"-":43,"tsiyuk":4,"leeroy999":19,"Samuel-bit-prog":1}},{"path":"src/main/java/seedu/address/logic/commands/member/MdelCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package seedu.address.logic.commands.member;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"Samuel-bit-prog"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER_ID;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":" * Deletes a member identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"public class MdelCommand extends Command {","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"    public static final String COMMAND_WORD \u003d \"mdel\";","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"            + \": Deletes the member identified by the index number used in the displayed member list.\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"Samuel-bit-prog"},"content":"            + \"Parameters: \" + PREFIX_MEMBER_ID + \"MEMBER_ID (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"Samuel-bit-prog"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_MEMBER_ID + \"1\\n\";","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"LiuZhi1an"},"content":"    public static final String MESSAGE_DELETE_MEMBER_SUCCESS \u003d \"Deleted Member: %1$s\";","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"    public MdelCommand(Index targetIndex) {","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"        List\u003cMember\u003e lastShownList \u003d model.getFilteredMemberList();","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"LiuZhi1an"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"leeroy999"},"content":"        Member memberToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"leeroy999"},"content":"        model.deleteMember(memberToDelete);","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"LiuZhi1an"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_MEMBER_SUCCESS, memberToDelete));","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"leeroy999"},"content":"                || (other instanceof MdelCommand // instanceof handles nulls","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"leeroy999"},"content":"                \u0026\u0026 targetIndex.equals(((MdelCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LiuZhi1an":3,"-":36,"leeroy999":13,"Samuel-bit-prog":4}},{"path":"src/main/java/seedu/address/logic/commands/member/MeditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package seedu.address.logic.commands.member;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER_ID;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_MEMBERS;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.Name;","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Address;","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Email;","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Phone;","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.position.Position;","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.task.TaskList;","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":" * Edits the details of an existing member in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"public class MeditCommand extends Command {","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"leeroy999"},"content":"    public static final String COMMAND_WORD \u003d \"medit\";","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the member identified \"","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"            + \"by the index number used in the displayed member list. \"","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"leeroy999"},"content":"            + \"Parameters: \" + PREFIX_MEMBER_ID + \"MEMBER_ID (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"LiuZhi1an"},"content":"            + \"[\" + PREFIX_POSITION + \"POSITION]...\\n\"","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"leeroy999"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_MEMBER_ID + \"1 \"","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"LiuZhi1an"},"content":"    public static final String MESSAGE_EDIT_MEMBER_SUCCESS \u003d \"Edited Member: %1$s\";","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"leeroy999"},"content":"    public static final String MESSAGE_DUPLICATE_MEMBER \u003d \"This member already exists in the Ailurus.\";","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"leeroy999"},"content":"    private final EditMemberDescriptor editMemberDescriptor;","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"leeroy999"},"content":"     * @param index of the member in the filtered member list to edit","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"leeroy999"},"content":"     * @param editMemberDescriptor details to edit the member with","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"leeroy999"},"content":"    public MeditCommand(Index index, EditMemberDescriptor editMemberDescriptor) {","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"leeroy999"},"content":"        requireNonNull(editMemberDescriptor);","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"leeroy999"},"content":"        this.editMemberDescriptor \u003d new EditMemberDescriptor(editMemberDescriptor);","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"leeroy999"},"content":"        List\u003cMember\u003e lastShownList \u003d model.getFilteredMemberList();","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"LiuZhi1an"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"leeroy999"},"content":"        Member memberToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"leeroy999"},"content":"        Member editedMember \u003d createEditedMember(memberToEdit, editMemberDescriptor);","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"Samuel-bit-prog"},"content":"        if (!memberToEdit.isSameType(editedMember) \u0026\u0026 model.hasMember(editedMember)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"LiuZhi1an"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_MEMBER);","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"leeroy999"},"content":"        model.setMember(memberToEdit, editedMember);","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"LiuZhi1an"},"content":"        model.updateFilteredMemberList(PREDICATE_SHOW_ALL_MEMBERS);","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"LiuZhi1an"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_MEMBER_SUCCESS, editedMember));","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"leeroy999"},"content":"     * Creates and returns a {@code Member} with the details of {@code memberToEdit}","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"leeroy999"},"content":"     * edited with {@code editMemberDescriptor}.","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"leeroy999"},"content":"    private static Member createEditedMember(Member memberToEdit, EditMemberDescriptor editMemberDescriptor) {","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"leeroy999"},"content":"        assert memberToEdit !\u003d null;","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"leeroy999"},"content":"        Name updatedName \u003d editMemberDescriptor.getName().orElse(memberToEdit.getName());","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"leeroy999"},"content":"        Phone updatedPhone \u003d editMemberDescriptor.getPhone().orElse(memberToEdit.getPhone());","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"tsiyuk"},"content":"        Email updatedEmail \u003d editMemberDescriptor.getEmail().orElse(memberToEdit.getEmail().orElse(null));","lastModifiedDate":"2021-10-14"},{"lineNumber":103,"author":{"gitId":"tsiyuk"},"content":"        Address updatedAddress \u003d editMemberDescriptor.getAddress().orElse(memberToEdit.getAddress().orElse(null));","lastModifiedDate":"2021-10-14"},{"lineNumber":104,"author":{"gitId":"LiuZhi1an"},"content":"        Set\u003cPosition\u003e updatedPositions \u003d editMemberDescriptor.getPositions().orElse(memberToEdit.getPositions());","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"tsiyuk"},"content":"        TaskList originalTaskList \u003d memberToEdit.getTaskList();","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"tsiyuk"},"content":"        return new Member(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedPositions, originalTaskList);","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"leeroy999"},"content":"        if (!(other instanceof MeditCommand)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"leeroy999"},"content":"        MeditCommand e \u003d (MeditCommand) other;","lastModifiedDate":"2021-10-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":125,"author":{"gitId":"leeroy999"},"content":"                \u0026\u0026 editMemberDescriptor.equals(e.editMemberDescriptor);","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"leeroy999"},"content":"     * Stores the details to edit the member with. Each non-empty field value will replace the","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"leeroy999"},"content":"     * corresponding field value of the member.","lastModifiedDate":"2021-10-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"leeroy999"},"content":"    public static class EditMemberDescriptor {","lastModifiedDate":"2021-10-07"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":137,"author":{"gitId":"LiuZhi1an"},"content":"        private Set\u003cPosition\u003e positions;","lastModifiedDate":"2021-10-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"leeroy999"},"content":"        public EditMemberDescriptor() {}","lastModifiedDate":"2021-10-07"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":143,"author":{"gitId":"LiuZhi1an"},"content":"         * A defensive copy of {@code positions} is used internally.","lastModifiedDate":"2021-10-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":145,"author":{"gitId":"leeroy999"},"content":"        public EditMemberDescriptor(EditMemberDescriptor toCopy) {","lastModifiedDate":"2021-10-07"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":150,"author":{"gitId":"LiuZhi1an"},"content":"            setPositions(toCopy.positions);","lastModifiedDate":"2021-10-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"LiuZhi1an"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, positions);","lastModifiedDate":"2021-10-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":193,"author":{"gitId":"LiuZhi1an"},"content":"         * Sets {@code positions} to this object\u0027s {@code positions}.","lastModifiedDate":"2021-10-06"},{"lineNumber":194,"author":{"gitId":"LiuZhi1an"},"content":"         * A defensive copy of {@code positions} is used internally.","lastModifiedDate":"2021-10-06"},{"lineNumber":195,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":196,"author":{"gitId":"LiuZhi1an"},"content":"        public void setPositions(Set\u003cPosition\u003e positions) {","lastModifiedDate":"2021-10-06"},{"lineNumber":197,"author":{"gitId":"LiuZhi1an"},"content":"            this.positions \u003d (positions !\u003d null) ? new HashSet\u003c\u003e(positions) : null;","lastModifiedDate":"2021-10-06"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"LiuZhi1an"},"content":"         * Returns an unmodifiable position set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-06"},{"lineNumber":202,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"LiuZhi1an"},"content":"         * Returns {@code Optional#empty()} if {@code positions} is null.","lastModifiedDate":"2021-10-06"},{"lineNumber":204,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"LiuZhi1an"},"content":"        public Optional\u003cSet\u003cPosition\u003e\u003e getPositions() {","lastModifiedDate":"2021-10-06"},{"lineNumber":206,"author":{"gitId":"LiuZhi1an"},"content":"            return (positions !\u003d null) ? Optional.of(Collections.unmodifiableSet(positions)) : Optional.empty();","lastModifiedDate":"2021-10-06"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"leeroy999"},"content":"            if (!(other instanceof EditMemberDescriptor)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"leeroy999"},"content":"            EditMemberDescriptor e \u003d (EditMemberDescriptor) other;","lastModifiedDate":"2021-10-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":228,"author":{"gitId":"LiuZhi1an"},"content":"                    \u0026\u0026 getPositions().equals(e.getPositions());","lastModifiedDate":"2021-10-06"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"LiuZhi1an":22,"-":159,"tsiyuk":4,"leeroy999":38,"Samuel-bit-prog":8}},{"path":"src/main/java/seedu/address/logic/commands/member/MfindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package seedu.address.logic.commands.member;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":" * Finds and lists all members in Ailurus whose name contains any of the argument keywords.","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"public class MfindCommand extends Command {","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"    public static final String COMMAND_WORD \u003d \"mfind\";","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all members whose names contain any of \"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"            + \"Example: \" + COMMAND_WORD + \" alex bob john\";","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"Samuel-bit-prog"},"content":"    private final NameContainsKeywordsPredicate\u003cMember\u003e predicate;","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"    public MfindCommand(NameContainsKeywordsPredicate\u003cMember\u003e predicate) {","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"        model.updateFilteredMemberList(predicate);","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":36,"author":{"gitId":"LiuZhi1an"},"content":"                String.format(Messages.MESSAGE_MEMBERS_LISTED_OVERVIEW, model.getFilteredMemberList().size()));","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"leeroy999"},"content":"                || (other instanceof MfindCommand // instanceof handles nulls","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"leeroy999"},"content":"                \u0026\u0026 predicate.equals(((MfindCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"LiuZhi1an":1,"-":29,"leeroy999":12,"Samuel-bit-prog":3}},{"path":"src/main/java/seedu/address/logic/commands/member/MlistCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package seedu.address.logic.commands.member;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"Samuel-bit-prog"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ABSENT;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"Samuel-bit-prog"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ATTEND;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_ID;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_MEMBERS;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"import java.util.List;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"import seedu.address.model.module.event.Event;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":" * Lists all members in the address book to the user.","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"public class MlistCommand extends Command {","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"    public static final String COMMAND_WORD \u003d \"mlist\";","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"Samuel-bit-prog"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists all members in Ailurus with filters. \\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"Samuel-bit-prog"},"content":"            + \"Only one of \" + PREFIX_ATTEND + \"or \" + PREFIX_ABSENT + \"may be present\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"Samuel-bit-prog"},"content":"            + \"Parameters: [\" + PREFIX_EVENT_ID + \"EVENT_ID (must be a positive integer)] \"","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"Samuel-bit-prog"},"content":"            + \"[\" + PREFIX_ATTEND + \"] \"","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"Samuel-bit-prog"},"content":"            + \"[\" + PREFIX_ABSENT + \"] \\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"Samuel-bit-prog"},"content":"            + \"Examples: \" + COMMAND_WORD + \" \" + PREFIX_EVENT_ID + \"1\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"Samuel-bit-prog"},"content":"            + COMMAND_WORD + \" \" + PREFIX_EVENT_ID + \"1\" + PREFIX_ATTEND + \"\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"Samuel-bit-prog"},"content":"            + COMMAND_WORD + \" \" + PREFIX_EVENT_ID + \"1\" + PREFIX_ABSENT + \"\\n\";","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"Samuel-bit-prog"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Member(s) listed: %1$s members %2$s\";","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"    private Index eventIndex \u003d null;","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"    private Boolean hasAttended \u003d null;","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"leeroy999"},"content":"    public MlistCommand() {}","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"Samuel-bit-prog"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Constructor for MlistCommand.","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"Samuel-bit-prog"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @param eventIndex is the index of the event","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"Samuel-bit-prog"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"leeroy999"},"content":"    public MlistCommand(Index eventIndex) {","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"leeroy999"},"content":"        this.eventIndex \u003d eventIndex;","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"Samuel-bit-prog"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Constructor for MlistCommand with filter.","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"Samuel-bit-prog"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @param eventIndex is the index of the event","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @param hasAttended is string to indicate if checking for absence or attendance","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"Samuel-bit-prog"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"leeroy999"},"content":"    public MlistCommand(Index eventIndex, boolean hasAttended) {","lastModifiedDate":"2021-10-31"},{"lineNumber":61,"author":{"gitId":"Samuel-bit-prog"},"content":"        this.eventIndex \u003d eventIndex;","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"Samuel-bit-prog"},"content":"        this.hasAttended \u003d hasAttended;","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"leeroy999"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"leeroy999"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"leeroy999"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"leeroy999"},"content":"        List\u003cEvent\u003e lastShownList \u003d model.getFilteredEventList();","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"leeroy999"},"content":"        if (eventIndex !\u003d null \u0026\u0026 eventIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"leeroy999"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"leeroy999"},"content":"        if (eventIndex \u003d\u003d null) {","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"leeroy999"},"content":"            model.updateFilteredMemberList(PREDICATE_SHOW_ALL_MEMBERS);","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"GWphua"},"content":"            model.setCurrentEvent(null);","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"leeroy999"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, model.getFilteredMemberList().size(), \"\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"Samuel-bit-prog"},"content":"        } else {","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"Samuel-bit-prog"},"content":"            Event eventToList \u003d lastShownList.get(eventIndex.getZeroBased());","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"leeroy999"},"content":"            Set\u003cMember\u003e memberList \u003d eventToList.getParticipants(hasAttended);","lastModifiedDate":"2021-10-31"},{"lineNumber":81,"author":{"gitId":"tsiyuk"},"content":"            model.setCurrentEvent(eventToList);","lastModifiedDate":"2021-10-28"},{"lineNumber":82,"author":{"gitId":"leeroy999"},"content":"            model.updateFilteredMemberList(member -\u003e memberList.contains(member));","lastModifiedDate":"2021-10-31"},{"lineNumber":83,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"leeroy999"},"content":"            String attend;","lastModifiedDate":"2021-10-31"},{"lineNumber":85,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":86,"author":{"gitId":"Samuel-bit-prog"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, model.getFilteredMemberList().size(),","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"leeroy999"},"content":"                    \"for the event: \" + eventToList));","lastModifiedDate":"2021-10-31"},{"lineNumber":88,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"leeroy999"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"GWphua":1,"tsiyuk":1,"leeroy999":57,"Samuel-bit-prog":31}},{"path":"src/main/java/seedu/address/logic/commands/member/MtfindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package seedu.address.logic.commands.member;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"public class MtfindCommand extends Command {","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"    public static final String COMMAND_WORD \u003d \"mtfind\";","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all members whose tasks contains any of \"","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"            + \"Parameters: KEYWORD\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"            + \"Example: \" + COMMAND_WORD + \" form\";","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"    private final Predicate\u003cMember\u003e predicate;","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"    public MtfindCommand(Predicate\u003cMember\u003e predicate) {","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"        model.updateFilteredMemberList(predicate);","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"                String.format(Messages.MESSAGE_MEMBERS_LISTED_OVERVIEW, model.getFilteredMemberList().size())","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"        );","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"tsiyuk"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"            return true;","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"            return false;","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"tsiyuk"},"content":"        MtfindCommand that \u003d (MtfindCommand) o;","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"tsiyuk"},"content":"        return Objects.equals(predicate, that.predicate);","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"tsiyuk"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"tsiyuk"},"content":"        return predicate !\u003d null ? predicate.hashCode() : 0;","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"tsiyuk":56,"leeroy999":1}},{"path":"src/main/java/seedu/address/logic/commands/member/PfindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Samuel-bit-prog"},"content":"package seedu.address.logic.commands.member;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"Samuel-bit-prog"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"Samuel-bit-prog"},"content":"import java.util.List;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.position.Position;","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"Samuel-bit-prog"},"content":"/**","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"Samuel-bit-prog"},"content":" * Finds and lists all members in Ailurus whose name contains any of the argument keywords.","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"Samuel-bit-prog"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"Samuel-bit-prog"},"content":" */","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"Samuel-bit-prog"},"content":"public class PfindCommand extends Command {","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"Samuel-bit-prog"},"content":"    public static final String COMMAND_WORD \u003d \"pfind\";","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"Samuel-bit-prog"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all members whose positions contain any of \"","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"Samuel-bit-prog"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"Samuel-bit-prog"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"            + \"Example: \" + COMMAND_WORD + \" president assistant\";","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"Samuel-bit-prog"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"Samuel-bit-prog"},"content":"    public PfindCommand(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"Samuel-bit-prog"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"Samuel-bit-prog"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Returns true if the member contains a position that matches with the keywords.","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"Samuel-bit-prog"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @return boolean representing if present","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"Samuel-bit-prog"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"Samuel-bit-prog"},"content":"    public boolean test(Member m) {","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"Samuel-bit-prog"},"content":"        boolean isPresent \u003d false;","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"Samuel-bit-prog"},"content":"        for (Position p : m.getPositions()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"Samuel-bit-prog"},"content":"            if (keywords.stream().anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(p.positionName, keyword))) {","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"Samuel-bit-prog"},"content":"                isPresent \u003d true;","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"Samuel-bit-prog"},"content":"            }","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"Samuel-bit-prog"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"Samuel-bit-prog"},"content":"        return isPresent;","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"Samuel-bit-prog"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"Samuel-bit-prog"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"Samuel-bit-prog"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"Samuel-bit-prog"},"content":"        model.updateFilteredMemberList(this::test);","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"Samuel-bit-prog"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"Samuel-bit-prog"},"content":"                String.format(\"%1$d members with matching positions listed!\", model.getFilteredMemberList().size()));","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"Samuel-bit-prog"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"Samuel-bit-prog"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"Samuel-bit-prog"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"Samuel-bit-prog"},"content":"                || (other instanceof PfindCommand // instanceof handles nulls","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"Samuel-bit-prog"},"content":"                \u0026\u0026 keywords.equals(((PfindCommand) other).keywords)); // state check","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"Samuel-bit-prog"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"Samuel-bit-prog":61,"leeroy999":1}},{"path":"src/main/java/seedu/address/logic/commands/task/TaddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package seedu.address.logic.commands.task;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"LiuZhi1an"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER_ID;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"LiuZhi1an"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"LiuZhi1an"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.task.Task;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"LiuZhi1an"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"LiuZhi1an"},"content":" * Adds a task to the task list of a person.","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"LiuZhi1an"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"public class TaddCommand extends Command {","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"LiuZhi1an"},"content":"    public static final String COMMAND_WORD \u003d \"tadd\";","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"LiuZhi1an"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a task to the task list of a member. \"","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"LiuZhi1an"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"LiuZhi1an"},"content":"            + PREFIX_NAME + \"TASKNAME \"","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"            + PREFIX_DATE + \"TASKDEADLINE \"","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"Samuel-bit-prog"},"content":"            + PREFIX_MEMBER_ID + \"MEMBER_ID \"","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"Samuel-bit-prog"},"content":"            + \"[\" + PREFIX_MEMBER_ID + \"MEMBER_ID]...\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"LiuZhi1an"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"LiuZhi1an"},"content":"            + PREFIX_NAME + \"Submit form \"","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"            + PREFIX_DATE + \"21/10/2021 23:59 \"","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"Samuel-bit-prog"},"content":"            + PREFIX_MEMBER_ID + \"2 \"","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"Samuel-bit-prog"},"content":"            + PREFIX_MEMBER_ID + \"3 \";","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"LiuZhi1an"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New task added: %1$s\";","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"LiuZhi1an"},"content":"    public final Set\u003cIndex\u003e targetMemberIdList;","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"LiuZhi1an"},"content":"    public final Task toAdd;","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"LiuZhi1an"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"LiuZhi1an"},"content":"     * Creates an TaddCommand to add the specified {@code Task} to the member with specified {@code MemberId}.","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"LiuZhi1an"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"LiuZhi1an"},"content":"    public TaddCommand(Set\u003cIndex\u003e memberIdList, Task task) {","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"LiuZhi1an"},"content":"        requireAllNonNull(memberIdList, task);","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"LiuZhi1an"},"content":"        targetMemberIdList \u003d memberIdList;","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"LiuZhi1an"},"content":"        toAdd \u003d task;","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"LiuZhi1an"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"LiuZhi1an"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"LiuZhi1an"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"LiuZhi1an"},"content":"        ObservableList\u003cMember\u003e members \u003d model.getFilteredMemberList();","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"LiuZhi1an"},"content":"        for (Index targetMemberId: targetMemberIdList) {","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"LiuZhi1an"},"content":"            Member targetMember \u003d members.get(targetMemberId.getZeroBased());","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"LiuZhi1an"},"content":"            model.addTask(targetMember, toAdd);","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"LiuZhi1an"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"LiuZhi1an"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"LiuZhi1an"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"LiuZhi1an"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"leeroy999"},"content":"                || (other instanceof TaddCommand // instanceof handles nulls","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"leeroy999"},"content":"                \u0026\u0026 toAdd.equals(((TaddCommand) other).toAdd));","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"LiuZhi1an"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"LiuZhi1an":56,"tsiyuk":3,"leeroy999":6,"Samuel-bit-prog":6}},{"path":"src/main/java/seedu/address/logic/commands/task/TdelCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package seedu.address.logic.commands.task;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"LiuZhi1an"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER_ID_DEL;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_ID;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"LiuZhi1an"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.model.module.Name;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.task.Task;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.task.TaskList;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"LiuZhi1an"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"LiuZhi1an"},"content":" * Deletes a task from the task list of a person.","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"LiuZhi1an"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"public class TdelCommand extends Command {","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"LiuZhi1an"},"content":"    public static final String COMMAND_WORD \u003d \"tdel\";","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"LiuZhi1an"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Deletes a task from the task list of a person. \"","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"LiuZhi1an"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"LiuZhi1an"},"content":"            + PREFIX_TASK_ID + \"TASK_ID \"","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"LiuZhi1an"},"content":"            + PREFIX_MEMBER_ID_DEL + \"MEMBER_ID\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"LiuZhi1an"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"LiuZhi1an"},"content":"            + PREFIX_TASK_ID + \"3 \";","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"LiuZhi1an"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"This task is successfully deleted for %1$s: %2$s\";","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"LiuZhi1an"},"content":"    public static final String MESSAGE_TASK_NOT_FOUND \u003d \"This task does not exist in the task list of the member\";","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"LiuZhi1an"},"content":"    public final Index targetTaskId;","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"LiuZhi1an"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"LiuZhi1an"},"content":"     * Creates an TdelCommand to delete the task with specified {@code TaskId}","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"LiuZhi1an"},"content":"     * from the member with specified {@code MemberId}.","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"LiuZhi1an"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"LiuZhi1an"},"content":"    public TdelCommand(Index taskId) {","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"LiuZhi1an"},"content":"        requireAllNonNull(taskId);","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"LiuZhi1an"},"content":"        targetTaskId \u003d taskId;","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"LiuZhi1an"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"LiuZhi1an"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"LiuZhi1an"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"LiuZhi1an"},"content":"        Member targetMember \u003d model.getCurrentMember().get();","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"LiuZhi1an"},"content":"        int taskId \u003d targetTaskId.getZeroBased();","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"LiuZhi1an"},"content":"        TaskList taskList \u003d targetMember.getTaskList();","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"LiuZhi1an"},"content":"        ObservableList\u003cTask\u003e tasks \u003d taskList.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"LiuZhi1an"},"content":"        System.out.println(taskId);","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"LiuZhi1an"},"content":"        if (taskId \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"LiuZhi1an"},"content":"            throw new CommandException(MESSAGE_TASK_NOT_FOUND);","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"LiuZhi1an"},"content":"        Task targetTask \u003d tasks.get(targetTaskId.getZeroBased());","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"tsiyuk"},"content":"        Name deletedTaskName \u003d targetTask.getName();","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"LiuZhi1an"},"content":"        model.deleteTask(targetMember, taskId);","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"tsiyuk"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, targetMember.getName().toString(),","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"tsiyuk"},"content":"                deletedTaskName.toString()));","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"LiuZhi1an"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"LiuZhi1an"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"LiuZhi1an"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"leeroy999"},"content":"                || (other instanceof TdelCommand // instanceof handles nulls","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"LiuZhi1an"},"content":"                \u0026\u0026 targetTaskId.equals(((TdelCommand) other).targetTaskId));","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"LiuZhi1an"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"LiuZhi1an":60,"tsiyuk":4,"leeroy999":5,"Samuel-bit-prog":3}},{"path":"src/main/java/seedu/address/logic/commands/task/TdoneCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package seedu.address.logic.commands.task;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_ID;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"import java.util.List;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.model.module.task.Task;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":" * Marks one or multiple task(s) as done for a certain selected member.","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"public class TdoneCommand extends Command {","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"    public static final String COMMAND_WORD \u003d \"tdone\";","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Marks one or multiple task(s) as done \"","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"            + \"the current selected member \"","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"            + \"by the index numbers used in the displayed task list of the task identified\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"            + \"Parameters: \" + PREFIX_TASK_ID + \"TASK_ID... (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"            + PREFIX_TASK_ID + \"1 \"","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"            + PREFIX_TASK_ID + \"2\";","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"    public static final String MESSAGE_DONE_TASK_SUCCESS \u003d \"Marked task: %1$s as done\\n\";","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"    public static final String MESSAGE_TASK_HAS_DONE \u003d \"The task: %1$s has been done before.\";","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"    public static final String MESSAGE_TASK_NOT_FOUND \u003d \"This task does not exist in the task list of the member\";","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"    private final Set\u003cIndex\u003e indexList;","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"     * Creates a TdoneCommand to mark the task(s) identified by {@code indexList}.","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"tsiyuk"},"content":"    public TdoneCommand(Set\u003cIndex\u003e indexList) {","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"        requireNonNull(indexList);","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"        this.indexList \u003d indexList;","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"tsiyuk"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"tsiyuk"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"tsiyuk"},"content":"        List\u003cTask\u003e lastShownTaskList \u003d model.getFilteredTaskList();","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"tsiyuk"},"content":"        StringBuilder resultMessage \u003d new StringBuilder();","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"tsiyuk"},"content":"        for (Index targetIndex : indexList) {","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"tsiyuk"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d lastShownTaskList.size()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"tsiyuk"},"content":"                throw new CommandException(MESSAGE_TASK_NOT_FOUND);","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"tsiyuk"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"tsiyuk"},"content":"            Task taskToEdit \u003d lastShownTaskList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"tsiyuk"},"content":"            if (taskToEdit.isDone()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"tsiyuk"},"content":"                throw new CommandException(String.format(MESSAGE_TASK_HAS_DONE, taskToEdit));","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"tsiyuk"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"tsiyuk"},"content":"            Task editedTask \u003d new Task(taskToEdit.getName(), true, taskToEdit.getTaskDeadline());","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"tsiyuk"},"content":"            model.setTask(targetIndex.getZeroBased(), editedTask);","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"tsiyuk"},"content":"            resultMessage.append(String.format(MESSAGE_DONE_TASK_SUCCESS, editedTask));","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"tsiyuk"},"content":"        return new CommandResult(resultMessage.toString());","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"tsiyuk"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"tsiyuk"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"tsiyuk"},"content":"            return true;","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"tsiyuk"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"tsiyuk"},"content":"            return false;","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"tsiyuk"},"content":"        TdoneCommand that \u003d (TdoneCommand) o;","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"tsiyuk"},"content":"        return Objects.equals(indexList, that.indexList);","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"tsiyuk"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"tsiyuk"},"content":"        return Objects.hash(indexList);","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"tsiyuk":86}},{"path":"src/main/java/seedu/address/logic/commands/task/TeditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package seedu.address.logic.commands.task;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_ID;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"import java.util.List;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.model.module.Name;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.model.module.task.Task;","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.model.module.task.TaskDeadline;","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":" * Edits the details of an existing task of a member.","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"public class TeditCommand extends Command {","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"    public static final String COMMAND_WORD \u003d \"tedit\";","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the detail of the task identified\"","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"            + \"by the index number used in the displayed task list of the task identified\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"            + \"Parameters: \" + PREFIX_TASK_ID + \"TASK_ID (must be a positive integer) \"","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"            + \"[\" + PREFIX_NAME + \"TASK_NAME] \"","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"            // + \"[\" + PREFIX_STATUS + \"TASK_STATUS] \"","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"            + \"[\" + PREFIX_DATE + \"TASK_DEADLINE]\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"            + PREFIX_TASK_ID + \"1 \"","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"            + PREFIX_NAME + \"group meeting \"","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"tsiyuk"},"content":"            + PREFIX_DATE + \"24/10/2021 23:59\";","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"    public static final String MESSAGE_EDIT_TASK_SUCCESS \u003d \"Edited Task: %1$s\";","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"    public static final String MESSAGE_TASK_NOT_FOUND \u003d \"This task does not exist in the task list of the member\";","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"tsiyuk"},"content":"    private final Index targetTaskIndex;","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"tsiyuk"},"content":"    private final EditTaskDescriptor editTaskDescriptor;","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"tsiyuk"},"content":"     * @param targetTaskIndex of the task in the filtered task list to edit.","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"tsiyuk"},"content":"     * @param editTaskDescriptor details to edit the task with.","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"tsiyuk"},"content":"    public TeditCommand(Index targetTaskIndex, EditTaskDescriptor editTaskDescriptor) {","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"tsiyuk"},"content":"        requireAllNonNull(targetTaskIndex, editTaskDescriptor);","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"tsiyuk"},"content":"        this.targetTaskIndex \u003d targetTaskIndex;","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"tsiyuk"},"content":"        this.editTaskDescriptor \u003d editTaskDescriptor;","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"tsiyuk"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"tsiyuk"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"tsiyuk"},"content":"        List\u003cTask\u003e lastShownTasks \u003d model.getFilteredTaskList();","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"tsiyuk"},"content":"        if (targetTaskIndex.getZeroBased() \u003e\u003d lastShownTasks.size()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"tsiyuk"},"content":"            throw new CommandException(MESSAGE_TASK_NOT_FOUND);","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"tsiyuk"},"content":"        Task taskToEdit \u003d lastShownTasks.get(targetTaskIndex.getZeroBased());","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"tsiyuk"},"content":"        Task editedTask \u003d createEditedTask(taskToEdit, editTaskDescriptor);","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"tsiyuk"},"content":"        model.setTask(targetTaskIndex.getZeroBased(), editedTask);","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"tsiyuk"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"tsiyuk"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_TASK_SUCCESS, editedTask));","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"tsiyuk"},"content":"    private static Task createEditedTask(Task taskToEdit, EditTaskDescriptor editTaskDescriptor) {","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"tsiyuk"},"content":"        assert taskToEdit !\u003d null;","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"tsiyuk"},"content":"        Name updatedName \u003d editTaskDescriptor.getName().orElse(taskToEdit.getName());","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"tsiyuk"},"content":"        Boolean updateStatus \u003d editTaskDescriptor.getIsDone().orElse(taskToEdit.isDone());","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"tsiyuk"},"content":"        TaskDeadline updateTaskDeadline \u003d editTaskDescriptor.getTaskDeadline().orElse(taskToEdit.getTaskDeadline());","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"tsiyuk"},"content":"        return new Task(updatedName, updateStatus, updateTaskDeadline);","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"tsiyuk"},"content":"     * Stores the details to edit the task with. Each non-empty field value will replace the","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"tsiyuk"},"content":"     * corresponding field value of the task.","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"tsiyuk"},"content":"    public static class EditTaskDescriptor {","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"tsiyuk"},"content":"        private Name name;","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"tsiyuk"},"content":"        private Boolean isDone;","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"tsiyuk"},"content":"        private TaskDeadline deadline;","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"tsiyuk"},"content":"        public EditTaskDescriptor() {","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"tsiyuk"},"content":"        /**","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"tsiyuk"},"content":"         * Copy constructor.","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"tsiyuk"},"content":"         */","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"tsiyuk"},"content":"        public EditTaskDescriptor(EditTaskDescriptor toCopy) {","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"tsiyuk"},"content":"            setName(toCopy.name);","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"tsiyuk"},"content":"            setIsDone(toCopy.isDone);","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"tsiyuk"},"content":"            setDeadline(toCopy.deadline);","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"tsiyuk"},"content":"        /**","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"tsiyuk"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"tsiyuk"},"content":"         */","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"tsiyuk"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"tsiyuk"},"content":"            return CollectionUtil.isAnyNonNull(name, isDone, deadline);","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"tsiyuk"},"content":"        public void setName(Name name) {","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"tsiyuk"},"content":"            this.name \u003d name;","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"tsiyuk"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"tsiyuk"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"tsiyuk"},"content":"        public void setIsDone(Boolean isDone) {","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"tsiyuk"},"content":"            this.isDone \u003d isDone;","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"tsiyuk"},"content":"        public Optional\u003cBoolean\u003e getIsDone() {","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"tsiyuk"},"content":"            return Optional.ofNullable(isDone);","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"tsiyuk"},"content":"        public void setDeadline(TaskDeadline taskDeadline) {","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"tsiyuk"},"content":"            this.deadline \u003d taskDeadline;","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":136,"author":{"gitId":"tsiyuk"},"content":"        public Optional\u003cTaskDeadline\u003e getTaskDeadline() {","lastModifiedDate":"2021-10-25"},{"lineNumber":137,"author":{"gitId":"tsiyuk"},"content":"            return Optional.ofNullable(deadline);","lastModifiedDate":"2021-10-25"},{"lineNumber":138,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":139,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":140,"author":{"gitId":"tsiyuk"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":141,"author":{"gitId":"tsiyuk"},"content":"        public boolean equals(Object o) {","lastModifiedDate":"2021-10-25"},{"lineNumber":142,"author":{"gitId":"tsiyuk"},"content":"            if (this \u003d\u003d o) {","lastModifiedDate":"2021-10-25"},{"lineNumber":143,"author":{"gitId":"tsiyuk"},"content":"                return true;","lastModifiedDate":"2021-10-25"},{"lineNumber":144,"author":{"gitId":"tsiyuk"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":145,"author":{"gitId":"tsiyuk"},"content":"            if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":146,"author":{"gitId":"tsiyuk"},"content":"                return false;","lastModifiedDate":"2021-10-25"},{"lineNumber":147,"author":{"gitId":"tsiyuk"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":148,"author":{"gitId":"tsiyuk"},"content":"            EditTaskDescriptor that \u003d (EditTaskDescriptor) o;","lastModifiedDate":"2021-10-25"},{"lineNumber":149,"author":{"gitId":"tsiyuk"},"content":"            return Objects.equals(name, that.name) \u0026\u0026 Objects.equals(isDone, that.isDone)","lastModifiedDate":"2021-10-25"},{"lineNumber":150,"author":{"gitId":"tsiyuk"},"content":"                    \u0026\u0026 Objects.equals(deadline, that.deadline);","lastModifiedDate":"2021-10-25"},{"lineNumber":151,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":152,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":153,"author":{"gitId":"tsiyuk"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":154,"author":{"gitId":"tsiyuk"},"content":"        public int hashCode() {","lastModifiedDate":"2021-10-25"},{"lineNumber":155,"author":{"gitId":"tsiyuk"},"content":"            return Objects.hash(name, isDone, deadline);","lastModifiedDate":"2021-10-25"},{"lineNumber":156,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":157,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":158,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"tsiyuk":155,"leeroy999":3}},{"path":"src/main/java/seedu/address/logic/commands/task/TfindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LiuZhi1an"},"content":"package seedu.address.logic.commands.task;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"LiuZhi1an"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.model.module.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.model.module.task.Task;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"LiuZhi1an"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"LiuZhi1an"},"content":" * Lists all tasks of the user containing the keyword in the address book.","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"LiuZhi1an"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"LiuZhi1an"},"content":"public class TfindCommand extends Command {","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"LiuZhi1an"},"content":"    public static final String COMMAND_WORD \u003d \"tfind\";","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"LiuZhi1an"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"LiuZhi1an"},"content":"            + \": Finds all tasks of the current member whose task names contain any of \"","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"LiuZhi1an"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"LiuZhi1an"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"LiuZhi1an"},"content":"            + \"Example: \" + COMMAND_WORD + \" submit consent form\";","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"LiuZhi1an"},"content":"    private final NameContainsKeywordsPredicate\u003cTask\u003e predicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"LiuZhi1an"},"content":"    public TfindCommand(NameContainsKeywordsPredicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"LiuZhi1an"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"LiuZhi1an"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"LiuZhi1an"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"LiuZhi1an"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"LiuZhi1an"},"content":"        model.updateFilteredTaskList(predicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"LiuZhi1an"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"LiuZhi1an"},"content":"                String.format(Messages.MESSAGE_TASKS_LISTED_OVERVIEW, model.getFilteredTaskList().size()));","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"LiuZhi1an"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"LiuZhi1an":38}},{"path":"src/main/java/seedu/address/logic/commands/task/TlistCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package seedu.address.logic.commands.task;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"LiuZhi1an"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"Samuel-bit-prog"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DONE;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER_ID;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"Samuel-bit-prog"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OVERDUE;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"Samuel-bit-prog"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_COMPLETED_TASKS;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"Samuel-bit-prog"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_DUE_TASKS;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"Samuel-bit-prog"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_OVERDUE_TASKS;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"LiuZhi1an"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"LiuZhi1an"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":" * Lists all tasks of the user in the Ailurus.","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"LiuZhi1an"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"LiuZhi1an"},"content":"public class TlistCommand extends Command {","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"LiuZhi1an"},"content":"    public static final String COMMAND_WORD \u003d \"tlist\";","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"LiuZhi1an"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all tasks\";","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"LiuZhi1an"},"content":"    public static final String MESSAGE_MEMBER_NOT_FOUND \u003d \"This member does not exist in the member list\";","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"Samuel-bit-prog"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows the task list of a member. \\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"Samuel-bit-prog"},"content":"            + \"Only one of \" + PREFIX_DONE + \"or \" + PREFIX_OVERDUE + \"may be present\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"LiuZhi1an"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"Samuel-bit-prog"},"content":"            + PREFIX_MEMBER_ID + \"MEMBER_ID \"","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"Samuel-bit-prog"},"content":"            + \"[\" + PREFIX_DONE + \" OPTION (must be \\\"y\\\" or \\\"n\\\")] \"","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"Samuel-bit-prog"},"content":"            + \"[\" + PREFIX_OVERDUE + \"] \\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"Samuel-bit-prog"},"content":"            + \"Examples: \" + COMMAND_WORD + \" \" + PREFIX_MEMBER_ID + \"2\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"Samuel-bit-prog"},"content":"            + COMMAND_WORD + \" \" + PREFIX_MEMBER_ID + \"2\" + PREFIX_DONE + \"y\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"Samuel-bit-prog"},"content":"            + COMMAND_WORD + \" \" + PREFIX_MEMBER_ID + \"2\" + PREFIX_OVERDUE + \"\\n\";","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"LiuZhi1an"},"content":"    public final Index targetMemberId;","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"Samuel-bit-prog"},"content":"    private String filter \u003d \"\";","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"LiuZhi1an"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Creates an TListCommand to display the specified {@code Tasks}","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"LiuZhi1an"},"content":"     * belonging to the member with the specified {@code MemberId}.","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"LiuZhi1an"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"LiuZhi1an"},"content":"    public TlistCommand(Index memberId) {","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"LiuZhi1an"},"content":"        requireNonNull(memberId);","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"LiuZhi1an"},"content":"        targetMemberId \u003d memberId;","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"LiuZhi1an"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Creates an TListCommand to display the specified {@code Tasks}","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"LiuZhi1an"},"content":"     * belonging to the member with the specified {@code MemberId} with a {@code filter}.","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"LiuZhi1an"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"LiuZhi1an"},"content":"    public TlistCommand(Index memberId, String filter) {","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"LiuZhi1an"},"content":"        requireNonNull(memberId, filter);","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"LiuZhi1an"},"content":"        targetMemberId \u003d memberId;","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"Samuel-bit-prog"},"content":"        this.filter \u003d filter;","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"LiuZhi1an"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"LiuZhi1an"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"LiuZhi1an"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"LiuZhi1an"},"content":"        ObservableList\u003cMember\u003e members \u003d model.getFilteredMemberList();","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"LiuZhi1an"},"content":"        if (targetMemberId.getZeroBased() \u003e\u003d members.size()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"LiuZhi1an"},"content":"            throw new CommandException(MESSAGE_MEMBER_NOT_FOUND);","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"LiuZhi1an"},"content":"        Member targetMember \u003d members.get(targetMemberId.getZeroBased());","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"Samuel-bit-prog"},"content":"        switch (filter) {","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"Samuel-bit-prog"},"content":"        case \"y\":","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"Samuel-bit-prog"},"content":"            model.updateFilteredTaskList(targetMember, PREDICATE_SHOW_ALL_COMPLETED_TASKS);","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"Samuel-bit-prog"},"content":"            return new CommandResult(MESSAGE_SUCCESS + \" that have been completed by \"","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"Samuel-bit-prog"},"content":"                    + targetMember.getName());","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"Samuel-bit-prog"},"content":"        case \"n\":","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"Samuel-bit-prog"},"content":"            model.updateFilteredTaskList(targetMember, PREDICATE_SHOW_ALL_DUE_TASKS);","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"Samuel-bit-prog"},"content":"            return new CommandResult(MESSAGE_SUCCESS + \" that are due for \" + targetMember.getName());","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"Samuel-bit-prog"},"content":"        case \"overdue\":","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"Samuel-bit-prog"},"content":"            model.updateFilteredTaskList(targetMember, PREDICATE_SHOW_ALL_OVERDUE_TASKS);","lastModifiedDate":"2021-10-28"},{"lineNumber":81,"author":{"gitId":"Samuel-bit-prog"},"content":"            return new CommandResult(MESSAGE_SUCCESS + \" that are overdue for \" + targetMember.getName());","lastModifiedDate":"2021-10-28"},{"lineNumber":82,"author":{"gitId":"Samuel-bit-prog"},"content":"        default:","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"LiuZhi1an"},"content":"            model.updateFilteredTaskList(targetMember, PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"LiuZhi1an"},"content":"            return new CommandResult(MESSAGE_SUCCESS + \" of \" + targetMember.getName());","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"LiuZhi1an"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"LiuZhi1an"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"LiuZhi1an"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"LiuZhi1an"},"content":"                || (other instanceof TlistCommand // instanceof handles nulls","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"LiuZhi1an"},"content":"                \u0026\u0026 targetMemberId.equals(((TlistCommand) other).targetMemberId));","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"LiuZhi1an"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"LiuZhi1an":60,"leeroy999":4,"Samuel-bit-prog":31}},{"path":"src/main/java/seedu/address/logic/commands/task/TundoneCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package seedu.address.logic.commands.task;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_ID;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"import java.util.List;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.model.module.task.Task;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"/**","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":" * Marks one or multiple task(s) as undone for a certain selected member.","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":" */","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"public class TundoneCommand extends Command {","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"    public static final String COMMAND_WORD \u003d \"tundone\";","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Marks one or multiple task(s) as undone \"","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"            + \"the current selected member \"","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"            + \"by the index numbers used in the displayed task list of the task identified\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"            + \"Parameters: \" + PREFIX_TASK_ID + \"TASK_ID... (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"            + PREFIX_TASK_ID + \"1\"","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"            + PREFIX_TASK_ID + \"2\";","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"    public static final String MESSAGE_UNDONE_TASK_SUCCESS \u003d \"Marked task: %1$s as undone\\n\";","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"    public static final String MESSAGE_TASK_NOT_DONE \u003d \"The task: %1$s has not been done before.\";","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"    public static final String MESSAGE_TASK_NOT_FOUND \u003d \"This task does not exist in the task list of the member\";","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"    private final Set\u003cIndex\u003e indexList;","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"     * Creates a TundoneCommand to mark the task(s) identified by {@code indexList}.","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"tsiyuk"},"content":"    public TundoneCommand(Set\u003cIndex\u003e indexList) {","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"        requireNonNull(indexList);","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"        this.indexList \u003d indexList;","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"tsiyuk"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"tsiyuk"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"tsiyuk"},"content":"        List\u003cTask\u003e lastShownTaskList \u003d model.getFilteredTaskList();","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"tsiyuk"},"content":"        StringBuilder resultMessage \u003d new StringBuilder();","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"tsiyuk"},"content":"        for (Index targetIndex : indexList) {","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"tsiyuk"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d lastShownTaskList.size()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"tsiyuk"},"content":"                throw new CommandException(MESSAGE_TASK_NOT_FOUND);","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"tsiyuk"},"content":"            }","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"tsiyuk"},"content":"            Task taskToEdit \u003d lastShownTaskList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"tsiyuk"},"content":"            if (!taskToEdit.isDone()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"tsiyuk"},"content":"                throw new CommandException(String.format(MESSAGE_TASK_NOT_DONE, taskToEdit));","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"tsiyuk"},"content":"            }","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"tsiyuk"},"content":"            Task editedTask \u003d new Task(taskToEdit.getName(), false, taskToEdit.getTaskDeadline());","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"tsiyuk"},"content":"            model.setTask(targetIndex.getZeroBased(), editedTask);","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"tsiyuk"},"content":"            resultMessage.append(String.format(MESSAGE_UNDONE_TASK_SUCCESS, editedTask));","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"tsiyuk"},"content":"        return new CommandResult(resultMessage.toString());","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"tsiyuk"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"tsiyuk"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"tsiyuk"},"content":"            return true;","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"tsiyuk"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"tsiyuk"},"content":"            return false;","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"tsiyuk"},"content":"        TundoneCommand that \u003d (TundoneCommand) o;","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"tsiyuk"},"content":"        return Objects.equals(indexList, that.indexList);","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":81,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":82,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"tsiyuk"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"tsiyuk"},"content":"        return Objects.hash(indexList);","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":86,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"tsiyuk":87}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.event.EaddCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.event.EdelCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.event.EeditCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.logic.commands.event.EfindCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.event.ElistCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.event.EmaddCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.event.EmarkAllCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.event.EmarkCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.event.EmdelCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.event.EunmarkCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.member.MaddCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.member.MdelCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.member.MeditCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.member.MfindCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.member.MlistCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.logic.commands.member.MtfindCommand;","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.logic.commands.member.PfindCommand;","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.task.TaddCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.task.TdelCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.logic.commands.task.TdoneCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.task.TeditCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.logic.commands.task.TfindCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.task.TlistCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.logic.commands.task.TundoneCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.event.EaddCommandParser;","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.event.EdelCommandParser;","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.event.EeditCommandParser;","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.logic.parser.event.EfindCommandParser;","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.event.EmaddCommandParser;","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.event.EmarkAllCommandParser;","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.event.EmarkCommandParser;","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.event.EmdelCommandParser;","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.event.EunmarkCommandParser;","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.member.MaddCommandParser;","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.member.MdelCommandParser;","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.member.MeditCommandParser;","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.member.MfindCommandParser;","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.member.MlistCommandParser;","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.logic.parser.member.MtfindCommandParser;","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.logic.parser.member.PfindCommandParser;","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.task.TaddCommandParser;","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.task.TdelCommandParser;","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.logic.parser.task.TdoneCommandParser;","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.task.TeditCommandParser;","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.logic.parser.task.TfindCommandParser;","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.task.TlistCommandParser;","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.logic.parser.task.TundoneCommandParser;","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"leeroy999"},"content":"        case MaddCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"leeroy999"},"content":"            return new MaddCommandParser().parse(arguments);","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"leeroy999"},"content":"        case MeditCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"leeroy999"},"content":"            return new MeditCommandParser().parse(arguments);","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"leeroy999"},"content":"        case MdelCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"leeroy999"},"content":"            return new MdelCommandParser().parse(arguments);","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"leeroy999"},"content":"        case MfindCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"leeroy999"},"content":"            return new MfindCommandParser().parse(arguments);","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"leeroy999"},"content":"        case MlistCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"leeroy999"},"content":"            return new MlistCommandParser().parse(arguments);","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"tsiyuk"},"content":"        case MtfindCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-29"},{"lineNumber":104,"author":{"gitId":"tsiyuk"},"content":"            return new MtfindCommandParser().parse(arguments);","lastModifiedDate":"2021-10-29"},{"lineNumber":105,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":106,"author":{"gitId":"Samuel-bit-prog"},"content":"        case PfindCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-29"},{"lineNumber":107,"author":{"gitId":"Samuel-bit-prog"},"content":"            return new PfindCommandParser().parse(arguments);","lastModifiedDate":"2021-10-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":115,"author":{"gitId":"leeroy999"},"content":"        case EaddCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"leeroy999"},"content":"            return new EaddCommandParser().parse(arguments);","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"leeroy999"},"content":"        case EdelCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":119,"author":{"gitId":"leeroy999"},"content":"            return new EdelCommandParser().parse(arguments);","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"leeroy999"},"content":"        case EeditCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"leeroy999"},"content":"            return new EeditCommandParser().parse(arguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"Samuel-bit-prog"},"content":"        case EfindCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-28"},{"lineNumber":125,"author":{"gitId":"Samuel-bit-prog"},"content":"            return new EfindCommandParser().parse(arguments);","lastModifiedDate":"2021-10-28"},{"lineNumber":126,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":127,"author":{"gitId":"leeroy999"},"content":"        case ElistCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-13"},{"lineNumber":128,"author":{"gitId":"leeroy999"},"content":"            return new ElistCommand();","lastModifiedDate":"2021-10-13"},{"lineNumber":129,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":130,"author":{"gitId":"leeroy999"},"content":"        case EmaddCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-27"},{"lineNumber":131,"author":{"gitId":"leeroy999"},"content":"            return new EmaddCommandParser().parse(arguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":132,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":133,"author":{"gitId":"leeroy999"},"content":"        case EmdelCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-27"},{"lineNumber":134,"author":{"gitId":"leeroy999"},"content":"            return new EmdelCommandParser().parse(arguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":135,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":136,"author":{"gitId":"leeroy999"},"content":"        case EmarkCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-27"},{"lineNumber":137,"author":{"gitId":"leeroy999"},"content":"            return new EmarkCommandParser().parse(arguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":138,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":139,"author":{"gitId":"leeroy999"},"content":"        case EunmarkCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-27"},{"lineNumber":140,"author":{"gitId":"leeroy999"},"content":"            return new EunmarkCommandParser().parse(arguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":141,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":142,"author":{"gitId":"leeroy999"},"content":"        case EmarkAllCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-27"},{"lineNumber":143,"author":{"gitId":"leeroy999"},"content":"            return new EmarkAllCommandParser().parse(arguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":144,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":145,"author":{"gitId":"leeroy999"},"content":"        case TaddCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-13"},{"lineNumber":146,"author":{"gitId":"leeroy999"},"content":"            return new TaddCommandParser().parse(arguments);","lastModifiedDate":"2021-10-13"},{"lineNumber":147,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":148,"author":{"gitId":"leeroy999"},"content":"        case TdelCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-13"},{"lineNumber":149,"author":{"gitId":"leeroy999"},"content":"            return new TdelCommandParser().parse(arguments);","lastModifiedDate":"2021-10-13"},{"lineNumber":150,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"LiuZhi1an"},"content":"        case TlistCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-18"},{"lineNumber":152,"author":{"gitId":"LiuZhi1an"},"content":"            return new TlistCommandParser().parse(arguments);","lastModifiedDate":"2021-10-18"},{"lineNumber":153,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":154,"author":{"gitId":"LiuZhi1an"},"content":"        case TfindCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":155,"author":{"gitId":"LiuZhi1an"},"content":"            return new TfindCommandParser().parse(arguments);","lastModifiedDate":"2021-10-26"},{"lineNumber":156,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":157,"author":{"gitId":"tsiyuk"},"content":"        case TeditCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-25"},{"lineNumber":158,"author":{"gitId":"tsiyuk"},"content":"            return new TeditCommandParser().parse(arguments);","lastModifiedDate":"2021-10-25"},{"lineNumber":159,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":160,"author":{"gitId":"tsiyuk"},"content":"        case TdoneCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-27"},{"lineNumber":161,"author":{"gitId":"tsiyuk"},"content":"            return new TdoneCommandParser().parse(arguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":162,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":163,"author":{"gitId":"tsiyuk"},"content":"        case TundoneCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-28"},{"lineNumber":164,"author":{"gitId":"tsiyuk"},"content":"            return new TundoneCommandParser().parse(arguments);","lastModifiedDate":"2021-10-28"},{"lineNumber":165,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LiuZhi1an":10,"-":58,"tsiyuk":18,"leeroy999":76,"Samuel-bit-prog":9}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":" *     e.g. {@code some preamble text /t 11.00 /t12.00 /k /m July}  where prefixes are {@code /t /k /m}.\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code /k} in the above example.\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code /t}","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString + \" \", prefixes);","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"leeroy999"},"content":"     * E.g if {@code argsString} \u003d \"/ehi/p900\", {@code prefix} \u003d \"/p\" and","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"leeroy999"},"content":"     * occurrences of \"/p\" with whitespace before it. However, if","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"leeroy999"},"content":"     * {@code argsString} \u003d \"/ehi /p900\", {@code prefix} \u003d \"/p\" and","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"leeroy999"},"content":"            String argValue \u003d extractArgumentValue(argsString + \" \", prefixPositions.get(i),","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"leeroy999"},"content":"                    prefixPositions.get(i + 1));","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"leeroy999"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().trim().length();","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"-":139,"leeroy999":10}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"GWphua"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"/n \");","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"/ph \");","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"/em \");","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"GWphua"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"/a \");","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"    public static final Prefix PREFIX_POSITION \u003d new Prefix(\"/p \");","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"    public static final Prefix PREFIX_MEMBER_ID \u003d new Prefix(\"/m \");","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"/d \");","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"    public static final Prefix PREFIX_EVENT_ID \u003d new Prefix(\"/e \");","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"LiuZhi1an"},"content":"    public static final Prefix PREFIX_TASK_ID \u003d new Prefix(\"/t \");","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"LiuZhi1an"},"content":"    public static final Prefix PREFIX_MEMBER_ID_DEL \u003d new Prefix(\"/for \");","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"    public static final Prefix PREFIX_STATUS \u003d new Prefix(\"/s \");","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"Samuel-bit-prog"},"content":"    public static final Prefix PREFIX_ATTEND \u003d new Prefix(\"/att \");","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"Samuel-bit-prog"},"content":"    public static final Prefix PREFIX_ABSENT \u003d new Prefix(\"/abs \");","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"Samuel-bit-prog"},"content":"    public static final Prefix PREFIX_DONE \u003d new Prefix(\"/dn \");","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"Samuel-bit-prog"},"content":"    public static final Prefix PREFIX_OVERDUE \u003d new Prefix(\"/ovd \");","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"GWphua":2,"LiuZhi1an":2,"-":9,"tsiyuk":1,"leeroy999":6,"Samuel-bit-prog":4}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"import java.util.StringJoiner;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":14,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.Name;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.event.EventDate;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Address;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Email;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Phone;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.position.Position;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.model.module.task.TaskDeadline;","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"LiuZhi1an"},"content":"     * Parses a {@code String position} into a {@code Position}.","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"LiuZhi1an"},"content":"     * @throws ParseException if the given {@code position} is invalid.","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"LiuZhi1an"},"content":"    public static Position parsePosition(String position) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"LiuZhi1an"},"content":"        requireNonNull(position);","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"LiuZhi1an"},"content":"        String trimmedPosition \u003d position.trim();","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"LiuZhi1an"},"content":"        if (!Position.isValidPositionName(trimmedPosition)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"LiuZhi1an"},"content":"            throw new ParseException(Position.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"LiuZhi1an"},"content":"        return new Position(trimmedPosition);","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":119,"author":{"gitId":"LiuZhi1an"},"content":"     * Parses {@code Collection\u003cString\u003e positions} into a {@code Set\u003cPosition\u003e}.","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":121,"author":{"gitId":"LiuZhi1an"},"content":"    public static Set\u003cPosition\u003e parsePositions(Collection\u003cString\u003e positions) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"LiuZhi1an"},"content":"        requireNonNull(positions);","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"LiuZhi1an"},"content":"        final Set\u003cPosition\u003e positionSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":124,"author":{"gitId":"LiuZhi1an"},"content":"        for (String positionName : positions) {","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"LiuZhi1an"},"content":"            positionSet.add(parsePosition(positionName));","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":127,"author":{"gitId":"LiuZhi1an"},"content":"        return positionSet;","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":129,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"leeroy999"},"content":"     * Parses a {@code String name} into a {@code EventName}.","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"leeroy999"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"leeroy999"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"Samuel-bit-prog"},"content":"    public static Name parseEventName(String name) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"leeroy999"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"leeroy999"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"Samuel-bit-prog"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"Samuel-bit-prog"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"Samuel-bit-prog"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"leeroy999"},"content":"     * Parses a {@code String date} into an {@code EventDate}.","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"leeroy999"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"leeroy999"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"leeroy999"},"content":"    public static EventDate parseEventDate(String date) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"leeroy999"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"leeroy999"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"leeroy999"},"content":"        if (!EventDate.isValidEventDate(trimmedDate)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"leeroy999"},"content":"            throw new ParseException(EventDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"leeroy999"},"content":"        return new EventDate(trimmedDate);","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"leeroy999"},"content":"     * Parses {@code indices} into a {@code Set\u003cIndex\u003e} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"leeroy999"},"content":"     * trimmed.","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"leeroy999"},"content":"    public static Set\u003cIndex\u003e parseIndices(Collection\u003cString\u003e indices) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"leeroy999"},"content":"        requireNonNull(indices);","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"leeroy999"},"content":"        final Set\u003cIndex\u003e indexSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"leeroy999"},"content":"        for (String index : indices) {","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"leeroy999"},"content":"            indexSet.add(parseIndex(index));","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"leeroy999"},"content":"        return indexSet;","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"LiuZhi1an"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":174,"author":{"gitId":"tsiyuk"},"content":"     * Parses a {@code String name} into a {@code TaskName}.","lastModifiedDate":"2021-10-22"},{"lineNumber":175,"author":{"gitId":"LiuZhi1an"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-11"},{"lineNumber":176,"author":{"gitId":"LiuZhi1an"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":177,"author":{"gitId":"LiuZhi1an"},"content":"     * @throws ParseException if the given {@code taskName} is invalid.","lastModifiedDate":"2021-10-11"},{"lineNumber":178,"author":{"gitId":"LiuZhi1an"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":179,"author":{"gitId":"tsiyuk"},"content":"    public static Name parseTaskName(String name) throws ParseException {","lastModifiedDate":"2021-10-22"},{"lineNumber":180,"author":{"gitId":"tsiyuk"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-10-22"},{"lineNumber":181,"author":{"gitId":"tsiyuk"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2021-10-22"},{"lineNumber":182,"author":{"gitId":"tsiyuk"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":183,"author":{"gitId":"tsiyuk"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":184,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":185,"author":{"gitId":"tsiyuk"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2021-10-22"},{"lineNumber":186,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":187,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":188,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":189,"author":{"gitId":"tsiyuk"},"content":"     * Parses a {@code String time} into an {@code TaskDeadline}.","lastModifiedDate":"2021-10-22"},{"lineNumber":190,"author":{"gitId":"tsiyuk"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-22"},{"lineNumber":191,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":192,"author":{"gitId":"tsiyuk"},"content":"     * @throws ParseException if the given {@code time} is invalid.","lastModifiedDate":"2021-10-22"},{"lineNumber":193,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":194,"author":{"gitId":"tsiyuk"},"content":"    public static TaskDeadline parseTaskDeadline(String time) throws ParseException {","lastModifiedDate":"2021-10-22"},{"lineNumber":195,"author":{"gitId":"tsiyuk"},"content":"        requireNonNull(time);","lastModifiedDate":"2021-10-22"},{"lineNumber":196,"author":{"gitId":"tsiyuk"},"content":"        String trimmedTime \u003d time.trim();","lastModifiedDate":"2021-10-22"},{"lineNumber":197,"author":{"gitId":"tsiyuk"},"content":"        if (!TaskDeadline.isValidTaskDeadline(trimmedTime)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":198,"author":{"gitId":"tsiyuk"},"content":"            throw new ParseException(TaskDeadline.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":199,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":200,"author":{"gitId":"tsiyuk"},"content":"        return new TaskDeadline(trimmedTime);","lastModifiedDate":"2021-10-22"},{"lineNumber":201,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":202,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":203,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":204,"author":{"gitId":"tsiyuk"},"content":"     * Parses a {@code String status} into an {@code Boolean}.","lastModifiedDate":"2021-10-25"},{"lineNumber":205,"author":{"gitId":"tsiyuk"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-25"},{"lineNumber":206,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":207,"author":{"gitId":"tsiyuk"},"content":"     * @throws ParseException if the given {@code time} is invalid.","lastModifiedDate":"2021-10-25"},{"lineNumber":208,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":209,"author":{"gitId":"tsiyuk"},"content":"    public static Boolean parseTaskStatus(String status) throws ParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":210,"author":{"gitId":"tsiyuk"},"content":"        requireNonNull(status);","lastModifiedDate":"2021-10-25"},{"lineNumber":211,"author":{"gitId":"tsiyuk"},"content":"        String trimmedStatus \u003d status.trim().toLowerCase();","lastModifiedDate":"2021-10-25"},{"lineNumber":212,"author":{"gitId":"tsiyuk"},"content":"        if (trimmedStatus !\u003d \"done\" || trimmedStatus !\u003d \"undone\") {","lastModifiedDate":"2021-10-25"},{"lineNumber":213,"author":{"gitId":"tsiyuk"},"content":"            throw new ParseException(\"Invalid status, can only be done or undone\");","lastModifiedDate":"2021-10-25"},{"lineNumber":214,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":215,"author":{"gitId":"tsiyuk"},"content":"        Boolean isDone \u003d trimmedStatus \u003d\u003d \"done\" ? Boolean.TRUE : Boolean.FALSE;","lastModifiedDate":"2021-10-25"},{"lineNumber":216,"author":{"gitId":"tsiyuk"},"content":"        return isDone;","lastModifiedDate":"2021-10-25"},{"lineNumber":217,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":218,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":219,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":220,"author":{"gitId":"leeroy999"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-26"},{"lineNumber":221,"author":{"gitId":"leeroy999"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-26"},{"lineNumber":222,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":223,"author":{"gitId":"leeroy999"},"content":"     * @param argumentMultimap mapping of prefixes to their respective arguments","lastModifiedDate":"2021-10-26"},{"lineNumber":224,"author":{"gitId":"leeroy999"},"content":"     * @param prefixes variable number of prefixes as an array","lastModifiedDate":"2021-10-26"},{"lineNumber":225,"author":{"gitId":"leeroy999"},"content":"     * @return boolean of whether the prefixes are present in the mapping","lastModifiedDate":"2021-10-26"},{"lineNumber":226,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":227,"author":{"gitId":"leeroy999"},"content":"    public static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-26"},{"lineNumber":228,"author":{"gitId":"leeroy999"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-26"},{"lineNumber":229,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":230,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":231,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":232,"author":{"gitId":"leeroy999"},"content":"     * Returns string of module names separated by commas, given by a set of modules.","lastModifiedDate":"2021-10-27"},{"lineNumber":233,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":234,"author":{"gitId":"leeroy999"},"content":"     * @param memberSet set of modules with names","lastModifiedDate":"2021-10-27"},{"lineNumber":235,"author":{"gitId":"leeroy999"},"content":"     * @return string of module names","lastModifiedDate":"2021-10-27"},{"lineNumber":236,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":237,"author":{"gitId":"leeroy999"},"content":"    public static String memberSetToString(Set\u003cMember\u003e memberSet) {","lastModifiedDate":"2021-10-27"},{"lineNumber":238,"author":{"gitId":"leeroy999"},"content":"        StringJoiner joiner \u003d new StringJoiner(\", \");","lastModifiedDate":"2021-10-27"},{"lineNumber":239,"author":{"gitId":"leeroy999"},"content":"        for (Member member: memberSet) {","lastModifiedDate":"2021-10-27"},{"lineNumber":240,"author":{"gitId":"leeroy999"},"content":"            joiner.add(member.getName().toString());","lastModifiedDate":"2021-10-27"},{"lineNumber":241,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":242,"author":{"gitId":"leeroy999"},"content":"        return joiner.toString();","lastModifiedDate":"2021-10-27"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"LiuZhi1an":23,"-":105,"tsiyuk":38,"leeroy999":68,"Samuel-bit-prog":10}},{"path":"src/main/java/seedu/address/logic/parser/event/EaddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package seedu.address.logic.parser.event;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER_ID;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.event.EaddCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.Name;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.event.Event;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.event.EventDate;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":" * Parses input arguments and creates a new EaddCommand object","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"public class EaddCommandParser implements Parser\u003cEaddCommand\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"     * Parses the given {@code String} of arguments in the context of the EaddCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"     * and returns an EaddCommand object for execution.","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"    public EaddCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"                ArgumentTokenizer.tokenize(","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"                        args, PREFIX_NAME, PREFIX_DATE, PREFIX_MEMBER_ID);","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_DATE)","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"leeroy999"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"leeroy999"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EaddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"Samuel-bit-prog"},"content":"        Name name \u003d ParserUtil.parseEventName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"leeroy999"},"content":"        EventDate date \u003d ParserUtil.parseEventDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"leeroy999"},"content":"        Set\u003cIndex\u003e indexList \u003d ParserUtil.parseIndices(argMultimap.getAllValues(PREFIX_MEMBER_ID));","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"leeroy999"},"content":"        Event event \u003d new Event(name, date);","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"leeroy999"},"content":"        return new EaddCommand(event, indexList);","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"leeroy999"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"leeroy999":45,"Samuel-bit-prog":4}},{"path":"src/main/java/seedu/address/logic/parser/event/EdelCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package seedu.address.logic.parser.event;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_ID;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.event.EdelCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":" * Parses input arguments and creates a new EdelCommand object","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"public class EdelCommandParser implements Parser\u003cEdelCommand\u003e {","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"     * Parses the given {@code String} of arguments in the context of the EdeleteCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"     * and returns a EdeleteCommand object for execution.","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"    public EdelCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_EVENT_ID);","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_EVENT_ID)","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EdelCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_EVENT_ID).get());","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"        return new EdelCommand(index);","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"leeroy999":33}},{"path":"src/main/java/seedu/address/logic/parser/event/EeditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package seedu.address.logic.parser.event;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_ID;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER_ID;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.event.EeditCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.event.EeditCommand.EditEventDescriptor;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":" * Parses input arguments and creates a new EeditCommand object","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"public class EeditCommandParser implements Parser\u003cEeditCommand\u003e {","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"     * Parses the given {@code String} of arguments in the context of the EeditCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"     * and returns an EeditCommand object for execution.","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"    public EeditCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"                ArgumentTokenizer.tokenize(","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"leeroy999"},"content":"                        args, PREFIX_EVENT_ID, PREFIX_NAME, PREFIX_DATE, PREFIX_MEMBER_ID);","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"Samuel-bit-prog"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_EVENT_ID)) {","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"Samuel-bit-prog"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EeditCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"Samuel-bit-prog"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"leeroy999"},"content":"        Index index;","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"leeroy999"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"leeroy999"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_EVENT_ID).get());","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"leeroy999"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"leeroy999"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EeditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"leeroy999"},"content":"        EditEventDescriptor editEventDescriptor \u003d new EditEventDescriptor();","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"leeroy999"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"leeroy999"},"content":"            editEventDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"leeroy999"},"content":"        if (argMultimap.getValue(PREFIX_DATE).isPresent()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"leeroy999"},"content":"            editEventDescriptor.setDate(ParserUtil.parseEventDate(argMultimap.getValue(PREFIX_DATE).get()));","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"leeroy999"},"content":"        if (!argMultimap.getAllValues(PREFIX_MEMBER_ID).isEmpty()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"leeroy999"},"content":"            editEventDescriptor.setMemberSet(new HashSet\u003cMember\u003e());","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"leeroy999"},"content":"        Set\u003cIndex\u003e indexList \u003d ParserUtil.parseIndices(argMultimap.getAllValues(PREFIX_MEMBER_ID));","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"leeroy999"},"content":"        if (!editEventDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"leeroy999"},"content":"            throw new ParseException(EeditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"leeroy999"},"content":"        return new EeditCommand(index, editEventDescriptor, indexList);","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"leeroy999"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"leeroy999":67,"Samuel-bit-prog":4}},{"path":"src/main/java/seedu/address/logic/parser/event/EfindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Samuel-bit-prog"},"content":"package seedu.address.logic.parser.event;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"Samuel-bit-prog"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"Samuel-bit-prog"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.logic.commands.event.EfindCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.event.Event;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"Samuel-bit-prog"},"content":"/**","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"Samuel-bit-prog"},"content":" * Parses input arguments and creates a new EfindCommand object","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"Samuel-bit-prog"},"content":" */","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"Samuel-bit-prog"},"content":"public class EfindCommandParser implements Parser\u003cEfindCommand\u003e {","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"Samuel-bit-prog"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Parses the given {@code String} of arguments in the context of the EfindCommand","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"Samuel-bit-prog"},"content":"     * and returns a EfindCommand object for execution.","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"Samuel-bit-prog"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"Samuel-bit-prog"},"content":"    public EfindCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"Samuel-bit-prog"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"Samuel-bit-prog"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"Samuel-bit-prog"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"Samuel-bit-prog"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EfindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"Samuel-bit-prog"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"Samuel-bit-prog"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"Samuel-bit-prog"},"content":"        return new EfindCommand(new NameContainsKeywordsPredicate\u003cEvent\u003e(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"Samuel-bit-prog"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"Samuel-bit-prog":35}},{"path":"src/main/java/seedu/address/logic/parser/event/EmaddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package seedu.address.logic.parser.event;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_ID;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER_ID;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.event.EmaddCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":" * Parses input arguments and creates a new EmaddCommand object","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"public class EmaddCommandParser implements Parser\u003cEmaddCommand\u003e {","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"     * Parses the given {@code String} of arguments in the context of the EmaddCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"     * and returns a EmaddCommand object for execution.","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"    public EmaddCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_EVENT_ID, PREFIX_MEMBER_ID);","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_EVENT_ID, PREFIX_MEMBER_ID)","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EmaddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_EVENT_ID).get());","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"        Set\u003cIndex\u003e memberIndices \u003d ParserUtil.parseIndices(argMultimap.getAllValues(PREFIX_MEMBER_ID));","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"        return new EmaddCommand(index, memberIndices);","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"leeroy999"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"leeroy999":37}},{"path":"src/main/java/seedu/address/logic/parser/event/EmarkAllCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package seedu.address.logic.parser.event;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_ID;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.event.EmarkAllCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":" * Parses input arguments and creates a new EmarkAllCommand object","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"public class EmarkAllCommandParser implements Parser\u003cEmarkAllCommand\u003e {","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"     * Parses the given {@code String} of arguments in the context of the EmarkAllCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"     * and returns a EmarkAllCommand object for execution.","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"    public EmarkAllCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_EVENT_ID);","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_EVENT_ID)","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EmarkAllCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_EVENT_ID).get());","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"        return new EmarkAllCommand(index);","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"leeroy999":33}},{"path":"src/main/java/seedu/address/logic/parser/event/EmarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package seedu.address.logic.parser.event;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_ID;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER_ID;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.event.EmarkCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":" * Parses input arguments and creates a new EmarkCommand object","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"public class EmarkCommandParser implements Parser\u003cEmarkCommand\u003e {","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"     * Parses the given {@code String} of arguments in the context of the EmarkCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"     * and returns a EmarkCommand object for execution.","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"    public EmarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_EVENT_ID, PREFIX_MEMBER_ID);","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_EVENT_ID, PREFIX_MEMBER_ID)","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EmarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_EVENT_ID).get());","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"        Set\u003cIndex\u003e memberIndices \u003d ParserUtil.parseIndices(argMultimap.getAllValues(PREFIX_MEMBER_ID));","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"        return new EmarkCommand(index, memberIndices);","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"leeroy999"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"leeroy999":37}},{"path":"src/main/java/seedu/address/logic/parser/event/EmdelCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package seedu.address.logic.parser.event;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_ID;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER_ID;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.event.EmdelCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":" * Parses input arguments and creates a new EmaddCommand object","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"public class EmdelCommandParser implements Parser\u003cEmdelCommand\u003e {","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"     * Parses the given {@code String} of arguments in the context of the EmaddCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"     * and returns a EmaddCommand object for execution.","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"    public EmdelCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_EVENT_ID, PREFIX_MEMBER_ID);","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_EVENT_ID, PREFIX_MEMBER_ID)","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EmdelCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_EVENT_ID).get());","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"        Set\u003cIndex\u003e memberIndices \u003d ParserUtil.parseIndices(argMultimap.getAllValues(PREFIX_MEMBER_ID));","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"        return new EmdelCommand(index, memberIndices);","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"leeroy999"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"leeroy999":37}},{"path":"src/main/java/seedu/address/logic/parser/event/EunmarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package seedu.address.logic.parser.event;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_ID;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER_ID;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.event.EunmarkCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":" * Parses input arguments and creates a new EunmarkCommand object","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"public class EunmarkCommandParser implements Parser\u003cEunmarkCommand\u003e {","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"     * Parses the given {@code String} of arguments in the context of the EunmarkCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"     * and returns a EunmarkCommand object for execution.","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"    public EunmarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_EVENT_ID, PREFIX_MEMBER_ID);","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_EVENT_ID, PREFIX_MEMBER_ID)","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EunmarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_EVENT_ID).get());","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"        Set\u003cIndex\u003e memberIndices \u003d ParserUtil.parseIndices(argMultimap.getAllValues(PREFIX_MEMBER_ID));","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"        return new EunmarkCommand(index, memberIndices);","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"leeroy999"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"leeroy999":37}},{"path":"src/main/java/seedu/address/logic/parser/member/MaddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package seedu.address.logic.parser.member;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.member.MaddCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.Name;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Address;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Email;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Phone;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.position.Position;","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":" * Parses input arguments and creates a new PaddCommand object","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"public class MaddCommandParser implements Parser\u003cMaddCommand\u003e {","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"     * Parses the given {@code String} of arguments in the context of the PaddCommand","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"     * and returns an PaddCommand object for execution.","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"    public MaddCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"LiuZhi1an"},"content":"                ArgumentTokenizer.tokenize(","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"LiuZhi1an"},"content":"                        args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_POSITION);","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE)","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":42,"author":{"gitId":"leeroy999"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MaddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"tsiyuk"},"content":"        Email email \u003d argMultimap.getValue(PREFIX_EMAIL).isPresent()","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"tsiyuk"},"content":"                ? ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get())","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"tsiyuk"},"content":"                : null;","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"tsiyuk"},"content":"        Address address \u003d argMultimap.getValue(PREFIX_ADDRESS).isPresent()","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"tsiyuk"},"content":"                ? ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get())","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"tsiyuk"},"content":"                : null;","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"LiuZhi1an"},"content":"        Set\u003cPosition\u003e positionList \u003d ParserUtil.parsePositions(argMultimap.getAllValues(PREFIX_POSITION));","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"LiuZhi1an"},"content":"        Member member \u003d new Member(name, phone, email, address, positionList);","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"leeroy999"},"content":"        return new MaddCommand(member);","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"LiuZhi1an":5,"-":28,"tsiyuk":6,"leeroy999":14,"Samuel-bit-prog":6}},{"path":"src/main/java/seedu/address/logic/parser/member/MdelCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package seedu.address.logic.parser.member;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER_ID;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.member.MdelCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"public class MdelCommandParser implements Parser\u003cMdelCommand\u003e {","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Parses the given {@code String} of arguments in the context of the MdelCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"Samuel-bit-prog"},"content":"     * and returns a MdelCommand object for execution.","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"    public MdelCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_MEMBER_ID);","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_MEMBER_ID)","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MdelCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_MEMBER_ID).get());","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"        return new MdelCommand(index);","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"leeroy999":32,"Samuel-bit-prog":2}},{"path":"src/main/java/seedu/address/logic/parser/member/MeditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package seedu.address.logic.parser.member;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER_ID;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.member.MeditCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.member.MeditCommand.EditMemberDescriptor;","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.position.Position;","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"public class MeditCommandParser implements Parser\u003cMeditCommand\u003e {","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"leeroy999"},"content":"    public MeditCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_MEMBER_ID, PREFIX_NAME,","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"                        PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_POSITION);","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"leeroy999"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_MEMBER_ID)","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"leeroy999"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MeditCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"leeroy999"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_MEMBER_ID).get());","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"leeroy999"},"content":"        EditMemberDescriptor editMemberDescriptor \u003d new EditMemberDescriptor();","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"leeroy999"},"content":"            editMemberDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"leeroy999"},"content":"            editMemberDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"leeroy999"},"content":"            editMemberDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"leeroy999"},"content":"            editMemberDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"LiuZhi1an"},"content":"        parsePositionsForEdit(argMultimap.getAllValues(PREFIX_POSITION)).ifPresent(editMemberDescriptor::setPositions);","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"leeroy999"},"content":"        if (!editMemberDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"leeroy999"},"content":"            throw new ParseException(MeditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"leeroy999"},"content":"        return new MeditCommand(index, editMemberDescriptor);","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"LiuZhi1an"},"content":"     * Parses {@code Collection\u003cString\u003e positions} into a {@code Set\u003cPosition\u003e} if {@code positions} is non-empty.","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"LiuZhi1an"},"content":"     * If {@code positions} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"LiuZhi1an"},"content":"     * {@code Set\u003cPosition\u003e} containing zero positions.","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"LiuZhi1an"},"content":"    private Optional\u003cSet\u003cPosition\u003e\u003e parsePositionsForEdit(Collection\u003cString\u003e positions) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"LiuZhi1an"},"content":"        assert positions !\u003d null;","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"LiuZhi1an"},"content":"        if (positions.isEmpty()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"LiuZhi1an"},"content":"        Collection\u003cString\u003e positionSet \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"LiuZhi1an"},"content":"                positions.size() \u003d\u003d 1 \u0026\u0026 positions.contains(\"\") ? Collections.emptySet() : positions;","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"LiuZhi1an"},"content":"        return Optional.of(ParserUtil.parsePositions(positionSet));","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"LiuZhi1an":11,"-":51,"leeroy999":24,"Samuel-bit-prog":1}},{"path":"src/main/java/seedu/address/logic/parser/member/MfindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package seedu.address.logic.parser.member;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.member.MfindCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"public class MfindCommandParser implements Parser\u003cMfindCommand\u003e {","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Parses the given {@code String} of arguments in the context of the MfindCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"Samuel-bit-prog"},"content":"     * and returns a MfindCommand object for execution.","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"    public MfindCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MfindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"        return new MfindCommand(new NameContainsKeywordsPredicate\u003cMember\u003e(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":23,"leeroy999":7,"Samuel-bit-prog":4}},{"path":"src/main/java/seedu/address/logic/parser/member/MlistCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package seedu.address.logic.parser.member;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"Samuel-bit-prog"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ABSENT;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"Samuel-bit-prog"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ATTEND;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"Samuel-bit-prog"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_ID;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.member.MlistCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"public class MlistCommandParser implements Parser\u003cMlistCommand\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"     * Parses the given {@code String} of arguments in the context of the ElistmCommand","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"     * and returns a ElistmCommand object for execution.","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"    public MlistCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"            return new MlistCommand();","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"Samuel-bit-prog"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_EVENT_ID, PREFIX_ATTEND, PREFIX_ABSENT);","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_EVENT_ID)","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"Samuel-bit-prog"},"content":"            || ParserUtil.arePrefixesPresent(argMultimap, PREFIX_ATTEND, PREFIX_ABSENT)","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MlistCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_EVENT_ID).get());","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"Samuel-bit-prog"},"content":"        if (ParserUtil.arePrefixesPresent(argMultimap, PREFIX_ATTEND)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"            return new MlistCommand(index, true);","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"Samuel-bit-prog"},"content":"        } else if (ParserUtil.arePrefixesPresent(argMultimap, PREFIX_ABSENT)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"            return new MlistCommand(index, false);","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"Samuel-bit-prog"},"content":"        } else {","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"leeroy999"},"content":"            return new MlistCommand(index);","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"leeroy999"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"leeroy999":33,"Samuel-bit-prog":13}},{"path":"src/main/java/seedu/address/logic/parser/member/MtfindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package seedu.address.logic.parser.member;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.logic.commands.member.MtfindCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.model.module.task.Task;","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.model.module.task.TaskList;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"public class MtfindCommandParser implements Parser\u003cMtfindCommand\u003e {","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"     * Parses {@code userInput} of arguments in the context of the MtfindCommand","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"     * and returns a MtfindCommand Object.","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"    public MtfindCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"        String trimmedArg \u003d args.trim();","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"        if (trimmedArg.isEmpty()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MtfindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"        String[] keywords \u003d trimmedArg.split(\"\\\\s+\");","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"        Predicate\u003cMember\u003e resultPredicate \u003d member -\u003e {","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"            TaskList taskList \u003d member.getTaskList();","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"            return Arrays.stream(keywords).anyMatch(keyword -\u003e {","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"                for (Task task : taskList) {","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"                    if (StringUtil.containsWordIgnoreCase(task.getName().fullName, keyword)) {","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"                        return true;","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"                    }","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"                }","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"tsiyuk"},"content":"                return false;","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"            });","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"        };","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"        return new MtfindCommand(resultPredicate);","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"tsiyuk":46}},{"path":"src/main/java/seedu/address/logic/parser/member/PfindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Samuel-bit-prog"},"content":"package seedu.address.logic.parser.member;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.logic.commands.member.PfindCommand;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"Samuel-bit-prog"},"content":"public class PfindCommandParser implements Parser\u003cPfindCommand\u003e {","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Parses the given {@code String} of arguments in the context of the PfindCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"Samuel-bit-prog"},"content":"     * and returns a PfindCommand object for execution.","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"Samuel-bit-prog"},"content":"    public PfindCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"Samuel-bit-prog"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, PfindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"Samuel-bit-prog"},"content":"        return new PfindCommand(Arrays.asList(nameKeywords));","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"-":23,"Samuel-bit-prog":9}},{"path":"src/main/java/seedu/address/logic/parser/task/TaddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package seedu.address.logic.parser.task;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER_ID;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"LiuZhi1an"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.task.TaddCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.model.module.Name;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.task.Task;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.model.module.task.TaskDeadline;","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"LiuZhi1an"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":" * Parses input arguments and creates a new TaddCommand object","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"LiuZhi1an"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"public class TaddCommandParser implements Parser\u003cTaddCommand\u003e {","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"LiuZhi1an"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"     * Parses the given {@code String} of arguments in the context of the TaddCommand","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"     * and returns an TaddCommand object for execution.","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"LiuZhi1an"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"LiuZhi1an"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"    public TaddCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"LiuZhi1an"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"LiuZhi1an"},"content":"                ArgumentTokenizer.tokenize(","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"                        args, PREFIX_NAME, PREFIX_DATE, PREFIX_MEMBER_ID);","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_DATE, PREFIX_MEMBER_ID)","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"LiuZhi1an"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"leeroy999"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, TaddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"LiuZhi1an"},"content":"        Set\u003cIndex\u003e memberIdList \u003d ParserUtil.parseIndices(argMultimap.getAllValues(PREFIX_MEMBER_ID));","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"        Name taskName \u003d ParserUtil.parseTaskName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"        TaskDeadline taskDeadline \u003d ParserUtil.parseTaskDeadline(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"        Task task \u003d new Task(taskName, taskDeadline);","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"LiuZhi1an"},"content":"        return new TaddCommand(memberIdList, task);","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"LiuZhi1an"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"LiuZhi1an":27,"tsiyuk":7,"leeroy999":13,"Samuel-bit-prog":1}},{"path":"src/main/java/seedu/address/logic/parser/task/TdelCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package seedu.address.logic.parser.task;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_ID;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.task.TdelCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"LiuZhi1an"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":" * Parses input arguments and creates a new TdelCommand object","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"LiuZhi1an"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"public class TdelCommandParser implements Parser\u003cTdelCommand\u003e {","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"LiuZhi1an"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"     * Parses the given {@code String} of arguments in the context of the TdelCommand","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"     * and returns an TdelCommand object for execution.","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"LiuZhi1an"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"LiuZhi1an"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"    public TdelCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"LiuZhi1an"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"LiuZhi1an"},"content":"                ArgumentTokenizer.tokenize(","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"LiuZhi1an"},"content":"                        args, PREFIX_TASK_ID);","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"LiuZhi1an"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_TASK_ID)","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"LiuZhi1an"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, TdelCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"LiuZhi1an"},"content":"        Index taskId \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_TASK_ID).get());","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"LiuZhi1an"},"content":"        return new TdelCommand(taskId);","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"LiuZhi1an"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"LiuZhi1an":26,"leeroy999":12}},{"path":"src/main/java/seedu/address/logic/parser/task/TdoneCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package seedu.address.logic.parser.task;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_ID;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.logic.commands.task.TdoneCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":" * Parses input arguments and creates a new TdoneCommand object.","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"public class TdoneCommandParser implements Parser\u003cTdoneCommand\u003e {","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"     * Parses the given {@code String} of arguments in the context of the TdoneCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"     * and returns a TdoneCommand object for execution.","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"    public TdoneCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"                args, PREFIX_TASK_ID);","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"        if (!argMultimap.getValue(PREFIX_TASK_ID).isPresent()","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, TdoneCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"        Set\u003cIndex\u003e indexSet \u003d ParserUtil.parseIndices(argMultimap.getAllValues(PREFIX_TASK_ID));","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"        return new TdoneCommand(indexSet);","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"tsiyuk":39}},{"path":"src/main/java/seedu/address/logic/parser/task/TeditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package seedu.address.logic.parser.task;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_ID;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.task.TeditCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.task.TeditCommand.EditTaskDescriptor;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"public class TeditCommandParser implements Parser\u003cTeditCommand\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"     * Parses the given {@code String} of arguments in the context of the TeditCommand","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"     * and returns an TeditCommand object for execution.","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"    public TeditCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"        requireNonNull(userInput);","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"        ArgumentMultimap argumentMultimap \u003d ArgumentTokenizer.tokenize(","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"                userInput, PREFIX_TASK_ID, PREFIX_NAME, PREFIX_STATUS, PREFIX_DATE);","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"        if (!arePrefixesPresent(argumentMultimap, PREFIX_TASK_ID)","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"                || !argumentMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, TeditCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"        Index index \u003d ParserUtil.parseIndex(argumentMultimap.getValue(PREFIX_TASK_ID).get());","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"        EditTaskDescriptor editTaskDescriptor \u003d new EditTaskDescriptor();","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"        if (argumentMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"            editTaskDescriptor.setName(ParserUtil.parseName(argumentMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"        if (argumentMultimap.getValue(PREFIX_STATUS).isPresent()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"tsiyuk"},"content":"            editTaskDescriptor.setIsDone(ParserUtil.parseTaskStatus(argumentMultimap.getValue(PREFIX_STATUS).get()));","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"tsiyuk"},"content":"        if (argumentMultimap.getValue(PREFIX_DATE).isPresent()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"tsiyuk"},"content":"            editTaskDescriptor.setDeadline(ParserUtil.parseTaskDeadline(argumentMultimap.getValue(PREFIX_DATE).get()));","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"tsiyuk"},"content":"        if (!editTaskDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"tsiyuk"},"content":"            throw new ParseException(TeditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"tsiyuk"},"content":"        return new TeditCommand(index, editTaskDescriptor);","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"tsiyuk"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"tsiyuk"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"tsiyuk"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"tsiyuk"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"tsiyuk":59,"leeroy999":8}},{"path":"src/main/java/seedu/address/logic/parser/task/TfindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LiuZhi1an"},"content":"package seedu.address.logic.parser.task;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"LiuZhi1an"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.logic.commands.task.TfindCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.model.module.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.model.module.task.Task;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"LiuZhi1an"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"LiuZhi1an"},"content":" * Parses input arguments and creates a new TfindCommand object","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"LiuZhi1an"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"LiuZhi1an"},"content":"public class TfindCommandParser implements Parser\u003cTfindCommand\u003e {","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"LiuZhi1an"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"LiuZhi1an"},"content":"     * Parses the given {@code String} of arguments in the context of the TfindCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"LiuZhi1an"},"content":"     * and returns a TfindCommand object for execution.","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"LiuZhi1an"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"LiuZhi1an"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"LiuZhi1an"},"content":"    public TfindCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"LiuZhi1an"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"LiuZhi1an"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"LiuZhi1an"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"LiuZhi1an"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, TfindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"LiuZhi1an"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"LiuZhi1an"},"content":"        return new TfindCommand(new NameContainsKeywordsPredicate\u003cTask\u003e(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"LiuZhi1an"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"LiuZhi1an":33}},{"path":"src/main/java/seedu/address/logic/parser/task/TlistCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package seedu.address.logic.parser.task;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"Samuel-bit-prog"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DONE;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER_ID;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"Samuel-bit-prog"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OVERDUE;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.task.TlistCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"LiuZhi1an"},"content":"public class TlistCommandParser implements Parser\u003cTlistCommand\u003e {","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"LiuZhi1an"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"LiuZhi1an"},"content":"     * Parses the given {@code String} of arguments in the context of the TlistCommand","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"LiuZhi1an"},"content":"     * and returns a TlistCommand object for execution.","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"LiuZhi1an"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"LiuZhi1an"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"LiuZhi1an"},"content":"    public TlistCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"Samuel-bit-prog"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"Samuel-bit-prog"},"content":"                PREFIX_MEMBER_ID, PREFIX_DONE, PREFIX_OVERDUE);","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_MEMBER_ID)","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"Samuel-bit-prog"},"content":"                || ParserUtil.arePrefixesPresent(argMultimap, PREFIX_DONE, PREFIX_OVERDUE)","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"LiuZhi1an"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"LiuZhi1an"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, TlistCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"LiuZhi1an"},"content":"        Index memberId \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_MEMBER_ID).get());","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"Samuel-bit-prog"},"content":"        if (argMultimap.getValue(PREFIX_DONE).isPresent()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"Samuel-bit-prog"},"content":"            if (argMultimap.getValue(PREFIX_DONE).get().equals(\"y\")","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"Samuel-bit-prog"},"content":"                    || argMultimap.getValue(PREFIX_DONE).get().equals(\"n\")) {","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"LiuZhi1an"},"content":"                return new TlistCommand(memberId, argMultimap.getValue(PREFIX_DONE).get());","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"Samuel-bit-prog"},"content":"            }","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"Samuel-bit-prog"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, TlistCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"Samuel-bit-prog"},"content":"        } else if (ParserUtil.arePrefixesPresent(argMultimap, PREFIX_OVERDUE)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"LiuZhi1an"},"content":"            return new TlistCommand(memberId, \"overdue\");","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"Samuel-bit-prog"},"content":"        } else {","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"LiuZhi1an"},"content":"            return new TlistCommand(memberId);","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"Samuel-bit-prog"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"LiuZhi1an"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"LiuZhi1an":24,"leeroy999":7,"Samuel-bit-prog":13}},{"path":"src/main/java/seedu/address/logic/parser/task/TundoneCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package seedu.address.logic.parser.task;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_ID;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.logic.commands.task.TundoneCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"/**","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":" * Parses input arguments and creates a new TundoneCommand object.","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":" */","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"public class TundoneCommandParser implements Parser\u003cTundoneCommand\u003e {","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"     * Parses the given {@code String} of arguments in the context of the TundoneCommand","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"     * and returns a TundoneCommand object for execution.","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"    public TundoneCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"                args, PREFIX_TASK_ID);","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"        if (!argMultimap.getValue(PREFIX_TASK_ID).isPresent()","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, TundoneCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"        Set\u003cIndex\u003e indexSet \u003d ParserUtil.parseIndices(argMultimap.getAllValues(PREFIX_TASK_ID));","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"        return new TundoneCommand(indexSet);","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"tsiyuk":38}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"Samuel-bit-prog"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.event.Event;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.event.UniqueEventList;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.UniqueMemberList;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":" * Duplicates are not allowed (by .isSameMember comparison)","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"    private final UniqueMemberList members;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"Samuel-bit-prog"},"content":"    private final UniqueEventList events;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"        members \u003d new UniqueMemberList();","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"Samuel-bit-prog"},"content":"        events \u003d new UniqueEventList();","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"     * Creates an AddressBook using the Members in the {@code toBeCopied}","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"leeroy999"},"content":"     * Replaces the contents of the member list with {@code members}.","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"leeroy999"},"content":"     * {@code members} must not contain duplicate members.","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"Samuel-bit-prog"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @param members is the member list","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"leeroy999"},"content":"    public void setMembers(List\u003cMember\u003e members) {","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"leeroy999"},"content":"        this.members.setMembers(members);","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"Samuel-bit-prog"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Replaces the contents of the member list with {@code members}.","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"Samuel-bit-prog"},"content":"     * {@code members} must not contain duplicate members.","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"Samuel-bit-prog"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @param events is the event list","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"Samuel-bit-prog"},"content":"    public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"Samuel-bit-prog"},"content":"        this.events.setEvents(events);","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"Samuel-bit-prog"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @param newData is the new data to be reset with","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":76,"author":{"gitId":"leeroy999"},"content":"        setMembers(newData.getMemberList());","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"Samuel-bit-prog"},"content":"        setEvents(newData.getEventList());","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"leeroy999"},"content":"    //// member-level operations","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"leeroy999"},"content":"     * Returns true if a member with the same identity as {@code member} exists in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"Samuel-bit-prog"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @param member is the member to check for","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @return boolean","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"leeroy999"},"content":"    public boolean hasMember(Member member) {","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"leeroy999"},"content":"        requireNonNull(member);","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"leeroy999"},"content":"        return members.contains(member);","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Returns true if an event with the same identity as {@code event} exists in the address book.","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"Samuel-bit-prog"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @param event is the event to check for","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @return boolean","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"Samuel-bit-prog"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"Samuel-bit-prog"},"content":"        requireNonNull(event);","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"Samuel-bit-prog"},"content":"        return events.contains(event);","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"leeroy999"},"content":"     * Adds a member to the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"leeroy999"},"content":"     * The member must not already exist in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"Samuel-bit-prog"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @param p is the member to be added","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"leeroy999"},"content":"    public void addMember(Member p) {","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"leeroy999"},"content":"        members.add(p);","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"Samuel-bit-prog"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Adds an event to the address book.","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"Samuel-bit-prog"},"content":"     * The event must not already exist in the address book.","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"Samuel-bit-prog"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @param e is the event to be added","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"Samuel-bit-prog"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"Samuel-bit-prog"},"content":"    public void addEvent(Event e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"Samuel-bit-prog"},"content":"        events.add(e);","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"leeroy999"},"content":"     * Adds members to an event to the Ailurus.","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"leeroy999"},"content":"     * The event must already exist in the Ailurus.","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"leeroy999"},"content":"     * @param target is the event to be modified","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"leeroy999"},"content":"     * @param memberSet is the member list to be added","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"leeroy999"},"content":"    public void addEventMembers(Event target, Set\u003cMember\u003e memberSet) {","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"leeroy999"},"content":"        events.addMembers(target, memberSet);","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":136,"author":{"gitId":"leeroy999"},"content":"     * Replaces the given member {@code target} in the list with {@code editedMember}.","lastModifiedDate":"2021-10-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":138,"author":{"gitId":"leeroy999"},"content":"     * The member identity of {@code editedMember} must not be the same as another existing member in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":139,"author":{"gitId":"Samuel-bit-prog"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":140,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @param target is the member to replace","lastModifiedDate":"2021-10-11"},{"lineNumber":141,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @param editedMember is the member replacing with","lastModifiedDate":"2021-10-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":143,"author":{"gitId":"leeroy999"},"content":"    public void setMember(Member target, Member editedMember) {","lastModifiedDate":"2021-10-07"},{"lineNumber":144,"author":{"gitId":"leeroy999"},"content":"        requireNonNull(editedMember);","lastModifiedDate":"2021-10-07"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":146,"author":{"gitId":"leeroy999"},"content":"        members.setMember(target, editedMember);","lastModifiedDate":"2021-10-07"},{"lineNumber":147,"author":{"gitId":"leeroy999"},"content":"        for (Event event : events) {","lastModifiedDate":"2021-10-13"},{"lineNumber":148,"author":{"gitId":"leeroy999"},"content":"            Set\u003cMember\u003e memberSet \u003d event.getParticipants();","lastModifiedDate":"2021-10-13"},{"lineNumber":149,"author":{"gitId":"leeroy999"},"content":"            if (memberSet.contains(target)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":150,"author":{"gitId":"leeroy999"},"content":"                event.removeParticipant(target);","lastModifiedDate":"2021-10-13"},{"lineNumber":151,"author":{"gitId":"leeroy999"},"content":"                event.addParticipant(editedMember);","lastModifiedDate":"2021-10-13"},{"lineNumber":152,"author":{"gitId":"leeroy999"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":153,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":157,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Replaces the given event {@code target} in the list with {@code editedEvent}.","lastModifiedDate":"2021-10-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-10-11"},{"lineNumber":159,"author":{"gitId":"Samuel-bit-prog"},"content":"     * The member identity of {@code editedEvent} must not be the same as another existing event in the address book.","lastModifiedDate":"2021-10-11"},{"lineNumber":160,"author":{"gitId":"Samuel-bit-prog"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":161,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @param target is the event to replace","lastModifiedDate":"2021-10-11"},{"lineNumber":162,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @param editedEvent is the event replacing with","lastModifiedDate":"2021-10-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":164,"author":{"gitId":"Samuel-bit-prog"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2021-10-11"},{"lineNumber":165,"author":{"gitId":"Samuel-bit-prog"},"content":"        requireNonNull(editedEvent);","lastModifiedDate":"2021-10-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":167,"author":{"gitId":"Samuel-bit-prog"},"content":"        events.setEvent(target, editedEvent);","lastModifiedDate":"2021-10-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":171,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Removes {@code key} member from this {@code AddressBook}.","lastModifiedDate":"2021-10-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":173,"author":{"gitId":"Samuel-bit-prog"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":174,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @param key is the member to be removed","lastModifiedDate":"2021-10-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":176,"author":{"gitId":"leeroy999"},"content":"    public void removeMember(Member key) {","lastModifiedDate":"2021-10-07"},{"lineNumber":177,"author":{"gitId":"leeroy999"},"content":"        members.remove(key);","lastModifiedDate":"2021-10-07"},{"lineNumber":178,"author":{"gitId":"leeroy999"},"content":"        for (Event event : events) {","lastModifiedDate":"2021-10-13"},{"lineNumber":179,"author":{"gitId":"leeroy999"},"content":"            Set\u003cMember\u003e memberSet \u003d event.getParticipants();","lastModifiedDate":"2021-10-13"},{"lineNumber":180,"author":{"gitId":"leeroy999"},"content":"            if (memberSet.contains(key)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":181,"author":{"gitId":"leeroy999"},"content":"                event.removeParticipant(key);","lastModifiedDate":"2021-10-13"},{"lineNumber":182,"author":{"gitId":"leeroy999"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":183,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"Samuel-bit-prog"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":187,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Removes {@code key} event from this {@code AddressBook}.","lastModifiedDate":"2021-10-11"},{"lineNumber":188,"author":{"gitId":"Samuel-bit-prog"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2021-10-11"},{"lineNumber":189,"author":{"gitId":"Samuel-bit-prog"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":190,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @param key is the event to be removed","lastModifiedDate":"2021-10-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":192,"author":{"gitId":"Samuel-bit-prog"},"content":"    public void removeEvent(Event key) {","lastModifiedDate":"2021-10-11"},{"lineNumber":193,"author":{"gitId":"Samuel-bit-prog"},"content":"        events.remove(key);","lastModifiedDate":"2021-10-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"Samuel-bit-prog"},"content":"        return members.asUnmodifiableObservableList().size() + \" members\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":201,"author":{"gitId":"Samuel-bit-prog"},"content":"                + events.asUnmodifiableObservableList().size() + \" events\";","lastModifiedDate":"2021-10-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"leeroy999"},"content":"    public ObservableList\u003cMember\u003e getMemberList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":207,"author":{"gitId":"leeroy999"},"content":"        return members.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":210,"author":{"gitId":"Samuel-bit-prog"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":211,"author":{"gitId":"Samuel-bit-prog"},"content":"    public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2021-10-11"},{"lineNumber":212,"author":{"gitId":"Samuel-bit-prog"},"content":"        return events.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":219,"author":{"gitId":"Samuel-bit-prog"},"content":"                \u0026\u0026 members.equals(((AddressBook) other).members)","lastModifiedDate":"2021-10-11"},{"lineNumber":220,"author":{"gitId":"Samuel-bit-prog"},"content":"                \u0026\u0026 events.equals(((AddressBook) other).events));","lastModifiedDate":"2021-10-11"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":225,"author":{"gitId":"Samuel-bit-prog"},"content":"        return Objects.hash(members, events);","lastModifiedDate":"2021-10-11"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":105,"Samuel-bit-prog":70,"leeroy999":52}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"Samuel-bit-prog"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.event.Event;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.task.Task;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"LiuZhi1an"},"content":"    Predicate\u003cMember\u003e PREDICATE_SHOW_ALL_MEMBERS \u003d unused -\u003e true;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"Samuel-bit-prog"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"Samuel-bit-prog"},"content":"    Predicate\u003cEvent\u003e PREDICATE_SHOW_ALL_EVENTS \u003d unused -\u003e true;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"LiuZhi1an"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"LiuZhi1an"},"content":"    Predicate\u003cTask\u003e PREDICATE_SHOW_ALL_TASKS \u003d unused -\u003e true;","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"Samuel-bit-prog"},"content":"    /** {@code Predicate} that evaluate if task is done */","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"Samuel-bit-prog"},"content":"    Predicate\u003cTask\u003e PREDICATE_SHOW_ALL_COMPLETED_TASKS \u003d Task::isDone;","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"Samuel-bit-prog"},"content":"    /** {@code Predicate} that evaluate if task is not done */","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"Samuel-bit-prog"},"content":"    Predicate\u003cTask\u003e PREDICATE_SHOW_ALL_DUE_TASKS \u003d task -\u003e !task.isDone();","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"Samuel-bit-prog"},"content":"    /** {@code Predicate} that evaluate if task is overdue */","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"Samuel-bit-prog"},"content":"    Predicate\u003cTask\u003e PREDICATE_SHOW_ALL_OVERDUE_TASKS \u003d task -\u003e !task.isDone()","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"Samuel-bit-prog"},"content":"            \u0026\u0026 task.getTaskDeadlineDate().isBefore(LocalDateTime.now());","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"tsiyuk"},"content":"    /** Returns the user prefs\u0027 address book file path. */","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"tsiyuk"},"content":"     * Returns the AddressBook","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"tsiyuk"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"leeroy999"},"content":"     * Returns true if a member with the same identity as {@code member} exists in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"leeroy999"},"content":"    boolean hasMember(Member member);","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"Samuel-bit-prog"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Returns true if an event with the same identity as {@code event} exists in the address book.","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"Samuel-bit-prog"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"Samuel-bit-prog"},"content":"    boolean hasEvent(Event event);","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"leeroy999"},"content":"     * Deletes the given member.","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"leeroy999"},"content":"     * The member must exist in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"leeroy999"},"content":"    void deleteMember(Member target);","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Deletes the given event.","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"Samuel-bit-prog"},"content":"     * The event must exist in the address book.","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"Samuel-bit-prog"},"content":"    void deleteEvent(Event target);","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"leeroy999"},"content":"     * Adds the given member.","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"leeroy999"},"content":"     * {@code member} must not already exist in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"leeroy999"},"content":"    void addMember(Member member);","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Adds the given event.","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"Samuel-bit-prog"},"content":"     * {@code event} must not already exist in the address book.","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"Samuel-bit-prog"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"Samuel-bit-prog"},"content":"    void addEvent(Event event);","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"leeroy999"},"content":"     * Adds members to the given event.","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"leeroy999"},"content":"     * {@code event} must already exist in the address book.","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"leeroy999"},"content":"    void addEventMembers(Event event, Set\u003cMember\u003e memberSet);","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"leeroy999"},"content":"     * Replaces the given member {@code target} with {@code editedMember}.","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":120,"author":{"gitId":"leeroy999"},"content":"     * The member identity of {@code editedMember} must not be the same as another existing member in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":122,"author":{"gitId":"leeroy999"},"content":"    void setMember(Member target, Member editedMember);","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":124,"author":{"gitId":"Samuel-bit-prog"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Replaces the given event {@code target} with {@code editedEvent}.","lastModifiedDate":"2021-10-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"Samuel-bit-prog"},"content":"     * The event identity of {@code editedEvent} must not be the same as another existing event in the address book.","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"Samuel-bit-prog"},"content":"    void setEvent(Event target, Event editedEvent);","lastModifiedDate":"2021-10-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":131,"author":{"gitId":"leeroy999"},"content":"    /** Returns an unmodifiable view of the filtered member list */","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"leeroy999"},"content":"    ObservableList\u003cMember\u003e getFilteredMemberList();","lastModifiedDate":"2021-10-07"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":134,"author":{"gitId":"Samuel-bit-prog"},"content":"    /** Returns an unmodifiable view of the filtered event list */","lastModifiedDate":"2021-10-11"},{"lineNumber":135,"author":{"gitId":"Samuel-bit-prog"},"content":"    ObservableList\u003cEvent\u003e getFilteredEventList();","lastModifiedDate":"2021-10-11"},{"lineNumber":136,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":138,"author":{"gitId":"leeroy999"},"content":"     * Updates the filter of the filtered member list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":141,"author":{"gitId":"leeroy999"},"content":"    void updateFilteredMemberList(Predicate\u003cMember\u003e predicate);","lastModifiedDate":"2021-10-07"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":144,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Updates the filter of the filtered event list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-10-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":147,"author":{"gitId":"Samuel-bit-prog"},"content":"    void updateFilteredEventList(Predicate\u003cEvent\u003e predicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":148,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":149,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":150,"author":{"gitId":"tsiyuk"},"content":"     * Load the given {@code Member} object\u0027s task list.","lastModifiedDate":"2021-10-09"},{"lineNumber":151,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":152,"author":{"gitId":"tsiyuk"},"content":"    void loadTaskList(Member member);","lastModifiedDate":"2021-10-09"},{"lineNumber":153,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":154,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":155,"author":{"gitId":"tsiyuk"},"content":"     * Returns ture if a given {@code task} with the same identity as task","lastModifiedDate":"2021-10-09"},{"lineNumber":156,"author":{"gitId":"tsiyuk"},"content":"     * exist in the task list of the given {@code member}.","lastModifiedDate":"2021-10-09"},{"lineNumber":157,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":158,"author":{"gitId":"LiuZhi1an"},"content":"    boolean hasTask(Member member, Task task);","lastModifiedDate":"2021-10-11"},{"lineNumber":159,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":160,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":161,"author":{"gitId":"tsiyuk"},"content":"     * Adds the given {@code task} to the given {@code member}\u0027s task list.","lastModifiedDate":"2021-10-09"},{"lineNumber":162,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":163,"author":{"gitId":"tsiyuk"},"content":"    void addTask(Member member, Task task);","lastModifiedDate":"2021-10-09"},{"lineNumber":164,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":165,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":166,"author":{"gitId":"tsiyuk"},"content":"     * Deletes the given {@code task} from the given {@code member}\u0027s task list.","lastModifiedDate":"2021-10-09"},{"lineNumber":167,"author":{"gitId":"tsiyuk"},"content":"     * The task must exist in the member\u0027s task list.","lastModifiedDate":"2021-10-09"},{"lineNumber":168,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":169,"author":{"gitId":"tsiyuk"},"content":"    void deleteTask(Member member, Task task);","lastModifiedDate":"2021-10-09"},{"lineNumber":170,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":171,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":172,"author":{"gitId":"tsiyuk"},"content":"     * Deletes the task specified by {@code index} from the given {@code member}\u0027s task list.","lastModifiedDate":"2021-10-10"},{"lineNumber":173,"author":{"gitId":"tsiyuk"},"content":"     * The task must exist in the member\u0027s task list.","lastModifiedDate":"2021-10-10"},{"lineNumber":174,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":175,"author":{"gitId":"tsiyuk"},"content":"    void deleteTask(Member member, int index);","lastModifiedDate":"2021-10-10"},{"lineNumber":176,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":177,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":178,"author":{"gitId":"tsiyuk"},"content":"     * Replaces the given task {@code target} with {@code editedTask} in the given {@code member}\u0027s task list.","lastModifiedDate":"2021-10-09"},{"lineNumber":179,"author":{"gitId":"tsiyuk"},"content":"     * {@code target} must exist in the task list.","lastModifiedDate":"2021-10-09"},{"lineNumber":180,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":181,"author":{"gitId":"tsiyuk"},"content":"    void setTask(Task target, Task editedTask);","lastModifiedDate":"2021-10-25"},{"lineNumber":182,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":183,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":184,"author":{"gitId":"tsiyuk"},"content":"     * Replaces the task specified by {@code index} with {@code editedTask} in the given {@code member}\u0027s task list.","lastModifiedDate":"2021-10-10"},{"lineNumber":185,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":186,"author":{"gitId":"tsiyuk"},"content":"    void setTask(int index, Task editedTask);","lastModifiedDate":"2021-10-25"},{"lineNumber":187,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":188,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":189,"author":{"gitId":"tsiyuk"},"content":"     * Returns an unmodifiable view of the filtered task list of the given {@code member}.","lastModifiedDate":"2021-10-09"},{"lineNumber":190,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":191,"author":{"gitId":"tsiyuk"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList(Member member);","lastModifiedDate":"2021-10-09"},{"lineNumber":192,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":193,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":194,"author":{"gitId":"tsiyuk"},"content":"     * Returns an unmodifiable view of the filtered task list of the previously selected member.","lastModifiedDate":"2021-10-24"},{"lineNumber":195,"author":{"gitId":"tsiyuk"},"content":"     * If no member has been selected before, return an empty list.","lastModifiedDate":"2021-10-24"},{"lineNumber":196,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":197,"author":{"gitId":"tsiyuk"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2021-10-24"},{"lineNumber":198,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":199,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":200,"author":{"gitId":"tsiyuk"},"content":"     * Updates the filter of the filtered task list of the given {@code member}","lastModifiedDate":"2021-10-09"},{"lineNumber":201,"author":{"gitId":"tsiyuk"},"content":"     * to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-09"},{"lineNumber":202,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":203,"author":{"gitId":"tsiyuk"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-10-09"},{"lineNumber":204,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":205,"author":{"gitId":"tsiyuk"},"content":"    void updateFilteredTaskList(Member member, Predicate\u003cTask\u003e predicate);","lastModifiedDate":"2021-10-09"},{"lineNumber":206,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":207,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":208,"author":{"gitId":"tsiyuk"},"content":"     * Updates the filter of the filtered task list of the current selected member","lastModifiedDate":"2021-10-27"},{"lineNumber":209,"author":{"gitId":"tsiyuk"},"content":"     * to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-27"},{"lineNumber":210,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":211,"author":{"gitId":"tsiyuk"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-10-27"},{"lineNumber":212,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":213,"author":{"gitId":"tsiyuk"},"content":"    void updateFilteredTaskList(Predicate\u003cTask\u003e predicate);","lastModifiedDate":"2021-10-25"},{"lineNumber":214,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":215,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":216,"author":{"gitId":"tsiyuk"},"content":"     * Returns the currently selected member.","lastModifiedDate":"2021-10-28"},{"lineNumber":217,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":218,"author":{"gitId":"tsiyuk"},"content":"    Optional\u003cMember\u003e getCurrentMember();","lastModifiedDate":"2021-10-27"},{"lineNumber":219,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":220,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":221,"author":{"gitId":"tsiyuk"},"content":"     * Sets the currently selected event.","lastModifiedDate":"2021-10-28"},{"lineNumber":222,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":223,"author":{"gitId":"tsiyuk"},"content":"    void setCurrentEvent(Event currentEvent);","lastModifiedDate":"2021-10-28"},{"lineNumber":224,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":225,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":226,"author":{"gitId":"tsiyuk"},"content":"     * Returns the currently selected event.","lastModifiedDate":"2021-10-28"},{"lineNumber":227,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":228,"author":{"gitId":"tsiyuk"},"content":"    Optional\u003cEvent\u003e getCurrentEvent();","lastModifiedDate":"2021-10-28"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"LiuZhi1an":5,"-":80,"tsiyuk":83,"Samuel-bit-prog":39,"leeroy999":22}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":16,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.event.Event;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.task.Task;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.task.TaskList;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"    private final FilteredList\u003cMember\u003e filteredMembers;","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"Samuel-bit-prog"},"content":"    private final FilteredList\u003cEvent\u003e filteredEvents;","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"    private TaskList taskListManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"    private FilteredList\u003cTask\u003e filteredTasks;","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"    // The current selected member","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"    private Member currentMember;","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"    // The current selected event","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"    private Event currentEvent;","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"leeroy999"},"content":"        filteredMembers \u003d new FilteredList\u003c\u003e(this.addressBook.getMemberList());","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"Samuel-bit-prog"},"content":"        filteredEvents \u003d new FilteredList\u003c\u003e(this.addressBook.getEventList());","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"tsiyuk"},"content":"        this.taskListManager \u003d new TaskList();","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"tsiyuk"},"content":"        filteredTasks \u003d new FilteredList\u003c\u003e(this.taskListManager.asUnmodifiableObservableList());","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":108,"author":{"gitId":"leeroy999"},"content":"    public boolean hasMember(Member member) {","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"leeroy999"},"content":"        requireNonNull(member);","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"leeroy999"},"content":"        return addressBook.hasMember(member);","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":113,"author":{"gitId":"Samuel-bit-prog"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"Samuel-bit-prog"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"Samuel-bit-prog"},"content":"        requireNonNull(event);","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"Samuel-bit-prog"},"content":"        return addressBook.hasEvent(event);","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":120,"author":{"gitId":"leeroy999"},"content":"    public void deleteMember(Member target) {","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"leeroy999"},"content":"        addressBook.removeMember(target);","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"tsiyuk"},"content":"        // If the deleted member is the currently selected member","lastModifiedDate":"2021-10-28"},{"lineNumber":124,"author":{"gitId":"tsiyuk"},"content":"        if (getCurrentMember().isPresent() \u0026\u0026 target.isSameType(getCurrentMember().get())) {","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"tsiyuk"},"content":"            currentMember \u003d null;","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"tsiyuk"},"content":"            this.taskListManager \u003d new TaskList();","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"tsiyuk"},"content":"            filteredTasks \u003d new FilteredList\u003c\u003e(this.taskListManager.asUnmodifiableObservableList());","lastModifiedDate":"2021-10-27"},{"lineNumber":128,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":132,"author":{"gitId":"Samuel-bit-prog"},"content":"    public void deleteEvent(Event target) {","lastModifiedDate":"2021-10-11"},{"lineNumber":133,"author":{"gitId":"Samuel-bit-prog"},"content":"        addressBook.removeEvent(target);","lastModifiedDate":"2021-10-11"},{"lineNumber":134,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":135,"author":{"gitId":"GWphua"},"content":"        if (getCurrentEvent().isPresent() \u0026\u0026 target.isSameType(getCurrentEvent().get())) {","lastModifiedDate":"2021-10-28"},{"lineNumber":136,"author":{"gitId":"GWphua"},"content":"            currentEvent \u003d null;","lastModifiedDate":"2021-10-28"},{"lineNumber":137,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":141,"author":{"gitId":"leeroy999"},"content":"    public void addMember(Member member) {","lastModifiedDate":"2021-10-07"},{"lineNumber":142,"author":{"gitId":"leeroy999"},"content":"        addressBook.addMember(member);","lastModifiedDate":"2021-10-07"},{"lineNumber":143,"author":{"gitId":"LiuZhi1an"},"content":"        updateFilteredMemberList(PREDICATE_SHOW_ALL_MEMBERS);","lastModifiedDate":"2021-10-07"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":147,"author":{"gitId":"Samuel-bit-prog"},"content":"    public void addEvent(Event event) {","lastModifiedDate":"2021-10-11"},{"lineNumber":148,"author":{"gitId":"Samuel-bit-prog"},"content":"        addressBook.addEvent(event);","lastModifiedDate":"2021-10-11"},{"lineNumber":149,"author":{"gitId":"Samuel-bit-prog"},"content":"        updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":150,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":152,"author":{"gitId":"leeroy999"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"leeroy999"},"content":"    public void addEventMembers(Event event, Set\u003cMember\u003e memberSet) {","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"leeroy999"},"content":"        addressBook.addEventMembers(event, memberSet);","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"leeroy999"},"content":"        updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":159,"author":{"gitId":"leeroy999"},"content":"    public void setMember(Member target, Member editedMember) {","lastModifiedDate":"2021-10-07"},{"lineNumber":160,"author":{"gitId":"leeroy999"},"content":"        requireAllNonNull(target, editedMember);","lastModifiedDate":"2021-10-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":162,"author":{"gitId":"leeroy999"},"content":"        addressBook.setMember(target, editedMember);","lastModifiedDate":"2021-10-07"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":165,"author":{"gitId":"Samuel-bit-prog"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":166,"author":{"gitId":"Samuel-bit-prog"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2021-10-11"},{"lineNumber":167,"author":{"gitId":"Samuel-bit-prog"},"content":"        requireAllNonNull(target, editedEvent);","lastModifiedDate":"2021-10-11"},{"lineNumber":168,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":169,"author":{"gitId":"Samuel-bit-prog"},"content":"        addressBook.setEvent(target, editedEvent);","lastModifiedDate":"2021-10-11"},{"lineNumber":170,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":171,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":172,"author":{"gitId":"Samuel-bit-prog"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Member and Event Lists Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":175,"author":{"gitId":"leeroy999"},"content":"     * Returns an unmodifiable view of the list of {@code Member} backed by the internal list of","lastModifiedDate":"2021-10-07"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":179,"author":{"gitId":"leeroy999"},"content":"    public ObservableList\u003cMember\u003e getFilteredMemberList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":180,"author":{"gitId":"leeroy999"},"content":"        return filteredMembers;","lastModifiedDate":"2021-10-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":184,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Returns an unmodifiable view of the list of {@code Event} backed by the internal list of","lastModifiedDate":"2021-10-11"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2021-10-11"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":188,"author":{"gitId":"Samuel-bit-prog"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2021-10-11"},{"lineNumber":189,"author":{"gitId":"Samuel-bit-prog"},"content":"        return filteredEvents;","lastModifiedDate":"2021-10-11"},{"lineNumber":190,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":191,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":193,"author":{"gitId":"leeroy999"},"content":"    public void updateFilteredMemberList(Predicate\u003cMember\u003e predicate) {","lastModifiedDate":"2021-10-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":195,"author":{"gitId":"leeroy999"},"content":"        filteredMembers.setPredicate(predicate);","lastModifiedDate":"2021-10-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":198,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":199,"author":{"gitId":"tsiyuk"},"content":"    public void updateFilteredEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2021-10-27"},{"lineNumber":200,"author":{"gitId":"tsiyuk"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":201,"author":{"gitId":"tsiyuk"},"content":"        filteredEvents.setPredicate(predicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":202,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":203,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":204,"author":{"gitId":"tsiyuk"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TaskListManager \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":205,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":206,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":207,"author":{"gitId":"tsiyuk"},"content":"     * Load the given {@code Member} object.","lastModifiedDate":"2021-10-09"},{"lineNumber":208,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":209,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":210,"author":{"gitId":"tsiyuk"},"content":"    public void loadTaskList(Member member) {","lastModifiedDate":"2021-10-09"},{"lineNumber":211,"author":{"gitId":"tsiyuk"},"content":"        requireNonNull(member);","lastModifiedDate":"2021-10-09"},{"lineNumber":212,"author":{"gitId":"tsiyuk"},"content":"        if (this.taskListManager !\u003d member.getTaskList()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":213,"author":{"gitId":"tsiyuk"},"content":"            this.taskListManager \u003d member.getTaskList();","lastModifiedDate":"2021-10-21"},{"lineNumber":214,"author":{"gitId":"tsiyuk"},"content":"            this.filteredTasks \u003d new FilteredList\u003c\u003e(this.taskListManager.asUnmodifiableObservableList());","lastModifiedDate":"2021-10-24"},{"lineNumber":215,"author":{"gitId":"tsiyuk"},"content":"            this.currentMember \u003d member;","lastModifiedDate":"2021-10-27"},{"lineNumber":216,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":217,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":218,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":219,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":220,"author":{"gitId":"LiuZhi1an"},"content":"     * Returns true if a given {@code task} with the same identity as task","lastModifiedDate":"2021-10-11"},{"lineNumber":221,"author":{"gitId":"tsiyuk"},"content":"     * exist in the task list of the given {@code member}.","lastModifiedDate":"2021-10-09"},{"lineNumber":222,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":223,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":224,"author":{"gitId":"LiuZhi1an"},"content":"    public boolean hasTask(Member member, Task task) {","lastModifiedDate":"2021-10-11"},{"lineNumber":225,"author":{"gitId":"tsiyuk"},"content":"        loadTaskList(member);","lastModifiedDate":"2021-10-09"},{"lineNumber":226,"author":{"gitId":"tsiyuk"},"content":"        requireNonNull(task);","lastModifiedDate":"2021-10-21"},{"lineNumber":227,"author":{"gitId":"tsiyuk"},"content":"        return taskListManager.contains(task);","lastModifiedDate":"2021-10-21"},{"lineNumber":228,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":229,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":230,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":231,"author":{"gitId":"tsiyuk"},"content":"     * Adds the given {@code task} to the given {@code member}\u0027s task list.","lastModifiedDate":"2021-10-09"},{"lineNumber":232,"author":{"gitId":"tsiyuk"},"content":"     * The tasks must not exist in the member\u0027s task list.","lastModifiedDate":"2021-10-09"},{"lineNumber":233,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":234,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":235,"author":{"gitId":"tsiyuk"},"content":"    public void addTask(Member member, Task task) {","lastModifiedDate":"2021-10-09"},{"lineNumber":236,"author":{"gitId":"tsiyuk"},"content":"        loadTaskList(member);","lastModifiedDate":"2021-10-09"},{"lineNumber":237,"author":{"gitId":"tsiyuk"},"content":"        taskListManager.add(task);","lastModifiedDate":"2021-10-21"},{"lineNumber":238,"author":{"gitId":"tsiyuk"},"content":"        updateFilteredTaskList(member, PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-10-24"},{"lineNumber":239,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":240,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":241,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":242,"author":{"gitId":"tsiyuk"},"content":"     * Deletes the given {@code task} from the given {@code member}\u0027s task list.","lastModifiedDate":"2021-10-09"},{"lineNumber":243,"author":{"gitId":"tsiyuk"},"content":"     * The task must exist in the member\u0027s task list.","lastModifiedDate":"2021-10-09"},{"lineNumber":244,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":245,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":246,"author":{"gitId":"tsiyuk"},"content":"    public void deleteTask(Member member, Task task) {","lastModifiedDate":"2021-10-09"},{"lineNumber":247,"author":{"gitId":"tsiyuk"},"content":"        loadTaskList(member);","lastModifiedDate":"2021-10-09"},{"lineNumber":248,"author":{"gitId":"tsiyuk"},"content":"        taskListManager.remove(task);","lastModifiedDate":"2021-10-21"},{"lineNumber":249,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":250,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":251,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":252,"author":{"gitId":"tsiyuk"},"content":"     * Deletes the task specified by {@code index} from the given {@code member}\u0027s task list.","lastModifiedDate":"2021-10-10"},{"lineNumber":253,"author":{"gitId":"tsiyuk"},"content":"     * The task must exist in the member\u0027s task list.","lastModifiedDate":"2021-10-10"},{"lineNumber":254,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":255,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":256,"author":{"gitId":"tsiyuk"},"content":"    public void deleteTask(Member member, int index) {","lastModifiedDate":"2021-10-10"},{"lineNumber":257,"author":{"gitId":"tsiyuk"},"content":"        loadTaskList(member);","lastModifiedDate":"2021-10-10"},{"lineNumber":258,"author":{"gitId":"tsiyuk"},"content":"        taskListManager.remove(index);","lastModifiedDate":"2021-10-21"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":261,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":262,"author":{"gitId":"tsiyuk"},"content":"     * Replaces the given task {@code target} with {@code editedTask} in the given {@code member}\u0027s task list.","lastModifiedDate":"2021-10-09"},{"lineNumber":263,"author":{"gitId":"tsiyuk"},"content":"     * {@code target} must exist in the task list.","lastModifiedDate":"2021-10-09"},{"lineNumber":264,"author":{"gitId":"tsiyuk"},"content":"     * The member identity of {@code editedTask} must not be the same as another existing task in the task list.","lastModifiedDate":"2021-10-09"},{"lineNumber":265,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":267,"author":{"gitId":"tsiyuk"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2021-10-25"},{"lineNumber":268,"author":{"gitId":"tsiyuk"},"content":"        taskListManager.setTask(target, editedTask);","lastModifiedDate":"2021-10-09"},{"lineNumber":269,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":270,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":271,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":272,"author":{"gitId":"tsiyuk"},"content":"     * Replaces the task specified by {@code index} with {@code editedTask} in the given {@code member}\u0027s task list.","lastModifiedDate":"2021-10-10"},{"lineNumber":273,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":274,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":275,"author":{"gitId":"tsiyuk"},"content":"    public void setTask(int index, Task editedTask) {","lastModifiedDate":"2021-10-25"},{"lineNumber":276,"author":{"gitId":"tsiyuk"},"content":"        taskListManager.setTask(index, editedTask);","lastModifiedDate":"2021-10-10"},{"lineNumber":277,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":278,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":279,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":280,"author":{"gitId":"tsiyuk"},"content":"     * Returns an unmodifiable view of the filtered task list of the given {@code member}.","lastModifiedDate":"2021-10-09"},{"lineNumber":281,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":282,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":283,"author":{"gitId":"tsiyuk"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList(Member member) {","lastModifiedDate":"2021-10-09"},{"lineNumber":284,"author":{"gitId":"tsiyuk"},"content":"        loadTaskList(member);","lastModifiedDate":"2021-10-09"},{"lineNumber":285,"author":{"gitId":"tsiyuk"},"content":"        return filteredTasks;","lastModifiedDate":"2021-10-27"},{"lineNumber":286,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":287,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":288,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":289,"author":{"gitId":"tsiyuk"},"content":"     * Returns an unmodifiable view of the filtered task list of the previously selected member.","lastModifiedDate":"2021-10-24"},{"lineNumber":290,"author":{"gitId":"tsiyuk"},"content":"     * If no member has been selected before, return an empty list.","lastModifiedDate":"2021-10-24"},{"lineNumber":291,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":292,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":293,"author":{"gitId":"tsiyuk"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2021-10-24"},{"lineNumber":294,"author":{"gitId":"tsiyuk"},"content":"        return filteredTasks;","lastModifiedDate":"2021-10-27"},{"lineNumber":295,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":296,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":297,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":298,"author":{"gitId":"tsiyuk"},"content":"     * Updates the filter of the filtered task list of the given {@code member}","lastModifiedDate":"2021-10-09"},{"lineNumber":299,"author":{"gitId":"tsiyuk"},"content":"     * to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-09"},{"lineNumber":300,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":301,"author":{"gitId":"tsiyuk"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-10-09"},{"lineNumber":302,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":303,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":304,"author":{"gitId":"tsiyuk"},"content":"    public void updateFilteredTaskList(Member member, Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-10-09"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-28"},{"lineNumber":306,"author":{"gitId":"tsiyuk"},"content":"        loadTaskList(member);","lastModifiedDate":"2021-10-09"},{"lineNumber":307,"author":{"gitId":"tsiyuk"},"content":"        filteredTasks.setPredicate(predicate);","lastModifiedDate":"2021-10-09"},{"lineNumber":308,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":309,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":310,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":311,"author":{"gitId":"tsiyuk"},"content":"     * Updates the filter of the filtered task list of the current selected member","lastModifiedDate":"2021-10-27"},{"lineNumber":312,"author":{"gitId":"tsiyuk"},"content":"     * to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-27"},{"lineNumber":313,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":314,"author":{"gitId":"tsiyuk"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-10-27"},{"lineNumber":315,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":316,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":317,"author":{"gitId":"tsiyuk"},"content":"    public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-10-25"},{"lineNumber":318,"author":{"gitId":"tsiyuk"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":319,"author":{"gitId":"tsiyuk"},"content":"        filteredTasks.setPredicate(predicate);","lastModifiedDate":"2021-10-25"},{"lineNumber":320,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":321,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":322,"author":{"gitId":"tsiyuk"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d CurrentMember \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":323,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":324,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":325,"author":{"gitId":"tsiyuk"},"content":"     * Returns the current selected member.","lastModifiedDate":"2021-10-27"},{"lineNumber":326,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":327,"author":{"gitId":"Samuel-bit-prog"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":328,"author":{"gitId":"tsiyuk"},"content":"    public Optional\u003cMember\u003e getCurrentMember() {","lastModifiedDate":"2021-10-27"},{"lineNumber":329,"author":{"gitId":"tsiyuk"},"content":"        return Optional.ofNullable(currentMember);","lastModifiedDate":"2021-10-27"},{"lineNumber":330,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":331,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":332,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":333,"author":{"gitId":"tsiyuk"},"content":"     * Sets the currently selected event.","lastModifiedDate":"2021-10-28"},{"lineNumber":334,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":335,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":336,"author":{"gitId":"tsiyuk"},"content":"    public void setCurrentEvent(Event currentEvent) {","lastModifiedDate":"2021-10-28"},{"lineNumber":337,"author":{"gitId":"tsiyuk"},"content":"        this.currentEvent \u003d currentEvent;","lastModifiedDate":"2021-10-28"},{"lineNumber":338,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":339,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":340,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":341,"author":{"gitId":"tsiyuk"},"content":"     * Returns the currently selected event.","lastModifiedDate":"2021-10-28"},{"lineNumber":342,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":343,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":344,"author":{"gitId":"tsiyuk"},"content":"    public Optional\u003cEvent\u003e getCurrentEvent() {","lastModifiedDate":"2021-10-28"},{"lineNumber":345,"author":{"gitId":"tsiyuk"},"content":"        return Optional.ofNullable(currentEvent);","lastModifiedDate":"2021-10-28"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":352,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":355,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":356,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":357,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":360,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":361,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":363,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":364,"author":{"gitId":"Samuel-bit-prog"},"content":"                \u0026\u0026 filteredMembers.equals(other.filteredMembers)","lastModifiedDate":"2021-10-11"},{"lineNumber":365,"author":{"gitId":"tsiyuk"},"content":"                \u0026\u0026 filteredEvents.equals(other.filteredEvents)","lastModifiedDate":"2021-10-27"},{"lineNumber":366,"author":{"gitId":"tsiyuk"},"content":"                \u0026\u0026 filteredTasks.equals(other.filteredTasks)","lastModifiedDate":"2021-10-27"},{"lineNumber":367,"author":{"gitId":"tsiyuk"},"content":"                \u0026\u0026 getCurrentMember().equals(other.getCurrentMember())","lastModifiedDate":"2021-10-28"},{"lineNumber":368,"author":{"gitId":"tsiyuk"},"content":"                \u0026\u0026 getCurrentEvent().equals(other.getCurrentEvent());","lastModifiedDate":"2021-10-28"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":371,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"GWphua":4,"LiuZhi1an":3,"-":148,"tsiyuk":159,"leeroy999":22,"Samuel-bit-prog":35}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.event.Event;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"     * Returns an unmodifiable view of the members list.","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"     * This list will not contain any duplicate members.","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"Samuel-bit-prog"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @return Observable list of members","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"    ObservableList\u003cMember\u003e getMemberList();","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"Samuel-bit-prog"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Returns an unmodifiable view of the events list.","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"Samuel-bit-prog"},"content":"     * This list will not contain any duplicate events.","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"Samuel-bit-prog"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @return Observable list of events","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"Samuel-bit-prog"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"Samuel-bit-prog"},"content":"    ObservableList\u003cEvent\u003e getEventList();","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":14,"Samuel-bit-prog":11,"leeroy999":3}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"GWphua"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"ailurus.json\");","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"GWphua":1,"-":86}},{"path":"src/main/java/seedu/address/model/module/Module.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Samuel-bit-prog"},"content":"package seedu.address.model.module;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Samuel-bit-prog"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Samuel-bit-prog"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":" * Abstract class which Event and Member inherits from.","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"Samuel-bit-prog"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Samuel-bit-prog"},"content":"public abstract class Module {","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"Samuel-bit-prog"},"content":"    private final Name name;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Samuel-bit-prog"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Constructor for data to store name.","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Samuel-bit-prog"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @param name to be stored as field","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Samuel-bit-prog"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Samuel-bit-prog"},"content":"    public Module(Name name) {","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"Samuel-bit-prog"},"content":"        requireAllNonNull(name);","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Samuel-bit-prog"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Samuel-bit-prog"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Retrieve the name of the data.","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Samuel-bit-prog"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @return name of the data","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Samuel-bit-prog"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"Samuel-bit-prog"},"content":"    public Name getName() {","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Samuel-bit-prog"},"content":"        return name;","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Samuel-bit-prog"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Checks if two data are of the same type.","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Samuel-bit-prog"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @param module to be compared to","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @return boolean representing if they are equal","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Samuel-bit-prog"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Samuel-bit-prog"},"content":"    public abstract boolean isSameType(Module module);","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"Samuel-bit-prog"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Samuel-bit-prog":36,"leeroy999":1}},{"path":"src/main/java/seedu/address/model/module/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Samuel-bit-prog"},"content":"package seedu.address.model.module;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Samuel-bit-prog"},"content":" * Represents a Data\u0027s name in the Ailurus.","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":56,"Samuel-bit-prog":2}},{"path":"src/main/java/seedu/address/model/module/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Samuel-bit-prog"},"content":"package seedu.address.model.module;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"Samuel-bit-prog"},"content":" * Tests that a {@code Module}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"Samuel-bit-prog"},"content":"public class NameContainsKeywordsPredicate\u003cT extends Module\u003e implements Predicate\u003cT\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"Samuel-bit-prog"},"content":"    public boolean test(T module) {","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"Samuel-bit-prog"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(module.getName().fullName, keyword));","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"Samuel-bit-prog"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate\u003c?\u003e) other).keywords)); // state check","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":24,"Samuel-bit-prog":6}},{"path":"src/main/java/seedu/address/model/module/event/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Samuel-bit-prog"},"content":"package seedu.address.model.module.event;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"Samuel-bit-prog"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Samuel-bit-prog"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"Samuel-bit-prog"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"Samuel-bit-prog"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"Samuel-bit-prog"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"Samuel-bit-prog"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"Samuel-bit-prog"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.Name;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"Samuel-bit-prog"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"Samuel-bit-prog"},"content":" * Represents an Event in the Ailurus.","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Samuel-bit-prog"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"Samuel-bit-prog"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"Samuel-bit-prog"},"content":"public class Event extends Module {","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"Samuel-bit-prog"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Identity fields","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"Samuel-bit-prog"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"    private final EventDate date;","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"Samuel-bit-prog"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Data field is a hashmap of members and booleans that represent their attendance.","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"Samuel-bit-prog"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"    private final Map\u003cMember, Boolean\u003e participants \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"Samuel-bit-prog"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"     * Creates a {@code Event} with the given {@code EventName} for name and {@code EventDate}","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Samuel-bit-prog"},"content":"     * for participants.","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"Samuel-bit-prog"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"Samuel-bit-prog"},"content":"    public Event(Name name, EventDate date) {","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Samuel-bit-prog"},"content":"        super(name);","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"Samuel-bit-prog"},"content":"        requireAllNonNull(date);","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"leeroy999"},"content":"     * Creates a {@code Event} with the given {@code EventName} for name, {@code EventDate} and {@code Set\u003cMember\u003e}","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"     * for participants.","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"leeroy999"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"Samuel-bit-prog"},"content":"    public Event(Name name, EventDate date, Set\u003cMember\u003e participants) {","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"Samuel-bit-prog"},"content":"        super(name);","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"Samuel-bit-prog"},"content":"        requireAllNonNull(date);","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"Samuel-bit-prog"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"Samuel-bit-prog"},"content":"        for (Member m : participants) {","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"Samuel-bit-prog"},"content":"            this.participants.put(m, false);","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"Samuel-bit-prog"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"Samuel-bit-prog"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"leeroy999"},"content":"     * Creates a {@code Event} with the given {@code EventName} for name, {@code EventDate} and","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Samuel-bit-prog"},"content":"     * {@code Map\u003cMember, Boolean\u003e} for participants.","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"Samuel-bit-prog"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"Samuel-bit-prog"},"content":"    public Event(Name name, EventDate date, Map\u003cMember, Boolean\u003e participants) {","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"Samuel-bit-prog"},"content":"        super(name);","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"Samuel-bit-prog"},"content":"        requireAllNonNull(date);","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"Samuel-bit-prog"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"leeroy999"},"content":"        this.participants.putAll(participants);","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"leeroy999"},"content":"    public EventDate getDate() {","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"Samuel-bit-prog"},"content":"        return date;","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"Samuel-bit-prog"},"content":"    public Map\u003cMember, Boolean\u003e getMap() {","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"Samuel-bit-prog"},"content":"        return participants;","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"Samuel-bit-prog"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Get the participants of the event.","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"Samuel-bit-prog"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @return an immutable set of participants, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"Samuel-bit-prog"},"content":"     * if modification is attempted","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"Samuel-bit-prog"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"Samuel-bit-prog"},"content":"    public Set\u003cMember\u003e getParticipants() {","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"Samuel-bit-prog"},"content":"        return Collections.unmodifiableSet(participants.keySet());","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"Samuel-bit-prog"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"leeroy999"},"content":"     * Get the participants who attended or did not attend the event.","lastModifiedDate":"2021-10-31"},{"lineNumber":88,"author":{"gitId":"Samuel-bit-prog"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":89,"author":{"gitId":"leeroy999"},"content":"     * @param attended whether participants attended or not attended","lastModifiedDate":"2021-10-31"},{"lineNumber":90,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @return an immutable set of participants, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-28"},{"lineNumber":91,"author":{"gitId":"Samuel-bit-prog"},"content":"     * if modification is attempted","lastModifiedDate":"2021-10-28"},{"lineNumber":92,"author":{"gitId":"Samuel-bit-prog"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":93,"author":{"gitId":"leeroy999"},"content":"    public Set\u003cMember\u003e getParticipants(Boolean attended) {","lastModifiedDate":"2021-10-31"},{"lineNumber":94,"author":{"gitId":"leeroy999"},"content":"        if (attended \u003d\u003d null) {","lastModifiedDate":"2021-10-31"},{"lineNumber":95,"author":{"gitId":"leeroy999"},"content":"            return getParticipants();","lastModifiedDate":"2021-10-31"},{"lineNumber":96,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":97,"author":{"gitId":"Samuel-bit-prog"},"content":"        Set\u003cMember\u003e attendees \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-28"},{"lineNumber":98,"author":{"gitId":"Samuel-bit-prog"},"content":"        for (Member m : participants.keySet()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":99,"author":{"gitId":"leeroy999"},"content":"            if (this.hasAttended(m) \u003d\u003d attended) {","lastModifiedDate":"2021-10-31"},{"lineNumber":100,"author":{"gitId":"Samuel-bit-prog"},"content":"                attendees.add(m);","lastModifiedDate":"2021-10-28"},{"lineNumber":101,"author":{"gitId":"Samuel-bit-prog"},"content":"            }","lastModifiedDate":"2021-10-28"},{"lineNumber":102,"author":{"gitId":"Samuel-bit-prog"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":103,"author":{"gitId":"Samuel-bit-prog"},"content":"        return Collections.unmodifiableSet(attendees);","lastModifiedDate":"2021-10-28"},{"lineNumber":104,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":105,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":106,"author":{"gitId":"Samuel-bit-prog"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Removes a set of members from the event.","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"Samuel-bit-prog"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":109,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @param members to be removed","lastModifiedDate":"2021-10-09"},{"lineNumber":110,"author":{"gitId":"Samuel-bit-prog"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":111,"author":{"gitId":"Samuel-bit-prog"},"content":"    public void removeParticipants(Set\u003cMember\u003e members) {","lastModifiedDate":"2021-10-09"},{"lineNumber":112,"author":{"gitId":"Samuel-bit-prog"},"content":"        for (Member m : members) {","lastModifiedDate":"2021-10-09"},{"lineNumber":113,"author":{"gitId":"Samuel-bit-prog"},"content":"            participants.remove(m);","lastModifiedDate":"2021-10-09"},{"lineNumber":114,"author":{"gitId":"Samuel-bit-prog"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":115,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":116,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":117,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"leeroy999"},"content":"     * Removes a member from the event.","lastModifiedDate":"2021-10-13"},{"lineNumber":119,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"leeroy999"},"content":"     * @param member to be removed","lastModifiedDate":"2021-10-13"},{"lineNumber":121,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"leeroy999"},"content":"    public void removeParticipant(Member member) {","lastModifiedDate":"2021-10-13"},{"lineNumber":123,"author":{"gitId":"leeroy999"},"content":"        participants.remove(member);","lastModifiedDate":"2021-10-13"},{"lineNumber":124,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":125,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":127,"author":{"gitId":"leeroy999"},"content":"     * Add a set of members to the event.","lastModifiedDate":"2021-10-13"},{"lineNumber":128,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"leeroy999"},"content":"     * @param members to be added","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"leeroy999"},"content":"    public void addParticipants(Set\u003cMember\u003e members) {","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"leeroy999"},"content":"        for (Member m : members) {","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"leeroy999"},"content":"            participants.put(m, false);","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":138,"author":{"gitId":"leeroy999"},"content":"     * Add a member to the event.","lastModifiedDate":"2021-10-13"},{"lineNumber":139,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":140,"author":{"gitId":"leeroy999"},"content":"     * @param member to be added","lastModifiedDate":"2021-10-13"},{"lineNumber":141,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":142,"author":{"gitId":"leeroy999"},"content":"    public void addParticipant(Member member) {","lastModifiedDate":"2021-10-13"},{"lineNumber":143,"author":{"gitId":"leeroy999"},"content":"        participants.put(member, false);","lastModifiedDate":"2021-10-13"},{"lineNumber":144,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":145,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":146,"author":{"gitId":"Samuel-bit-prog"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":147,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Checks if a member is part of the event.","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"Samuel-bit-prog"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":149,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @param member to check","lastModifiedDate":"2021-10-09"},{"lineNumber":150,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @return boolean indicating if member is included","lastModifiedDate":"2021-10-09"},{"lineNumber":151,"author":{"gitId":"Samuel-bit-prog"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":152,"author":{"gitId":"Samuel-bit-prog"},"content":"    public boolean isParticipatingInEvent(Member member) {","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"Samuel-bit-prog"},"content":"        return participants.containsKey(member);","lastModifiedDate":"2021-10-09"},{"lineNumber":154,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":155,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":156,"author":{"gitId":"Samuel-bit-prog"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":157,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Checks if a member has attended in this event.","lastModifiedDate":"2021-10-10"},{"lineNumber":158,"author":{"gitId":"Samuel-bit-prog"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":159,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @param member to check","lastModifiedDate":"2021-10-09"},{"lineNumber":160,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @return boolean indicating whether the member has attended the event","lastModifiedDate":"2021-10-10"},{"lineNumber":161,"author":{"gitId":"Samuel-bit-prog"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":162,"author":{"gitId":"Samuel-bit-prog"},"content":"    public boolean hasAttended(Member member) {","lastModifiedDate":"2021-10-09"},{"lineNumber":163,"author":{"gitId":"Samuel-bit-prog"},"content":"        return participants.get(member);","lastModifiedDate":"2021-10-09"},{"lineNumber":164,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":165,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":166,"author":{"gitId":"Samuel-bit-prog"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":167,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Marks the attendance of the set of members.","lastModifiedDate":"2021-10-09"},{"lineNumber":168,"author":{"gitId":"Samuel-bit-prog"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":169,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @param members to be marked as present","lastModifiedDate":"2021-10-09"},{"lineNumber":170,"author":{"gitId":"Samuel-bit-prog"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":171,"author":{"gitId":"Samuel-bit-prog"},"content":"    public void markAttendance(Set\u003cMember\u003e members) {","lastModifiedDate":"2021-10-09"},{"lineNumber":172,"author":{"gitId":"Samuel-bit-prog"},"content":"        for (Member m : members) {","lastModifiedDate":"2021-10-09"},{"lineNumber":173,"author":{"gitId":"Samuel-bit-prog"},"content":"            participants.replace(m, true);","lastModifiedDate":"2021-10-09"},{"lineNumber":174,"author":{"gitId":"Samuel-bit-prog"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":175,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":176,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":177,"author":{"gitId":"Samuel-bit-prog"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":178,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Marks everyone as present for attendance.","lastModifiedDate":"2021-10-14"},{"lineNumber":179,"author":{"gitId":"Samuel-bit-prog"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":180,"author":{"gitId":"Samuel-bit-prog"},"content":"    public void markAttendanceForAll() {","lastModifiedDate":"2021-10-14"},{"lineNumber":181,"author":{"gitId":"Samuel-bit-prog"},"content":"        for (Member m : participants.keySet()) {","lastModifiedDate":"2021-10-14"},{"lineNumber":182,"author":{"gitId":"Samuel-bit-prog"},"content":"            participants.replace(m, true);","lastModifiedDate":"2021-10-14"},{"lineNumber":183,"author":{"gitId":"Samuel-bit-prog"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":184,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":185,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":186,"author":{"gitId":"Samuel-bit-prog"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":187,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Mark the absence of a set of members.","lastModifiedDate":"2021-10-09"},{"lineNumber":188,"author":{"gitId":"Samuel-bit-prog"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":189,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @param members to be marked as absent","lastModifiedDate":"2021-10-09"},{"lineNumber":190,"author":{"gitId":"Samuel-bit-prog"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":191,"author":{"gitId":"Samuel-bit-prog"},"content":"    public void markAbsent(Set\u003cMember\u003e members) {","lastModifiedDate":"2021-10-09"},{"lineNumber":192,"author":{"gitId":"Samuel-bit-prog"},"content":"        for (Member m : members) {","lastModifiedDate":"2021-10-09"},{"lineNumber":193,"author":{"gitId":"Samuel-bit-prog"},"content":"            participants.replace(m, false);","lastModifiedDate":"2021-10-09"},{"lineNumber":194,"author":{"gitId":"Samuel-bit-prog"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":195,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":196,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":197,"author":{"gitId":"Samuel-bit-prog"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":198,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Checks if two events are similar types.","lastModifiedDate":"2021-10-10"},{"lineNumber":199,"author":{"gitId":"Samuel-bit-prog"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":200,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @param otherEvent is the event to be compared with","lastModifiedDate":"2021-10-10"},{"lineNumber":201,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @return true if both Events have the same name and date","lastModifiedDate":"2021-10-11"},{"lineNumber":202,"author":{"gitId":"Samuel-bit-prog"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":203,"author":{"gitId":"Samuel-bit-prog"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":204,"author":{"gitId":"Samuel-bit-prog"},"content":"    public boolean isSameType(Module otherEvent) {","lastModifiedDate":"2021-10-21"},{"lineNumber":205,"author":{"gitId":"Samuel-bit-prog"},"content":"        if (otherEvent \u003d\u003d this) {","lastModifiedDate":"2021-10-09"},{"lineNumber":206,"author":{"gitId":"Samuel-bit-prog"},"content":"            return true;","lastModifiedDate":"2021-10-09"},{"lineNumber":207,"author":{"gitId":"Samuel-bit-prog"},"content":"        } else if (otherEvent instanceof Event) {","lastModifiedDate":"2021-10-12"},{"lineNumber":208,"author":{"gitId":"Samuel-bit-prog"},"content":"            Event other \u003d (Event) otherEvent;","lastModifiedDate":"2021-10-12"},{"lineNumber":209,"author":{"gitId":"Samuel-bit-prog"},"content":"            return other.getName().equals(getName()) \u0026\u0026 other.getDate().equals(getDate());","lastModifiedDate":"2021-10-12"},{"lineNumber":210,"author":{"gitId":"Samuel-bit-prog"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":211,"author":{"gitId":"Samuel-bit-prog"},"content":"        return false;","lastModifiedDate":"2021-10-12"},{"lineNumber":212,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":213,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":214,"author":{"gitId":"Samuel-bit-prog"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":215,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Checks if something is equal to the event. This defines a stronger notion of equality between two events.","lastModifiedDate":"2021-10-10"},{"lineNumber":216,"author":{"gitId":"Samuel-bit-prog"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":217,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @param other is the object to be compared to","lastModifiedDate":"2021-10-10"},{"lineNumber":218,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @return true if both events have the same identity and data fields","lastModifiedDate":"2021-10-10"},{"lineNumber":219,"author":{"gitId":"Samuel-bit-prog"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":220,"author":{"gitId":"Samuel-bit-prog"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":221,"author":{"gitId":"Samuel-bit-prog"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-09"},{"lineNumber":222,"author":{"gitId":"Samuel-bit-prog"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-09"},{"lineNumber":223,"author":{"gitId":"Samuel-bit-prog"},"content":"            return true;","lastModifiedDate":"2021-10-09"},{"lineNumber":224,"author":{"gitId":"Samuel-bit-prog"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":225,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":226,"author":{"gitId":"Samuel-bit-prog"},"content":"        if (!(other instanceof Event)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":227,"author":{"gitId":"Samuel-bit-prog"},"content":"            return false;","lastModifiedDate":"2021-10-09"},{"lineNumber":228,"author":{"gitId":"Samuel-bit-prog"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":229,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":230,"author":{"gitId":"Samuel-bit-prog"},"content":"        Event otherEvent \u003d (Event) other;","lastModifiedDate":"2021-10-09"},{"lineNumber":231,"author":{"gitId":"Samuel-bit-prog"},"content":"        return otherEvent.getName().equals(getName())","lastModifiedDate":"2021-10-09"},{"lineNumber":232,"author":{"gitId":"Samuel-bit-prog"},"content":"                \u0026\u0026 otherEvent.getDate().equals(getDate())","lastModifiedDate":"2021-10-09"},{"lineNumber":233,"author":{"gitId":"Samuel-bit-prog"},"content":"                \u0026\u0026 otherEvent.getParticipants().equals(getParticipants());","lastModifiedDate":"2021-10-09"},{"lineNumber":234,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":235,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":236,"author":{"gitId":"Samuel-bit-prog"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":237,"author":{"gitId":"Samuel-bit-prog"},"content":"     * use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-10-10"},{"lineNumber":238,"author":{"gitId":"Samuel-bit-prog"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":239,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @return integer obtained from hashing","lastModifiedDate":"2021-10-10"},{"lineNumber":240,"author":{"gitId":"Samuel-bit-prog"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":241,"author":{"gitId":"Samuel-bit-prog"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":242,"author":{"gitId":"Samuel-bit-prog"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-09"},{"lineNumber":243,"author":{"gitId":"Samuel-bit-prog"},"content":"        return Objects.hash(getName(), date, participants);","lastModifiedDate":"2021-10-12"},{"lineNumber":244,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":245,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":246,"author":{"gitId":"Samuel-bit-prog"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":247,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Returns the name and date of the event in string.","lastModifiedDate":"2021-10-10"},{"lineNumber":248,"author":{"gitId":"Samuel-bit-prog"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":249,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @return String representation of the event","lastModifiedDate":"2021-10-10"},{"lineNumber":250,"author":{"gitId":"Samuel-bit-prog"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":251,"author":{"gitId":"Samuel-bit-prog"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":252,"author":{"gitId":"Samuel-bit-prog"},"content":"    public String toString() {","lastModifiedDate":"2021-10-09"},{"lineNumber":253,"author":{"gitId":"Samuel-bit-prog"},"content":"        return String.format(\"%s; Date: %s\", getName(), date);","lastModifiedDate":"2021-10-12"},{"lineNumber":254,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":255,"author":{"gitId":"Samuel-bit-prog"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"Samuel-bit-prog":205,"leeroy999":50}},{"path":"src/main/java/seedu/address/model/module/event/EventDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Samuel-bit-prog"},"content":"package seedu.address.model.module.event;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":" * Represents an Event\u0027s date in Ailurus.","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEventDate(String)}","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"public class EventDate {","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"    public static final String DATE_TIME_FORMAT \u003d \"dd/MM/yyyy\";","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"    public static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(DATE_TIME_FORMAT);","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d new StringBuilder()","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"            .append(\"Event dates should of format: \")","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"            .append(DATE_TIME_FORMAT)","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"            .append(\". It should only contain numbers and \u0027/\u0027, and it should not be blank.\")","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"            .toString();","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"    public final LocalDate eventDate;","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"     * @param date A valid date.","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"    public EventDate(String date) {","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"        checkArgument(isValidEventDate(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"        eventDate \u003d LocalDate.parse(date, DATE_TIME_FORMATTER);","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"     * Returns true if a given string is a valid date.","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"leeroy999"},"content":"    public static boolean isValidEventDate(String test) {","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"leeroy999"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"            DATE_TIME_FORMATTER.parse(test);","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"leeroy999"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"leeroy999"},"content":"            return false;","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"leeroy999"},"content":"        return true;","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"leeroy999"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"leeroy999"},"content":"    public String toString() {","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"leeroy999"},"content":"        return eventDate.format(DATE_TIME_FORMATTER);","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"leeroy999"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"leeroy999"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"leeroy999"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"leeroy999"},"content":"                || (other instanceof EventDate // instanceof handles nulls","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"leeroy999"},"content":"                \u0026\u0026 eventDate.equals(((EventDate) other).eventDate)); // state check","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"leeroy999"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"leeroy999"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"leeroy999"},"content":"        return eventDate.hashCode();","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"leeroy999"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Samuel-bit-prog":1,"leeroy999":68}},{"path":"src/main/java/seedu/address/model/module/event/UniqueEventList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Samuel-bit-prog"},"content":"package seedu.address.model.module.event;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Samuel-bit-prog"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Samuel-bit-prog"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Samuel-bit-prog"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Samuel-bit-prog"},"content":"import java.util.List;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Samuel-bit-prog"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Samuel-bit-prog"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.event.exceptions.DuplicateEventException;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.event.exceptions.EventNotFoundException;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"Samuel-bit-prog"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"Samuel-bit-prog"},"content":" * A list of events that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Samuel-bit-prog"},"content":" * A event is considered unique by comparing using {@code Event#isSameType(Event)}. As such, adding and updating","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Samuel-bit-prog"},"content":" * of events uses Event#isSameType(Event) for equality so as to ensure that the event being added or updated is","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Samuel-bit-prog"},"content":" * unique in terms of identity in the UniqueEventList. However, the removal of a event uses Event#equals(Object) so","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"Samuel-bit-prog"},"content":" * as to ensure that the event with exactly the same fields will be removed.","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"Samuel-bit-prog"},"content":" *","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"Samuel-bit-prog"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"Samuel-bit-prog"},"content":" *","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"Samuel-bit-prog"},"content":" * @see Event#isSameType(Module)","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"Samuel-bit-prog"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"Samuel-bit-prog"},"content":"public class UniqueEventList implements Iterable\u003cEvent\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"Samuel-bit-prog"},"content":"    private final ObservableList\u003cEvent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"Samuel-bit-prog"},"content":"    private final ObservableList\u003cEvent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"Samuel-bit-prog"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"Samuel-bit-prog"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Confirm if the list contains an event","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"Samuel-bit-prog"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @param toCheck is the event to check for","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @return true if the list contains an equivalent event as the given argument","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"Samuel-bit-prog"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"Samuel-bit-prog"},"content":"    public boolean contains(Event toCheck) {","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"Samuel-bit-prog"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"Samuel-bit-prog"},"content":"        return internalList.stream().anyMatch(toCheck::isSameType);","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"Samuel-bit-prog"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Adds a event to the list.","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"Samuel-bit-prog"},"content":"     * The event must not already exist in the list.","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"Samuel-bit-prog"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @param toAdd is the event to be added","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"Samuel-bit-prog"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"Samuel-bit-prog"},"content":"    public void add(Event toAdd) {","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"Samuel-bit-prog"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"Samuel-bit-prog"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"Samuel-bit-prog"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"Samuel-bit-prog"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"Samuel-bit-prog"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"leeroy999"},"content":"     * Adds a member to an event in the list.","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"leeroy999"},"content":"     * The event must already exist in the list.","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"leeroy999"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"leeroy999"},"content":"     * @param toModify is the event to be modified","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"leeroy999"},"content":"     * @param members is the member list to be added to event","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"leeroy999"},"content":"    public void addMembers(Event toModify, Set\u003cMember\u003e members) {","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"leeroy999"},"content":"        requireAllNonNull(toModify, members);","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"leeroy999"},"content":"        int index \u003d internalList.indexOf(toModify);","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"leeroy999"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"leeroy999"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"leeroy999"},"content":"        internalList.get(index).addParticipants(members);","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"Samuel-bit-prog"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Replaces the event {@code target} in the list with {@code editedEvent}.","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"Samuel-bit-prog"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"Samuel-bit-prog"},"content":"     * The event identity of {@code editedEvent} must not be the same as another existing event in the list.","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"Samuel-bit-prog"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @param target is event to be replaced","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @param editedEvent is the event replacing","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"Samuel-bit-prog"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"Samuel-bit-prog"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"Samuel-bit-prog"},"content":"        requireAllNonNull(target, editedEvent);","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"Samuel-bit-prog"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"Samuel-bit-prog"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"Samuel-bit-prog"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"Samuel-bit-prog"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"Samuel-bit-prog"},"content":"        if (!target.isSameType(editedEvent) \u0026\u0026 contains(editedEvent)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"Samuel-bit-prog"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"Samuel-bit-prog"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"Samuel-bit-prog"},"content":"        internalList.set(index, editedEvent);","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"Samuel-bit-prog"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Removes the equivalent event from the list.","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"Samuel-bit-prog"},"content":"     * The event must exist in the list.","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"Samuel-bit-prog"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @param toRemove is the event to remove","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"Samuel-bit-prog"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"Samuel-bit-prog"},"content":"    public void remove(Event toRemove) {","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"Samuel-bit-prog"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"Samuel-bit-prog"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"Samuel-bit-prog"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"Samuel-bit-prog"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"Samuel-bit-prog"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"leeroy999"},"content":"     * Set the events of the unique event list.","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"Samuel-bit-prog"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @param replacement is the unique event list to be set","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"Samuel-bit-prog"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"Samuel-bit-prog"},"content":"    public void setEvents(UniqueEventList replacement) {","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"Samuel-bit-prog"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"Samuel-bit-prog"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"Samuel-bit-prog"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Replaces the contents of this list with {@code events}.","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"Samuel-bit-prog"},"content":"     * {@code events} must not contain duplicate events.","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"Samuel-bit-prog"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @param events is the list of events to replace with","lastModifiedDate":"2021-10-11"},{"lineNumber":126,"author":{"gitId":"Samuel-bit-prog"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"Samuel-bit-prog"},"content":"    public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"Samuel-bit-prog"},"content":"        requireAllNonNull(events);","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"Samuel-bit-prog"},"content":"        if (!eventsAreUnique(events)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":130,"author":{"gitId":"Samuel-bit-prog"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2021-10-11"},{"lineNumber":131,"author":{"gitId":"Samuel-bit-prog"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":132,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":133,"author":{"gitId":"Samuel-bit-prog"},"content":"        internalList.setAll(events);","lastModifiedDate":"2021-10-11"},{"lineNumber":134,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":135,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":136,"author":{"gitId":"Samuel-bit-prog"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":137,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-11"},{"lineNumber":138,"author":{"gitId":"Samuel-bit-prog"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":139,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @return unmodifiable internal list","lastModifiedDate":"2021-10-11"},{"lineNumber":140,"author":{"gitId":"Samuel-bit-prog"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":141,"author":{"gitId":"Samuel-bit-prog"},"content":"    public ObservableList\u003cEvent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-11"},{"lineNumber":142,"author":{"gitId":"Samuel-bit-prog"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-11"},{"lineNumber":143,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":144,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":145,"author":{"gitId":"Samuel-bit-prog"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":146,"author":{"gitId":"Samuel-bit-prog"},"content":"    public Iterator\u003cEvent\u003e iterator() {","lastModifiedDate":"2021-10-11"},{"lineNumber":147,"author":{"gitId":"Samuel-bit-prog"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-11"},{"lineNumber":148,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":149,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":150,"author":{"gitId":"Samuel-bit-prog"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":151,"author":{"gitId":"Samuel-bit-prog"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":152,"author":{"gitId":"Samuel-bit-prog"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-11"},{"lineNumber":153,"author":{"gitId":"Samuel-bit-prog"},"content":"                || (other instanceof UniqueEventList // instanceof handles nulls","lastModifiedDate":"2021-10-11"},{"lineNumber":154,"author":{"gitId":"Samuel-bit-prog"},"content":"                \u0026\u0026 internalList.equals(((UniqueEventList) other).internalList));","lastModifiedDate":"2021-10-11"},{"lineNumber":155,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":156,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":157,"author":{"gitId":"Samuel-bit-prog"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":158,"author":{"gitId":"Samuel-bit-prog"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-11"},{"lineNumber":159,"author":{"gitId":"Samuel-bit-prog"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-10-11"},{"lineNumber":160,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":161,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":162,"author":{"gitId":"Samuel-bit-prog"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":163,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Returns true if {@code events} contains only unique events.","lastModifiedDate":"2021-10-11"},{"lineNumber":164,"author":{"gitId":"Samuel-bit-prog"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":165,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @return boolean representing if the events in the list are all unique","lastModifiedDate":"2021-10-11"},{"lineNumber":166,"author":{"gitId":"Samuel-bit-prog"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":167,"author":{"gitId":"Samuel-bit-prog"},"content":"    private boolean eventsAreUnique(List\u003cEvent\u003e events) {","lastModifiedDate":"2021-10-11"},{"lineNumber":168,"author":{"gitId":"Samuel-bit-prog"},"content":"        for (int i \u003d 0; i \u003c events.size() - 1; i++) {","lastModifiedDate":"2021-10-11"},{"lineNumber":169,"author":{"gitId":"Samuel-bit-prog"},"content":"            for (int j \u003d i + 1; j \u003c events.size(); j++) {","lastModifiedDate":"2021-10-11"},{"lineNumber":170,"author":{"gitId":"Samuel-bit-prog"},"content":"                if (events.get(i).isSameType(events.get(j))) {","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"Samuel-bit-prog"},"content":"                    return false;","lastModifiedDate":"2021-10-11"},{"lineNumber":172,"author":{"gitId":"Samuel-bit-prog"},"content":"                }","lastModifiedDate":"2021-10-11"},{"lineNumber":173,"author":{"gitId":"Samuel-bit-prog"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":174,"author":{"gitId":"Samuel-bit-prog"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":175,"author":{"gitId":"Samuel-bit-prog"},"content":"        return true;","lastModifiedDate":"2021-10-11"},{"lineNumber":176,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":177,"author":{"gitId":"Samuel-bit-prog"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"Samuel-bit-prog":159,"leeroy999":18}},{"path":"src/main/java/seedu/address/model/module/event/exceptions/DuplicateEventException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Samuel-bit-prog"},"content":"package seedu.address.model.module.event.exceptions;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Samuel-bit-prog"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Samuel-bit-prog"},"content":" * Signals that the operation will result in duplicate Events (Events are considered duplicates if they have the same","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"Samuel-bit-prog"},"content":" * identity).","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Samuel-bit-prog"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Samuel-bit-prog"},"content":"public class DuplicateEventException extends RuntimeException {","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Samuel-bit-prog"},"content":"    public DuplicateEventException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Samuel-bit-prog"},"content":"        super(\"Operation would result in duplicate events\");","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Samuel-bit-prog"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"Samuel-bit-prog":11}},{"path":"src/main/java/seedu/address/model/module/event/exceptions/EventNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Samuel-bit-prog"},"content":"package seedu.address.model.module.event.exceptions;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Samuel-bit-prog"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Samuel-bit-prog"},"content":" * Signals that the operation is unable to find the specified event.","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"Samuel-bit-prog"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Samuel-bit-prog"},"content":"public class EventNotFoundException extends RuntimeException {","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Samuel-bit-prog"},"content":"    public EventNotFoundException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Samuel-bit-prog"},"content":"        super(\"Operation unable to find stated event\");","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Samuel-bit-prog"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"Samuel-bit-prog":10}},{"path":"src/main/java/seedu/address/model/module/member/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Samuel-bit-prog"},"content":"package seedu.address.model.module.member;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":" * Represents a Member\u0027s address in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":55,"Samuel-bit-prog":1,"leeroy999":1}},{"path":"src/main/java/seedu/address/model/module/member/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Samuel-bit-prog"},"content":"package seedu.address.model.module.member;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":" * Represents a Member\u0027s email in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":69,"Samuel-bit-prog":1,"leeroy999":1}},{"path":"src/main/java/seedu/address/model/module/member/Member.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Samuel-bit-prog"},"content":"package seedu.address.model.module.member;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.Name;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.position.Position;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.task.TaskList;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"Samuel-bit-prog"},"content":" * Represents a Member in the Ailurus.","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"Samuel-bit-prog"},"content":"public class Member extends Module {","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"LiuZhi1an"},"content":"    private final Set\u003cPosition\u003e positions \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"    private final TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"LiuZhi1an"},"content":"    public Member(Name name, Phone phone, Email email, Address address, Set\u003cPosition\u003e positions) {","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"Samuel-bit-prog"},"content":"        super(name);","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"        requireAllNonNull(phone, positions);","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"LiuZhi1an"},"content":"        this.positions.addAll(positions);","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"     * Constructs a member with tasks.","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"    public Member(Name name, Phone phone, Email email, Address address, Set\u003cPosition\u003e positions, TaskList taskList) {","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"Samuel-bit-prog"},"content":"        super(name);","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"tsiyuk"},"content":"        requireAllNonNull(phone, positions, taskList);","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"tsiyuk"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"tsiyuk"},"content":"        this.email \u003d email;","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"tsiyuk"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"tsiyuk"},"content":"        this.positions.addAll(positions);","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"tsiyuk"},"content":"        this.taskList.setTasks(taskList);","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"tsiyuk"},"content":"    public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"tsiyuk"},"content":"        return Optional.ofNullable(email);","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"tsiyuk"},"content":"    public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"tsiyuk"},"content":"        return Optional.ofNullable(address);","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":69,"author":{"gitId":"LiuZhi1an"},"content":"     * Returns an immutable position set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"LiuZhi1an"},"content":"    public Set\u003cPosition\u003e getPositions() {","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"LiuZhi1an"},"content":"        return Collections.unmodifiableSet(positions);","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"tsiyuk"},"content":"    public TaskList getTaskList() {","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"tsiyuk"},"content":"        return this.taskList;","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"tsiyuk"},"content":"    public void setTaskList(TaskList taskList) {","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"tsiyuk"},"content":"        this.taskList.setTasks(taskList);","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"leeroy999"},"content":"     * Returns true if both members have the same name.","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"leeroy999"},"content":"     * This defines a weaker notion of equality between two members.","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"Samuel-bit-prog"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"Samuel-bit-prog"},"content":"    public boolean isSameType(Module otherMember) {","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"leeroy999"},"content":"        if (otherMember \u003d\u003d this) {","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"Samuel-bit-prog"},"content":"        } else if (otherMember instanceof Member) {","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"Samuel-bit-prog"},"content":"            return otherMember.getName().equals(getName());","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"Samuel-bit-prog"},"content":"        return false;","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"leeroy999"},"content":"     * Returns true if both members have the same identity and data fields.","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"leeroy999"},"content":"     * This defines a stronger notion of equality between two members.","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"leeroy999"},"content":"        if (!(other instanceof Member)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"leeroy999"},"content":"        Member otherMember \u003d (Member) other;","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"leeroy999"},"content":"        return otherMember.getName().equals(getName())","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"leeroy999"},"content":"                \u0026\u0026 otherMember.getPhone().equals(getPhone())","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"leeroy999"},"content":"                \u0026\u0026 otherMember.getEmail().equals(getEmail())","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"leeroy999"},"content":"                \u0026\u0026 otherMember.getAddress().equals(getAddress())","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"tsiyuk"},"content":"                \u0026\u0026 otherMember.getPositions().equals(getPositions())","lastModifiedDate":"2021-10-09"},{"lineNumber":118,"author":{"gitId":"tsiyuk"},"content":"                \u0026\u0026 otherMember.getTaskList().equals(getTaskList());","lastModifiedDate":"2021-10-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"Samuel-bit-prog"},"content":"        return Objects.hash(getName(), phone, email, address, positions);","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":132,"author":{"gitId":"tsiyuk"},"content":"                .append(getPhone());","lastModifiedDate":"2021-10-13"},{"lineNumber":133,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":134,"author":{"gitId":"tsiyuk"},"content":"        if (getEmail().isPresent()) {","lastModifiedDate":"2021-10-14"},{"lineNumber":135,"author":{"gitId":"tsiyuk"},"content":"            builder.append(\"; Email: \").append(getEmail().get());","lastModifiedDate":"2021-10-14"},{"lineNumber":136,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":137,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":138,"author":{"gitId":"tsiyuk"},"content":"        if (getAddress().isPresent()) {","lastModifiedDate":"2021-10-14"},{"lineNumber":139,"author":{"gitId":"tsiyuk"},"content":"            builder.append(\"; Address: \").append(getAddress().get());","lastModifiedDate":"2021-10-14"},{"lineNumber":140,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":142,"author":{"gitId":"LiuZhi1an"},"content":"        Set\u003cPosition\u003e positions \u003d getPositions();","lastModifiedDate":"2021-10-06"},{"lineNumber":143,"author":{"gitId":"LiuZhi1an"},"content":"        if (!positions.isEmpty()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":144,"author":{"gitId":"LiuZhi1an"},"content":"            builder.append(\"; Positions: \");","lastModifiedDate":"2021-10-07"},{"lineNumber":145,"author":{"gitId":"LiuZhi1an"},"content":"            positions.forEach(builder::append);","lastModifiedDate":"2021-10-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":147,"author":{"gitId":"tsiyuk"},"content":"        if (!taskList.isEmpty()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":148,"author":{"gitId":"tsiyuk"},"content":"            builder.append(\"; Tasks: \");","lastModifiedDate":"2021-10-09"},{"lineNumber":149,"author":{"gitId":"tsiyuk"},"content":"            taskList.iterator().forEachRemaining(builder::append);","lastModifiedDate":"2021-10-09"},{"lineNumber":150,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LiuZhi1an":10,"-":76,"tsiyuk":42,"Samuel-bit-prog":15,"leeroy999":11}},{"path":"src/main/java/seedu/address/model/module/member/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Samuel-bit-prog"},"content":"package seedu.address.model.module.member;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":" * Represents a Member\u0027s phone number in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":51,"Samuel-bit-prog":1,"leeroy999":1}},{"path":"src/main/java/seedu/address/model/module/member/UniqueMemberList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Samuel-bit-prog"},"content":"package seedu.address.model.module.member;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"import java.util.List;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.exceptions.DuplicateMemberException;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.exceptions.MemberNotFoundException;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":" * A list of members that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"Samuel-bit-prog"},"content":" * A member is considered unique by comparing using {@code Member#isSameType(Member)}. As such, adding and updating of","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Samuel-bit-prog"},"content":" * members uses Member#isSameType(Member) for equality so as to ensure that the member being added or updated is","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":" * unique in terms of identity in the UniqueMemberList. However, the removal of a member uses Member#equals(Object) so","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":" * as to ensure that the member with exactly the same fields will be removed.","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":" *","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":" *","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"Samuel-bit-prog"},"content":" * @see Member#isSameType(Module)","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"public class UniqueMemberList implements Iterable\u003cMember\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"    private final ObservableList\u003cMember\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"    private final ObservableList\u003cMember\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"     * Returns true if the list contains an equivalent member as the given argument.","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"    public boolean contains(Member toCheck) {","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"Samuel-bit-prog"},"content":"        return internalList.stream().anyMatch(toCheck::isSameType);","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"     * Adds a member to the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"leeroy999"},"content":"     * The member must not already exist in the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"    public void add(Member toAdd) {","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"leeroy999"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"leeroy999"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"leeroy999"},"content":"            throw new DuplicateMemberException();","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"leeroy999"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"leeroy999"},"content":"     * Replaces the member {@code target} in the list with {@code editedMember}.","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"leeroy999"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"leeroy999"},"content":"     * The member identity of {@code editedMember} must not be the same as another existing member in the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"leeroy999"},"content":"    public void setMember(Member target, Member editedMember) {","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"leeroy999"},"content":"        requireAllNonNull(target, editedMember);","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"leeroy999"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"leeroy999"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"leeroy999"},"content":"            throw new MemberNotFoundException();","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"Samuel-bit-prog"},"content":"        if (!target.isSameType(editedMember) \u0026\u0026 contains(editedMember)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"leeroy999"},"content":"            throw new DuplicateMemberException();","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"leeroy999"},"content":"        internalList.set(index, editedMember);","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"leeroy999"},"content":"     * Removes the equivalent member from the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"leeroy999"},"content":"     * The member must exist in the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"leeroy999"},"content":"    public void remove(Member toRemove) {","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"leeroy999"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"leeroy999"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"leeroy999"},"content":"            throw new MemberNotFoundException();","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"leeroy999"},"content":"    public void setMembers(UniqueMemberList replacement) {","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"leeroy999"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"leeroy999"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"leeroy999"},"content":"     * Replaces the contents of this list with {@code members}.","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"leeroy999"},"content":"     * {@code members} must not contain duplicate members.","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"leeroy999"},"content":"    public void setMembers(List\u003cMember\u003e members) {","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"leeroy999"},"content":"        requireAllNonNull(members);","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"leeroy999"},"content":"        if (!membersAreUnique(members)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"leeroy999"},"content":"            throw new DuplicateMemberException();","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"leeroy999"},"content":"        internalList.setAll(members);","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"leeroy999"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"leeroy999"},"content":"    public ObservableList\u003cMember\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"leeroy999"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"leeroy999"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"leeroy999"},"content":"    public Iterator\u003cMember\u003e iterator() {","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"leeroy999"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"leeroy999"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"leeroy999"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"leeroy999"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"leeroy999"},"content":"                || (other instanceof UniqueMemberList // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"leeroy999"},"content":"                        \u0026\u0026 internalList.equals(((UniqueMemberList) other).internalList));","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"leeroy999"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"leeroy999"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"leeroy999"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"leeroy999"},"content":"     * Returns true if {@code members} contains only unique members.","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"leeroy999"},"content":"    private boolean membersAreUnique(List\u003cMember\u003e members) {","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"leeroy999"},"content":"        for (int i \u003d 0; i \u003c members.size() - 1; i++) {","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"leeroy999"},"content":"            for (int j \u003d i + 1; j \u003c members.size(); j++) {","lastModifiedDate":"2021-10-07"},{"lineNumber":131,"author":{"gitId":"Samuel-bit-prog"},"content":"                if (members.get(i).isSameType(members.get(j))) {","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"leeroy999"},"content":"                    return false;","lastModifiedDate":"2021-10-07"},{"lineNumber":133,"author":{"gitId":"leeroy999"},"content":"                }","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"leeroy999"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":135,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":136,"author":{"gitId":"leeroy999"},"content":"        return true;","lastModifiedDate":"2021-10-07"},{"lineNumber":137,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":138,"author":{"gitId":"leeroy999"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"Samuel-bit-prog":10,"leeroy999":128}},{"path":"src/main/java/seedu/address/model/module/member/exceptions/DuplicateMemberException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Samuel-bit-prog"},"content":"package seedu.address.model.module.member.exceptions;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":" * Signals that the operation will result in duplicate Members (Members are considered duplicates if they have the same","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":" * identity).","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"public class DuplicateMemberException extends RuntimeException {","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"    public DuplicateMemberException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"        super(\"Operation would result in duplicate members\");","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"Samuel-bit-prog":1,"leeroy999":10}},{"path":"src/main/java/seedu/address/model/module/member/exceptions/MemberNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Samuel-bit-prog"},"content":"package seedu.address.model.module.member.exceptions;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":" * Signals that the operation is unable to find the specified member.","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"public class MemberNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"Samuel-bit-prog":1,"leeroy999":5}},{"path":"src/main/java/seedu/address/model/module/member/position/Position.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Samuel-bit-prog"},"content":"package seedu.address.model.module.member.position;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"LiuZhi1an"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"LiuZhi1an"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"LiuZhi1an"},"content":" * Represents a Position in the address book.","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"LiuZhi1an"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidPositionName(String)}","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"LiuZhi1an"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"LiuZhi1an"},"content":"public class Position {","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Positions should only contain alphanumeric characters and spaces\";","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"LiuZhi1an"},"content":"    public final String positionName;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"LiuZhi1an"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"LiuZhi1an"},"content":"     * Constructs a {@code Position}.","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"LiuZhi1an"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"LiuZhi1an"},"content":"     * @param positionName A valid position name.","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"LiuZhi1an"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"LiuZhi1an"},"content":"    public Position(String positionName) {","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"LiuZhi1an"},"content":"        requireNonNull(positionName);","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"LiuZhi1an"},"content":"        checkArgument(isValidPositionName(positionName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"LiuZhi1an"},"content":"        this.positionName \u003d positionName;","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"LiuZhi1an"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"LiuZhi1an"},"content":"     * Returns true if a given string is a valid position name.","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"LiuZhi1an"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"LiuZhi1an"},"content":"    public static boolean isValidPositionName(String test) {","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"LiuZhi1an"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"LiuZhi1an"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"LiuZhi1an"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"LiuZhi1an"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"LiuZhi1an"},"content":"                || (other instanceof Position // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"LiuZhi1an"},"content":"                \u0026\u0026 positionName.equals(((Position) other).positionName)); // state check","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"LiuZhi1an"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"LiuZhi1an"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"LiuZhi1an"},"content":"        return positionName.hashCode();","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"LiuZhi1an"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"LiuZhi1an"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"LiuZhi1an"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"LiuZhi1an"},"content":"    public String toString() {","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"LiuZhi1an"},"content":"        return \u0027[\u0027 + positionName + \u0027]\u0027;","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"LiuZhi1an"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"LiuZhi1an":51,"Samuel-bit-prog":1,"leeroy999":2}},{"path":"src/main/java/seedu/address/model/module/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Samuel-bit-prog"},"content":"package seedu.address.model.module.task;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Samuel-bit-prog"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.model.module.Name;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":" * Represents a task in the Ailurus.","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"public class Task extends Module {","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"    // data fields","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"    private final boolean isDone;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"    private final TaskDeadline taskDeadline;","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"     * Constructs a {@code Task}.","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"     * @param taskName A valid task name.","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"    public Task(Name taskName, TaskDeadline taskDeadline) {","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"        super(taskName);","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"        requireAllNonNull(taskDeadline);","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"        this.taskDeadline \u003d taskDeadline;","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"     * Constructs a {@code Task}.","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"     * @param taskName A valid task name.","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"     * @param isDone A boolean value.","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"    public Task(Name taskName, boolean isDone, TaskDeadline taskDeadline) {","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"        super(taskName);","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"        requireAllNonNull(isDone, taskDeadline);","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"tsiyuk"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"        this.taskDeadline \u003d taskDeadline;","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"    public boolean isSameType(Module module) {","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"tsiyuk"},"content":"        return this.equals(module);","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"tsiyuk"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"tsiyuk"},"content":"        return isDone;","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"tsiyuk"},"content":"    public TaskDeadline getTaskDeadline() {","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"tsiyuk"},"content":"        return taskDeadline;","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"Samuel-bit-prog"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Returns the deadline date of the {@code Task}.","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"Samuel-bit-prog"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @return date","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"Samuel-bit-prog"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"Samuel-bit-prog"},"content":"    public LocalDateTime getTaskDeadlineDate() {","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"Samuel-bit-prog"},"content":"        return taskDeadline.getDeadline();","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"LiuZhi1an"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"LiuZhi1an"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"tsiyuk"},"content":"            return true;","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"LiuZhi1an"},"content":"        if (other \u003d\u003d null || getClass() !\u003d other.getClass()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"tsiyuk"},"content":"            return false;","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"LiuZhi1an"},"content":"        Task task \u003d (Task) other;","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"tsiyuk"},"content":"        boolean result \u003d isDone \u003d\u003d task.isDone \u0026\u0026 super.getName().equals(task.getName())","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"tsiyuk"},"content":"                \u0026\u0026 this.getTaskDeadline().equals(task.getTaskDeadline());","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"LiuZhi1an"},"content":"        return result;","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"tsiyuk"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"tsiyuk"},"content":"        return Objects.hash(super.getName(), isDone);","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"tsiyuk"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"tsiyuk"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"tsiyuk"},"content":"    public String toString() {","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"tsiyuk"},"content":"        return super.getName().toString() + \" by \" + getTaskDeadline().toString();","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"LiuZhi1an":5,"tsiyuk":78,"Samuel-bit-prog":11}},{"path":"src/main/java/seedu/address/model/module/task/TaskDeadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package seedu.address.model.module.task;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":" * Represents a task\u0027s deadline in Ailurus","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTaskDeadline(String)}","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"public class TaskDeadline {","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"    private static final String DEADLINE_FORMAT \u003d \"dd/MM/yyyy HH:mm\";","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"    public static final DateTimeFormatter DEADLINE_DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(DEADLINE_FORMAT);","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d new StringBuilder()","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"            .append(\"Task deadline should of format: \")","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"            .append(DEADLINE_FORMAT)","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"            .append(\". It should only contain numbers, \u0027:\u0027, and \u0027/\u0027, and it should not be blank.\")","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"            .toString();","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"     * Constructs a {@code Task} by using the given {@code date}","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"    public TaskDeadline(String time) {","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"        requireNonNull(time);","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"        checkArgument(isValidTaskDeadline(time), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"        deadline \u003d LocalDateTime.parse(time, DEADLINE_DATE_TIME_FORMATTER);","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"     * Returns true if the given string is a valid deadline.","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"    public static boolean isValidTaskDeadline(String time) {","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"tsiyuk"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"            DEADLINE_DATE_TIME_FORMATTER.parse(time);","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"            return false;","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"        return true;","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"Samuel-bit-prog"},"content":"    public LocalDateTime getDeadline() {","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"Samuel-bit-prog"},"content":"        return deadline;","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"tsiyuk"},"content":"    public String toString() {","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"tsiyuk"},"content":"        return deadline.format(DEADLINE_DATE_TIME_FORMATTER);","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"tsiyuk"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"tsiyuk"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"tsiyuk"},"content":"            return true;","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"tsiyuk"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"tsiyuk"},"content":"            return false;","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"tsiyuk"},"content":"        TaskDeadline that \u003d (TaskDeadline) o;","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"tsiyuk"},"content":"        return Objects.equals(deadline, that.deadline);","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"tsiyuk"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"tsiyuk"},"content":"        return Objects.hash(deadline);","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"tsiyuk":70,"Samuel-bit-prog":4}},{"path":"src/main/java/seedu/address/model/module/task/TaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Samuel-bit-prog"},"content":"package seedu.address.model.module.task;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"public class TaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"    private final ObservableList\u003cTask\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"    private final ObservableList\u003cTask\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"     * Returns true if the list contains an equivalent task as the given argument.","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"    public boolean contains(Task toCheck) {","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"        return internalList.isEmpty();","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"     * Adds a task to the list.","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"    public void add(Task toAdd) {","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"     * Replaces the task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"tsiyuk"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"tsiyuk"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"tsiyuk"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"tsiyuk"},"content":"        internalList.set(index, editedTask);","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"tsiyuk"},"content":"     * Replaces the task specified by the given {@code index} in the list with {@code editedTask}.","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"tsiyuk"},"content":"    public void setTask(int index, Task editedTask) {","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"tsiyuk"},"content":"        requireNonNull(editedTask);","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"tsiyuk"},"content":"        if (index \u003c 0 || index \u003e\u003d internalList.size()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"tsiyuk"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"tsiyuk"},"content":"        internalList.set(index, editedTask);","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"tsiyuk"},"content":"     * Removes the equivalent task from the list.","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"tsiyuk"},"content":"     * The task must exist in the list.","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"tsiyuk"},"content":"    public void remove(Task toRemove) {","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"tsiyuk"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"tsiyuk"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"tsiyuk"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"tsiyuk"},"content":"     * Removes the task specified by the index from the list.","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"tsiyuk"},"content":"     * The task must exist in the list.","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"tsiyuk"},"content":"    public void remove(int index) {","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"tsiyuk"},"content":"        if (index \u003c 0 || index \u003e\u003d internalList.size()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"tsiyuk"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"tsiyuk"},"content":"        internalList.remove(index);","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"tsiyuk"},"content":"    public void setTasks(TaskList replacement) {","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"tsiyuk"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"tsiyuk"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"tsiyuk"},"content":"     * Replaces the contents of this list with {@code tasks}.","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"tsiyuk"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"tsiyuk"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"tsiyuk"},"content":"        requireAllNonNull(tasks);","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"tsiyuk"},"content":"        internalList.setAll(tasks);","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":103,"author":{"gitId":"tsiyuk"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-09"},{"lineNumber":104,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":105,"author":{"gitId":"tsiyuk"},"content":"    public ObservableList\u003cTask\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-09"},{"lineNumber":106,"author":{"gitId":"tsiyuk"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":109,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":110,"author":{"gitId":"tsiyuk"},"content":"     * Returns an iterator over elements of type {@code T}.","lastModifiedDate":"2021-10-09"},{"lineNumber":111,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":112,"author":{"gitId":"tsiyuk"},"content":"     * @return an Iterator.","lastModifiedDate":"2021-10-09"},{"lineNumber":113,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":114,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":115,"author":{"gitId":"tsiyuk"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2021-10-09"},{"lineNumber":116,"author":{"gitId":"tsiyuk"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-09"},{"lineNumber":117,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":118,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":119,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":120,"author":{"gitId":"tsiyuk"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-10-09"},{"lineNumber":121,"author":{"gitId":"tsiyuk"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-10-09"},{"lineNumber":122,"author":{"gitId":"tsiyuk"},"content":"            return true;","lastModifiedDate":"2021-10-09"},{"lineNumber":123,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":124,"author":{"gitId":"tsiyuk"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":125,"author":{"gitId":"tsiyuk"},"content":"            return false;","lastModifiedDate":"2021-10-09"},{"lineNumber":126,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":127,"author":{"gitId":"tsiyuk"},"content":"        TaskList tasks \u003d (TaskList) o;","lastModifiedDate":"2021-10-09"},{"lineNumber":128,"author":{"gitId":"tsiyuk"},"content":"        return internalList.equals(tasks.internalList);","lastModifiedDate":"2021-10-09"},{"lineNumber":129,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":130,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":131,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":132,"author":{"gitId":"tsiyuk"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-09"},{"lineNumber":133,"author":{"gitId":"tsiyuk"},"content":"        return Objects.hash(internalList, internalUnmodifiableList);","lastModifiedDate":"2021-10-09"},{"lineNumber":134,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":135,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":136,"author":{"gitId":"tsiyuk"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":137,"author":{"gitId":"tsiyuk"},"content":"    public String toString() {","lastModifiedDate":"2021-10-09"},{"lineNumber":138,"author":{"gitId":"tsiyuk"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-09"},{"lineNumber":139,"author":{"gitId":"tsiyuk"},"content":"        builder.append(\"Tasks: \");","lastModifiedDate":"2021-10-09"},{"lineNumber":140,"author":{"gitId":"tsiyuk"},"content":"        this.internalList.forEach(builder::append);","lastModifiedDate":"2021-10-09"},{"lineNumber":141,"author":{"gitId":"tsiyuk"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-09"},{"lineNumber":142,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":143,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":144,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":145,"author":{"gitId":"LiuZhi1an"},"content":"     * Returns true if {@code tasks} contains only unique tasks.","lastModifiedDate":"2021-10-11"},{"lineNumber":146,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":147,"author":{"gitId":"tsiyuk"},"content":"    private boolean tasksAreUnique(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-10-09"},{"lineNumber":148,"author":{"gitId":"tsiyuk"},"content":"        for (int i \u003d 0; i \u003c tasks.size() - 1; i++) {","lastModifiedDate":"2021-10-09"},{"lineNumber":149,"author":{"gitId":"tsiyuk"},"content":"            for (int j \u003d i + 1; j \u003c tasks.size(); j++) {","lastModifiedDate":"2021-10-09"},{"lineNumber":150,"author":{"gitId":"tsiyuk"},"content":"                if (tasks.get(i).equals(tasks.get(j))) {","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"tsiyuk"},"content":"                    return false;","lastModifiedDate":"2021-10-09"},{"lineNumber":152,"author":{"gitId":"tsiyuk"},"content":"                }","lastModifiedDate":"2021-10-09"},{"lineNumber":153,"author":{"gitId":"tsiyuk"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":154,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":155,"author":{"gitId":"tsiyuk"},"content":"        return true;","lastModifiedDate":"2021-10-09"},{"lineNumber":156,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":157,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"LiuZhi1an":1,"tsiyuk":154,"Samuel-bit-prog":2}},{"path":"src/main/java/seedu/address/model/module/task/exceptions/DuplicateTaskException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Samuel-bit-prog"},"content":"package seedu.address.model.module.task.exceptions;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":" * Signals that the operation will result in duplicate Tasks (Tasks are considered duplicates if they have the same","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":" * identity).","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"public class DuplicateTaskException extends RuntimeException {","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"    public DuplicateTaskException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"        super(\"Operation would result in duplicate tasks\");","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"tsiyuk":10,"Samuel-bit-prog":1}},{"path":"src/main/java/seedu/address/model/module/task/exceptions/TaskNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Samuel-bit-prog"},"content":"package seedu.address.model.module.task.exceptions;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":" * Signals that the operation is unable to find the specified task.","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"public class TaskNotFoundException extends RuntimeException {","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"tsiyuk":6,"Samuel-bit-prog":1}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"Samuel-bit-prog"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.Name;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.event.Event;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.event.EventDate;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Address;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Email;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Phone;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.position.Position;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.task.Task;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"    public static Member[] getSampleMembers() {","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"        return new Member[] {","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"Samuel-bit-prog"},"content":"            new Member(new seedu.address.model.module.Name(\"Alex Yeoh\"), new Phone(\"87438807\"),","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"Samuel-bit-prog"},"content":"                new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"                getPositionSet(\"President\")),","lastModifiedDate":"2021-10-30"},{"lineNumber":31,"author":{"gitId":"Samuel-bit-prog"},"content":"            new Member(new seedu.address.model.module.Name(\"Bernice Yu\"), new Phone(\"99272758\"),","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"Samuel-bit-prog"},"content":"                new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"                getPositionSet(\"Vice President\", \"Manpower Head\")),","lastModifiedDate":"2021-10-30"},{"lineNumber":35,"author":{"gitId":"Samuel-bit-prog"},"content":"            new Member(new seedu.address.model.module.Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"),","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"Samuel-bit-prog"},"content":"                new Email(\"charlotte@example.com\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":38,"author":{"gitId":"leeroy999"},"content":"                getPositionSet(\"Logistics Head\")),","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"Samuel-bit-prog"},"content":"            new Member(new seedu.address.model.module.Name(\"David Li\"), new Phone(\"91031282\"),","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"Samuel-bit-prog"},"content":"                new Email(\"lidavid@example.com\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"leeroy999"},"content":"                getPositionSet(\"Logistics Assistant\")),","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"Samuel-bit-prog"},"content":"            new Member(new seedu.address.model.module.Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"),","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"Samuel-bit-prog"},"content":"                new Email(\"irfan@example.com\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"leeroy999"},"content":"                getPositionSet(\"Logistics Assistant\")),","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"Samuel-bit-prog"},"content":"            new Member(new seedu.address.model.module.Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"),","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"Samuel-bit-prog"},"content":"                new Email(\"royb@example.com\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"leeroy999"},"content":"                getPositionSet(\"Program Head\"))","lastModifiedDate":"2021-10-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":56,"author":{"gitId":"leeroy999"},"content":"        for (Member sampleMember : getSampleMembers()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"leeroy999"},"content":"            sampleAb.addMember(sampleMember);","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":59,"author":{"gitId":"Samuel-bit-prog"},"content":"        Set\u003cMember\u003e set \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"Samuel-bit-prog"},"content":"        set.add(new Member(new seedu.address.model.module.Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"),","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"Samuel-bit-prog"},"content":"                        new Email(\"royb@example.com\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"Samuel-bit-prog"},"content":"                        new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"leeroy999"},"content":"                        getPositionSet(\"Program Head\")));","lastModifiedDate":"2021-10-31"},{"lineNumber":64,"author":{"gitId":"Samuel-bit-prog"},"content":"        sampleAb.addEvent(new Event(new Name(\"Freshmen Orientation Camp Project\"), new EventDate(\"11/07/2021\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"leeroy999"},"content":"                        set));","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":70,"author":{"gitId":"LiuZhi1an"},"content":"     * Returns a position set containing the list of strings given.","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":72,"author":{"gitId":"LiuZhi1an"},"content":"    public static Set\u003cPosition\u003e getPositionSet(String... strings) {","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":74,"author":{"gitId":"LiuZhi1an"},"content":"                .map(Position::new)","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":78,"author":{"gitId":"Samuel-bit-prog"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Returns a set containing the list of members given.","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"Samuel-bit-prog"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"Samuel-bit-prog"},"content":"    public static Set\u003cMember\u003e getMemberSet(Member... members) {","lastModifiedDate":"2021-10-14"},{"lineNumber":82,"author":{"gitId":"Samuel-bit-prog"},"content":"        return Arrays.stream(members).collect(Collectors.toSet());","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":84,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":85,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"tsiyuk"},"content":"     * Returns a list of tasks containing the list of tasks given.","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"tsiyuk"},"content":"    public static List\u003cTask\u003e getTaskList(Task ... tasks) {","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"tsiyuk"},"content":"        return Arrays.stream(tasks).collect(Collectors.toList());","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"LiuZhi1an":3,"-":35,"tsiyuk":7,"Samuel-bit-prog":34,"leeroy999":12}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Samuel-bit-prog"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Samuel-bit-prog"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Samuel-bit-prog"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"Samuel-bit-prog"},"content":"import java.util.List;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Samuel-bit-prog"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Samuel-bit-prog"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Samuel-bit-prog"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.Name;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.event.Event;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.event.EventDate;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"Samuel-bit-prog"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"Samuel-bit-prog"},"content":" * Jackson-friendly version of {@link Event}.","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Samuel-bit-prog"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"Samuel-bit-prog"},"content":"public class JsonAdaptedEvent {","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"Samuel-bit-prog"},"content":"    public static final String MISSING_FIELD_EVENT_FORMAT \u003d \"Event\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"Samuel-bit-prog"},"content":"    private final String name;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"Samuel-bit-prog"},"content":"    private final String date;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"Samuel-bit-prog"},"content":"    private final List\u003cJsonAdaptedMember\u003e participants;","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"Samuel-bit-prog"},"content":"    private final List\u003cBoolean\u003e attendanceList;","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"Samuel-bit-prog"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Constructs a {@code JsonAdaptedEvent} with the given event details.","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"Samuel-bit-prog"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"Samuel-bit-prog"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"Samuel-bit-prog"},"content":"    public JsonAdaptedEvent(@JsonProperty(\"name\") String name, @JsonProperty(\"date\") String date,","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"Samuel-bit-prog"},"content":"                            @JsonProperty(\"participants\") List\u003cJsonAdaptedMember\u003e participants,","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"Samuel-bit-prog"},"content":"                            @JsonProperty(\"attendanceList\") List\u003cBoolean\u003e attendanceList) {","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"Samuel-bit-prog"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"Samuel-bit-prog"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"Samuel-bit-prog"},"content":"        this.participants \u003d participants;","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"Samuel-bit-prog"},"content":"        this.attendanceList \u003d attendanceList;","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"Samuel-bit-prog"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Converts a given {@code Event} into this class for Jackson use.","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"Samuel-bit-prog"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"Samuel-bit-prog"},"content":"    public JsonAdaptedEvent(Event source) {","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"Samuel-bit-prog"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"Samuel-bit-prog"},"content":"        date \u003d source.getDate().toString();","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"Samuel-bit-prog"},"content":"        participants \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"Samuel-bit-prog"},"content":"        attendanceList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"Samuel-bit-prog"},"content":"        for (Member m : source.getParticipants()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"Samuel-bit-prog"},"content":"            participants.add(new JsonAdaptedMember(m));","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"Samuel-bit-prog"},"content":"            attendanceList.add(source.hasAttended(m));","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"Samuel-bit-prog"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"Samuel-bit-prog"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Converts this Jackson-friendly adapted member object into the model\u0027s {@code Event} object.","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"Samuel-bit-prog"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted event.","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"Samuel-bit-prog"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"Samuel-bit-prog"},"content":"    public Event toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"Samuel-bit-prog"},"content":"        final Map\u003cMember, Boolean\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"Samuel-bit-prog"},"content":"        for (int i \u003d 0; i \u003c participants.size(); i++) {","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"Samuel-bit-prog"},"content":"            map.put(participants.get(i).toModelType(), attendanceList.get(i));","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"Samuel-bit-prog"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"Samuel-bit-prog"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"Samuel-bit-prog"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_EVENT_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"Samuel-bit-prog"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"Samuel-bit-prog"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"Samuel-bit-prog"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"Samuel-bit-prog"},"content":"        final Name modelEventName \u003d new Name(name);","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"Samuel-bit-prog"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"Samuel-bit-prog"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_EVENT_FORMAT, \"date\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"Samuel-bit-prog"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"leeroy999"},"content":"        if (!EventDate.isValidEventDate(date)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"leeroy999"},"content":"            throw new IllegalValueException(EventDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"Samuel-bit-prog"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"leeroy999"},"content":"        final EventDate modelEventDate \u003d new EventDate(date);","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"leeroy999"},"content":"        return new Event(modelEventName, modelEventDate, map);","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"Samuel-bit-prog"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"Samuel-bit-prog":81,"leeroy999":5}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedMember.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.Name;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Address;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Email;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Phone;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.position.Position;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.task.Task;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.task.TaskList;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":" * Jackson-friendly version of {@link Member}.","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"class JsonAdaptedMember {","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Member\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"LiuZhi1an"},"content":"    private final List\u003cJsonAdaptedPosition\u003e attachedPositions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"    private final List\u003cJsonAdaptedTask\u003e attachedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"     * Constructs a {@code JsonAdaptedMember} with the given member details.","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"    public JsonAdaptedMember(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"tsiyuk"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"                             @JsonProperty(\"attachedPosition\") List\u003cJsonAdaptedPosition\u003e attachedPositions,","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"                             @JsonProperty(\"attachedTasks\") List\u003cJsonAdaptedTask\u003e attachedTasks) {","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"        this.email \u003d email;","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"tsiyuk"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"tsiyuk"},"content":"        if (attachedPositions !\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"tsiyuk"},"content":"            this.attachedPositions.addAll(attachedPositions);","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"tsiyuk"},"content":"        if (attachedTasks !\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"tsiyuk"},"content":"            this.attachedTasks.addAll(attachedTasks);","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"leeroy999"},"content":"     * Converts a given {@code Member} into this class for Jackson use.","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"leeroy999"},"content":"    public JsonAdaptedMember(Member source) {","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"tsiyuk"},"content":"        email \u003d source.getEmail().isPresent() ? source.getEmail().get().value : null;","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"tsiyuk"},"content":"        address \u003d source.getAddress().isPresent() ? source.getAddress().get().value : null;","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"LiuZhi1an"},"content":"        attachedPositions.addAll(source.getPositions().stream()","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"LiuZhi1an"},"content":"                .map(JsonAdaptedPosition::new)","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"tsiyuk"},"content":"        source.getTaskList().iterator().forEachRemaining((task -\u003e attachedTasks.add(new JsonAdaptedTask(task))));","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"leeroy999"},"content":"     * Converts this Jackson-friendly adapted member object into the model\u0027s {@code Member} object.","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"leeroy999"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted member.","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"LiuZhi1an"},"content":"    public Member toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"LiuZhi1an"},"content":"        final List\u003cPosition\u003e memberPositions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"tsiyuk"},"content":"        for (JsonAdaptedPosition position : attachedPositions) {","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"tsiyuk"},"content":"            memberPositions.add(position.toModelType());","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"tsiyuk"},"content":"        final List\u003cTask\u003e memberTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"tsiyuk"},"content":"        for (JsonAdaptedTask task : attachedTasks) {","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"tsiyuk"},"content":"            memberTaskList.add(task.toModelType());","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"tsiyuk"},"content":"        Email modelEmail;","lastModifiedDate":"2021-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"tsiyuk"},"content":"            modelEmail \u003d null;","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"tsiyuk"},"content":"        } else {","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"tsiyuk"},"content":"            modelEmail \u003d new Email(email);","lastModifiedDate":"2021-10-13"},{"lineNumber":111,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"tsiyuk"},"content":"        Address modelAddress;","lastModifiedDate":"2021-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"tsiyuk"},"content":"            modelAddress \u003d null;","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"tsiyuk"},"content":"        } else {","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"tsiyuk"},"content":"            modelAddress \u003d new Address(address);","lastModifiedDate":"2021-10-13"},{"lineNumber":121,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"LiuZhi1an"},"content":"        final Set\u003cPosition\u003e modelPositions \u003d new HashSet\u003c\u003e(memberPositions);","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"tsiyuk"},"content":"        final TaskList modelTaskList \u003d new TaskList();","lastModifiedDate":"2021-10-09"},{"lineNumber":125,"author":{"gitId":"tsiyuk"},"content":"        modelTaskList.setTasks(memberTaskList);","lastModifiedDate":"2021-10-09"},{"lineNumber":126,"author":{"gitId":"tsiyuk"},"content":"        return new Member(modelName, modelPhone, modelEmail, modelAddress, modelPositions, modelTaskList);","lastModifiedDate":"2021-10-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"LiuZhi1an":7,"-":63,"tsiyuk":44,"Samuel-bit-prog":8,"leeroy999":7}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPosition.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LiuZhi1an"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"LiuZhi1an"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"LiuZhi1an"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.position.Position;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"LiuZhi1an"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"LiuZhi1an"},"content":" * Jackson-friendly version of {@link Position}.","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"LiuZhi1an"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"LiuZhi1an"},"content":"class JsonAdaptedPosition {","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"LiuZhi1an"},"content":"    private final String positionName;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"LiuZhi1an"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"LiuZhi1an"},"content":"     * Constructs a {@code JsonAdaptedPosition} with the given {@code positionName}.","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"LiuZhi1an"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"LiuZhi1an"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"LiuZhi1an"},"content":"    public JsonAdaptedPosition(String positionName) {","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"LiuZhi1an"},"content":"        this.positionName \u003d positionName;","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"LiuZhi1an"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"LiuZhi1an"},"content":"     * Converts a given {@code Position} into this class for Jackson use.","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"LiuZhi1an"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"LiuZhi1an"},"content":"    public JsonAdaptedPosition(Position source) {","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"LiuZhi1an"},"content":"        positionName \u003d source.positionName;","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"LiuZhi1an"},"content":"    @JsonValue","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"LiuZhi1an"},"content":"    public String getPositionName() {","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"LiuZhi1an"},"content":"        return positionName;","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"LiuZhi1an"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"LiuZhi1an"},"content":"     * Converts this Jackson-friendly adapted position object into the model\u0027s {@code Position} object.","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"LiuZhi1an"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"LiuZhi1an"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted position.","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"LiuZhi1an"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"LiuZhi1an"},"content":"    public Position toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"LiuZhi1an"},"content":"        if (!Position.isValidPositionName(positionName)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"LiuZhi1an"},"content":"            throw new IllegalValueException(Position.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"LiuZhi1an"},"content":"        return new Position(positionName);","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"LiuZhi1an"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"LiuZhi1an":47,"Samuel-bit-prog":1}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.model.module.Name;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.task.Task;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.model.module.task.TaskDeadline;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":" * Jackson-friendly version pf {@link Task}","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"class JsonAdaptedTask {","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"    public static final String MISSING_FIELD_TASK_FORMAT \u003d \"Task\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"    private final String taskName;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"    private final Boolean isDone;","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"    private final String deadline;","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"     * Constructs a {@code JsonAdaptedTask} with the given {@code taskName, isDone, deadline}.","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"    public JsonAdaptedTask(@JsonProperty(\"taskName\") String taskName, @JsonProperty(\"isDone\") boolean isDone,","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"                           @JsonProperty(\"deadline\") String deadline) {","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"     * Converts a given {@code Task} into this class for Jackson use.","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"    public JsonAdaptedTask(Task source) {","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"        taskName \u003d source.getName().toString();","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"        isDone \u003d source.isDone();","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"        deadline \u003d source.getTaskDeadline().toString();","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"     * Converts this Jackson-friendly adapted task object into the model\u0027s {@code Task} object.","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"    public Task toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"tsiyuk"},"content":"        if (taskName \u003d\u003d null) {","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"tsiyuk"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_TASK_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"tsiyuk"},"content":"        if (!Name.isValidName(taskName)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"tsiyuk"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"tsiyuk"},"content":"        final Name modelTaskName \u003d new Name(taskName);","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"tsiyuk"},"content":"        if (isDone \u003d\u003d null) {","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"tsiyuk"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_TASK_FORMAT, Boolean.class.getSimpleName()));","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"tsiyuk"},"content":"        if (deadline \u003d\u003d null) {","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"tsiyuk"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_TASK_FORMAT,","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"tsiyuk"},"content":"                    TaskDeadline.class.getSimpleName()));","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"tsiyuk"},"content":"        if (!TaskDeadline.isValidTaskDeadline(deadline)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"tsiyuk"},"content":"            throw new IllegalValueException(TaskDeadline.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"tsiyuk"},"content":"        final TaskDeadline modelTaskDeadline \u003d new TaskDeadline(deadline);","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"tsiyuk"},"content":"        return new Task(modelTaskName, isDone, modelTaskDeadline);","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"tsiyuk":69,"Samuel-bit-prog":1}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.event.Event;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"GWphua"},"content":"@JsonRootName(value \u003d \"ailurus\")","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"LiuZhi1an"},"content":"    public static final String MESSAGE_DUPLICATE_MEMBER \u003d \"Members list contains duplicate member(s).\";","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"Samuel-bit-prog"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"Events list contains duplicate event(s).\";","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"    private final List\u003cJsonAdaptedMember\u003e members \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"Samuel-bit-prog"},"content":"    private final List\u003cJsonAdaptedEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given members and events.","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"Samuel-bit-prog"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"members\") List\u003cJsonAdaptedMember\u003e members,","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"Samuel-bit-prog"},"content":"                                       @JsonProperty(\"events\") List\u003cJsonAdaptedEvent\u003e events) {","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"        this.members.addAll(members);","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"Samuel-bit-prog"},"content":"        this.events.addAll(events);","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"leeroy999"},"content":"        members.addAll(source.getMemberList().stream().map(JsonAdaptedMember::new).collect(Collectors.toList()));","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"Samuel-bit-prog"},"content":"        events.addAll(source.getEventList().stream().map(JsonAdaptedEvent::new).collect(Collectors.toList()));","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"leeroy999"},"content":"        for (JsonAdaptedMember jsonAdaptedMember : members) {","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"leeroy999"},"content":"            Member member \u003d jsonAdaptedMember.toModelType();","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"leeroy999"},"content":"            if (addressBook.hasMember(member)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"LiuZhi1an"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_MEMBER);","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"leeroy999"},"content":"            addressBook.addMember(member);","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"Samuel-bit-prog"},"content":"        for (JsonAdaptedEvent jsonAdaptedEvent : events) {","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"Samuel-bit-prog"},"content":"            Event event \u003d jsonAdaptedEvent.toModelType();","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"Samuel-bit-prog"},"content":"            if (addressBook.hasEvent(event)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"Samuel-bit-prog"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"Samuel-bit-prog"},"content":"            addressBook.addEvent(event);","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"GWphua":1,"LiuZhi1an":2,"-":50,"Samuel-bit-prog":14,"leeroy999":7}},{"path":"src/main/java/seedu/address/ui/EventCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"GWphua"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"GWphua"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"GWphua"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"GWphua"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"GWphua"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"GWphua"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"GWphua"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.event.Event;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"GWphua"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"GWphua"},"content":" * A UI component that displays information of a {@code Event}.","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"GWphua"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"GWphua"},"content":"public class EventCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"GWphua"},"content":"    private static final String FXML \u003d \"EventListCard.fxml\";","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"GWphua"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"GWphua"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"GWphua"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"GWphua"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"GWphua"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"GWphua"},"content":"    public final Event event;","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"GWphua"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"GWphua"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"GWphua"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"GWphua"},"content":"    private Label name;","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"GWphua"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"GWphua"},"content":"    private Label id;","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"GWphua"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"GWphua"},"content":"    private Label date;","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"GWphua"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"GWphua"},"content":"    private FlowPane participants;","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"     * Creates a {@code EventCard} with the given {@code Event} and index to display.","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"GWphua"},"content":"    public EventCard(Event event, int displayedIndex) {","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"GWphua"},"content":"        super(FXML);","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"GWphua"},"content":"        this.event \u003d event;","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"GWphua"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"GWphua"},"content":"        name.setText(event.getName().fullName);","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"leeroy999"},"content":"        date.setText(\"Date: \" + event.getDate().toString());","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"GWphua"},"content":"        event.getParticipants().stream()","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"GWphua"},"content":"                .sorted(Comparator.comparing(member -\u003e member.getName().fullName))","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"GWphua"},"content":"                .forEach(member -\u003e {","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"GWphua"},"content":"                    Label participantLabel \u003d new Label(member.getName().fullName);","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"GWphua"},"content":"                    if (event.hasAttended(member)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"GWphua"},"content":"                        participantLabel.setStyle(\"-fx-background-color: #3f7318\");","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"GWphua"},"content":"                    } else {","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"GWphua"},"content":"                        participantLabel.setStyle(\"-fx-background-color: #7c0236\");","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"GWphua"},"content":"                    }","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"leeroy999"},"content":"                    participantLabel.setMaxWidth(100);","lastModifiedDate":"2021-10-30"},{"lineNumber":59,"author":{"gitId":"leeroy999"},"content":"                    participantLabel.setWrapText(true);","lastModifiedDate":"2021-10-30"},{"lineNumber":60,"author":{"gitId":"GWphua"},"content":"                    participants.getChildren().add(participantLabel);","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"GWphua"},"content":"                });","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"GWphua"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"GWphua"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"GWphua"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"GWphua"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"GWphua"},"content":"            return true;","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"GWphua"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"GWphua"},"content":"        if (!(other instanceof EventCard)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"GWphua"},"content":"            return false;","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"GWphua"},"content":"        // state check","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"GWphua"},"content":"        EventCard card \u003d (EventCard) other;","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"GWphua"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"GWphua"},"content":"                \u0026\u0026 event.equals(card.event);","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"GWphua"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"GWphua":76,"Samuel-bit-prog":1,"leeroy999":4}},{"path":"src/main/java/seedu/address/ui/EventListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"GWphua"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"GWphua"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"GWphua"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"GWphua"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"GWphua"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"GWphua"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"GWphua"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"GWphua"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"GWphua"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.event.Event;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"GWphua"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"GWphua"},"content":" * Panel containing the list of events.","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"GWphua"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"GWphua"},"content":"public class EventListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"GWphua"},"content":"    private static final String FXML \u003d \"EventListPanel.fxml\";","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"GWphua"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(EventListPanel.class);","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"GWphua"},"content":"    @FXML","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"GWphua"},"content":"    private Label eventListTitle;","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"GWphua"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"GWphua"},"content":"    private ListView\u003cEvent\u003e eventListView;","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"GWphua"},"content":"     * Creates a {@code EventListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"GWphua"},"content":"    public EventListPanel(ObservableList\u003cEvent\u003e eventList) {","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"GWphua"},"content":"        super(FXML);","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"        eventListTitle.setText(\"Event List\");","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"GWphua"},"content":"        eventListView.setItems(eventList);","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"GWphua"},"content":"        eventListView.setCellFactory(listView -\u003e new EventListViewCell());","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"GWphua"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Event} using a {@code EventCard}.","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"GWphua"},"content":"    class EventListViewCell extends ListCell\u003cEvent\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"GWphua"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"GWphua"},"content":"        protected void updateItem(Event event, boolean empty) {","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"GWphua"},"content":"            super.updateItem(event, empty);","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"GWphua"},"content":"            if (empty || event \u003d\u003d null) {","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"GWphua"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"GWphua"},"content":"                setText(null);","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"GWphua"},"content":"            } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"GWphua"},"content":"                setGraphic(new EventCard(event, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"GWphua"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"GWphua"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"GWphua":51,"Samuel-bit-prog":1,"leeroy999":1}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s1-cs2103t-t15-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":101,"leeroy999":1}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"    private MemberListPanel memberListPanel;","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"GWphua"},"content":"    private EventListPanel eventListPanel;","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"GWphua"},"content":"    private TaskListPanel taskListPanel;","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"leeroy999"},"content":"    private StackPane memberListPanelPlaceholder;","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"GWphua"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"GWphua"},"content":"    private StackPane eventListPanelPlaceholder;","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"GWphua"},"content":"    @FXML","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"GWphua"},"content":"    private StackPane taskListPanelPlaceholder;","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"GWphua"},"content":"        fillMemberListPanel();","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"GWphua"},"content":"        fillEventListPanel();","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"GWphua"},"content":"        fillTaskListPanel();","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"GWphua"},"content":"        fillResultDisplay();","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"GWphua"},"content":"        fillStatusBarFooter();","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"GWphua"},"content":"        fillCommandBox();","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":169,"author":{"gitId":"GWphua"},"content":"    private void fillMemberListPanel() {","lastModifiedDate":"2021-10-24"},{"lineNumber":170,"author":{"gitId":"GWphua"},"content":"        memberListPanel \u003d new MemberListPanel(logic.getFilteredMemberList(), logic.getCurrentEvent());","lastModifiedDate":"2021-10-28"},{"lineNumber":171,"author":{"gitId":"GWphua"},"content":"        memberListPanelPlaceholder.getChildren().add(memberListPanel.getRoot());","lastModifiedDate":"2021-10-24"},{"lineNumber":172,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":173,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":174,"author":{"gitId":"GWphua"},"content":"    private void fillEventListPanel() {","lastModifiedDate":"2021-10-24"},{"lineNumber":175,"author":{"gitId":"GWphua"},"content":"        eventListPanel \u003d new EventListPanel(logic.getFilteredEventList());","lastModifiedDate":"2021-10-24"},{"lineNumber":176,"author":{"gitId":"GWphua"},"content":"        eventListPanelPlaceholder.getChildren().add(eventListPanel.getRoot());","lastModifiedDate":"2021-10-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":179,"author":{"gitId":"GWphua"},"content":"    private void fillTaskListPanel() {","lastModifiedDate":"2021-10-24"},{"lineNumber":180,"author":{"gitId":"GWphua"},"content":"        taskListPanel \u003d new TaskListPanel(logic.getFilteredTaskList(), logic.getCurrentMember());","lastModifiedDate":"2021-10-28"},{"lineNumber":181,"author":{"gitId":"GWphua"},"content":"        taskListPanelPlaceholder.getChildren().add(taskListPanel.getRoot());","lastModifiedDate":"2021-10-24"},{"lineNumber":182,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":183,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":184,"author":{"gitId":"GWphua"},"content":"    private void fillResultDisplay() {","lastModifiedDate":"2021-10-24"},{"lineNumber":185,"author":{"gitId":"GWphua"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2021-10-24"},{"lineNumber":186,"author":{"gitId":"GWphua"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2021-10-24"},{"lineNumber":187,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":188,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":189,"author":{"gitId":"GWphua"},"content":"    private void fillStatusBarFooter() {","lastModifiedDate":"2021-10-24"},{"lineNumber":190,"author":{"gitId":"GWphua"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2021-10-24"},{"lineNumber":191,"author":{"gitId":"GWphua"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2021-10-24"},{"lineNumber":192,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":193,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":194,"author":{"gitId":"GWphua"},"content":"    private void fillCommandBox() {","lastModifiedDate":"2021-10-24"},{"lineNumber":195,"author":{"gitId":"GWphua"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":196,"author":{"gitId":"GWphua"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2021-10-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"GWphua"},"content":"            fillMemberListPanel();","lastModifiedDate":"2021-10-24"},{"lineNumber":210,"author":{"gitId":"GWphua"},"content":"            fillTaskListPanel();","lastModifiedDate":"2021-10-24"},{"lineNumber":211,"author":{"gitId":"GWphua"},"content":"            fillEventListPanel();","lastModifiedDate":"2021-10-24"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":228,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"GWphua":42,"-":184,"leeroy999":2}},{"path":"src/main/java/seedu/address/ui/MemberCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"GWphua"},"content":" * A UI component that displays information of a {@code Member}.","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"public class MemberCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"    private static final String FXML \u003d \"MemberListCard.fxml\";","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"    public final Member member;","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"LiuZhi1an"},"content":"    private FlowPane positions;","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"GWphua"},"content":"    @FXML","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"GWphua"},"content":"    private FlowPane tasks;","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"leeroy999"},"content":"     * Creates a {@code MemberCode} with the given {@code Member} and index to display.","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"leeroy999"},"content":"    public MemberCard(Member member, int displayedIndex) {","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"leeroy999"},"content":"        this.member \u003d member;","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"leeroy999"},"content":"        name.setText(member.getName().fullName);","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"leeroy999"},"content":"        phone.setText(\"Phone: \" + member.getPhone().value);","lastModifiedDate":"2021-10-30"},{"lineNumber":55,"author":{"gitId":"leeroy999"},"content":"        member.getAddress().ifPresentOrElse(a -\u003e {","lastModifiedDate":"2021-10-30"},{"lineNumber":56,"author":{"gitId":"leeroy999"},"content":"            address.setText(\"Address: \" + a.value);","lastModifiedDate":"2021-10-30"},{"lineNumber":57,"author":{"gitId":"leeroy999"},"content":"        }, () -\u003e address.setVisible(false));","lastModifiedDate":"2021-10-30"},{"lineNumber":58,"author":{"gitId":"leeroy999"},"content":"        member.getEmail().ifPresentOrElse(e -\u003e {","lastModifiedDate":"2021-10-30"},{"lineNumber":59,"author":{"gitId":"leeroy999"},"content":"            email.setText(\"Email: \" + e.value);","lastModifiedDate":"2021-10-30"},{"lineNumber":60,"author":{"gitId":"leeroy999"},"content":"        }, () -\u003e email.setVisible(false));","lastModifiedDate":"2021-10-30"},{"lineNumber":61,"author":{"gitId":"LiuZhi1an"},"content":"        member.getPositions().stream()","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"LiuZhi1an"},"content":"                .sorted(Comparator.comparing(position -\u003e position.positionName))","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"leeroy999"},"content":"                .forEach(position -\u003e {","lastModifiedDate":"2021-10-31"},{"lineNumber":64,"author":{"gitId":"leeroy999"},"content":"                    Label positionLabel \u003d new Label(position.positionName);","lastModifiedDate":"2021-10-31"},{"lineNumber":65,"author":{"gitId":"leeroy999"},"content":"                    positionLabel.setMaxWidth(100);","lastModifiedDate":"2021-10-31"},{"lineNumber":66,"author":{"gitId":"leeroy999"},"content":"                    positionLabel.setWrapText(true);","lastModifiedDate":"2021-10-31"},{"lineNumber":67,"author":{"gitId":"leeroy999"},"content":"                    positions.getChildren().add(positionLabel);","lastModifiedDate":"2021-10-31"},{"lineNumber":68,"author":{"gitId":"leeroy999"},"content":"                });","lastModifiedDate":"2021-10-31"},{"lineNumber":69,"author":{"gitId":"GWphua"},"content":"        member.getTaskList().asUnmodifiableObservableList().stream()","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"tsiyuk"},"content":"                .sorted(Comparator.comparing(task -\u003e task.getName().toString()))","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"GWphua"},"content":"                .forEach(task -\u003e {","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"GWphua"},"content":"                    Label taskLabel \u003d new Label(task.getName().toString());","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"GWphua"},"content":"                    if (task.isDone()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"GWphua"},"content":"                        taskLabel.setStyle(\"-fx-background-color: #3f7318\");","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"GWphua"},"content":"                    } else {","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"GWphua"},"content":"                        taskLabel.setStyle(\"-fx-background-color: #7c0236\");","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"GWphua"},"content":"                    }","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"leeroy999"},"content":"                    taskLabel.setMaxWidth(100);","lastModifiedDate":"2021-10-30"},{"lineNumber":79,"author":{"gitId":"leeroy999"},"content":"                    taskLabel.setWrapText(true);","lastModifiedDate":"2021-10-30"},{"lineNumber":80,"author":{"gitId":"GWphua"},"content":"                    tasks.getChildren().add(taskLabel);","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"GWphua"},"content":"                });","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":92,"author":{"gitId":"leeroy999"},"content":"        if (!(other instanceof MemberCard)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":97,"author":{"gitId":"leeroy999"},"content":"        MemberCard card \u003d (MemberCard) other;","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":99,"author":{"gitId":"leeroy999"},"content":"                \u0026\u0026 member.equals(card.member);","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"GWphua":13,"LiuZhi1an":3,"-":58,"tsiyuk":1,"Samuel-bit-prog":1,"leeroy999":25}},{"path":"src/main/java/seedu/address/ui/MemberListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"GWphua"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"GWphua"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"GWphua"},"content":"import seedu.address.model.module.event.Event;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":" * Panel containing the list of members.","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"public class MemberListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"    private static final String FXML \u003d \"MemberListPanel.fxml\";","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(MemberListPanel.class);","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"GWphua"},"content":"    @FXML","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"GWphua"},"content":"    private Label memberListTitle;","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"    private ListView\u003cMember\u003e memberListView;","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"GWphua"},"content":"     * Creates a {@code MemberListPanel} with the given {@code ObservableList} and {@code Event}.","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"GWphua"},"content":"    public MemberListPanel(ObservableList\u003cMember\u003e memberList, Optional\u003cEvent\u003e event) {","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"GWphua"},"content":"        super(FXML);","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"        String titleText \u003d event.isPresent()","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"                ? event.get().getName().fullName + \"\u0027s Members\"","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"                : \"Member List\";","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"        memberListTitle.setText(titleText);","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"leeroy999"},"content":"        memberListView.setItems(memberList);","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"leeroy999"},"content":"        memberListView.setCellFactory(listView -\u003e new MemberListViewCell());","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"leeroy999"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Member} using a {@code MemberCard}.","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"    class MemberListViewCell extends ListCell\u003cMember\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"leeroy999"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"leeroy999"},"content":"        protected void updateItem(Member member, boolean empty) {","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"leeroy999"},"content":"            super.updateItem(member, empty);","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"leeroy999"},"content":"            if (empty || member \u003d\u003d null) {","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"leeroy999"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"leeroy999"},"content":"                setText(null);","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"leeroy999"},"content":"            } else {","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"leeroy999"},"content":"                setGraphic(new MemberCard(member, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"leeroy999"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"leeroy999"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"GWphua":10,"leeroy999":46,"Samuel-bit-prog":1}},{"path":"src/main/java/seedu/address/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"        resultDisplay.setWrapText(true);","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":28,"leeroy999":1}},{"path":"src/main/java/seedu/address/ui/TaskCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"GWphua"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"GWphua"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"GWphua"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"GWphua"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"GWphua"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"GWphua"},"content":"import seedu.address.model.module.task.Task;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"GWphua"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"GWphua"},"content":" * A UI component that displays information of a {@code Task}.","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"GWphua"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"GWphua"},"content":"public class TaskCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"GWphua"},"content":"    private static final String FXML \u003d \"TaskListCard.fxml\";","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"GWphua"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"GWphua"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"GWphua"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"GWphua"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"GWphua"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"GWphua"},"content":"    public final Task task;","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"GWphua"},"content":"    @FXML","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"GWphua"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"GWphua"},"content":"    @FXML","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"GWphua"},"content":"    private Label name;","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"GWphua"},"content":"    @FXML","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"GWphua"},"content":"    private Label id;","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"GWphua"},"content":"    @FXML","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"GWphua"},"content":"    private Label deadline;","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"GWphua"},"content":"    @FXML","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"GWphua"},"content":"    private Label isDone;","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"GWphua"},"content":"     * Creates a {@code TaskCard} with the given {@code Task} and index to display.","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"GWphua"},"content":"    public TaskCard(Task task, int displayedIndex) {","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"GWphua"},"content":"        super(FXML);","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"GWphua"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"GWphua"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"        name.setText(task.getName().toString());","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"GWphua"},"content":"        deadline.setText(\"Due: \" + task.getTaskDeadline().toString());","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"GWphua"},"content":"        isDone.setText(task.isDone()","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"leeroy999"},"content":"                ? \"Progress: Completed\"","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"leeroy999"},"content":"                : \"Progress: Incomplete\");","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"GWphua"},"content":"    @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"GWphua"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"GWphua"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"GWphua"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"GWphua"},"content":"            return true;","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"GWphua"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"GWphua"},"content":"        if (!(other instanceof TaskCard)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"GWphua"},"content":"            return false;","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"GWphua"},"content":"        // state check","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"GWphua"},"content":"        TaskCard card \u003d (TaskCard) other;","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"GWphua"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"GWphua"},"content":"                \u0026\u0026 task.equals(card.task);","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"GWphua"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"GWphua":65,"tsiyuk":1,"leeroy999":2}},{"path":"src/main/java/seedu/address/ui/TaskListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"GWphua"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"GWphua"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"GWphua"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"GWphua"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"GWphua"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"GWphua"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"GWphua"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"GWphua"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"GWphua"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"GWphua"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"GWphua"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"GWphua"},"content":"import seedu.address.model.module.task.Task;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"GWphua"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"GWphua"},"content":" * Panel containing the list of tasks.","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"GWphua"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"GWphua"},"content":"public class TaskListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"GWphua"},"content":"    private static final String FXML \u003d \"TaskListPanel.fxml\";","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"GWphua"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TaskListPanel.class);","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"GWphua"},"content":"    @FXML","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"GWphua"},"content":"    private Label taskListTitle;","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"GWphua"},"content":"    @FXML","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"GWphua"},"content":"    private ListView\u003cTask\u003e taskListView;","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"GWphua"},"content":"     * Creates a {@code TaskListPanel} with the given {@code ObservableList} and {@code Member},","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"GWphua"},"content":"    public TaskListPanel(ObservableList\u003cTask\u003e taskList, Optional\u003cMember\u003e member) {","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"GWphua"},"content":"        super(FXML);","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"        String titleText \u003d member.isPresent()","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"                ? member.get().getName().fullName + \"\u0027s Tasks\"","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"                : \"Task List\";","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"        taskListTitle.setText(titleText);","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"GWphua"},"content":"        taskListView.setItems(taskList);","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"GWphua"},"content":"        taskListView.setCellFactory(listView -\u003e new TaskListViewCell());","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"GWphua"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Task} using a {@code TaskCard}.","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"GWphua"},"content":"    class TaskListViewCell extends ListCell\u003cTask\u003e {","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"GWphua"},"content":"        @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"GWphua"},"content":"        protected void updateItem(Task task, boolean empty) {","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"GWphua"},"content":"            super.updateItem(task, empty);","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"GWphua"},"content":"            if (empty || task \u003d\u003d null) {","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"GWphua"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"GWphua"},"content":"                setText(null);","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"GWphua"},"content":"            } else {","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"GWphua"},"content":"                setGraphic(new TaskCard(task, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"GWphua"},"content":"            }","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"GWphua"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"GWphua":53,"leeroy999":4}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"GWphua"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/favicon.png\";","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"GWphua"},"content":"        assert MainApp.class.getResourceAsStream(imagePath) !\u003d null;","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"GWphua":2,"-":88}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"    -fx-background-color: derive(#300000, 20%);","lastModifiedDate":"2021-10-30"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"    background-color: #500000; /* Used in the default.html file */","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"GWphua"},"content":"    -fx-border-color: #0b0ef8;","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"leeroy999"},"content":"#filterField, #memberListPanel, #memberWebpage {","lastModifiedDate":"2021-10-07"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"LiuZhi1an"},"content":"#positions {","lastModifiedDate":"2021-10-07"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"GWphua"},"content":"#positions .label {","lastModifiedDate":"2021-10-27"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"GWphua"},"content":"    -fx-background-color: #7e57c2;","lastModifiedDate":"2021-10-27"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":354,"author":{"gitId":"GWphua"},"content":"#participants .label {","lastModifiedDate":"2021-10-27"},{"lineNumber":355,"author":{"gitId":"GWphua"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-27"},{"lineNumber":356,"author":{"gitId":"GWphua"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2021-10-27"},{"lineNumber":357,"author":{"gitId":"GWphua"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2021-10-27"},{"lineNumber":358,"author":{"gitId":"GWphua"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2021-10-27"},{"lineNumber":359,"author":{"gitId":"GWphua"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2021-10-27"},{"lineNumber":360,"author":{"gitId":"GWphua"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":361,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":362,"author":{"gitId":"GWphua"},"content":"#participants {","lastModifiedDate":"2021-10-13"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2021-10-13"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2021-10-13"},{"lineNumber":365,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":367,"author":{"gitId":"GWphua"},"content":"#participants .label {","lastModifiedDate":"2021-10-13"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-13"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2021-10-13"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2021-10-13"},{"lineNumber":371,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2021-10-13"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2021-10-13"},{"lineNumber":373,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":374,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":375,"author":{"gitId":"GWphua"},"content":"#tasks {","lastModifiedDate":"2021-10-13"},{"lineNumber":376,"author":{"gitId":"GWphua"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2021-10-13"},{"lineNumber":377,"author":{"gitId":"GWphua"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2021-10-13"},{"lineNumber":378,"author":{"gitId":"GWphua"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":379,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":380,"author":{"gitId":"GWphua"},"content":"#tasks .label {","lastModifiedDate":"2021-10-13"},{"lineNumber":381,"author":{"gitId":"GWphua"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-13"},{"lineNumber":382,"author":{"gitId":"GWphua"},"content":"    -fx-background-color: #b43360;","lastModifiedDate":"2021-10-13"},{"lineNumber":383,"author":{"gitId":"GWphua"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2021-10-13"},{"lineNumber":384,"author":{"gitId":"GWphua"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2021-10-13"},{"lineNumber":385,"author":{"gitId":"GWphua"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2021-10-13"},{"lineNumber":386,"author":{"gitId":"GWphua"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2021-10-13"},{"lineNumber":387,"author":{"gitId":"GWphua"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":388,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":389,"author":{"gitId":"GWphua"},"content":"#titleHolder {","lastModifiedDate":"2021-10-26"},{"lineNumber":390,"author":{"gitId":"GWphua"},"content":"    -fx-background-color: #36454f;","lastModifiedDate":"2021-10-27"},{"lineNumber":391,"author":{"gitId":"GWphua"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":392,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":393,"author":{"gitId":"leeroy999"},"content":".title {","lastModifiedDate":"2021-10-30"},{"lineNumber":394,"author":{"gitId":"leeroy999"},"content":"    -fx-background-color: #36454f;","lastModifiedDate":"2021-10-30"},{"lineNumber":395,"author":{"gitId":"leeroy999"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2021-10-30"},{"lineNumber":396,"author":{"gitId":"leeroy999"},"content":"}","lastModifiedDate":"2021-10-30"},{"lineNumber":397,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":398,"author":{"gitId":"GWphua"},"content":"#memberListTitle, #taskListTitle, #eventListTitle {","lastModifiedDate":"2021-10-27"},{"lineNumber":399,"author":{"gitId":"GWphua"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-27"},{"lineNumber":400,"author":{"gitId":"GWphua"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"GWphua":36,"LiuZhi1an":1,"-":355,"leeroy999":8}},{"path":"src/main/resources/view/EventListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"GWphua"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"GWphua"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"GWphua"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"GWphua"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"GWphua"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"GWphua"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"GWphua"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"GWphua"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"GWphua"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"GWphua"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"GWphua"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"GWphua"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"GWphua"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"GWphua"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"GWphua"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"GWphua"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"GWphua"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"GWphua"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"GWphua"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"GWphua"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"GWphua"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"GWphua"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"GWphua"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"GWphua"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"GWphua"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"GWphua"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"GWphua"},"content":"            \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$date\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"            \u003cFlowPane fx:id\u003d\"participants\" /\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"GWphua"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"GWphua"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"GWphua"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"GWphua":32,"leeroy999":2}},{"path":"src/main/resources/view/EventListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"GWphua"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"GWphua"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"GWphua"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"GWphua"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"GWphua"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"\u003c?import javafx.scene.layout.BorderPane?\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"GWphua"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"  \u003cBorderPane prefWidth\u003d\"248\" styleClass\u003d\"title\"\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"    \u003ccenter\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"GWphua"},"content":"      \u003cLabel fx:id\u003d\"eventListTitle\" accessibleRole\u003d\"TEXT_AREA\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\"","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"GWphua"},"content":"             textAlignment\u003d\"CENTER\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"GWphua"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"GWphua"},"content":"          \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"GWphua"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"GWphua"},"content":"      \u003c/Label\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"    \u003c/center\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"  \u003c/BorderPane\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"  \u003cListView fx:id\u003d\"eventListView\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"    \u003cplaceholder\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"      \u003cLabel text\u003d\"No event listed.\" /\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"    \u003c/placeholder\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"  \u003c/ListView\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"GWphua"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"GWphua":16,"leeroy999":10}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2019-08-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cHBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"GWphua"},"content":"              \u003cInsets right\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"GWphua":1,"-":44}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"GWphua"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"GWphua"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"         title\u003d\"Ailurus\" minWidth\u003d\"700\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"GWphua"},"content":"    \u003cImage url\u003d\"@/images/favicon.png\" /\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":39,"author":{"gitId":"GWphua"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"GWphua"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"leeroy999"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"150\" minHeight\u003d\"100\" prefHeight\u003d\"125\"","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"GWphua"},"content":"                   styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"GWphua"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":52,"author":{"gitId":"leeroy999"},"content":"        \u003cSplitPane dividerPositions\u003d\"0.333\" prefHeight\u003d\"160\" prefWidth\u003d\"700\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"GWphua"},"content":"          \u003citems\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"leeroy999"},"content":"            \u003cAnchorPane minHeight\u003d\"160\" minWidth\u003d\"200\"\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":55,"author":{"gitId":"GWphua"},"content":"              \u003cchildren\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"leeroy999"},"content":"                \u003cVBox fx:id\u003d\"eventList\" prefHeight\u003d\"158\" prefWidth\u003d\"195\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2021-10-30"},{"lineNumber":57,"author":{"gitId":"GWphua"},"content":"                      AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\"","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"GWphua"},"content":"                      AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":60,"author":{"gitId":"GWphua"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"GWphua"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"GWphua"},"content":"                  \u003cStackPane fx:id\u003d\"eventListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"GWphua"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"GWphua"},"content":"              \u003c/children\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"GWphua"},"content":"            \u003c/AnchorPane\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"leeroy999"},"content":"            \u003cSplitPane dividerPositions\u003d\"0.50\" prefHeight\u003d\"160\" prefWidth\u003d\"400\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":67,"author":{"gitId":"GWphua"},"content":"              \u003citems\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"leeroy999"},"content":"                \u003cAnchorPane minHeight\u003d\"160\" minWidth\u003d\"200\"\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":69,"author":{"gitId":"GWphua"},"content":"                  \u003cchildren\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"leeroy999"},"content":"                    \u003cVBox fx:id\u003d\"memberList\" prefHeight\u003d\"158\" prefWidth\u003d\"195\" minWidth\u003d\"195\"","lastModifiedDate":"2021-10-30"},{"lineNumber":71,"author":{"gitId":"GWphua"},"content":"                          styleClass\u003d\"pane-with-border\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"GWphua"},"content":"                          AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"GWphua"},"content":"                      \u003cpadding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"GWphua"},"content":"                        \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                      \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":76,"author":{"gitId":"leeroy999"},"content":"                      \u003cStackPane fx:id\u003d\"memberListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":78,"author":{"gitId":"GWphua"},"content":"                  \u003c/children\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"GWphua"},"content":"                \u003c/AnchorPane\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"leeroy999"},"content":"                \u003cAnchorPane minHeight\u003d\"160\" minWidth\u003d\"200\"\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":81,"author":{"gitId":"GWphua"},"content":"                  \u003cchildren\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"leeroy999"},"content":"                    \u003cVBox fx:id\u003d\"taskList\" prefHeight\u003d\"158\" prefWidth\u003d\"195\"","lastModifiedDate":"2021-10-30"},{"lineNumber":83,"author":{"gitId":"GWphua"},"content":"                          styleClass\u003d\"pane-with-border\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\"","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"GWphua"},"content":"                          AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"GWphua"},"content":"                      \u003cpadding\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"GWphua"},"content":"                        \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"GWphua"},"content":"                      \u003c/padding\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"GWphua"},"content":"                      \u003cStackPane fx:id\u003d\"taskListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"GWphua"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"GWphua"},"content":"                  \u003c/children\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"GWphua"},"content":"                \u003c/AnchorPane\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"GWphua"},"content":"              \u003c/items\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"GWphua"},"content":"            \u003c/SplitPane\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"GWphua"},"content":"          \u003c/items\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"GWphua"},"content":"        \u003c/SplitPane\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"GWphua":39,"-":51,"leeroy999":11}},{"path":"src/main/resources/view/MemberListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"LiuZhi1an"},"content":"      \u003cFlowPane fx:id\u003d\"positions\" /\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"GWphua"},"content":"      \u003cFlowPane fx:id\u003d\"tasks\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"GWphua":1,"LiuZhi1an":1,"-":31,"leeroy999":4}},{"path":"src/main/resources/view/MemberListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"GWphua"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"GWphua"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"\u003c?import javafx.scene.layout.BorderPane?\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"   \u003cBorderPane prefWidth\u003d\"248\" styleClass\u003d\"title\"\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"      \u003ccenter\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"GWphua"},"content":"         \u003cLabel fx:id\u003d\"memberListTitle\" accessibleRole\u003d\"TEXT_AREA\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\"","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"GWphua"},"content":"                textAlignment\u003d\"CENTER\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"GWphua"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"GWphua"},"content":"               \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"GWphua"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"GWphua"},"content":"         \u003c/Label\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"      \u003c/center\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"   \u003c/BorderPane\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"   \u003cListView fx:id\u003d\"memberListView\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"      \u003cplaceholder\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"         \u003cLabel text\u003d\"No member listed.\" /\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"      \u003c/placeholder\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"   \u003c/ListView\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"GWphua":8,"-":7,"leeroy999":10}},{"path":"src/main/resources/view/TaskListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"GWphua"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"GWphua"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"GWphua"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"GWphua"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"GWphua"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"GWphua"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"GWphua"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"GWphua"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"GWphua"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"GWphua"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"GWphua"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"GWphua"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"GWphua"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"GWphua"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"GWphua"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"GWphua"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"GWphua"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"GWphua"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"GWphua"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"GWphua"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"GWphua"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"GWphua"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"GWphua"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"GWphua"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"GWphua"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"GWphua"},"content":"            \u003cLabel fx:id\u003d\"deadline\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$deadline\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"GWphua"},"content":"            \u003cLabel fx:id\u003d\"isDone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$isDone\" /\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"GWphua"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"GWphua"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"GWphua"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"GWphua":32,"leeroy999":1}},{"path":"src/main/resources/view/TaskListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"GWphua"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"GWphua"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"\u003c?import javafx.scene.layout.BorderPane?\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"GWphua"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"GWphua"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"   \u003cBorderPane prefWidth\u003d\"248\" styleClass\u003d\"title\"\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"      \u003ccenter\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"            \u003cLabel fx:id\u003d\"taskListTitle\" wrapText\u003d\"true\" BorderPane.alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"GWphua"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"GWphua"},"content":"                    \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"GWphua"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"GWphua"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"      \u003c/center\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"   \u003c/BorderPane\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"    \u003cListView fx:id\u003d\"taskListView\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"        \u003cplaceholder\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"            \u003cLabel text\u003d\"No task listed.\" /\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"        \u003c/placeholder\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"    \u003c/ListView\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"GWphua"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"GWphua":11,"leeroy999":14}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidAndValidMemberAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"  \"members\": [ {","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"    \"name\": \"Valid Member\",","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"    \"name\": \"Member With Invalid Phone Field\",","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \"phone\": \"948asdf2424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":10,"leeroy999":3}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidMemberAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"  \"members\": [ {","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"    \"name\": \"Member with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":6,"leeroy999":2}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicateMemberAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"  \"members\": [ {","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"    \"attachedPosition\": [ \"friends\" ],","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"    \"attachedTasks\": [{","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"      \"taskName\": \"team meeting\",","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"      \"isDone\": false,","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"      \"deadline\": \"27/10/2021 23:59\"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"    }, {","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"      \"taskName\": \"group project\",","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"      \"isDone\": false,","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"      \"deadline\": \"21/10/2021 23:59\"","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"    }, {","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"      \"taskName\": \"check payment\",","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"      \"isDone\": false,","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"      \"deadline\": \"27/10/2021 23:59\"","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"    }, {","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"      \"taskName\": \"check vaccination status\",","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"      \"isDone\": false,","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"      \"deadline\": \"22/10/2021 08:00\"","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"    }, {","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"      \"taskName\": \"rehearse 2 times\",","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"      \"isDone\": false,","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"      \"deadline\": \"27/10/2021 23:59\"","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"    }]","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \"email\": \"pauline@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"    \"attachedPosition\": [ ],","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"    \"attachedTasks\": [ ]","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"Samuel-bit-prog"},"content":"  } ],","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"Samuel-bit-prog"},"content":"  \"events\": []","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":10,"tsiyuk":25,"leeroy999":1,"Samuel-bit-prog":2}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidMemberAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"  \"members\": [ {","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Hans Muster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"invalid@email!3e\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"Samuel-bit-prog"},"content":"  } ],","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Samuel-bit-prog"},"content":"  \"events\": []","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":6,"leeroy999":1,"Samuel-bit-prog":2}},{"path":"src/test/data/JsonSerializableAddressBookTest/typicalMembersAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"  \"_comment\": \"AddressBook save file which contains the same Member values as in TypicalMembers#getTypicalAddressBook()\",","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"  \"members\" : [ {","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\" : \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"address\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"    \"attachedPosition\" : [ \"friends\" ],","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"    \"attachedTasks\": [{","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"      \"taskName\": \"team meeting\",","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"      \"isDone\": false,","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"      \"deadline\": \"27/10/2021 23:59\"","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"    }, {","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"      \"taskName\": \"group project\",","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"      \"isDone\": false,","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"      \"deadline\": \"21/10/2021 23:59\"","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"    }, {","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"      \"taskName\": \"check payment\",","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"      \"isDone\": false,","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"      \"deadline\": \"27/10/2021 23:59\"","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"    }, {","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"      \"taskName\": \"check vaccination status\",","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"      \"isDone\": false,","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"      \"deadline\": \"22/10/2021 08:00\"","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"    }, {","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"      \"taskName\": \"rehearse 2 times\",","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"      \"isDone\": false,","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"      \"deadline\": \"27/10/2021 23:59\"","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"    }]","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \"phone\" : \"98765432\",","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \"email\" : \"johnd@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \"address\" : \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"    \"attachedPosition\" : [ \"owesMoney\", \"friends\" ],","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"    \"attachedTasks\": [{","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"      \"taskName\": \"team meeting\",","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"      \"isDone\": false,","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"      \"deadline\": \"27/10/2021 23:59\"","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"    }, {","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"tsiyuk"},"content":"      \"taskName\": \"group project\",","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"      \"isDone\": false,","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"      \"deadline\": \"21/10/2021 23:59\"","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"    }, {","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"      \"taskName\": \"check payment\",","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"      \"isDone\": false,","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"tsiyuk"},"content":"      \"deadline\": \"27/10/2021 23:59\"","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"tsiyuk"},"content":"    }, {","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"tsiyuk"},"content":"      \"taskName\": \"check vaccination status\",","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"tsiyuk"},"content":"      \"isDone\": false,","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"tsiyuk"},"content":"      \"deadline\": \"22/10/2021 08:00\"","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"tsiyuk"},"content":"    }, {","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"tsiyuk"},"content":"      \"taskName\": \"rehearse 2 times\",","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"tsiyuk"},"content":"      \"isDone\": false,","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"tsiyuk"},"content":"      \"deadline\": \"27/10/2021 23:59\"","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"tsiyuk"},"content":"    }]","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    \"phone\" : \"95352563\",","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    \"email\" : \"heinz@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    \"address\" : \"wall street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"tsiyuk"},"content":"    \"attachedPosition\" : [ ],","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"tsiyuk"},"content":"    \"attachedTasks\": [ ]","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    \"email\" : \"cornelia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    \"address\" : \"10th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"tsiyuk"},"content":"    \"attachedPosition\" : [ \"friends\" ],","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"tsiyuk"},"content":"    \"attachedTasks\": [ ]","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482224\",","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    \"email\" : \"werner@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    \"address\" : \"michegan ave\",","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"tsiyuk"},"content":"    \"attachedPosition\" : [ ],","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"tsiyuk"},"content":"    \"attachedTasks\": [ ]","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482427\",","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    \"email\" : \"lydia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    \"address\" : \"little tokyo\",","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"tsiyuk"},"content":"    \"attachedPosition\" : [ ],","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"tsiyuk"},"content":"    \"attachedTasks\": [ ]","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"tsiyuk"},"content":"  }, {","lastModifiedDate":"2021-10-14"},{"lineNumber":86,"author":{"gitId":"tsiyuk"},"content":"    \"name\" : \"Jerry Smith\",","lastModifiedDate":"2021-10-14"},{"lineNumber":87,"author":{"gitId":"tsiyuk"},"content":"    \"phone\" : \"123456789\",","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"tsiyuk"},"content":"    \"email\" : null,","lastModifiedDate":"2021-10-14"},{"lineNumber":89,"author":{"gitId":"tsiyuk"},"content":"    \"address\" : null,","lastModifiedDate":"2021-10-14"},{"lineNumber":90,"author":{"gitId":"tsiyuk"},"content":"    \"attachedPosition\" : [ ],","lastModifiedDate":"2021-10-14"},{"lineNumber":91,"author":{"gitId":"tsiyuk"},"content":"    \"attachedTasks\": [ ]","lastModifiedDate":"2021-10-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482442\",","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    \"email\" : \"anna@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    \"address\" : \"4th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"tsiyuk"},"content":"    \"attachedPosition\" : [ ],","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"tsiyuk"},"content":"    \"attachedTasks\": [ ]","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"Samuel-bit-prog"},"content":"  } ],","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"Samuel-bit-prog"},"content":"  \"events\": []","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":36,"tsiyuk":61,"leeroy999":2,"Samuel-bit-prog":2}},{"path":"src/test/java/seedu/address/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"leeroy999"},"content":"        final Index fifthMemberIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"leeroy999"},"content":"        assertTrue(fifthMemberIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"leeroy999"},"content":"        assertTrue(fifthMemberIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"leeroy999"},"content":"        assertTrue(fifthMemberIndex.equals(fifthMemberIndex));","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"leeroy999"},"content":"        assertFalse(fifthMemberIndex.equals(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"leeroy999"},"content":"        assertFalse(fifthMemberIndex.equals(5.0f));","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"leeroy999"},"content":"        assertFalse(fifthMemberIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"-":53,"leeroy999":7}},{"path":"src/test/java/seedu/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"Samuel-bit-prog"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":142,"Samuel-bit-prog":1}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.testutil.TypicalMembers.AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.member.MaddCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.member.MdelCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.member.MlistCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.CliSyntax;","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":31,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"import seedu.address.testutil.MemberBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"leeroy999"},"content":"        String deleteCommand \u003d MdelCommand.COMMAND_WORD + \" \" + CliSyntax.PREFIX_MEMBER_ID + \"9\";","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"LiuZhi1an"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"leeroy999"},"content":"        String mListCommand \u003d MlistCommand.COMMAND_WORD;","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"leeroy999"},"content":"        assertCommandSuccess(mListCommand, String.format(MlistCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"leeroy999"},"content":"                model.getFilteredMemberList().size(), \"\"), model);","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"leeroy999"},"content":"        String addCommand \u003d MaddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"LiuZhi1an"},"content":"        Member expectedMember \u003d new MemberBuilder(AMY).withPositions().build();","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"leeroy999"},"content":"        expectedModel.addMember(expectedMember);","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"leeroy999"},"content":"    public void getFilteredMemberList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"leeroy999"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredMemberList().remove(0));","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                                      Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":135,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"tsiyuk"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"LiuZhi1an":4,"-":147,"tsiyuk":5,"leeroy999":14,"Samuel-bit-prog":1}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER_ID;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER_ID_DEL;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_ID;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.member.MeditCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.logic.parser.CliSyntax;","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"import seedu.address.testutil.EditMemberDescriptorBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"LiuZhi1an"},"content":"    public static final String VALID_POSITION_HUSBAND \u003d \"husband\";","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"LiuZhi1an"},"content":"    public static final String VALID_POSITION_FRIEND \u003d \"friend\";","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"    public static final String VALID_POEM_TASK_NAME \u003d \"write a poem\";","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"    public static final String VALID_POEM_TASK_DEADLINE \u003d \"25/10/2021 18:00\";","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"Samuel-bit-prog"},"content":"    public static final String VALID_EVENT_NAME_CHESS \u003d \"Chess Competition\";","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"Samuel-bit-prog"},"content":"    public static final String VALID_EVENT_NAME_BADMINTON \u003d \"Recreational badminton\";","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"Samuel-bit-prog"},"content":"    public static final String VALID_EVENT_DATE_CHESS \u003d \"10/10/2030\";","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"Samuel-bit-prog"},"content":"    public static final String VALID_EVENT_DATE_BADMINTON \u003d \"20/09/2020\";","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"Samuel-bit-prog"},"content":"    public static final int VALID_EVENT_ID \u003d 1;","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"LiuZhi1an"},"content":"    public static final int VALID_TASK_ID \u003d 1;","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"LiuZhi1an"},"content":"    public static final int VALID_MEMBER_ID \u003d 1;","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"LiuZhi1an"},"content":"    public static final int VALID_MEMBER_ID_DEL \u003d 1;","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"LiuZhi1an"},"content":"    public static final String POSITION_DESC_FRIEND \u003d \" \" + PREFIX_POSITION + VALID_POSITION_FRIEND;","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"LiuZhi1an"},"content":"    public static final String POSITION_DESC_HUSBAND \u003d \" \" + PREFIX_POSITION + VALID_POSITION_HUSBAND;","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"tsiyuk"},"content":"    public static final String TASK_NAME_DESC_POEM \u003d \" \" + PREFIX_NAME + VALID_POEM_TASK_NAME;","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"tsiyuk"},"content":"    public static final String TASK_DEADLINE_DESC_POEM \u003d \" \" + PREFIX_DATE + VALID_POEM_TASK_DEADLINE;","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"LiuZhi1an"},"content":"    public static final String TASK_ID_DESC_ONE \u003d \" \" + PREFIX_TASK_ID + VALID_TASK_ID;","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"LiuZhi1an"},"content":"    public static final String MEMBER_ID_DESC_ONE \u003d \" \" + PREFIX_MEMBER_ID + VALID_MEMBER_ID;","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"LiuZhi1an"},"content":"    public static final String MEMBER_ID_DEL_DESC_ONE \u003d \" \" + PREFIX_MEMBER_ID_DEL + VALID_MEMBER_ID;","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"LiuZhi1an"},"content":"    public static final String INVALID_POSITION_DESC \u003d \" \" + PREFIX_POSITION + \"hubby*\"; // \u0027*\u0027 not allowed in positions","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"LiuZhi1an"},"content":"    public static final String INVALID_TASK_NAME_DESC \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"LiuZhi1an"},"content":"            \" \" + CliSyntax.PREFIX_NAME + \"\"; // an empty string is not allowed in names","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"LiuZhi1an"},"content":"    public static final String INVALID_TASK_ID_DESC \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"LiuZhi1an"},"content":"            \" \" + PREFIX_TASK_ID + \"abs\"; // \u0027abs\u0027 not allowed in id","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"LiuZhi1an"},"content":"    public static final String INVALID_MEMBER_ID_DESC \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"LiuZhi1an"},"content":"            \" \" + PREFIX_MEMBER_ID + \"abs\"; // \u0027abs\u0027 not allowed in id","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"LiuZhi1an"},"content":"    public static final String INVALID_MEMBER_ID_DEL_DESC \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"LiuZhi1an"},"content":"            \" \" + PREFIX_MEMBER_ID_DEL + \"abs\"; // \u0027abs\u0027 not allowed in id","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":89,"author":{"gitId":"leeroy999"},"content":"    public static final MeditCommand.EditMemberDescriptor DESC_AMY;","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"leeroy999"},"content":"    public static final MeditCommand.EditMemberDescriptor DESC_BOB;","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"leeroy999"},"content":"        DESC_AMY \u003d new EditMemberDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":95,"author":{"gitId":"LiuZhi1an"},"content":"                .withPositions(VALID_POSITION_FRIEND).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"leeroy999"},"content":"        DESC_BOB \u003d new EditMemberDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":98,"author":{"gitId":"LiuZhi1an"},"content":"                .withPositions(VALID_POSITION_HUSBAND, VALID_POSITION_FRIEND).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"leeroy999"},"content":"     * - the address book, filtered member list and selected member in {@code actualModel} remain unchanged","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"leeroy999"},"content":"        List\u003cMember\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredMemberList());","lastModifiedDate":"2021-10-07"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"leeroy999"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredMemberList());","lastModifiedDate":"2021-10-07"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":144,"author":{"gitId":"leeroy999"},"content":"     * Updates {@code model}\u0027s filtered list to show only the member at the given {@code targetIndex} in the","lastModifiedDate":"2021-10-07"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":147,"author":{"gitId":"leeroy999"},"content":"    public static void showMemberAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-10-07"},{"lineNumber":148,"author":{"gitId":"leeroy999"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredMemberList().size());","lastModifiedDate":"2021-10-07"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":150,"author":{"gitId":"leeroy999"},"content":"        Member member \u003d model.getFilteredMemberList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-07"},{"lineNumber":151,"author":{"gitId":"leeroy999"},"content":"        final String[] splitName \u003d member.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-10-07"},{"lineNumber":152,"author":{"gitId":"Samuel-bit-prog"},"content":"        model.updateFilteredMemberList(new NameContainsKeywordsPredicate\u003cMember\u003e(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-10-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":154,"author":{"gitId":"leeroy999"},"content":"        assertEquals(1, model.getFilteredMemberList().size());","lastModifiedDate":"2021-10-07"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"LiuZhi1an":26,"-":103,"tsiyuk":5,"leeroy999":15,"Samuel-bit-prog":8}},{"path":"src/test/java/seedu/address/logic/commands/member/EditMemberDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package seedu.address.logic.commands.member;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POSITION_HUSBAND;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.member.MeditCommand.EditMemberDescriptor;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"import seedu.address.testutil.EditMemberDescriptorBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"public class EditMemberDescriptorTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"        EditMemberDescriptor descriptorWithSameValues \u003d new EditMemberDescriptor(DESC_AMY);","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"        EditMemberDescriptor editedAmy \u003d new EditMemberDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"leeroy999"},"content":"        editedAmy \u003d new EditMemberDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"leeroy999"},"content":"        editedAmy \u003d new EditMemberDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"leeroy999"},"content":"        editedAmy \u003d new EditMemberDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"LiuZhi1an"},"content":"        // different positions -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"LiuZhi1an"},"content":"        editedAmy \u003d new EditMemberDescriptorBuilder(DESC_AMY).withPositions(VALID_POSITION_HUSBAND).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"LiuZhi1an":3,"-":46,"leeroy999":9}},{"path":"src/test/java/seedu/address/logic/commands/member/MaddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package seedu.address.logic.commands.member;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.testutil.TypicalMembers.getTypicalAddressBook;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"import seedu.address.testutil.MemberBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":" * Contains integration tests (interaction with the Model) for {@code PaddCommand}.","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"public class MaddCommandIntegrationTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"    public void execute_newMember_success() {","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"        Member validMember \u003d new MemberBuilder().build();","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"        expectedModel.addMember(validMember);","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"        assertCommandSuccess(new MaddCommand(validMember), model,","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"                String.format(MaddCommand.MESSAGE_SUCCESS, validMember), expectedModel);","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"    public void execute_duplicateMember_throwsCommandException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"        Member memberInList \u003d model.getAddressBook().getMemberList().get(0);","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"        assertCommandFailure(new MaddCommand(memberInList), model, MaddCommand.MESSAGE_DUPLICATE_MEMBER);","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"-":30,"leeroy999":13,"Samuel-bit-prog":1}},{"path":"src/test/java/seedu/address/logic/commands/member/MaddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package seedu.address.logic.commands.member;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.event.Event;","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.task.Task;","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"import seedu.address.testutil.MemberBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"public class MaddCommandTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"    public void constructor_nullMember_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"        assertThrows(NullPointerException.class, () -\u003e new MaddCommand(null));","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"    public void execute_memberAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"        ModelStubAcceptingMemberAdded modelStub \u003d new ModelStubAcceptingMemberAdded();","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"        Member validMember \u003d new MemberBuilder().build();","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"leeroy999"},"content":"        CommandResult commandResult \u003d new MaddCommand(validMember).execute(modelStub);","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"        assertEquals(String.format(MaddCommand.MESSAGE_SUCCESS, validMember), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"leeroy999"},"content":"        assertEquals(Arrays.asList(validMember), modelStub.membersAdded);","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"leeroy999"},"content":"    public void execute_duplicateMember_throwsCommandException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"leeroy999"},"content":"        Member validMember \u003d new MemberBuilder().build();","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"leeroy999"},"content":"        MaddCommand maddCommand \u003d new MaddCommand(validMember);","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"leeroy999"},"content":"        ModelStub modelStub \u003d new ModelStubWithMember(validMember);","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"leeroy999"},"content":"        assertThrows(CommandException.class, maddCommand.MESSAGE_DUPLICATE_MEMBER, () -\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"leeroy999"},"content":"                maddCommand.execute(modelStub));","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"leeroy999"},"content":"        Member alice \u003d new MemberBuilder().withName(\"Alice\").build();","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"leeroy999"},"content":"        Member bob \u003d new MemberBuilder().withName(\"Bob\").build();","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"leeroy999"},"content":"        MaddCommand addAliceCommand \u003d new MaddCommand(alice);","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"leeroy999"},"content":"        MaddCommand addBobCommand \u003d new MaddCommand(bob);","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"leeroy999"},"content":"        MaddCommand addAliceCommandCopy \u003d new MaddCommand(alice);","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"leeroy999"},"content":"        // different member -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"tsiyuk"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"tsiyuk"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"leeroy999"},"content":"        public void addMember(Member member) {","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"Samuel-bit-prog"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"Samuel-bit-prog"},"content":"        public void addEvent(Event event) {","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"Samuel-bit-prog"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"Samuel-bit-prog"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":126,"author":{"gitId":"leeroy999"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"leeroy999"},"content":"        public void addEventMembers(Event event, Set\u003cMember\u003e memberSet) {","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"leeroy999"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"leeroy999"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"tsiyuk"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"tsiyuk"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2021-10-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"leeroy999"},"content":"        public boolean hasMember(Member member) {","lastModifiedDate":"2021-10-07"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"Samuel-bit-prog"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":147,"author":{"gitId":"Samuel-bit-prog"},"content":"        public boolean hasEvent(Event event) {","lastModifiedDate":"2021-10-11"},{"lineNumber":148,"author":{"gitId":"Samuel-bit-prog"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-11"},{"lineNumber":149,"author":{"gitId":"Samuel-bit-prog"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":150,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"leeroy999"},"content":"        public void deleteMember(Member target) {","lastModifiedDate":"2021-10-07"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"Samuel-bit-prog"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":157,"author":{"gitId":"Samuel-bit-prog"},"content":"        public void deleteEvent(Event event) {","lastModifiedDate":"2021-10-11"},{"lineNumber":158,"author":{"gitId":"Samuel-bit-prog"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-11"},{"lineNumber":159,"author":{"gitId":"Samuel-bit-prog"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":160,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"leeroy999"},"content":"        public void setMember(Member target, Member editedMember) {","lastModifiedDate":"2021-10-07"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"Samuel-bit-prog"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":167,"author":{"gitId":"Samuel-bit-prog"},"content":"        public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2021-10-11"},{"lineNumber":168,"author":{"gitId":"Samuel-bit-prog"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-11"},{"lineNumber":169,"author":{"gitId":"Samuel-bit-prog"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":170,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"leeroy999"},"content":"        public ObservableList\u003cMember\u003e getFilteredMemberList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"leeroy999"},"content":"        public void updateFilteredMemberList(Predicate\u003cMember\u003e predicate) {","lastModifiedDate":"2021-10-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":181,"author":{"gitId":"Samuel-bit-prog"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":182,"author":{"gitId":"Samuel-bit-prog"},"content":"        public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2021-10-11"},{"lineNumber":183,"author":{"gitId":"Samuel-bit-prog"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-11"},{"lineNumber":184,"author":{"gitId":"Samuel-bit-prog"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":185,"author":{"gitId":"tsiyuk"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":186,"author":{"gitId":"tsiyuk"},"content":"        public void loadTaskList(Member member) {","lastModifiedDate":"2021-10-09"},{"lineNumber":187,"author":{"gitId":"tsiyuk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":188,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":189,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":190,"author":{"gitId":"Samuel-bit-prog"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":191,"author":{"gitId":"Samuel-bit-prog"},"content":"        public void updateFilteredEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2021-10-11"},{"lineNumber":192,"author":{"gitId":"Samuel-bit-prog"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-11"},{"lineNumber":193,"author":{"gitId":"Samuel-bit-prog"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":194,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":195,"author":{"gitId":"tsiyuk"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":196,"author":{"gitId":"LiuZhi1an"},"content":"        public boolean hasTask(Member member, Task task) {","lastModifiedDate":"2021-10-11"},{"lineNumber":197,"author":{"gitId":"tsiyuk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":198,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":199,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":200,"author":{"gitId":"tsiyuk"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":201,"author":{"gitId":"tsiyuk"},"content":"        public void addTask(Member member, Task task) {","lastModifiedDate":"2021-10-09"},{"lineNumber":202,"author":{"gitId":"tsiyuk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":203,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":204,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":205,"author":{"gitId":"tsiyuk"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":206,"author":{"gitId":"tsiyuk"},"content":"        public void deleteTask(Member member, Task task) {","lastModifiedDate":"2021-10-09"},{"lineNumber":207,"author":{"gitId":"tsiyuk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":208,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":209,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":210,"author":{"gitId":"tsiyuk"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":211,"author":{"gitId":"tsiyuk"},"content":"        public void deleteTask(Member member, int index) {","lastModifiedDate":"2021-10-10"},{"lineNumber":212,"author":{"gitId":"tsiyuk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":213,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":214,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":215,"author":{"gitId":"tsiyuk"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":216,"author":{"gitId":"tsiyuk"},"content":"        public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2021-10-25"},{"lineNumber":217,"author":{"gitId":"tsiyuk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":218,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":219,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":220,"author":{"gitId":"tsiyuk"},"content":"        /**","lastModifiedDate":"2021-10-10"},{"lineNumber":221,"author":{"gitId":"tsiyuk"},"content":"         * Replaces the task specified by {@code index} with {@code editedTask} in the given {@code member}\u0027s task list.","lastModifiedDate":"2021-10-10"},{"lineNumber":222,"author":{"gitId":"tsiyuk"},"content":"         */","lastModifiedDate":"2021-10-10"},{"lineNumber":223,"author":{"gitId":"tsiyuk"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":224,"author":{"gitId":"tsiyuk"},"content":"        public void setTask(int index, Task editedTask) {","lastModifiedDate":"2021-10-25"},{"lineNumber":225,"author":{"gitId":"tsiyuk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":226,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":227,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":228,"author":{"gitId":"tsiyuk"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":229,"author":{"gitId":"tsiyuk"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList(Member member) {","lastModifiedDate":"2021-10-09"},{"lineNumber":230,"author":{"gitId":"tsiyuk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":231,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":232,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":233,"author":{"gitId":"tsiyuk"},"content":"        @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":234,"author":{"gitId":"tsiyuk"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2021-10-24"},{"lineNumber":235,"author":{"gitId":"tsiyuk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":236,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":237,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":238,"author":{"gitId":"tsiyuk"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":239,"author":{"gitId":"tsiyuk"},"content":"        public void updateFilteredTaskList(Member member, Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-10-09"},{"lineNumber":240,"author":{"gitId":"tsiyuk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":241,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":242,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":243,"author":{"gitId":"tsiyuk"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":244,"author":{"gitId":"tsiyuk"},"content":"        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-10-25"},{"lineNumber":245,"author":{"gitId":"tsiyuk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":246,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":247,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":248,"author":{"gitId":"tsiyuk"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":249,"author":{"gitId":"tsiyuk"},"content":"        public Optional\u003cMember\u003e getCurrentMember() {","lastModifiedDate":"2021-10-27"},{"lineNumber":250,"author":{"gitId":"tsiyuk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":251,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":252,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":253,"author":{"gitId":"tsiyuk"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":254,"author":{"gitId":"tsiyuk"},"content":"        public void setCurrentEvent(Event currentEvent) {","lastModifiedDate":"2021-10-28"},{"lineNumber":255,"author":{"gitId":"tsiyuk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":256,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":257,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":258,"author":{"gitId":"tsiyuk"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":259,"author":{"gitId":"tsiyuk"},"content":"        public Optional\u003cEvent\u003e getCurrentEvent() {","lastModifiedDate":"2021-10-28"},{"lineNumber":260,"author":{"gitId":"tsiyuk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":261,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":265,"author":{"gitId":"leeroy999"},"content":"     * A Model stub that contains a single member.","lastModifiedDate":"2021-10-07"},{"lineNumber":266,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":267,"author":{"gitId":"leeroy999"},"content":"    private class ModelStubWithMember extends ModelStub {","lastModifiedDate":"2021-10-07"},{"lineNumber":268,"author":{"gitId":"leeroy999"},"content":"        private final Member member;","lastModifiedDate":"2021-10-07"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":270,"author":{"gitId":"leeroy999"},"content":"        ModelStubWithMember(Member member) {","lastModifiedDate":"2021-10-07"},{"lineNumber":271,"author":{"gitId":"leeroy999"},"content":"            requireNonNull(member);","lastModifiedDate":"2021-10-07"},{"lineNumber":272,"author":{"gitId":"leeroy999"},"content":"            this.member \u003d member;","lastModifiedDate":"2021-10-07"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":276,"author":{"gitId":"leeroy999"},"content":"        public boolean hasMember(Member member) {","lastModifiedDate":"2021-10-07"},{"lineNumber":277,"author":{"gitId":"leeroy999"},"content":"            requireNonNull(member);","lastModifiedDate":"2021-10-07"},{"lineNumber":278,"author":{"gitId":"Samuel-bit-prog"},"content":"            return this.member.isSameType(member);","lastModifiedDate":"2021-10-12"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":283,"author":{"gitId":"leeroy999"},"content":"     * A Model stub that always accept the member being added.","lastModifiedDate":"2021-10-07"},{"lineNumber":284,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":285,"author":{"gitId":"leeroy999"},"content":"    private class ModelStubAcceptingMemberAdded extends ModelStub {","lastModifiedDate":"2021-10-07"},{"lineNumber":286,"author":{"gitId":"leeroy999"},"content":"        final ArrayList\u003cMember\u003e membersAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":289,"author":{"gitId":"leeroy999"},"content":"        public boolean hasMember(Member member) {","lastModifiedDate":"2021-10-07"},{"lineNumber":290,"author":{"gitId":"leeroy999"},"content":"            requireNonNull(member);","lastModifiedDate":"2021-10-07"},{"lineNumber":291,"author":{"gitId":"Samuel-bit-prog"},"content":"            return membersAdded.stream().anyMatch(member::isSameType);","lastModifiedDate":"2021-10-12"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":295,"author":{"gitId":"leeroy999"},"content":"        public void addMember(Member member) {","lastModifiedDate":"2021-10-07"},{"lineNumber":296,"author":{"gitId":"leeroy999"},"content":"            requireNonNull(member);","lastModifiedDate":"2021-10-07"},{"lineNumber":297,"author":{"gitId":"leeroy999"},"content":"            membersAdded.add(member);","lastModifiedDate":"2021-10-07"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":302,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":306,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"LiuZhi1an":1,"-":142,"tsiyuk":77,"leeroy999":52,"Samuel-bit-prog":34}},{"path":"src/test/java/seedu/address/logic/commands/member/MdelCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package seedu.address.logic.commands.member;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showMemberAtIndex;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MEMBER;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_MEMBER;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.testutil.TypicalMembers.getTypicalAddressBook;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"public class MdelCommandTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"LiuZhi1an"},"content":"        Member memberToDelete \u003d model.getFilteredMemberList().get(INDEX_FIRST_MEMBER.getZeroBased());","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"        MdelCommand mdelCommand \u003d new MdelCommand(INDEX_FIRST_MEMBER);","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"        String expectedMessage \u003d String.format(MdelCommand.MESSAGE_DELETE_MEMBER_SUCCESS, memberToDelete);","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"leeroy999"},"content":"        expectedModel.deleteMember(memberToDelete);","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"        assertCommandSuccess(mdelCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredMemberList().size() + 1);","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"leeroy999"},"content":"        MdelCommand mdelCommand \u003d new MdelCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"leeroy999"},"content":"        assertCommandFailure(mdelCommand, model, Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"LiuZhi1an"},"content":"        showMemberAtIndex(model, INDEX_FIRST_MEMBER);","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"LiuZhi1an"},"content":"        Member memberToDelete \u003d model.getFilteredMemberList().get(INDEX_FIRST_MEMBER.getZeroBased());","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"leeroy999"},"content":"        MdelCommand mdelCommand \u003d new MdelCommand(INDEX_FIRST_MEMBER);","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"leeroy999"},"content":"        String expectedMessage \u003d String.format(MdelCommand.MESSAGE_DELETE_MEMBER_SUCCESS, memberToDelete);","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"leeroy999"},"content":"        expectedModel.deleteMember(memberToDelete);","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"leeroy999"},"content":"        showNoMember(expectedModel);","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"leeroy999"},"content":"        assertCommandSuccess(mdelCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"LiuZhi1an"},"content":"        showMemberAtIndex(model, INDEX_FIRST_MEMBER);","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"LiuZhi1an"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_MEMBER;","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"leeroy999"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getMemberList().size());","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"leeroy999"},"content":"        MdelCommand mdelCommand \u003d new MdelCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"leeroy999"},"content":"        assertCommandFailure(mdelCommand, model, Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"leeroy999"},"content":"        MdelCommand deleteFirstCommand \u003d new MdelCommand(INDEX_FIRST_MEMBER);","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"leeroy999"},"content":"        MdelCommand deleteSecondCommand \u003d new MdelCommand(INDEX_SECOND_MEMBER);","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"leeroy999"},"content":"        MdelCommand deleteFirstCommandCopy \u003d new MdelCommand(INDEX_FIRST_MEMBER);","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"leeroy999"},"content":"        // different member -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"leeroy999"},"content":"    private void showNoMember(Model model) {","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"leeroy999"},"content":"        model.updateFilteredMemberList(p -\u003e false);","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"leeroy999"},"content":"        assertTrue(model.getFilteredMemberList().isEmpty());","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"LiuZhi1an":7,"-":75,"leeroy999":26,"Samuel-bit-prog":1}},{"path":"src/test/java/seedu/address/logic/commands/member/MeditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package seedu.address.logic.commands.member;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POSITION_HUSBAND;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showMemberAtIndex;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MEMBER;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_MEMBER;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.testutil.TypicalMembers.getTypicalAddressBook;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.member.MeditCommand.EditMemberDescriptor;","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"import seedu.address.testutil.EditMemberDescriptorBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"import seedu.address.testutil.MemberBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.testutil.TypicalTasks;","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"public class MeditCommandTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"        Member editedMember \u003d new MemberBuilder().withTaskList(TypicalTasks.getTypicalTasks()).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"        EditMemberDescriptor descriptor \u003d new EditMemberDescriptorBuilder(editedMember).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"leeroy999"},"content":"        MeditCommand meditCommand \u003d new MeditCommand(INDEX_FIRST_MEMBER, descriptor);","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"        String expectedMessage \u003d String.format(MeditCommand.MESSAGE_EDIT_MEMBER_SUCCESS, editedMember);","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"leeroy999"},"content":"        expectedModel.setMember(model.getFilteredMemberList().get(0), editedMember);","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"leeroy999"},"content":"        assertCommandSuccess(meditCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"leeroy999"},"content":"        Index indexLastMember \u003d Index.fromOneBased(model.getFilteredMemberList().size());","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"leeroy999"},"content":"        Member lastMember \u003d model.getFilteredMemberList().get(indexLastMember.getZeroBased());","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"leeroy999"},"content":"        MemberBuilder memberInList \u003d new MemberBuilder(lastMember);","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"leeroy999"},"content":"        Member editedMember \u003d memberInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"LiuZhi1an"},"content":"                .withPositions(VALID_POSITION_HUSBAND).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"leeroy999"},"content":"        EditMemberDescriptor descriptor \u003d new EditMemberDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"LiuZhi1an"},"content":"                .withPhone(VALID_PHONE_BOB).withPositions(VALID_POSITION_HUSBAND).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"leeroy999"},"content":"        MeditCommand meditCommand \u003d new MeditCommand(indexLastMember, descriptor);","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"leeroy999"},"content":"        String expectedMessage \u003d String.format(MeditCommand.MESSAGE_EDIT_MEMBER_SUCCESS, editedMember);","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"leeroy999"},"content":"        expectedModel.setMember(lastMember, editedMember);","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"leeroy999"},"content":"        assertCommandSuccess(meditCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"leeroy999"},"content":"        MeditCommand meditCommand \u003d new MeditCommand(INDEX_FIRST_MEMBER, new EditMemberDescriptor());","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"LiuZhi1an"},"content":"        Member editedMember \u003d model.getFilteredMemberList().get(INDEX_FIRST_MEMBER.getZeroBased());","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"leeroy999"},"content":"        String expectedMessage \u003d String.format(MeditCommand.MESSAGE_EDIT_MEMBER_SUCCESS, editedMember);","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"leeroy999"},"content":"        assertCommandSuccess(meditCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"LiuZhi1an"},"content":"        showMemberAtIndex(model, INDEX_FIRST_MEMBER);","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"LiuZhi1an"},"content":"        Member memberInFilteredList \u003d model.getFilteredMemberList().get(INDEX_FIRST_MEMBER.getZeroBased());","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"leeroy999"},"content":"        Member editedMember \u003d new MemberBuilder(memberInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"leeroy999"},"content":"        MeditCommand meditCommand \u003d new MeditCommand(INDEX_FIRST_MEMBER,","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"leeroy999"},"content":"                new EditMemberDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"leeroy999"},"content":"        String expectedMessage \u003d String.format(MeditCommand.MESSAGE_EDIT_MEMBER_SUCCESS, editedMember);","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"leeroy999"},"content":"        expectedModel.setMember(model.getFilteredMemberList().get(0), editedMember);","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"leeroy999"},"content":"        assertCommandSuccess(meditCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"leeroy999"},"content":"    public void execute_duplicateMemberUnfilteredList_failure() {","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"LiuZhi1an"},"content":"        Member firstMember \u003d model.getFilteredMemberList().get(INDEX_FIRST_MEMBER.getZeroBased());","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"leeroy999"},"content":"        EditMemberDescriptor descriptor \u003d new EditMemberDescriptorBuilder(firstMember).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"leeroy999"},"content":"        MeditCommand meditCommand \u003d new MeditCommand(INDEX_SECOND_MEMBER, descriptor);","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"leeroy999"},"content":"        assertCommandFailure(meditCommand, model, MeditCommand.MESSAGE_DUPLICATE_MEMBER);","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"leeroy999"},"content":"    public void execute_duplicateMemberFilteredList_failure() {","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"LiuZhi1an"},"content":"        showMemberAtIndex(model, INDEX_FIRST_MEMBER);","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"leeroy999"},"content":"        // edit member in filtered list into a duplicate in address book","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"LiuZhi1an"},"content":"        Member memberInList \u003d model.getAddressBook().getMemberList().get(INDEX_SECOND_MEMBER.getZeroBased());","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"leeroy999"},"content":"        MeditCommand meditCommand \u003d new MeditCommand(INDEX_FIRST_MEMBER,","lastModifiedDate":"2021-10-26"},{"lineNumber":118,"author":{"gitId":"leeroy999"},"content":"                new EditMemberDescriptorBuilder(memberInList).build());","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"leeroy999"},"content":"        assertCommandFailure(meditCommand, model, MeditCommand.MESSAGE_DUPLICATE_MEMBER);","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"leeroy999"},"content":"    public void execute_invalidMemberIndexUnfilteredList_failure() {","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"leeroy999"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredMemberList().size() + 1);","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"leeroy999"},"content":"        EditMemberDescriptor descriptor \u003d new EditMemberDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"leeroy999"},"content":"        MeditCommand meditCommand \u003d new MeditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2021-10-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"leeroy999"},"content":"        assertCommandFailure(meditCommand, model, Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"leeroy999"},"content":"    public void execute_invalidMemberIndexFilteredList_failure() {","lastModifiedDate":"2021-10-07"},{"lineNumber":138,"author":{"gitId":"LiuZhi1an"},"content":"        showMemberAtIndex(model, INDEX_FIRST_MEMBER);","lastModifiedDate":"2021-10-07"},{"lineNumber":139,"author":{"gitId":"LiuZhi1an"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_MEMBER;","lastModifiedDate":"2021-10-07"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"leeroy999"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getMemberList().size());","lastModifiedDate":"2021-10-07"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"leeroy999"},"content":"        MeditCommand meditCommand \u003d new MeditCommand(outOfBoundIndex,","lastModifiedDate":"2021-10-26"},{"lineNumber":144,"author":{"gitId":"leeroy999"},"content":"                new EditMemberDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-10-07"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"leeroy999"},"content":"        assertCommandFailure(meditCommand, model, Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"leeroy999"},"content":"        final MeditCommand standardCommand \u003d new MeditCommand(INDEX_FIRST_MEMBER, DESC_AMY);","lastModifiedDate":"2021-10-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"leeroy999"},"content":"        EditMemberDescriptor copyDescriptor \u003d new EditMemberDescriptor(DESC_AMY);","lastModifiedDate":"2021-10-07"},{"lineNumber":155,"author":{"gitId":"leeroy999"},"content":"        MeditCommand commandWithSameValues \u003d new MeditCommand(INDEX_FIRST_MEMBER, copyDescriptor);","lastModifiedDate":"2021-10-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"leeroy999"},"content":"        assertFalse(standardCommand.equals(new MlistCommand()));","lastModifiedDate":"2021-10-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"leeroy999"},"content":"        assertFalse(standardCommand.equals(new MeditCommand(INDEX_SECOND_MEMBER, DESC_AMY)));","lastModifiedDate":"2021-10-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"leeroy999"},"content":"        assertFalse(standardCommand.equals(new MeditCommand(INDEX_FIRST_MEMBER, DESC_BOB)));","lastModifiedDate":"2021-10-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"LiuZhi1an":13,"-":103,"tsiyuk":2,"leeroy999":55,"Samuel-bit-prog":1}},{"path":"src/test/java/seedu/address/logic/commands/member/MfindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package seedu.address.logic.commands.member;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_MEMBERS_LISTED_OVERVIEW;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.testutil.TypicalMembers.CARL;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.testutil.TypicalMembers.ELLE;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.testutil.TypicalMembers.FIONA;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.testutil.TypicalMembers.getTypicalAddressBook;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"public class MfindCommandTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"Samuel-bit-prog"},"content":"        NameContainsKeywordsPredicate\u003cMember\u003e firstPredicate \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"Samuel-bit-prog"},"content":"                new NameContainsKeywordsPredicate\u003cMember\u003e(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"Samuel-bit-prog"},"content":"        NameContainsKeywordsPredicate\u003cMember\u003e secondPredicate \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"Samuel-bit-prog"},"content":"                new NameContainsKeywordsPredicate\u003cMember\u003e(Collections.singletonList(\"second\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"leeroy999"},"content":"        MfindCommand findFirstCommand \u003d new MfindCommand(firstPredicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"        MfindCommand findSecondCommand \u003d new MfindCommand(secondPredicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"leeroy999"},"content":"        MfindCommand findFirstCommandCopy \u003d new MfindCommand(firstPredicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"leeroy999"},"content":"        // different member -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"leeroy999"},"content":"    public void execute_zeroKeywords_noMemberFound() {","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"LiuZhi1an"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MEMBERS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"Samuel-bit-prog"},"content":"        NameContainsKeywordsPredicate\u003cMember\u003e predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"leeroy999"},"content":"        MfindCommand command \u003d new MfindCommand(predicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"leeroy999"},"content":"        expectedModel.updateFilteredMemberList(predicate);","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"leeroy999"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredMemberList());","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"leeroy999"},"content":"    public void execute_multipleKeywords_multipleMembersFound() {","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"LiuZhi1an"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MEMBERS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"Samuel-bit-prog"},"content":"        NameContainsKeywordsPredicate\u003cMember\u003e predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"leeroy999"},"content":"        MfindCommand command \u003d new MfindCommand(predicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"leeroy999"},"content":"        expectedModel.updateFilteredMemberList(predicate);","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"leeroy999"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredMemberList());","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate\u003cMember\u003e}.","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"Samuel-bit-prog"},"content":"    private NameContainsKeywordsPredicate\u003cMember\u003e preparePredicate(String userInput) {","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"Samuel-bit-prog"},"content":"        return new NameContainsKeywordsPredicate\u003cMember\u003e(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"LiuZhi1an":3,"-":52,"leeroy999":18,"Samuel-bit-prog":11}},{"path":"src/test/java/seedu/address/logic/commands/member/MlistCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package seedu.address.logic.commands.member;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showMemberAtIndex;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MEMBER;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.testutil.TypicalMembers.getTypicalAddressBook;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"public class MlistCommandTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"        assertCommandSuccess(new MlistCommand(), model,","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"                String.format(MlistCommand.MESSAGE_SUCCESS, model.getFilteredMemberList().size(), \"\"), expectedModel);","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":38,"author":{"gitId":"LiuZhi1an"},"content":"        showMemberAtIndex(model, INDEX_FIRST_MEMBER);","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"        assertCommandSuccess(new MlistCommand(), model,","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"                String.format(MlistCommand.MESSAGE_SUCCESS, expectedModel.getFilteredMemberList().size(), \"\"),","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"                expectedModel);","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"leeroy999"},"content":"        assertEquals(model.getFilteredMemberList().size(), expectedModel.getFilteredMemberList().size());","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"LiuZhi1an":2,"-":31,"leeroy999":11}},{"path":"src/test/java/seedu/address/logic/commands/task/TaddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package seedu.address.logic.commands.task;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"LiuZhi1an"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"LiuZhi1an"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"LiuZhi1an"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"LiuZhi1an"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"import static seedu.address.testutil.TypicalTasks.PROJECT;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"LiuZhi1an"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"LiuZhi1an"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"LiuZhi1an"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"LiuZhi1an"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"LiuZhi1an"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"LiuZhi1an"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"LiuZhi1an"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.event.Event;","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.task.Task;","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.task.TaskList;","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.testutil.MemberBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"class TaddCommandTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"LiuZhi1an"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"LiuZhi1an"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TaddCommand(null, null));","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"LiuZhi1an"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"LiuZhi1an"},"content":"    public void execute_taskAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"LiuZhi1an"},"content":"        Index validMemberId \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"LiuZhi1an"},"content":"        Set\u003cIndex\u003e validMemberIdList \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"LiuZhi1an"},"content":"        validMemberIdList.add(validMemberId);","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"tsiyuk"},"content":"        Task validTask \u003d new TaskBuilder().build();","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"LiuZhi1an"},"content":"        Member validMember \u003d new MemberBuilder().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"LiuZhi1an"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withMember(validMember).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"LiuZhi1an"},"content":"        ModelStubAcceptingTaskAdded modelStub \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"LiuZhi1an"},"content":"                new ModelStubAcceptingTaskAdded(addressBook, validTask, validMemberIdList);","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"LiuZhi1an"},"content":"        CommandResult commandResult \u003d new TaddCommand(validMemberIdList, validTask).execute(modelStub);","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"LiuZhi1an"},"content":"        assertEquals(String.format(TaddCommand.MESSAGE_SUCCESS, validTask),","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"LiuZhi1an"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"LiuZhi1an"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"LiuZhi1an"},"content":"    public void execute_taskForMultipleMembersAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"LiuZhi1an"},"content":"        Index validMemberId1 \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"LiuZhi1an"},"content":"        Index validMemberId2 \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"LiuZhi1an"},"content":"        Set\u003cIndex\u003e validMemberIdList \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"LiuZhi1an"},"content":"        validMemberIdList.add(validMemberId1);","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"LiuZhi1an"},"content":"        validMemberIdList.add(validMemberId2);","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"LiuZhi1an"},"content":"        Task validTask \u003d new TaskBuilder().build();","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"LiuZhi1an"},"content":"        Member validMember1 \u003d new MemberBuilder().build();","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"LiuZhi1an"},"content":"        Member validMember2 \u003d new MemberBuilder()","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"LiuZhi1an"},"content":"                .withName(\"Amy\").withEmail(\"amy@fakemail\")","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"LiuZhi1an"},"content":"                .withPhone(\"12312312\").withAddress(\"Block23 St Andrew Street\").build();","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"LiuZhi1an"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withMember(validMember1).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"LiuZhi1an"},"content":"        addressBook.addMember(validMember2);","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"LiuZhi1an"},"content":"        ModelStubAcceptingTaskAdded modelStub \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"LiuZhi1an"},"content":"                new ModelStubAcceptingTaskAdded(addressBook, validTask, validMemberIdList);","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"LiuZhi1an"},"content":"        CommandResult commandResult \u003d new TaddCommand(validMemberIdList, validTask).execute(modelStub);","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"LiuZhi1an"},"content":"        assertEquals(String.format(TaddCommand.MESSAGE_SUCCESS, validTask),","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"LiuZhi1an"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"LiuZhi1an"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"LiuZhi1an"},"content":"    public void equals() {","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"LiuZhi1an"},"content":"        Index validMemberId \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"LiuZhi1an"},"content":"        Set\u003cIndex\u003e validMemberIdList \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"LiuZhi1an"},"content":"        validMemberIdList.add(validMemberId);","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"tsiyuk"},"content":"        Task validTask1 \u003d new TaskBuilder().build();","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"tsiyuk"},"content":"        Task validTask2 \u003d new TaskBuilder(PROJECT).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"LiuZhi1an"},"content":"        Member validMember \u003d new MemberBuilder().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"LiuZhi1an"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withMember(validMember).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"LiuZhi1an"},"content":"        TaddCommand addHomeworkCommand \u003d new TaddCommand(validMemberIdList, validTask1);","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"LiuZhi1an"},"content":"        TaddCommand addPoemCommand \u003d new TaddCommand(validMemberIdList, validTask2);","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"LiuZhi1an"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"LiuZhi1an"},"content":"        assertTrue(addHomeworkCommand.equals(addHomeworkCommand));","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"LiuZhi1an"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"LiuZhi1an"},"content":"        TaddCommand addHomeworkCommandCopy \u003d new TaddCommand(validMemberIdList, validTask1);","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"LiuZhi1an"},"content":"        assertTrue(addHomeworkCommand.equals(addHomeworkCommandCopy));","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"LiuZhi1an"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"LiuZhi1an"},"content":"        assertFalse(addHomeworkCommand.equals(1));","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"LiuZhi1an"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"LiuZhi1an"},"content":"        assertFalse(addHomeworkCommand.equals(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"LiuZhi1an"},"content":"        // different member -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"LiuZhi1an"},"content":"        assertFalse(addHomeworkCommand.equals(addPoemCommand));","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"LiuZhi1an"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"LiuZhi1an"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"LiuZhi1an"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"LiuZhi1an"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"LiuZhi1an"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"LiuZhi1an"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"LiuZhi1an"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"LiuZhi1an"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"LiuZhi1an"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"LiuZhi1an"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"LiuZhi1an"},"content":"        public void addMember(Member member) {","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"LiuZhi1an"},"content":"        public void addEvent(Event event) {","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"LiuZhi1an"},"content":"        public void addEventMembers(Event event, Set\u003cMember\u003e memberSet) {","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"LiuZhi1an"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"LiuZhi1an"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"LiuZhi1an"},"content":"        public boolean hasMember(Member member) {","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"LiuZhi1an"},"content":"        public boolean hasEvent(Event event) {","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"LiuZhi1an"},"content":"        public void deleteMember(Member target) {","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"LiuZhi1an"},"content":"        public void deleteEvent(Event event) {","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":188,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":189,"author":{"gitId":"LiuZhi1an"},"content":"        public void setMember(Member target, Member editedMember) {","lastModifiedDate":"2021-10-12"},{"lineNumber":190,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":191,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":192,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":193,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"LiuZhi1an"},"content":"        public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":196,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":198,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":199,"author":{"gitId":"LiuZhi1an"},"content":"        public ObservableList\u003cMember\u003e getFilteredMemberList() {","lastModifiedDate":"2021-10-12"},{"lineNumber":200,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":201,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":202,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":203,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":204,"author":{"gitId":"LiuZhi1an"},"content":"        public void updateFilteredMemberList(Predicate\u003cMember\u003e predicate) {","lastModifiedDate":"2021-10-12"},{"lineNumber":205,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":206,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":207,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":208,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":209,"author":{"gitId":"LiuZhi1an"},"content":"        public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2021-10-12"},{"lineNumber":210,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":211,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":212,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":213,"author":{"gitId":"LiuZhi1an"},"content":"        public void loadTaskList(Member member) {","lastModifiedDate":"2021-10-12"},{"lineNumber":214,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":215,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":216,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":217,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":218,"author":{"gitId":"LiuZhi1an"},"content":"        public void updateFilteredEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2021-10-12"},{"lineNumber":219,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":220,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":221,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":222,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":223,"author":{"gitId":"LiuZhi1an"},"content":"        public boolean hasTask(Member member, Task task) {","lastModifiedDate":"2021-10-12"},{"lineNumber":224,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":225,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":226,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":227,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":228,"author":{"gitId":"LiuZhi1an"},"content":"        public void addTask(Member member, Task task) {","lastModifiedDate":"2021-10-12"},{"lineNumber":229,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":230,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":231,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":232,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":233,"author":{"gitId":"LiuZhi1an"},"content":"        public void deleteTask(Member member, Task task) {","lastModifiedDate":"2021-10-12"},{"lineNumber":234,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":235,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":236,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":237,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":238,"author":{"gitId":"LiuZhi1an"},"content":"        public void deleteTask(Member member, int index) {","lastModifiedDate":"2021-10-12"},{"lineNumber":239,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":240,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":241,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":242,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":243,"author":{"gitId":"tsiyuk"},"content":"        public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2021-10-25"},{"lineNumber":244,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":245,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":246,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":247,"author":{"gitId":"LiuZhi1an"},"content":"        /**","lastModifiedDate":"2021-10-12"},{"lineNumber":248,"author":{"gitId":"LiuZhi1an"},"content":"         * Replaces the task specified by {@code index} with {@code editedTask} in the given {@code member}\u0027s task list.","lastModifiedDate":"2021-10-12"},{"lineNumber":249,"author":{"gitId":"LiuZhi1an"},"content":"         */","lastModifiedDate":"2021-10-12"},{"lineNumber":250,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":251,"author":{"gitId":"tsiyuk"},"content":"        public void setTask(int index, Task editedTask) {","lastModifiedDate":"2021-10-25"},{"lineNumber":252,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":253,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":254,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":255,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":256,"author":{"gitId":"LiuZhi1an"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList(Member member) {","lastModifiedDate":"2021-10-12"},{"lineNumber":257,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":258,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":259,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":260,"author":{"gitId":"tsiyuk"},"content":"        @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":261,"author":{"gitId":"tsiyuk"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2021-10-24"},{"lineNumber":262,"author":{"gitId":"tsiyuk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":263,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":264,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":265,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":266,"author":{"gitId":"LiuZhi1an"},"content":"        public void updateFilteredTaskList(Member member, Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-10-12"},{"lineNumber":267,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":268,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":269,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":270,"author":{"gitId":"tsiyuk"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":271,"author":{"gitId":"tsiyuk"},"content":"        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-10-25"},{"lineNumber":272,"author":{"gitId":"tsiyuk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":273,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":274,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":275,"author":{"gitId":"tsiyuk"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":276,"author":{"gitId":"tsiyuk"},"content":"        public Optional\u003cMember\u003e getCurrentMember() {","lastModifiedDate":"2021-10-27"},{"lineNumber":277,"author":{"gitId":"tsiyuk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":278,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":279,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":280,"author":{"gitId":"tsiyuk"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":281,"author":{"gitId":"tsiyuk"},"content":"        public void setCurrentEvent(Event currentEvent) {","lastModifiedDate":"2021-10-28"},{"lineNumber":282,"author":{"gitId":"tsiyuk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":283,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":284,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":285,"author":{"gitId":"tsiyuk"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":286,"author":{"gitId":"tsiyuk"},"content":"        public Optional\u003cEvent\u003e getCurrentEvent() {","lastModifiedDate":"2021-10-28"},{"lineNumber":287,"author":{"gitId":"tsiyuk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":288,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":289,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":290,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":291,"author":{"gitId":"LiuZhi1an"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":292,"author":{"gitId":"LiuZhi1an"},"content":"     * A Model stub that always accept the member being added.","lastModifiedDate":"2021-10-12"},{"lineNumber":293,"author":{"gitId":"LiuZhi1an"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":294,"author":{"gitId":"LiuZhi1an"},"content":"    private class ModelStubAcceptingTaskAdded extends ModelStub {","lastModifiedDate":"2021-10-12"},{"lineNumber":295,"author":{"gitId":"LiuZhi1an"},"content":"        private final AddressBook addressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":296,"author":{"gitId":"LiuZhi1an"},"content":"        private final Set\u003cMember\u003e members \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":297,"author":{"gitId":"LiuZhi1an"},"content":"        private final Task task;","lastModifiedDate":"2021-10-12"},{"lineNumber":298,"author":{"gitId":"tsiyuk"},"content":"        private TaskList taskListManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":299,"author":{"gitId":"LiuZhi1an"},"content":"        private final FilteredList\u003cMember\u003e filteredMembers;","lastModifiedDate":"2021-10-13"},{"lineNumber":300,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":301,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":302,"author":{"gitId":"LiuZhi1an"},"content":"        ModelStubAcceptingTaskAdded(ReadOnlyAddressBook addressBook, Task task, Set\u003cIndex\u003e memberIdList) {","lastModifiedDate":"2021-10-19"},{"lineNumber":303,"author":{"gitId":"LiuZhi1an"},"content":"            this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2021-10-12"},{"lineNumber":304,"author":{"gitId":"LiuZhi1an"},"content":"            requireNonNull(memberIdList);","lastModifiedDate":"2021-10-19"},{"lineNumber":305,"author":{"gitId":"LiuZhi1an"},"content":"            this.filteredMembers \u003d new FilteredList\u003c\u003e(this.addressBook.getMemberList());","lastModifiedDate":"2021-10-13"},{"lineNumber":306,"author":{"gitId":"LiuZhi1an"},"content":"            for (Index memberId: memberIdList) {","lastModifiedDate":"2021-10-19"},{"lineNumber":307,"author":{"gitId":"LiuZhi1an"},"content":"                this.members.add(filteredMembers.get(memberId.getZeroBased()));","lastModifiedDate":"2021-10-19"},{"lineNumber":308,"author":{"gitId":"LiuZhi1an"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":309,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":310,"author":{"gitId":"LiuZhi1an"},"content":"            requireNonNull(task);","lastModifiedDate":"2021-10-12"},{"lineNumber":311,"author":{"gitId":"LiuZhi1an"},"content":"            this.task \u003d task;","lastModifiedDate":"2021-10-12"},{"lineNumber":312,"author":{"gitId":"tsiyuk"},"content":"            this.taskListManager \u003d new TaskList();","lastModifiedDate":"2021-10-21"},{"lineNumber":313,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":314,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":315,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":316,"author":{"gitId":"LiuZhi1an"},"content":"        public boolean hasTask(Member member, Task task) {","lastModifiedDate":"2021-10-12"},{"lineNumber":317,"author":{"gitId":"LiuZhi1an"},"content":"            loadTaskList(member);","lastModifiedDate":"2021-10-12"},{"lineNumber":318,"author":{"gitId":"tsiyuk"},"content":"            return taskListManager.contains(task);","lastModifiedDate":"2021-10-21"},{"lineNumber":319,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":320,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":321,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":322,"author":{"gitId":"LiuZhi1an"},"content":"        public void addTask(Member member, Task task) {","lastModifiedDate":"2021-10-12"},{"lineNumber":323,"author":{"gitId":"LiuZhi1an"},"content":"            requireNonNull(member);","lastModifiedDate":"2021-10-12"},{"lineNumber":324,"author":{"gitId":"LiuZhi1an"},"content":"            loadTaskList(member);","lastModifiedDate":"2021-10-12"},{"lineNumber":325,"author":{"gitId":"tsiyuk"},"content":"            taskListManager.add(task);","lastModifiedDate":"2021-10-21"},{"lineNumber":326,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":327,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":328,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":329,"author":{"gitId":"LiuZhi1an"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-12"},{"lineNumber":330,"author":{"gitId":"LiuZhi1an"},"content":"            return this.addressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":331,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":332,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":333,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":334,"author":{"gitId":"LiuZhi1an"},"content":"        public ObservableList\u003cMember\u003e getFilteredMemberList() {","lastModifiedDate":"2021-10-13"},{"lineNumber":335,"author":{"gitId":"LiuZhi1an"},"content":"            return filteredMembers;","lastModifiedDate":"2021-10-13"},{"lineNumber":336,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":337,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":338,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":339,"author":{"gitId":"LiuZhi1an"},"content":"        public void loadTaskList(Member member) {","lastModifiedDate":"2021-10-12"},{"lineNumber":340,"author":{"gitId":"LiuZhi1an"},"content":"            requireNonNull(member);","lastModifiedDate":"2021-10-12"},{"lineNumber":341,"author":{"gitId":"tsiyuk"},"content":"            if (this.taskListManager !\u003d member.getTaskList()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":342,"author":{"gitId":"tsiyuk"},"content":"                this.taskListManager \u003d member.getTaskList();","lastModifiedDate":"2021-10-21"},{"lineNumber":343,"author":{"gitId":"tsiyuk"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":344,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":345,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":346,"author":{"gitId":"LiuZhi1an"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"LiuZhi1an":298,"tsiyuk":40,"leeroy999":4,"Samuel-bit-prog":4}},{"path":"src/test/java/seedu/address/logic/commands/task/TdelCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package seedu.address.logic.commands.task;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"LiuZhi1an"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"LiuZhi1an"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"LiuZhi1an"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"LiuZhi1an"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"LiuZhi1an"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"LiuZhi1an"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"LiuZhi1an"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"LiuZhi1an"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"LiuZhi1an"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"LiuZhi1an"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"LiuZhi1an"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"LiuZhi1an"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.event.Event;","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.task.Task;","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.task.TaskList;","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.testutil.MemberBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"leeroy999"},"content":"class TdelCommandTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"LiuZhi1an"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"LiuZhi1an"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"LiuZhi1an"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TdelCommand(null));","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"LiuZhi1an"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"LiuZhi1an"},"content":"    public void execute_taskDeletedByModel_deleteSuccessful() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"LiuZhi1an"},"content":"        Index validMemberId \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"LiuZhi1an"},"content":"        Set\u003cIndex\u003e validMemberIdList \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"LiuZhi1an"},"content":"        validMemberIdList.add(validMemberId);","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"LiuZhi1an"},"content":"        Index validTaskId \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"tsiyuk"},"content":"        Task validTask \u003d new TaskBuilder().build();","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"LiuZhi1an"},"content":"        Member validMember \u003d new MemberBuilder().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"LiuZhi1an"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withMember(validMember).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"LiuZhi1an"},"content":"        TaddCommand tAddCommand \u003d new TaddCommand(validMemberIdList, validTask);","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"LiuZhi1an"},"content":"        ModelStub modelStub \u003d new ModelStubWithTask(addressBook, validTask, validMemberId);","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"LiuZhi1an"},"content":"        tAddCommand.execute(modelStub);","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"LiuZhi1an"},"content":"        CommandResult commandResult \u003d new TdelCommand(validTaskId).execute(modelStub);","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"tsiyuk"},"content":"        assertEquals(String.format(TdelCommand.MESSAGE_SUCCESS, validMember.getName(), validTask.getName()),","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"LiuZhi1an"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"LiuZhi1an"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"LiuZhi1an"},"content":"    public void execute_taskNotPresent_throwsTaskNotFoundException() throws CommandException {","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"LiuZhi1an"},"content":"        Index validMemberId \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"LiuZhi1an"},"content":"        Index validTaskId \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"LiuZhi1an"},"content":"        Member validMember \u003d new MemberBuilder().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"LiuZhi1an"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withMember(validMember).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"LiuZhi1an"},"content":"        TdelCommand tDelCommand \u003d new TdelCommand(validTaskId);","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"LiuZhi1an"},"content":"        ModelStubWithoutTask modelStub \u003d new ModelStubWithoutTask(addressBook, validMemberId);","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"LiuZhi1an"},"content":"        TlistCommand tlistCommand \u003d new TlistCommand(validMemberId);","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"LiuZhi1an"},"content":"        tlistCommand.execute(modelStub);","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"leeroy999"},"content":"        assertThrows(CommandException.class, TdelCommand.MESSAGE_TASK_NOT_FOUND, () -\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"LiuZhi1an"},"content":"                tDelCommand.execute(modelStub));","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"LiuZhi1an"},"content":"    //TODO","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"LiuZhi1an"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"LiuZhi1an"},"content":"    void equals() {","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"LiuZhi1an"},"content":"        Index validMemberId \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"LiuZhi1an"},"content":"        Index validTaskId1 \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-29"},{"lineNumber":80,"author":{"gitId":"LiuZhi1an"},"content":"        Index validTaskId2 \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-10-29"},{"lineNumber":81,"author":{"gitId":"LiuZhi1an"},"content":"        Member validMember \u003d new MemberBuilder().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"LiuZhi1an"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withMember(validMember).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"LiuZhi1an"},"content":"        TdelCommand tDelCommand1 \u003d new TdelCommand(validTaskId1);","lastModifiedDate":"2021-10-29"},{"lineNumber":84,"author":{"gitId":"LiuZhi1an"},"content":"        TdelCommand tDelCommand2 \u003d new TdelCommand(validTaskId2);","lastModifiedDate":"2021-10-29"},{"lineNumber":85,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"LiuZhi1an"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"LiuZhi1an"},"content":"        assertTrue(tDelCommand1.equals(tDelCommand1));","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"LiuZhi1an"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"LiuZhi1an"},"content":"        TdelCommand tDelCommand1Copy \u003d new TdelCommand(validTaskId1);","lastModifiedDate":"2021-10-29"},{"lineNumber":91,"author":{"gitId":"LiuZhi1an"},"content":"        assertTrue(tDelCommand1.equals(tDelCommand1Copy));","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"LiuZhi1an"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"LiuZhi1an"},"content":"        assertFalse(tDelCommand1.equals(1));","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"LiuZhi1an"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"LiuZhi1an"},"content":"        assertFalse(tDelCommand1.equals(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"LiuZhi1an"},"content":"        // different member -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"LiuZhi1an"},"content":"        assertFalse(tDelCommand1.equals(tDelCommand2));","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"LiuZhi1an"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"LiuZhi1an"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"LiuZhi1an"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"LiuZhi1an"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"LiuZhi1an"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"LiuZhi1an"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"LiuZhi1an"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"LiuZhi1an"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"LiuZhi1an"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"LiuZhi1an"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"LiuZhi1an"},"content":"        public void addMember(Member member) {","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"LiuZhi1an"},"content":"        public void addEvent(Event event) {","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"LiuZhi1an"},"content":"        public void addEventMembers(Event event, Set\u003cMember\u003e memberSet) {","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"LiuZhi1an"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"LiuZhi1an"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"LiuZhi1an"},"content":"        public boolean hasMember(Member member) {","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"LiuZhi1an"},"content":"        public boolean hasEvent(Event event) {","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"LiuZhi1an"},"content":"        public void deleteMember(Member target) {","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"LiuZhi1an"},"content":"        public void deleteEvent(Event event) {","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"LiuZhi1an"},"content":"        public void setMember(Member target, Member editedMember) {","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":188,"author":{"gitId":"LiuZhi1an"},"content":"        public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2021-10-12"},{"lineNumber":189,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":190,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":191,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":192,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":193,"author":{"gitId":"LiuZhi1an"},"content":"        public ObservableList\u003cMember\u003e getFilteredMemberList() {","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":196,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":198,"author":{"gitId":"LiuZhi1an"},"content":"        public void updateFilteredMemberList(Predicate\u003cMember\u003e predicate) {","lastModifiedDate":"2021-10-12"},{"lineNumber":199,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":200,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":201,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":202,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":203,"author":{"gitId":"LiuZhi1an"},"content":"        public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2021-10-12"},{"lineNumber":204,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":205,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":206,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":207,"author":{"gitId":"LiuZhi1an"},"content":"        public void loadTaskList(Member member) {","lastModifiedDate":"2021-10-12"},{"lineNumber":208,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":209,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":210,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":211,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":212,"author":{"gitId":"LiuZhi1an"},"content":"        public void updateFilteredEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2021-10-12"},{"lineNumber":213,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":214,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":215,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":216,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":217,"author":{"gitId":"LiuZhi1an"},"content":"        public boolean hasTask(Member member, Task task) {","lastModifiedDate":"2021-10-12"},{"lineNumber":218,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":219,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":220,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":221,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":222,"author":{"gitId":"LiuZhi1an"},"content":"        public void addTask(Member member, Task task) {","lastModifiedDate":"2021-10-12"},{"lineNumber":223,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":224,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":225,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":226,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":227,"author":{"gitId":"LiuZhi1an"},"content":"        public void deleteTask(Member member, Task task) {","lastModifiedDate":"2021-10-12"},{"lineNumber":228,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":229,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":230,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":231,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":232,"author":{"gitId":"LiuZhi1an"},"content":"        public void deleteTask(Member member, int index) {","lastModifiedDate":"2021-10-12"},{"lineNumber":233,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":234,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":235,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":236,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":237,"author":{"gitId":"tsiyuk"},"content":"        public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2021-10-25"},{"lineNumber":238,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":239,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":240,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":241,"author":{"gitId":"LiuZhi1an"},"content":"        /**","lastModifiedDate":"2021-10-12"},{"lineNumber":242,"author":{"gitId":"LiuZhi1an"},"content":"         * Replaces the task specified by {@code index} with {@code editedTask} in the given {@code member}\u0027s task list.","lastModifiedDate":"2021-10-12"},{"lineNumber":243,"author":{"gitId":"LiuZhi1an"},"content":"         */","lastModifiedDate":"2021-10-12"},{"lineNumber":244,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":245,"author":{"gitId":"tsiyuk"},"content":"        public void setTask(int index, Task editedTask) {","lastModifiedDate":"2021-10-25"},{"lineNumber":246,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":247,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":248,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":249,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":250,"author":{"gitId":"LiuZhi1an"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList(Member member) {","lastModifiedDate":"2021-10-12"},{"lineNumber":251,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":252,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":253,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":254,"author":{"gitId":"tsiyuk"},"content":"        @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":255,"author":{"gitId":"tsiyuk"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2021-10-24"},{"lineNumber":256,"author":{"gitId":"tsiyuk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":257,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":258,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":259,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":260,"author":{"gitId":"LiuZhi1an"},"content":"        public void updateFilteredTaskList(Member member, Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-10-12"},{"lineNumber":261,"author":{"gitId":"LiuZhi1an"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":262,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":263,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":264,"author":{"gitId":"tsiyuk"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":265,"author":{"gitId":"tsiyuk"},"content":"        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-10-25"},{"lineNumber":266,"author":{"gitId":"tsiyuk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":267,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":268,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":269,"author":{"gitId":"tsiyuk"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":270,"author":{"gitId":"tsiyuk"},"content":"        public Optional\u003cMember\u003e getCurrentMember() {","lastModifiedDate":"2021-10-27"},{"lineNumber":271,"author":{"gitId":"tsiyuk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":272,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":273,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":274,"author":{"gitId":"tsiyuk"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":275,"author":{"gitId":"tsiyuk"},"content":"        public void setCurrentEvent(Event currentEvent) {","lastModifiedDate":"2021-10-28"},{"lineNumber":276,"author":{"gitId":"tsiyuk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":277,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":278,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":279,"author":{"gitId":"tsiyuk"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":280,"author":{"gitId":"tsiyuk"},"content":"        public Optional\u003cEvent\u003e getCurrentEvent() {","lastModifiedDate":"2021-10-28"},{"lineNumber":281,"author":{"gitId":"tsiyuk"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":282,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":283,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":284,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":285,"author":{"gitId":"LiuZhi1an"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":286,"author":{"gitId":"LiuZhi1an"},"content":"     * A Model stub that contains a single member with task.","lastModifiedDate":"2021-10-12"},{"lineNumber":287,"author":{"gitId":"LiuZhi1an"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":288,"author":{"gitId":"LiuZhi1an"},"content":"    private class ModelStubWithTask extends ModelStub {","lastModifiedDate":"2021-10-12"},{"lineNumber":289,"author":{"gitId":"LiuZhi1an"},"content":"        private final AddressBook addressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":290,"author":{"gitId":"LiuZhi1an"},"content":"        private final Member member;","lastModifiedDate":"2021-10-12"},{"lineNumber":291,"author":{"gitId":"LiuZhi1an"},"content":"        private final Task task;","lastModifiedDate":"2021-10-12"},{"lineNumber":292,"author":{"gitId":"tsiyuk"},"content":"        private TaskList taskListManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":293,"author":{"gitId":"LiuZhi1an"},"content":"        private final FilteredList\u003cMember\u003e filteredMembers;","lastModifiedDate":"2021-10-13"},{"lineNumber":294,"author":{"gitId":"LiuZhi1an"},"content":"        // The current selected member","lastModifiedDate":"2021-10-29"},{"lineNumber":295,"author":{"gitId":"LiuZhi1an"},"content":"        private Member currentMember;","lastModifiedDate":"2021-10-29"},{"lineNumber":296,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":297,"author":{"gitId":"LiuZhi1an"},"content":"        ModelStubWithTask(ReadOnlyAddressBook addressBook, Task task, Index memberId) {","lastModifiedDate":"2021-10-28"},{"lineNumber":298,"author":{"gitId":"LiuZhi1an"},"content":"            this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2021-10-12"},{"lineNumber":299,"author":{"gitId":"LiuZhi1an"},"content":"            requireNonNull(memberId);","lastModifiedDate":"2021-10-28"},{"lineNumber":300,"author":{"gitId":"LiuZhi1an"},"content":"            this.filteredMembers \u003d new FilteredList\u003c\u003e(this.addressBook.getMemberList());","lastModifiedDate":"2021-10-13"},{"lineNumber":301,"author":{"gitId":"LiuZhi1an"},"content":"            this.member \u003d filteredMembers.get(memberId.getZeroBased());","lastModifiedDate":"2021-10-28"},{"lineNumber":302,"author":{"gitId":"LiuZhi1an"},"content":"            requireNonNull(task);","lastModifiedDate":"2021-10-12"},{"lineNumber":303,"author":{"gitId":"LiuZhi1an"},"content":"            this.task \u003d task;","lastModifiedDate":"2021-10-12"},{"lineNumber":304,"author":{"gitId":"tsiyuk"},"content":"            this.taskListManager \u003d new TaskList();","lastModifiedDate":"2021-10-21"},{"lineNumber":305,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":306,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":307,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":308,"author":{"gitId":"LiuZhi1an"},"content":"        public ObservableList\u003cMember\u003e getFilteredMemberList() {","lastModifiedDate":"2021-10-13"},{"lineNumber":309,"author":{"gitId":"LiuZhi1an"},"content":"            return filteredMembers;","lastModifiedDate":"2021-10-13"},{"lineNumber":310,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":311,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":312,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":313,"author":{"gitId":"LiuZhi1an"},"content":"        public boolean hasTask(Member member, Task task) {","lastModifiedDate":"2021-10-12"},{"lineNumber":314,"author":{"gitId":"LiuZhi1an"},"content":"            loadTaskList(member);","lastModifiedDate":"2021-10-12"},{"lineNumber":315,"author":{"gitId":"tsiyuk"},"content":"            return taskListManager.contains(task);","lastModifiedDate":"2021-10-21"},{"lineNumber":316,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":317,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":318,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":319,"author":{"gitId":"LiuZhi1an"},"content":"        public void addTask(Member member, Task task) {","lastModifiedDate":"2021-10-12"},{"lineNumber":320,"author":{"gitId":"LiuZhi1an"},"content":"            requireNonNull(member);","lastModifiedDate":"2021-10-12"},{"lineNumber":321,"author":{"gitId":"LiuZhi1an"},"content":"            loadTaskList(member);","lastModifiedDate":"2021-10-12"},{"lineNumber":322,"author":{"gitId":"tsiyuk"},"content":"            taskListManager.add(task);","lastModifiedDate":"2021-10-21"},{"lineNumber":323,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":324,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":325,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":326,"author":{"gitId":"LiuZhi1an"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-12"},{"lineNumber":327,"author":{"gitId":"LiuZhi1an"},"content":"            return this.addressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":328,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":329,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":330,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":331,"author":{"gitId":"LiuZhi1an"},"content":"        public void loadTaskList(Member member) {","lastModifiedDate":"2021-10-12"},{"lineNumber":332,"author":{"gitId":"LiuZhi1an"},"content":"            requireNonNull(member);","lastModifiedDate":"2021-10-12"},{"lineNumber":333,"author":{"gitId":"tsiyuk"},"content":"            if (this.taskListManager !\u003d member.getTaskList()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":334,"author":{"gitId":"tsiyuk"},"content":"                this.taskListManager \u003d member.getTaskList();","lastModifiedDate":"2021-10-21"},{"lineNumber":335,"author":{"gitId":"LiuZhi1an"},"content":"                this.currentMember \u003d member;","lastModifiedDate":"2021-10-29"},{"lineNumber":336,"author":{"gitId":"tsiyuk"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":337,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":338,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":339,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":340,"author":{"gitId":"LiuZhi1an"},"content":"        public void deleteTask(Member member, int index) {","lastModifiedDate":"2021-10-12"},{"lineNumber":341,"author":{"gitId":"LiuZhi1an"},"content":"            loadTaskList(member);","lastModifiedDate":"2021-10-12"},{"lineNumber":342,"author":{"gitId":"tsiyuk"},"content":"            taskListManager.remove(index);","lastModifiedDate":"2021-10-21"},{"lineNumber":343,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":344,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":345,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":346,"author":{"gitId":"LiuZhi1an"},"content":"        public Optional\u003cMember\u003e getCurrentMember() {","lastModifiedDate":"2021-10-29"},{"lineNumber":347,"author":{"gitId":"LiuZhi1an"},"content":"            return Optional.ofNullable(currentMember);","lastModifiedDate":"2021-10-29"},{"lineNumber":348,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":349,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":350,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":351,"author":{"gitId":"LiuZhi1an"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":352,"author":{"gitId":"LiuZhi1an"},"content":"     * A Model stub that contains a single member with task.","lastModifiedDate":"2021-10-12"},{"lineNumber":353,"author":{"gitId":"LiuZhi1an"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":354,"author":{"gitId":"LiuZhi1an"},"content":"    private class ModelStubWithoutTask extends ModelStub {","lastModifiedDate":"2021-10-12"},{"lineNumber":355,"author":{"gitId":"LiuZhi1an"},"content":"        private final AddressBook addressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":356,"author":{"gitId":"LiuZhi1an"},"content":"        private final Member member;","lastModifiedDate":"2021-10-12"},{"lineNumber":357,"author":{"gitId":"tsiyuk"},"content":"        private TaskList taskListManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":358,"author":{"gitId":"LiuZhi1an"},"content":"        private final FilteredList\u003cMember\u003e filteredMembers;","lastModifiedDate":"2021-10-13"},{"lineNumber":359,"author":{"gitId":"LiuZhi1an"},"content":"        // The current selected member","lastModifiedDate":"2021-10-29"},{"lineNumber":360,"author":{"gitId":"LiuZhi1an"},"content":"        private Member currentMember;","lastModifiedDate":"2021-10-29"},{"lineNumber":361,"author":{"gitId":"LiuZhi1an"},"content":"        private FilteredList\u003cTask\u003e filteredTasks;","lastModifiedDate":"2021-10-29"},{"lineNumber":362,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":363,"author":{"gitId":"LiuZhi1an"},"content":"        ModelStubWithoutTask(ReadOnlyAddressBook addressBook, Index memberId) {","lastModifiedDate":"2021-10-28"},{"lineNumber":364,"author":{"gitId":"LiuZhi1an"},"content":"            this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2021-10-12"},{"lineNumber":365,"author":{"gitId":"LiuZhi1an"},"content":"            requireNonNull(memberId);","lastModifiedDate":"2021-10-28"},{"lineNumber":366,"author":{"gitId":"LiuZhi1an"},"content":"            this.filteredMembers \u003d new FilteredList\u003c\u003e(this.addressBook.getMemberList());","lastModifiedDate":"2021-10-13"},{"lineNumber":367,"author":{"gitId":"LiuZhi1an"},"content":"            this.member \u003d filteredMembers.get(memberId.getZeroBased());","lastModifiedDate":"2021-10-28"},{"lineNumber":368,"author":{"gitId":"tsiyuk"},"content":"            this.taskListManager \u003d new TaskList();","lastModifiedDate":"2021-10-21"},{"lineNumber":369,"author":{"gitId":"LiuZhi1an"},"content":"            filteredTasks \u003d new FilteredList\u003c\u003e(this.taskListManager.asUnmodifiableObservableList());","lastModifiedDate":"2021-10-29"},{"lineNumber":370,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":371,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":372,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":373,"author":{"gitId":"LiuZhi1an"},"content":"        public ObservableList\u003cMember\u003e getFilteredMemberList() {","lastModifiedDate":"2021-10-13"},{"lineNumber":374,"author":{"gitId":"LiuZhi1an"},"content":"            return filteredMembers;","lastModifiedDate":"2021-10-13"},{"lineNumber":375,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":376,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":377,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":378,"author":{"gitId":"LiuZhi1an"},"content":"        public boolean hasTask(Member member, Task task) {","lastModifiedDate":"2021-10-12"},{"lineNumber":379,"author":{"gitId":"LiuZhi1an"},"content":"            loadTaskList(member);","lastModifiedDate":"2021-10-12"},{"lineNumber":380,"author":{"gitId":"tsiyuk"},"content":"            return taskListManager.contains(task);","lastModifiedDate":"2021-10-21"},{"lineNumber":381,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":382,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":383,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":384,"author":{"gitId":"LiuZhi1an"},"content":"        public void addTask(Member member, Task task) {","lastModifiedDate":"2021-10-12"},{"lineNumber":385,"author":{"gitId":"LiuZhi1an"},"content":"            requireNonNull(member);","lastModifiedDate":"2021-10-12"},{"lineNumber":386,"author":{"gitId":"LiuZhi1an"},"content":"            loadTaskList(member);","lastModifiedDate":"2021-10-12"},{"lineNumber":387,"author":{"gitId":"tsiyuk"},"content":"            taskListManager.add(task);","lastModifiedDate":"2021-10-21"},{"lineNumber":388,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":389,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":390,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":391,"author":{"gitId":"LiuZhi1an"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-12"},{"lineNumber":392,"author":{"gitId":"LiuZhi1an"},"content":"            return this.addressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":393,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":394,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":395,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":396,"author":{"gitId":"LiuZhi1an"},"content":"        public void loadTaskList(Member member) {","lastModifiedDate":"2021-10-12"},{"lineNumber":397,"author":{"gitId":"LiuZhi1an"},"content":"            requireNonNull(member);","lastModifiedDate":"2021-10-12"},{"lineNumber":398,"author":{"gitId":"tsiyuk"},"content":"            if (this.taskListManager !\u003d member.getTaskList()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":399,"author":{"gitId":"tsiyuk"},"content":"                this.taskListManager \u003d member.getTaskList();","lastModifiedDate":"2021-10-21"},{"lineNumber":400,"author":{"gitId":"LiuZhi1an"},"content":"                this.currentMember \u003d member;","lastModifiedDate":"2021-10-29"},{"lineNumber":401,"author":{"gitId":"tsiyuk"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":402,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":403,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":404,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":405,"author":{"gitId":"LiuZhi1an"},"content":"        public void deleteTask(Member member, int index) {","lastModifiedDate":"2021-10-12"},{"lineNumber":406,"author":{"gitId":"LiuZhi1an"},"content":"            loadTaskList(member);","lastModifiedDate":"2021-10-12"},{"lineNumber":407,"author":{"gitId":"tsiyuk"},"content":"            taskListManager.remove(index);","lastModifiedDate":"2021-10-21"},{"lineNumber":408,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":409,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":410,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":411,"author":{"gitId":"LiuZhi1an"},"content":"        public Optional\u003cMember\u003e getCurrentMember() {","lastModifiedDate":"2021-10-29"},{"lineNumber":412,"author":{"gitId":"LiuZhi1an"},"content":"            return Optional.ofNullable(currentMember);","lastModifiedDate":"2021-10-29"},{"lineNumber":413,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":414,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":415,"author":{"gitId":"LiuZhi1an"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":416,"author":{"gitId":"LiuZhi1an"},"content":"        public void updateFilteredTaskList(Member member, Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-10-29"},{"lineNumber":417,"author":{"gitId":"LiuZhi1an"},"content":"            requireNonNull(predicate);","lastModifiedDate":"2021-10-29"},{"lineNumber":418,"author":{"gitId":"LiuZhi1an"},"content":"            loadTaskList(member);","lastModifiedDate":"2021-10-29"},{"lineNumber":419,"author":{"gitId":"LiuZhi1an"},"content":"            filteredTasks.setPredicate(predicate);","lastModifiedDate":"2021-10-29"},{"lineNumber":420,"author":{"gitId":"LiuZhi1an"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":421,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":422,"author":{"gitId":"LiuZhi1an"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"LiuZhi1an":367,"tsiyuk":47,"leeroy999":4,"Samuel-bit-prog":4}},{"path":"src/test/java/seedu/address/logic/commands/task/TlistCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package seedu.address.logic.commands.task;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.testutil.TypicalMembers.getTypicalAddressBook;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"LiuZhi1an"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"LiuZhi1an"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.testutil.TypicalIndexes;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"LiuZhi1an"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"LiuZhi1an"},"content":" * Contains integration tests (interaction with the Model) and unit tests for TlistCommand.","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"LiuZhi1an"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"LiuZhi1an"},"content":"class TlistCommandTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"LiuZhi1an"},"content":"    private Model model;","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"LiuZhi1an"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"LiuZhi1an"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"LiuZhi1an"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"LiuZhi1an"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"LiuZhi1an"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"LiuZhi1an"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"LiuZhi1an"},"content":"    public void execute_tlistIsSuccessfulShown_showsSameList() {","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"LiuZhi1an"},"content":"        Index validMemberId \u003d TypicalIndexes.INDEX_FIRST_MEMBER;","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"LiuZhi1an"},"content":"        Member targetMember \u003d model.getFilteredMemberList().get(0);","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"        expectedModel.loadTaskList(targetMember);","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"LiuZhi1an"},"content":"        assertCommandSuccess(new TlistCommand(validMemberId), model,","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"LiuZhi1an"},"content":"                TlistCommand.MESSAGE_SUCCESS + \" of \" + targetMember.getName(), expectedModel);","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"LiuZhi1an"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"LiuZhi1an":35,"tsiyuk":1,"leeroy999":1,"Samuel-bit-prog":1}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEMBER_ID_DESC_ONE;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MEMBER;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"LiuZhi1an"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"LiuZhi1an"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.member.MaddCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.member.MdelCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.member.MeditCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.member.MeditCommand.EditMemberDescriptor;","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.member.MfindCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.member.MlistCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.task.TaddCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.task.TdelCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.task.TlistCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.task.Task;","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"import seedu.address.testutil.EditMemberDescriptorBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"import seedu.address.testutil.MemberBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"leeroy999"},"content":"import seedu.address.testutil.MemberUtil;","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.testutil.TaskUtil;","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"leeroy999"},"content":"        Member member \u003d new MemberBuilder().build();","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"leeroy999"},"content":"        MaddCommand command \u003d (MaddCommand) parser.parseCommand(MemberUtil.getPaddCommand(member));","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"leeroy999"},"content":"        assertEquals(new MaddCommand(member), command);","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"LiuZhi1an"},"content":"    public void parseCommand_add_task() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"LiuZhi1an"},"content":"        Index validMemberId \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"LiuZhi1an"},"content":"        Set\u003cIndex\u003e validMemberIdList \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"LiuZhi1an"},"content":"        validMemberIdList.add(validMemberId);","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"tsiyuk"},"content":"        Task validTask \u003d new TaskBuilder().build();","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"LiuZhi1an"},"content":"        TaddCommand command \u003d (TaddCommand) parser.parseCommand(TaskUtil.getTaddCommand(validTask, validMemberId));","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"LiuZhi1an"},"content":"        assertEquals(new TaddCommand(validMemberIdList, validTask), command);","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"LiuZhi1an"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"LiuZhi1an"},"content":"    public void parseCommand_del_task() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"LiuZhi1an"},"content":"        Index validMemberId \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"LiuZhi1an"},"content":"        Index validTaskId \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"LiuZhi1an"},"content":"        TdelCommand command \u003d (TdelCommand) parser.parseCommand(TaskUtil.getTdelCommand(validTaskId));","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"LiuZhi1an"},"content":"        assertEquals(new TdelCommand(validTaskId), command);","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"leeroy999"},"content":"        MdelCommand command \u003d (MdelCommand) parser.parseCommand(","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"leeroy999"},"content":"                MdelCommand.COMMAND_WORD + \" \" + CliSyntax.PREFIX_MEMBER_ID + INDEX_FIRST_MEMBER.getOneBased());","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"leeroy999"},"content":"        assertEquals(new MdelCommand(INDEX_FIRST_MEMBER), command);","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"leeroy999"},"content":"        Member member \u003d new MemberBuilder().build();","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"leeroy999"},"content":"        EditMemberDescriptor descriptor \u003d new EditMemberDescriptorBuilder(member).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"leeroy999"},"content":"        MeditCommand command \u003d (MeditCommand) parser.parseCommand(MeditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"leeroy999"},"content":"                + CliSyntax.PREFIX_MEMBER_ID + INDEX_FIRST_MEMBER.getOneBased() + \" \"","lastModifiedDate":"2021-10-31"},{"lineNumber":83,"author":{"gitId":"leeroy999"},"content":"                + MemberUtil.getEditMemberDescriptorDetails(descriptor));","lastModifiedDate":"2021-10-31"},{"lineNumber":84,"author":{"gitId":"leeroy999"},"content":"        assertEquals(new MeditCommand(INDEX_FIRST_MEMBER, descriptor), command);","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":96,"author":{"gitId":"leeroy999"},"content":"        MfindCommand command \u003d (MfindCommand) parser.parseCommand(","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"leeroy999"},"content":"                MfindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"leeroy999"},"content":"        assertEquals(new MfindCommand(new NameContainsKeywordsPredicate\u003cMember\u003e(keywords)), command);","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"leeroy999"},"content":"        assertTrue(parser.parseCommand(MlistCommand.COMMAND_WORD) instanceof MlistCommand);","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"leeroy999"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, MlistCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"leeroy999"},"content":"            -\u003e parser.parseCommand(MlistCommand.COMMAND_WORD + \" 3\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"LiuZhi1an"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"LiuZhi1an"},"content":"    public void parseCommand_tlist() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"LiuZhi1an"},"content":"        assertTrue(parser.parseCommand(TlistCommand.COMMAND_WORD + MEMBER_ID_DESC_ONE) instanceof TlistCommand);","lastModifiedDate":"2021-10-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":129,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"LiuZhi1an":24,"-":71,"tsiyuk":2,"leeroy999":30,"Samuel-bit-prog":3}},{"path":"src/test/java/seedu/address/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"LiuZhi1an"},"content":"        String argsString \u003d \"  some random string /t position with leading and trailing spaces \";","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"LiuZhi1an":1,"-":149}},{"path":"src/test/java/seedu/address/logic/parser/MaddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_POSITION_DESC;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.commands.CommandTestUtil.POSITION_DESC_FRIEND;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.commands.CommandTestUtil.POSITION_DESC_HUSBAND;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POSITION_FRIEND;","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POSITION_HUSBAND;","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.testutil.TypicalMembers.AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.testutil.TypicalMembers.BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.member.MaddCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.member.MaddCommandParser;","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.Name;","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Address;","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Email;","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Phone;","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.position.Position;","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"leeroy999"},"content":"import seedu.address.testutil.MemberBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"public class MaddCommandParserTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"leeroy999"},"content":"    private MaddCommandParser parser \u003d new MaddCommandParser();","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":49,"author":{"gitId":"LiuZhi1an"},"content":"        Member expectedMember \u003d new MemberBuilder(BOB).withPositions(VALID_POSITION_FRIEND).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"leeroy999"},"content":"                + ADDRESS_DESC_BOB + POSITION_DESC_FRIEND, new MaddCommand(expectedMember));","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"leeroy999"},"content":"                + ADDRESS_DESC_BOB + POSITION_DESC_FRIEND, new MaddCommand(expectedMember));","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"leeroy999"},"content":"                + ADDRESS_DESC_BOB + POSITION_DESC_FRIEND, new MaddCommand(expectedMember));","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"leeroy999"},"content":"                + ADDRESS_DESC_BOB + POSITION_DESC_FRIEND, new MaddCommand(expectedMember));","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"leeroy999"},"content":"                + ADDRESS_DESC_BOB + POSITION_DESC_FRIEND, new MaddCommand(expectedMember));","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"LiuZhi1an"},"content":"        Member expectedMemberMultiplePositions \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"LiuZhi1an"},"content":"                new MemberBuilder(BOB).withPositions(VALID_POSITION_FRIEND, VALID_POSITION_HUSBAND)","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                        .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"leeroy999"},"content":"                + POSITION_DESC_HUSBAND + POSITION_DESC_FRIEND, new MaddCommand(expectedMemberMultiplePositions));","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"LiuZhi1an"},"content":"        Member expectedMember \u003d new MemberBuilder(AMY).withPositions().build();","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":84,"author":{"gitId":"leeroy999"},"content":"                new MaddCommand(expectedMember));","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"tsiyuk"},"content":"        // no email","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"tsiyuk"},"content":"        expectedMember \u003d new MemberBuilder(AMY).withEmail(null).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"tsiyuk"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + ADDRESS_DESC_AMY + POSITION_DESC_FRIEND,","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"leeroy999"},"content":"                new MaddCommand(expectedMember));","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"tsiyuk"},"content":"        // no address","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"tsiyuk"},"content":"        expectedMember \u003d new MemberBuilder(AMY).withAddress(null).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"tsiyuk"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + POSITION_DESC_FRIEND,","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"leeroy999"},"content":"                new MaddCommand(expectedMember));","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"tsiyuk"},"content":"        // no address and no email","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"tsiyuk"},"content":"        expectedMember \u003d new MemberBuilder(AMY).withEmail(null).withAddress(null).build();","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"tsiyuk"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + POSITION_DESC_FRIEND,","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"leeroy999"},"content":"                new MaddCommand(expectedMember));","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"leeroy999"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, MaddCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":123,"author":{"gitId":"LiuZhi1an"},"content":"                + POSITION_DESC_HUSBAND + POSITION_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":127,"author":{"gitId":"LiuZhi1an"},"content":"                + POSITION_DESC_HUSBAND + POSITION_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":131,"author":{"gitId":"LiuZhi1an"},"content":"                + POSITION_DESC_HUSBAND + POSITION_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":135,"author":{"gitId":"LiuZhi1an"},"content":"                + POSITION_DESC_HUSBAND + POSITION_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"LiuZhi1an"},"content":"        // invalid position","lastModifiedDate":"2021-10-07"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":139,"author":{"gitId":"LiuZhi1an"},"content":"                + INVALID_POSITION_DESC + VALID_POSITION_FRIEND, Position.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":147,"author":{"gitId":"LiuZhi1an"},"content":"                + ADDRESS_DESC_BOB + POSITION_DESC_HUSBAND + POSITION_DESC_FRIEND,","lastModifiedDate":"2021-10-06"},{"lineNumber":148,"author":{"gitId":"leeroy999"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MaddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-26"},{"lineNumber":149,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"LiuZhi1an":16,"-":97,"tsiyuk":13,"leeroy999":19,"Samuel-bit-prog":6}},{"path":"src/test/java/seedu/address/logic/parser/MdelCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MEMBER;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.member.MdelCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.member.MdelCommandParser;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":" * outside of the DeleteCommand code. For example, inputs \" /m 1\" and \" /m 1 abc\" take the","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"public class MdelCommandParserTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"    private MdelCommandParser parser \u003d new MdelCommandParser();","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"        assertParseSuccess(parser, \" \" + CliSyntax.PREFIX_MEMBER_ID + \"1\", new MdelCommand(INDEX_FIRST_MEMBER));","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"        assertParseFailure(parser, CliSyntax.PREFIX_MEMBER_ID + \"a\",","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MdelCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"LiuZhi1an":1,"-":25,"leeroy999":8}},{"path":"src/test/java/seedu/address/logic/parser/MeditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_POSITION_DESC;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.commands.CommandTestUtil.POSITION_DESC_FRIEND;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.commands.CommandTestUtil.POSITION_DESC_HUSBAND;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POSITION_FRIEND;","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POSITION_HUSBAND;","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MEMBER;","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_MEMBER;","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_MEMBER;","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.member.MeditCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.member.MeditCommand.EditMemberDescriptor;","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.member.MeditCommandParser;","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.Name;","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Address;","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Email;","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Phone;","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.position.Position;","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"leeroy999"},"content":"import seedu.address.testutil.EditMemberDescriptorBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"leeroy999"},"content":"public class MeditCommandParserTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"LiuZhi1an"},"content":"    private static final String POSITION_EMPTY \u003d \" \" + PREFIX_POSITION;","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"leeroy999"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, MeditCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"leeroy999"},"content":"    private MeditCommandParser parser \u003d new MeditCommandParser();","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"leeroy999"},"content":"        assertParseFailure(parser, CliSyntax.PREFIX_NAME + VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"leeroy999"},"content":"        assertParseFailure(parser, \" \" + CliSyntax.PREFIX_MEMBER_ID + \"1\", MeditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"leeroy999"},"content":"        String userInput \u003d \" \" + CliSyntax.PREFIX_MEMBER_ID + \"1\";","lastModifiedDate":"2021-10-31"},{"lineNumber":86,"author":{"gitId":"leeroy999"},"content":"        assertParseFailure(parser, userInput + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2021-10-31"},{"lineNumber":87,"author":{"gitId":"leeroy999"},"content":"        assertParseFailure(parser, userInput + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2021-10-31"},{"lineNumber":88,"author":{"gitId":"leeroy999"},"content":"        assertParseFailure(parser, userInput + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2021-10-31"},{"lineNumber":89,"author":{"gitId":"leeroy999"},"content":"        assertParseFailure(parser, userInput + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2021-10-31"},{"lineNumber":90,"author":{"gitId":"leeroy999"},"content":"        assertParseFailure(parser, userInput + INVALID_POSITION_DESC, Position.MESSAGE_CONSTRAINTS); // invalid position","lastModifiedDate":"2021-10-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"leeroy999"},"content":"        assertParseFailure(parser, userInput + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"leeroy999"},"content":"        assertParseFailure(parser, userInput + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"LiuZhi1an"},"content":"        // while parsing {@code PREFIX_POSITION} alone will reset the positions of the {@code Member} being edited,","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"LiuZhi1an"},"content":"        // parsing it together with a valid position results in error","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"leeroy999"},"content":"        assertParseFailure(parser, userInput + POSITION_DESC_FRIEND + POSITION_DESC_HUSBAND + POSITION_EMPTY,","lastModifiedDate":"2021-10-31"},{"lineNumber":102,"author":{"gitId":"leeroy999"},"content":"                Position.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-31"},{"lineNumber":103,"author":{"gitId":"leeroy999"},"content":"        assertParseFailure(parser, userInput + POSITION_DESC_FRIEND + POSITION_EMPTY + POSITION_DESC_HUSBAND,","lastModifiedDate":"2021-10-31"},{"lineNumber":104,"author":{"gitId":"leeroy999"},"content":"                Position.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-31"},{"lineNumber":105,"author":{"gitId":"leeroy999"},"content":"        assertParseFailure(parser, userInput + POSITION_EMPTY + POSITION_DESC_FRIEND + POSITION_DESC_HUSBAND,","lastModifiedDate":"2021-10-31"},{"lineNumber":106,"author":{"gitId":"leeroy999"},"content":"                Position.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"leeroy999"},"content":"        assertParseFailure(parser, userInput + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY","lastModifiedDate":"2021-10-31"},{"lineNumber":110,"author":{"gitId":"leeroy999"},"content":"                        + VALID_PHONE_AMY, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"LiuZhi1an"},"content":"        Index targetIndex \u003d INDEX_SECOND_MEMBER;","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"leeroy999"},"content":"        String userInput \u003d \" \" + CliSyntax.PREFIX_MEMBER_ID + targetIndex.getOneBased() + PHONE_DESC_BOB","lastModifiedDate":"2021-10-31"},{"lineNumber":117,"author":{"gitId":"leeroy999"},"content":"                + POSITION_DESC_HUSBAND + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + POSITION_DESC_FRIEND;","lastModifiedDate":"2021-10-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"leeroy999"},"content":"        EditMemberDescriptor descriptor \u003d new EditMemberDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"LiuZhi1an"},"content":"                .withPositions(VALID_POSITION_HUSBAND, VALID_POSITION_FRIEND).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"leeroy999"},"content":"        MeditCommand expectedCommand \u003d new MeditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":129,"author":{"gitId":"LiuZhi1an"},"content":"        Index targetIndex \u003d INDEX_FIRST_MEMBER;","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"leeroy999"},"content":"        String userInput \u003d \" \" + CliSyntax.PREFIX_MEMBER_ID + targetIndex.getOneBased() + PHONE_DESC_BOB","lastModifiedDate":"2021-10-31"},{"lineNumber":131,"author":{"gitId":"leeroy999"},"content":"                + EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"leeroy999"},"content":"        EditMemberDescriptor descriptor \u003d new EditMemberDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"leeroy999"},"content":"        MeditCommand expectedCommand \u003d new MeditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"LiuZhi1an"},"content":"        Index targetIndex \u003d INDEX_THIRD_MEMBER;","lastModifiedDate":"2021-10-07"},{"lineNumber":144,"author":{"gitId":"leeroy999"},"content":"        String userInput \u003d \" \" + CliSyntax.PREFIX_MEMBER_ID + targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":145,"author":{"gitId":"leeroy999"},"content":"        EditMemberDescriptor descriptor \u003d new EditMemberDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":146,"author":{"gitId":"leeroy999"},"content":"        MeditCommand expectedCommand \u003d new MeditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"leeroy999"},"content":"        userInput \u003d \" \" + CliSyntax.PREFIX_MEMBER_ID + targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":151,"author":{"gitId":"leeroy999"},"content":"        descriptor \u003d new EditMemberDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":152,"author":{"gitId":"leeroy999"},"content":"        expectedCommand \u003d new MeditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"leeroy999"},"content":"        userInput \u003d \" \" + CliSyntax.PREFIX_MEMBER_ID + targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":157,"author":{"gitId":"leeroy999"},"content":"        descriptor \u003d new EditMemberDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":158,"author":{"gitId":"leeroy999"},"content":"        expectedCommand \u003d new MeditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"leeroy999"},"content":"        userInput \u003d \" \" + CliSyntax.PREFIX_MEMBER_ID + targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":163,"author":{"gitId":"leeroy999"},"content":"        descriptor \u003d new EditMemberDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":164,"author":{"gitId":"leeroy999"},"content":"        expectedCommand \u003d new MeditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"LiuZhi1an"},"content":"        // positions","lastModifiedDate":"2021-10-06"},{"lineNumber":168,"author":{"gitId":"leeroy999"},"content":"        userInput \u003d \" \" + CliSyntax.PREFIX_MEMBER_ID + targetIndex.getOneBased() + POSITION_DESC_FRIEND;","lastModifiedDate":"2021-10-31"},{"lineNumber":169,"author":{"gitId":"LiuZhi1an"},"content":"        descriptor \u003d new EditMemberDescriptorBuilder().withPositions(VALID_POSITION_FRIEND).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":170,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":171,"author":{"gitId":"leeroy999"},"content":"        expectedCommand \u003d new MeditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":177,"author":{"gitId":"LiuZhi1an"},"content":"        Index targetIndex \u003d INDEX_FIRST_MEMBER;","lastModifiedDate":"2021-10-07"},{"lineNumber":178,"author":{"gitId":"leeroy999"},"content":"        String userInput \u003d \" \" + CliSyntax.PREFIX_MEMBER_ID + targetIndex.getOneBased() + PHONE_DESC_AMY","lastModifiedDate":"2021-10-31"},{"lineNumber":179,"author":{"gitId":"leeroy999"},"content":"                + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-10-31"},{"lineNumber":180,"author":{"gitId":"LiuZhi1an"},"content":"                + POSITION_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + POSITION_DESC_FRIEND","lastModifiedDate":"2021-10-06"},{"lineNumber":181,"author":{"gitId":"LiuZhi1an"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + POSITION_DESC_HUSBAND;","lastModifiedDate":"2021-10-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"leeroy999"},"content":"        EditMemberDescriptor descriptor \u003d new EditMemberDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-07"},{"lineNumber":184,"author":{"gitId":"LiuZhi1an"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-10-06"},{"lineNumber":185,"author":{"gitId":"LiuZhi1an"},"content":"                .withPositions(VALID_POSITION_FRIEND, VALID_POSITION_HUSBAND)","lastModifiedDate":"2021-10-06"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"leeroy999"},"content":"        MeditCommand expectedCommand \u003d new MeditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"LiuZhi1an"},"content":"        Index targetIndex \u003d INDEX_FIRST_MEMBER;","lastModifiedDate":"2021-10-07"},{"lineNumber":196,"author":{"gitId":"leeroy999"},"content":"        String userInput \u003d \" \" + CliSyntax.PREFIX_MEMBER_ID + targetIndex.getOneBased() + INVALID_PHONE_DESC","lastModifiedDate":"2021-10-31"},{"lineNumber":197,"author":{"gitId":"leeroy999"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":198,"author":{"gitId":"leeroy999"},"content":"        EditMemberDescriptor descriptor \u003d new EditMemberDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":199,"author":{"gitId":"leeroy999"},"content":"        MeditCommand expectedCommand \u003d new MeditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"leeroy999"},"content":"        userInput \u003d \" \" + CliSyntax.PREFIX_MEMBER_ID + targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC","lastModifiedDate":"2021-10-31"},{"lineNumber":204,"author":{"gitId":"leeroy999"},"content":"                + ADDRESS_DESC_BOB + PHONE_DESC_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":205,"author":{"gitId":"leeroy999"},"content":"        descriptor \u003d new EditMemberDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-10-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"leeroy999"},"content":"        expectedCommand \u003d new MeditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"LiuZhi1an"},"content":"    public void parse_resetPositions_success() {","lastModifiedDate":"2021-10-06"},{"lineNumber":213,"author":{"gitId":"LiuZhi1an"},"content":"        Index targetIndex \u003d INDEX_THIRD_MEMBER;","lastModifiedDate":"2021-10-07"},{"lineNumber":214,"author":{"gitId":"leeroy999"},"content":"        String userInput \u003d \" \" + CliSyntax.PREFIX_MEMBER_ID + targetIndex.getOneBased() + POSITION_EMPTY;","lastModifiedDate":"2021-10-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"LiuZhi1an"},"content":"        EditMemberDescriptor descriptor \u003d new EditMemberDescriptorBuilder().withPositions().build();","lastModifiedDate":"2021-10-07"},{"lineNumber":217,"author":{"gitId":"leeroy999"},"content":"        MeditCommand expectedCommand \u003d new MeditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"LiuZhi1an":28,"-":127,"leeroy999":61,"Samuel-bit-prog":5}},{"path":"src/test/java/seedu/address/logic/parser/MfindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.member.MfindCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.member.MfindCommandParser;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"public class MfindCommandParserTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"    private MfindCommandParser parser \u003d new MfindCommandParser();","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, MfindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"        MfindCommand expectedMfindCommand \u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"                new MfindCommand(new NameContainsKeywordsPredicate\u003cMember\u003e(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedMfindCommand);","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedMfindCommand);","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"-":25,"leeroy999":9,"Samuel-bit-prog":2}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_MEMBER;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.Name;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Address;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Email;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Phone;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.position.Position;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"LiuZhi1an"},"content":"    private static final String INVALID_POSITION \u003d \"#friend\";","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"LiuZhi1an"},"content":"    private static final String INVALID_TASK_NAME \u003d \"\";","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"LiuZhi1an"},"content":"    private static final String INVALID_TASK_ID \u003d \"abc\";","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"LiuZhi1an"},"content":"    private static final String INVALID_MEMBER_ID \u003d \"abc\";","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"LiuZhi1an"},"content":"    private static final String VALID_POSITION_1 \u003d \"friend\";","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"LiuZhi1an"},"content":"    private static final String VALID_POSITION_2 \u003d \"neighbour\";","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"LiuZhi1an"},"content":"    private static final String VALID_TASK_NAME \u003d \"write a poem\";","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"LiuZhi1an"},"content":"        assertEquals(INDEX_FIRST_MEMBER, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"LiuZhi1an"},"content":"        assertEquals(INDEX_FIRST_MEMBER, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"LiuZhi1an"},"content":"    public void parsePosition_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":157,"author":{"gitId":"LiuZhi1an"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePosition(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"LiuZhi1an"},"content":"    public void parsePosition_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":162,"author":{"gitId":"LiuZhi1an"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePosition(INVALID_POSITION));","lastModifiedDate":"2021-10-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"LiuZhi1an"},"content":"    public void parsePosition_validValueWithoutWhitespace_returnsPosition() throws Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":167,"author":{"gitId":"LiuZhi1an"},"content":"        Position expectedPosition \u003d new Position(VALID_POSITION_1);","lastModifiedDate":"2021-10-06"},{"lineNumber":168,"author":{"gitId":"LiuZhi1an"},"content":"        assertEquals(expectedPosition, ParserUtil.parsePosition(VALID_POSITION_1));","lastModifiedDate":"2021-10-06"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"LiuZhi1an"},"content":"    public void parsePosition_validValueWithWhitespace_returnsTrimmedPosition() throws Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":173,"author":{"gitId":"LiuZhi1an"},"content":"        String positionWithWhitespace \u003d WHITESPACE + VALID_POSITION_1 + WHITESPACE;","lastModifiedDate":"2021-10-06"},{"lineNumber":174,"author":{"gitId":"LiuZhi1an"},"content":"        Position expectedPosition \u003d new Position(VALID_POSITION_1);","lastModifiedDate":"2021-10-06"},{"lineNumber":175,"author":{"gitId":"LiuZhi1an"},"content":"        assertEquals(expectedPosition, ParserUtil.parsePosition(positionWithWhitespace));","lastModifiedDate":"2021-10-06"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"LiuZhi1an"},"content":"    public void parsePositions_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":180,"author":{"gitId":"LiuZhi1an"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePositions(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"LiuZhi1an"},"content":"    public void parsePositions_collectionWithInvalidPositions_throwsParseException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":185,"author":{"gitId":"LiuZhi1an"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePositions(","lastModifiedDate":"2021-10-06"},{"lineNumber":186,"author":{"gitId":"LiuZhi1an"},"content":"                Arrays.asList(VALID_POSITION_1, INVALID_POSITION)));","lastModifiedDate":"2021-10-06"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"LiuZhi1an"},"content":"    public void parsePositions_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":191,"author":{"gitId":"LiuZhi1an"},"content":"        assertTrue(ParserUtil.parsePositions(Collections.emptyList()).isEmpty());","lastModifiedDate":"2021-10-06"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"LiuZhi1an"},"content":"    public void parsePositions_collectionWithValidPositions_returnsPositionSet() throws Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":196,"author":{"gitId":"LiuZhi1an"},"content":"        Set\u003cPosition\u003e actualPositionSet \u003d ParserUtil.parsePositions(Arrays.asList(VALID_POSITION_1, VALID_POSITION_2));","lastModifiedDate":"2021-10-06"},{"lineNumber":197,"author":{"gitId":"LiuZhi1an"},"content":"        Set\u003cPosition\u003e expectedPositionSet \u003d new HashSet\u003cPosition\u003e(","lastModifiedDate":"2021-10-06"},{"lineNumber":198,"author":{"gitId":"LiuZhi1an"},"content":"                Arrays.asList(new Position(VALID_POSITION_1), new Position(VALID_POSITION_2)));","lastModifiedDate":"2021-10-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"LiuZhi1an"},"content":"        assertEquals(expectedPositionSet, actualPositionSet);","lastModifiedDate":"2021-10-06"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":202,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":203,"author":{"gitId":"LiuZhi1an"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":204,"author":{"gitId":"tsiyuk"},"content":"    public void parseTaskName_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":205,"author":{"gitId":"tsiyuk"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTaskName(null));","lastModifiedDate":"2021-10-22"},{"lineNumber":206,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":207,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":208,"author":{"gitId":"LiuZhi1an"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":209,"author":{"gitId":"tsiyuk"},"content":"    public void parsTaskName_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":210,"author":{"gitId":"tsiyuk"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTaskName(INVALID_TASK_NAME));","lastModifiedDate":"2021-10-22"},{"lineNumber":211,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":212,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":213,"author":{"gitId":"LiuZhi1an"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":214,"author":{"gitId":"LiuZhi1an"},"content":"    public void parseTask_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":215,"author":{"gitId":"LiuZhi1an"},"content":"        Name expectedName \u003d new Name(VALID_TASK_NAME);","lastModifiedDate":"2021-10-12"},{"lineNumber":216,"author":{"gitId":"LiuZhi1an"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_TASK_NAME));","lastModifiedDate":"2021-10-12"},{"lineNumber":217,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":218,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":219,"author":{"gitId":"LiuZhi1an"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":220,"author":{"gitId":"LiuZhi1an"},"content":"    public void parseTask_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":221,"author":{"gitId":"LiuZhi1an"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_TASK_NAME + WHITESPACE;","lastModifiedDate":"2021-10-12"},{"lineNumber":222,"author":{"gitId":"LiuZhi1an"},"content":"        Name expectedName \u003d new Name(VALID_TASK_NAME);","lastModifiedDate":"2021-10-12"},{"lineNumber":223,"author":{"gitId":"LiuZhi1an"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2021-10-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"LiuZhi1an":51,"-":165,"tsiyuk":4,"Samuel-bit-prog":5}},{"path":"src/test/java/seedu/address/logic/parser/TaddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LiuZhi1an"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_MEMBER_ID_DESC;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEMBER_ID_DESC_ONE;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TASK_DEADLINE_DESC_POEM;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TASK_NAME_DESC_POEM;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEMBER_ID;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POEM_TASK_DEADLINE;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POEM_TASK_NAME;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.logic.commands.task.TaddCommand.MESSAGE_USAGE;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"LiuZhi1an"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"LiuZhi1an"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"LiuZhi1an"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.task.TaddCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.task.TaddCommandParser;","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.task.Task;","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"class TaddCommandParserTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"    private TaddCommandParser parser \u003d new TaddCommandParser();","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"LiuZhi1an"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"LiuZhi1an"},"content":"    void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"        Task expectedTask \u003d new TaskBuilder().withName(VALID_POEM_TASK_NAME)","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"                .withDeadline(VALID_POEM_TASK_DEADLINE).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"LiuZhi1an"},"content":"        Index expectedMemberId \u003d Index.fromOneBased(VALID_MEMBER_ID);","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"LiuZhi1an"},"content":"        Set\u003cIndex\u003e expectedMemberIdList \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"LiuZhi1an"},"content":"        expectedMemberIdList.add(expectedMemberId);","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"        assertParseSuccess(parser, TASK_NAME_DESC_POEM + TASK_DEADLINE_DESC_POEM + MEMBER_ID_DESC_ONE,","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"LiuZhi1an"},"content":"                new TaddCommand(expectedMemberIdList, expectedTask));","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"LiuZhi1an"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"LiuZhi1an"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_USAGE);","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"LiuZhi1an"},"content":"        //missing member id","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"LiuZhi1an"},"content":"        assertParseFailure(parser, TASK_NAME_DESC_POEM, expectedMessage);","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"LiuZhi1an"},"content":"        //missing task name","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"LiuZhi1an"},"content":"        assertParseFailure(parser, MEMBER_ID_DESC_ONE, expectedMessage);","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"LiuZhi1an"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"LiuZhi1an"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"tsiyuk"},"content":"        // TODO: fix this test case, I have no idea what is the expected output","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"LiuZhi1an"},"content":"        //invalid task name (blank)","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"tsiyuk"},"content":"        //assertParseFailure(parser, INVALID_TASK_NAME_DESC + MEMBER_ID_DESC_ONE, MESSAGE_USAGE);","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"LiuZhi1an"},"content":"        //invalid member id","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"tsiyuk"},"content":"        assertParseFailure(parser, TASK_NAME_DESC_POEM + TASK_DEADLINE_DESC_POEM + INVALID_MEMBER_ID_DESC,","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"tsiyuk"},"content":"                MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"LiuZhi1an"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"LiuZhi1an":45,"tsiyuk":13,"leeroy999":5,"Samuel-bit-prog":1}},{"path":"src/test/java/seedu/address/logic/parser/TdelCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LiuZhi1an"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TASK_ID_DESC;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TASK_ID_DESC_ONE;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_ID;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"LiuZhi1an"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.task.TdelCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.task.TdelCommandParser;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"class TdelCommandParserTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"    private TdelCommandParser parser \u003d new TdelCommandParser();","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"LiuZhi1an"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"LiuZhi1an"},"content":"    void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"LiuZhi1an"},"content":"        Index expectedTaskId \u003d Index.fromOneBased(VALID_TASK_ID);","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"LiuZhi1an"},"content":"        assertParseSuccess(parser, TASK_ID_DESC_ONE,","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"LiuZhi1an"},"content":"                new TdelCommand(expectedTaskId));","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"LiuZhi1an"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"LiuZhi1an"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, TdelCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"LiuZhi1an"},"content":"        //missing task id","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"LiuZhi1an"},"content":"        assertParseFailure(parser, \"\", expectedMessage);","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"LiuZhi1an"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"LiuZhi1an"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"LiuZhi1an"},"content":"        //invalid task name (blank)","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"LiuZhi1an"},"content":"        assertParseFailure(parser, INVALID_TASK_ID_DESC, MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"LiuZhi1an"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"LiuZhi1an":36,"leeroy999":5}},{"path":"src/test/java/seedu/address/logic/parser/TlistCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LiuZhi1an"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_MEMBER_ID_DESC;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEMBER_ID_DESC_ONE;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEMBER_ID;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"LiuZhi1an"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.task.TlistCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.parser.task.TlistCommandParser;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"LiuZhi1an"},"content":"class TlistCommandParserTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"LiuZhi1an"},"content":"    private TlistCommandParser parser \u003d new TlistCommandParser();","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"LiuZhi1an"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"LiuZhi1an"},"content":"    void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"LiuZhi1an"},"content":"        Index expectedMemberId \u003d Index.fromOneBased(VALID_MEMBER_ID);","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"LiuZhi1an"},"content":"        assertParseSuccess(parser, MEMBER_ID_DESC_ONE,","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"LiuZhi1an"},"content":"                new TlistCommand(expectedMemberId));","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"LiuZhi1an"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"LiuZhi1an"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"LiuZhi1an"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, TlistCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"LiuZhi1an"},"content":"        //missing member id","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"LiuZhi1an"},"content":"        assertParseFailure(parser, \"\", expectedMessage);","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"LiuZhi1an"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"LiuZhi1an"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"LiuZhi1an"},"content":"        //invalid member id","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"LiuZhi1an"},"content":"        assertParseFailure(parser, INVALID_MEMBER_ID_DESC, MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"LiuZhi1an"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"LiuZhi1an"},"content":"    public void parse_preambleMissing_failure() {","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"LiuZhi1an"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, TlistCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"LiuZhi1an"},"content":"        assertParseFailure(parser, Integer.toString(VALID_MEMBER_ID), expectedMessage);","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"LiuZhi1an"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"LiuZhi1an":45,"leeroy999":2}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POSITION_HUSBAND;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.testutil.TypicalMembers.ALICE;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.testutil.TypicalMembers.getTypicalAddressBook;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.event.Event;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.exceptions.DuplicateMemberException;","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"import seedu.address.testutil.MemberBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"        assertEquals(Collections.emptyList(), addressBook.getMemberList());","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"leeroy999"},"content":"    public void resetData_withDuplicateMembers_throwsDuplicateMemberException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"leeroy999"},"content":"        // Two members with the same identity fields","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"LiuZhi1an"},"content":"        Member editedAlice \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"LiuZhi1an"},"content":"                new MemberBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withPositions(VALID_POSITION_HUSBAND)","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                        .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"leeroy999"},"content":"        List\u003cMember\u003e newMembers \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"leeroy999"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newMembers);","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"leeroy999"},"content":"        assertThrows(DuplicateMemberException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"leeroy999"},"content":"    public void hasMember_nullMember_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"leeroy999"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasMember(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"leeroy999"},"content":"    public void hasMember_memberNotInAddressBook_returnsFalse() {","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"leeroy999"},"content":"        assertFalse(addressBook.hasMember(ALICE));","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"leeroy999"},"content":"    public void hasMember_memberInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"leeroy999"},"content":"        addressBook.addMember(ALICE);","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"leeroy999"},"content":"        assertTrue(addressBook.hasMember(ALICE));","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"leeroy999"},"content":"    public void hasMember_memberWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"leeroy999"},"content":"        addressBook.addMember(ALICE);","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"LiuZhi1an"},"content":"        Member editedAlice \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"LiuZhi1an"},"content":"                new MemberBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withPositions(VALID_POSITION_HUSBAND)","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                        .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"leeroy999"},"content":"        assertTrue(addressBook.hasMember(editedAlice));","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"leeroy999"},"content":"    public void getMemberList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"leeroy999"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getMemberList().remove(0));","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"leeroy999"},"content":"     * A stub ReadOnlyAddressBook whose members list can violate interface constraints.","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"leeroy999"},"content":"        private final ObservableList\u003cMember\u003e members \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"leeroy999"},"content":"        AddressBookStub(Collection\u003cMember\u003e members) {","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"leeroy999"},"content":"            this.members.setAll(members);","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"leeroy999"},"content":"        public ObservableList\u003cMember\u003e getMemberList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"leeroy999"},"content":"            return members;","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"Samuel-bit-prog"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"Samuel-bit-prog"},"content":"        public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"Samuel-bit-prog"},"content":"            return null;","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"LiuZhi1an":5,"-":71,"leeroy999":27,"Samuel-bit-prog":7}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_MEMBERS;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.testutil.TypicalMembers.ALICE;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.testutil.TypicalMembers.BENSON;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"leeroy999"},"content":"    public void hasMember_nullMember_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"leeroy999"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasMember(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"leeroy999"},"content":"    public void hasMember_memberNotInAddressBook_returnsFalse() {","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"leeroy999"},"content":"        assertFalse(modelManager.hasMember(ALICE));","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"leeroy999"},"content":"    public void hasMember_memberInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"leeroy999"},"content":"        modelManager.addMember(ALICE);","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"leeroy999"},"content":"        assertTrue(modelManager.hasMember(ALICE));","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"leeroy999"},"content":"    public void getFilteredMemberList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"leeroy999"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredMemberList().remove(0));","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"tsiyuk"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"tsiyuk"},"content":"    public void getFilteredTaskList_withoutSelectedMember_returnsEmptyList() {","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"tsiyuk"},"content":"        assertTrue(modelManager.getFilteredTaskList().isEmpty());","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"leeroy999"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withMember(ALICE).withMember(BENSON).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":127,"author":{"gitId":"Samuel-bit-prog"},"content":"        modelManager.updateFilteredMemberList(new NameContainsKeywordsPredicate\u003cMember\u003e(Arrays.asList(keywords)));","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":131,"author":{"gitId":"LiuZhi1an"},"content":"        modelManager.updateFilteredMemberList(PREDICATE_SHOW_ALL_MEMBERS);","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"LiuZhi1an":2,"-":118,"tsiyuk":3,"leeroy999":12,"Samuel-bit-prog":3}},{"path":"src/test/java/seedu/address/model/module/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Samuel-bit-prog"},"content":"package seedu.address.model.module;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"import seedu.address.testutil.MemberBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"Samuel-bit-prog"},"content":"        NameContainsKeywordsPredicate\u003cMember\u003e firstPredicate \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"Samuel-bit-prog"},"content":"                new NameContainsKeywordsPredicate\u003cMember\u003e(firstPredicateKeywordList);","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"Samuel-bit-prog"},"content":"        NameContainsKeywordsPredicate\u003cMember\u003e secondPredicate \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"Samuel-bit-prog"},"content":"                new NameContainsKeywordsPredicate\u003cMember\u003e(secondPredicateKeywordList);","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"Samuel-bit-prog"},"content":"        NameContainsKeywordsPredicate\u003cMember\u003e firstPredicateCopy \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"Samuel-bit-prog"},"content":"                new NameContainsKeywordsPredicate\u003cMember\u003e(firstPredicateKeywordList);","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"        // different member -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"Samuel-bit-prog"},"content":"        NameContainsKeywordsPredicate\u003cMember\u003e predicate \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"Samuel-bit-prog"},"content":"                new NameContainsKeywordsPredicate\u003cMember\u003e(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"leeroy999"},"content":"        assertTrue(predicate.test(new MemberBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"Samuel-bit-prog"},"content":"        predicate \u003d new NameContainsKeywordsPredicate\u003cMember\u003e(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"leeroy999"},"content":"        assertTrue(predicate.test(new MemberBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"Samuel-bit-prog"},"content":"        predicate \u003d new NameContainsKeywordsPredicate\u003cMember\u003e(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"leeroy999"},"content":"        assertTrue(predicate.test(new MemberBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"Samuel-bit-prog"},"content":"        predicate \u003d new NameContainsKeywordsPredicate\u003cMember\u003e(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"leeroy999"},"content":"        assertTrue(predicate.test(new MemberBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"Samuel-bit-prog"},"content":"        NameContainsKeywordsPredicate\u003cMember\u003e predicate \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"Samuel-bit-prog"},"content":"                new NameContainsKeywordsPredicate\u003cMember\u003e(Collections.emptyList());","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"leeroy999"},"content":"        assertFalse(predicate.test(new MemberBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"Samuel-bit-prog"},"content":"        predicate \u003d new NameContainsKeywordsPredicate\u003cMember\u003e(Arrays.asList(\"Carol\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"leeroy999"},"content":"        assertFalse(predicate.test(new MemberBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"Samuel-bit-prog"},"content":"        predicate \u003d new NameContainsKeywordsPredicate\u003cMember\u003e(Arrays.asList(\"12345\",","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"Samuel-bit-prog"},"content":"                \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"leeroy999"},"content":"        assertFalse(predicate.test(new MemberBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":55,"Samuel-bit-prog":18,"leeroy999":9}},{"path":"src/test/java/seedu/address/model/module/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Samuel-bit-prog"},"content":"package seedu.address.model.module;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"-":39,"Samuel-bit-prog":1}},{"path":"src/test/java/seedu/address/model/module/event/UniqueEventListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Samuel-bit-prog"},"content":"package seedu.address.model.module.event;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"Samuel-bit-prog"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"Samuel-bit-prog"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"Samuel-bit-prog"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"Samuel-bit-prog"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_DATE_CHESS;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"Samuel-bit-prog"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_NAME_CHESS;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"Samuel-bit-prog"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"Samuel-bit-prog"},"content":"import static seedu.address.testutil.TypicalEvents.CHESS;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"Samuel-bit-prog"},"content":"import static seedu.address.testutil.TypicalEvents.OSMANTHUS_WINE;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"Samuel-bit-prog"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"Samuel-bit-prog"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"Samuel-bit-prog"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"Samuel-bit-prog"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.event.exceptions.DuplicateEventException;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.event.exceptions.EventNotFoundException;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"Samuel-bit-prog"},"content":"public class UniqueEventListTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"Samuel-bit-prog"},"content":"    private final UniqueEventList uniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"Samuel-bit-prog"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"Samuel-bit-prog"},"content":"    public void contains_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"Samuel-bit-prog"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.contains(null));","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"Samuel-bit-prog"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"Samuel-bit-prog"},"content":"    public void contains_eventNotInList_returnsFalse() {","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"Samuel-bit-prog"},"content":"        assertFalse(uniqueEventList.contains(CHESS));","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"Samuel-bit-prog"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"Samuel-bit-prog"},"content":"    public void contains_eventInList_returnsTrue() {","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"Samuel-bit-prog"},"content":"        uniqueEventList.add(CHESS);","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"Samuel-bit-prog"},"content":"        assertTrue(uniqueEventList.contains(CHESS));","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"Samuel-bit-prog"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"Samuel-bit-prog"},"content":"    public void contains_eventWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"Samuel-bit-prog"},"content":"        uniqueEventList.add(CHESS);","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"Samuel-bit-prog"},"content":"        Event editedChess \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"Samuel-bit-prog"},"content":"                new EventBuilder(CHESS).withName(VALID_EVENT_NAME_CHESS).withDate(VALID_EVENT_DATE_CHESS)","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"Samuel-bit-prog"},"content":"                        .build();","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"Samuel-bit-prog"},"content":"        assertTrue(uniqueEventList.contains(editedChess));","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"Samuel-bit-prog"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"Samuel-bit-prog"},"content":"    public void add_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"Samuel-bit-prog"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.add(null));","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"Samuel-bit-prog"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"Samuel-bit-prog"},"content":"    public void add_duplicateEvent_throwsDuplicateEventException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"Samuel-bit-prog"},"content":"        uniqueEventList.add(CHESS);","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"Samuel-bit-prog"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e uniqueEventList.add(CHESS));","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"Samuel-bit-prog"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"Samuel-bit-prog"},"content":"    public void setEvent_nullTargetEvent_throwsNullPointerException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"Samuel-bit-prog"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvent(null, CHESS));","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"Samuel-bit-prog"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"Samuel-bit-prog"},"content":"    public void setEvent_nullEditedEvent_throwsNullPointerException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"Samuel-bit-prog"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvent(CHESS, null));","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"Samuel-bit-prog"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"Samuel-bit-prog"},"content":"    public void setEvent_targetEventNotInList_throwsEventNotFoundException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"Samuel-bit-prog"},"content":"        assertThrows(EventNotFoundException.class, () -\u003e uniqueEventList.setEvent(CHESS, CHESS));","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"Samuel-bit-prog"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"Samuel-bit-prog"},"content":"    public void setEvent_editedEventIsSameEvent_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"Samuel-bit-prog"},"content":"        uniqueEventList.add(CHESS);","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"Samuel-bit-prog"},"content":"        uniqueEventList.setEvent(CHESS, CHESS);","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"Samuel-bit-prog"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"Samuel-bit-prog"},"content":"        expectedUniqueEventList.add(CHESS);","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"Samuel-bit-prog"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"Samuel-bit-prog"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"Samuel-bit-prog"},"content":"    public void setEvent_editedEventHasSameIdentity_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"Samuel-bit-prog"},"content":"        uniqueEventList.add(CHESS);","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"Samuel-bit-prog"},"content":"        Event editedChess \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"Samuel-bit-prog"},"content":"                new EventBuilder(CHESS).withName(VALID_EVENT_NAME_CHESS)","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"Samuel-bit-prog"},"content":"                        .withDate(VALID_EVENT_DATE_CHESS)","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"Samuel-bit-prog"},"content":"                        .build();","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"Samuel-bit-prog"},"content":"        uniqueEventList.setEvent(CHESS, editedChess);","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"Samuel-bit-prog"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"Samuel-bit-prog"},"content":"        expectedUniqueEventList.add(editedChess);","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"Samuel-bit-prog"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"Samuel-bit-prog"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"Samuel-bit-prog"},"content":"    public void setEvent_editedEventHasDifferentIdentity_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"Samuel-bit-prog"},"content":"        uniqueEventList.add(CHESS);","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"Samuel-bit-prog"},"content":"        uniqueEventList.setEvent(CHESS, OSMANTHUS_WINE);","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"Samuel-bit-prog"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"Samuel-bit-prog"},"content":"        expectedUniqueEventList.add(OSMANTHUS_WINE);","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"Samuel-bit-prog"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"Samuel-bit-prog"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"Samuel-bit-prog"},"content":"    public void setEvent_editedEventHasNonUniqueIdentity_throwsDuplicateEventException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"Samuel-bit-prog"},"content":"        uniqueEventList.add(CHESS);","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"Samuel-bit-prog"},"content":"        uniqueEventList.add(OSMANTHUS_WINE);","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"Samuel-bit-prog"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e uniqueEventList.setEvent(CHESS, OSMANTHUS_WINE));","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"Samuel-bit-prog"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"Samuel-bit-prog"},"content":"    public void remove_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"Samuel-bit-prog"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.remove(null));","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"Samuel-bit-prog"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"Samuel-bit-prog"},"content":"    public void remove_eventDoesNotExist_throwsEventNotFoundException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"Samuel-bit-prog"},"content":"        assertThrows(EventNotFoundException.class, () -\u003e uniqueEventList.remove(CHESS));","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"Samuel-bit-prog"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"Samuel-bit-prog"},"content":"    public void remove_existingEvent_removesEvent() {","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"Samuel-bit-prog"},"content":"        uniqueEventList.add(CHESS);","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"Samuel-bit-prog"},"content":"        uniqueEventList.remove(CHESS);","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"Samuel-bit-prog"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"Samuel-bit-prog"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":133,"author":{"gitId":"Samuel-bit-prog"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":134,"author":{"gitId":"Samuel-bit-prog"},"content":"    public void setEvents_nullUniqueEventList_throwsNullPointerException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":135,"author":{"gitId":"Samuel-bit-prog"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvents((UniqueEventList) null));","lastModifiedDate":"2021-10-21"},{"lineNumber":136,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":138,"author":{"gitId":"Samuel-bit-prog"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"Samuel-bit-prog"},"content":"    public void setEvents_uniqueEventList_replacesOwnListWithProvidedUniqueEventList() {","lastModifiedDate":"2021-10-21"},{"lineNumber":140,"author":{"gitId":"Samuel-bit-prog"},"content":"        uniqueEventList.add(CHESS);","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"Samuel-bit-prog"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2021-10-21"},{"lineNumber":142,"author":{"gitId":"Samuel-bit-prog"},"content":"        expectedUniqueEventList.add(OSMANTHUS_WINE);","lastModifiedDate":"2021-10-21"},{"lineNumber":143,"author":{"gitId":"Samuel-bit-prog"},"content":"        uniqueEventList.setEvents(expectedUniqueEventList);","lastModifiedDate":"2021-10-21"},{"lineNumber":144,"author":{"gitId":"Samuel-bit-prog"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":146,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":147,"author":{"gitId":"Samuel-bit-prog"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":148,"author":{"gitId":"Samuel-bit-prog"},"content":"    public void setEvents_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":149,"author":{"gitId":"Samuel-bit-prog"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvents((List\u003cEvent\u003e) null));","lastModifiedDate":"2021-10-21"},{"lineNumber":150,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":151,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":152,"author":{"gitId":"Samuel-bit-prog"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":153,"author":{"gitId":"Samuel-bit-prog"},"content":"    public void setEvents_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-10-21"},{"lineNumber":154,"author":{"gitId":"Samuel-bit-prog"},"content":"        uniqueEventList.add(CHESS);","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"Samuel-bit-prog"},"content":"        List\u003cEvent\u003e eventList \u003d Collections.singletonList(OSMANTHUS_WINE);","lastModifiedDate":"2021-10-21"},{"lineNumber":156,"author":{"gitId":"Samuel-bit-prog"},"content":"        uniqueEventList.setEvents(eventList);","lastModifiedDate":"2021-10-21"},{"lineNumber":157,"author":{"gitId":"Samuel-bit-prog"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"Samuel-bit-prog"},"content":"        expectedUniqueEventList.add(OSMANTHUS_WINE);","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"Samuel-bit-prog"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":161,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"Samuel-bit-prog"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"Samuel-bit-prog"},"content":"    public void setEvents_listWithDuplicateEvents_throwsDuplicateEventException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"Samuel-bit-prog"},"content":"        List\u003cEvent\u003e listWithDuplicateEvents \u003d Arrays.asList(CHESS, CHESS);","lastModifiedDate":"2021-10-21"},{"lineNumber":165,"author":{"gitId":"Samuel-bit-prog"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e uniqueEventList.setEvents(listWithDuplicateEvents));","lastModifiedDate":"2021-10-21"},{"lineNumber":166,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":167,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":168,"author":{"gitId":"Samuel-bit-prog"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":169,"author":{"gitId":"Samuel-bit-prog"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":170,"author":{"gitId":"Samuel-bit-prog"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-10-21"},{"lineNumber":171,"author":{"gitId":"Samuel-bit-prog"},"content":"            -\u003e uniqueEventList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-10-21"},{"lineNumber":172,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":173,"author":{"gitId":"Samuel-bit-prog"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"Samuel-bit-prog":173}},{"path":"src/test/java/seedu/address/model/module/member/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Samuel-bit-prog"},"content":"package seedu.address.model.module.member;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"GWphua"},"content":"        assertFalse(Address.isValidAddress(\"   \")); // multiple spaces","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"GWphua":1,"-":35,"Samuel-bit-prog":1}},{"path":"src/test/java/seedu/address/model/module/member/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Samuel-bit-prog"},"content":"package seedu.address.model.module.member;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"-":67,"Samuel-bit-prog":1}},{"path":"src/test/java/seedu/address/model/module/member/MemberTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Samuel-bit-prog"},"content":"package seedu.address.model.module.member;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POSITION_HUSBAND;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.testutil.TypicalMembers.ALICE;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.testutil.TypicalMembers.BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"Samuel-bit-prog"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"import seedu.address.testutil.MemberBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.testutil.TypicalTasks;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"public class MemberTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"        Member member \u003d new MemberBuilder().build();","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"LiuZhi1an"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e member.getPositions().remove(0));","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"Samuel-bit-prog"},"content":"    public void isSameType() {","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"Samuel-bit-prog"},"content":"        Assertions.assertTrue(ALICE.isSameType(ALICE));","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"Samuel-bit-prog"},"content":"        Assertions.assertFalse(ALICE.isSameType(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"        Member editedAlice \u003d new MemberBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"LiuZhi1an"},"content":"                .withAddress(VALID_ADDRESS_BOB).withPositions(VALID_POSITION_HUSBAND).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"Samuel-bit-prog"},"content":"        Assertions.assertTrue(ALICE.isSameType(editedAlice));","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"        editedAlice \u003d new MemberBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"Samuel-bit-prog"},"content":"        Assertions.assertFalse(ALICE.isSameType(editedAlice));","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"        Member editedBob \u003d new MemberBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"Samuel-bit-prog"},"content":"        Assertions.assertFalse(BOB.isSameType(editedBob));","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"leeroy999"},"content":"        editedBob \u003d new MemberBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"Samuel-bit-prog"},"content":"        Assertions.assertFalse(BOB.isSameType(editedBob));","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"leeroy999"},"content":"        Member aliceCopy \u003d new MemberBuilder(ALICE).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"Samuel-bit-prog"},"content":"        Assertions.assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"Samuel-bit-prog"},"content":"        Assertions.assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"Samuel-bit-prog"},"content":"        Assertions.assertFalse(ALICE.equals(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"Samuel-bit-prog"},"content":"        Assertions.assertFalse(ALICE.equals(5));","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"leeroy999"},"content":"        // different member -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"Samuel-bit-prog"},"content":"        Assertions.assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"leeroy999"},"content":"        Member editedAlice \u003d new MemberBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"Samuel-bit-prog"},"content":"        Assertions.assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"leeroy999"},"content":"        editedAlice \u003d new MemberBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"Samuel-bit-prog"},"content":"        Assertions.assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"leeroy999"},"content":"        editedAlice \u003d new MemberBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"Samuel-bit-prog"},"content":"        Assertions.assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"leeroy999"},"content":"        editedAlice \u003d new MemberBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"Samuel-bit-prog"},"content":"        Assertions.assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"LiuZhi1an"},"content":"        editedAlice \u003d new MemberBuilder(ALICE).withPositions(VALID_POSITION_HUSBAND).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"Samuel-bit-prog"},"content":"        Assertions.assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"tsiyuk"},"content":"        // different task list -\u003e return false","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"tsiyuk"},"content":"        editedAlice \u003d new MemberBuilder(ALICE).withTaskList(TypicalTasks.getTypicalTasksDone()).build();","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"Samuel-bit-prog"},"content":"        Assertions.assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"LiuZhi1an":4,"-":52,"tsiyuk":4,"Samuel-bit-prog":20,"leeroy999":15}},{"path":"src/test/java/seedu/address/model/module/member/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Samuel-bit-prog"},"content":"package seedu.address.model.module.member;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"-":39,"Samuel-bit-prog":1}},{"path":"src/test/java/seedu/address/model/module/member/UniqueMemberListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Samuel-bit-prog"},"content":"package seedu.address.model.module.member;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POSITION_HUSBAND;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.testutil.TypicalMembers.ALICE;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.testutil.TypicalMembers.BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"leeroy999"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"import java.util.List;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.exceptions.DuplicateMemberException;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.exceptions.MemberNotFoundException;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"import seedu.address.testutil.MemberBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"public class UniqueMemberListTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"    private final UniqueMemberList uniqueMemberList \u003d new UniqueMemberList();","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"    public void contains_nullMember_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMemberList.contains(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"    public void contains_memberNotInList_returnsFalse() {","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"        assertFalse(uniqueMemberList.contains(ALICE));","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"leeroy999"},"content":"    public void contains_memberInList_returnsTrue() {","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"leeroy999"},"content":"        uniqueMemberList.add(ALICE);","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"        assertTrue(uniqueMemberList.contains(ALICE));","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"leeroy999"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"leeroy999"},"content":"    public void contains_memberWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"        uniqueMemberList.add(ALICE);","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"LiuZhi1an"},"content":"        Member editedAlice \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"LiuZhi1an"},"content":"                new MemberBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withPositions(VALID_POSITION_HUSBAND)","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"leeroy999"},"content":"                        .build();","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"leeroy999"},"content":"        assertTrue(uniqueMemberList.contains(editedAlice));","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"leeroy999"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"leeroy999"},"content":"    public void add_nullMember_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"leeroy999"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMemberList.add(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"leeroy999"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"leeroy999"},"content":"    public void add_duplicateMember_throwsDuplicateMemberException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"leeroy999"},"content":"        uniqueMemberList.add(ALICE);","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"leeroy999"},"content":"        assertThrows(DuplicateMemberException.class, () -\u003e uniqueMemberList.add(ALICE));","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"leeroy999"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"leeroy999"},"content":"    public void setMember_nullTargetMember_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"leeroy999"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMemberList.setMember(null, ALICE));","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"leeroy999"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"leeroy999"},"content":"    public void setMember_nullEditedMember_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"leeroy999"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMemberList.setMember(ALICE, null));","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"leeroy999"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"leeroy999"},"content":"    public void setMember_targetMemberNotInList_throwsMemberNotFoundException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"leeroy999"},"content":"        assertThrows(MemberNotFoundException.class, () -\u003e uniqueMemberList.setMember(ALICE, ALICE));","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"leeroy999"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"leeroy999"},"content":"    public void setMember_editedMemberIsSameMember_success() {","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"leeroy999"},"content":"        uniqueMemberList.add(ALICE);","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"leeroy999"},"content":"        uniqueMemberList.setMember(ALICE, ALICE);","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"leeroy999"},"content":"        UniqueMemberList expectedUniqueMemberList \u003d new UniqueMemberList();","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"leeroy999"},"content":"        expectedUniqueMemberList.add(ALICE);","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"leeroy999"},"content":"        assertEquals(expectedUniqueMemberList, uniqueMemberList);","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"leeroy999"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"leeroy999"},"content":"    public void setMember_editedMemberHasSameIdentity_success() {","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"leeroy999"},"content":"        uniqueMemberList.add(ALICE);","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"LiuZhi1an"},"content":"        Member editedAlice \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"LiuZhi1an"},"content":"                new MemberBuilder(ALICE).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"LiuZhi1an"},"content":"                        .withPositions(VALID_POSITION_HUSBAND)","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"leeroy999"},"content":"                        .build();","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"leeroy999"},"content":"        uniqueMemberList.setMember(ALICE, editedAlice);","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"leeroy999"},"content":"        UniqueMemberList expectedUniqueMemberList \u003d new UniqueMemberList();","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"leeroy999"},"content":"        expectedUniqueMemberList.add(editedAlice);","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"leeroy999"},"content":"        assertEquals(expectedUniqueMemberList, uniqueMemberList);","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"leeroy999"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"leeroy999"},"content":"    public void setMember_editedMemberHasDifferentIdentity_success() {","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"leeroy999"},"content":"        uniqueMemberList.add(ALICE);","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"leeroy999"},"content":"        uniqueMemberList.setMember(ALICE, BOB);","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"leeroy999"},"content":"        UniqueMemberList expectedUniqueMemberList \u003d new UniqueMemberList();","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"leeroy999"},"content":"        expectedUniqueMemberList.add(BOB);","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"leeroy999"},"content":"        assertEquals(expectedUniqueMemberList, uniqueMemberList);","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"leeroy999"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"leeroy999"},"content":"    public void setMember_editedMemberHasNonUniqueIdentity_throwsDuplicateMemberException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"leeroy999"},"content":"        uniqueMemberList.add(ALICE);","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"leeroy999"},"content":"        uniqueMemberList.add(BOB);","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"leeroy999"},"content":"        assertThrows(DuplicateMemberException.class, () -\u003e uniqueMemberList.setMember(ALICE, BOB));","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"leeroy999"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"leeroy999"},"content":"    public void remove_nullMember_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"leeroy999"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMemberList.remove(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"leeroy999"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"leeroy999"},"content":"    public void remove_memberDoesNotExist_throwsMemberNotFoundException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"leeroy999"},"content":"        assertThrows(MemberNotFoundException.class, () -\u003e uniqueMemberList.remove(ALICE));","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"leeroy999"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"leeroy999"},"content":"    public void remove_existingMember_removesMember() {","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"leeroy999"},"content":"        uniqueMemberList.add(ALICE);","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"leeroy999"},"content":"        uniqueMemberList.remove(ALICE);","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"leeroy999"},"content":"        UniqueMemberList expectedUniqueMemberList \u003d new UniqueMemberList();","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"leeroy999"},"content":"        assertEquals(expectedUniqueMemberList, uniqueMemberList);","lastModifiedDate":"2021-10-07"},{"lineNumber":131,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":133,"author":{"gitId":"leeroy999"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"leeroy999"},"content":"    public void setMembers_nullUniqueMemberList_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":135,"author":{"gitId":"leeroy999"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMemberList.setMembers((UniqueMemberList) null));","lastModifiedDate":"2021-10-07"},{"lineNumber":136,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":137,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":138,"author":{"gitId":"leeroy999"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":139,"author":{"gitId":"leeroy999"},"content":"    public void setMembers_uniqueMemberList_replacesOwnListWithProvidedUniqueMemberList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":140,"author":{"gitId":"leeroy999"},"content":"        uniqueMemberList.add(ALICE);","lastModifiedDate":"2021-10-07"},{"lineNumber":141,"author":{"gitId":"leeroy999"},"content":"        UniqueMemberList expectedUniqueMemberList \u003d new UniqueMemberList();","lastModifiedDate":"2021-10-07"},{"lineNumber":142,"author":{"gitId":"leeroy999"},"content":"        expectedUniqueMemberList.add(BOB);","lastModifiedDate":"2021-10-07"},{"lineNumber":143,"author":{"gitId":"leeroy999"},"content":"        uniqueMemberList.setMembers(expectedUniqueMemberList);","lastModifiedDate":"2021-10-07"},{"lineNumber":144,"author":{"gitId":"leeroy999"},"content":"        assertEquals(expectedUniqueMemberList, uniqueMemberList);","lastModifiedDate":"2021-10-07"},{"lineNumber":145,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":146,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":147,"author":{"gitId":"leeroy999"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":148,"author":{"gitId":"leeroy999"},"content":"    public void setMembers_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":149,"author":{"gitId":"leeroy999"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMemberList.setMembers((List\u003cMember\u003e) null));","lastModifiedDate":"2021-10-07"},{"lineNumber":150,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":151,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":152,"author":{"gitId":"leeroy999"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":153,"author":{"gitId":"leeroy999"},"content":"    public void setMembers_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":154,"author":{"gitId":"leeroy999"},"content":"        uniqueMemberList.add(ALICE);","lastModifiedDate":"2021-10-07"},{"lineNumber":155,"author":{"gitId":"leeroy999"},"content":"        List\u003cMember\u003e memberList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2021-10-07"},{"lineNumber":156,"author":{"gitId":"leeroy999"},"content":"        uniqueMemberList.setMembers(memberList);","lastModifiedDate":"2021-10-07"},{"lineNumber":157,"author":{"gitId":"leeroy999"},"content":"        UniqueMemberList expectedUniqueMemberList \u003d new UniqueMemberList();","lastModifiedDate":"2021-10-07"},{"lineNumber":158,"author":{"gitId":"leeroy999"},"content":"        expectedUniqueMemberList.add(BOB);","lastModifiedDate":"2021-10-07"},{"lineNumber":159,"author":{"gitId":"leeroy999"},"content":"        assertEquals(expectedUniqueMemberList, uniqueMemberList);","lastModifiedDate":"2021-10-07"},{"lineNumber":160,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":161,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":162,"author":{"gitId":"leeroy999"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":163,"author":{"gitId":"leeroy999"},"content":"    public void setMembers_listWithDuplicateMembers_throwsDuplicateMemberException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":164,"author":{"gitId":"leeroy999"},"content":"        List\u003cMember\u003e listWithDuplicateMembers \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2021-10-07"},{"lineNumber":165,"author":{"gitId":"leeroy999"},"content":"        assertThrows(DuplicateMemberException.class, () -\u003e uniqueMemberList.setMembers(listWithDuplicateMembers));","lastModifiedDate":"2021-10-07"},{"lineNumber":166,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":167,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":168,"author":{"gitId":"leeroy999"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":169,"author":{"gitId":"leeroy999"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":170,"author":{"gitId":"leeroy999"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-10-07"},{"lineNumber":171,"author":{"gitId":"leeroy999"},"content":"            -\u003e uniqueMemberList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-10-07"},{"lineNumber":172,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":173,"author":{"gitId":"leeroy999"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"LiuZhi1an":6,"Samuel-bit-prog":3,"leeroy999":164}},{"path":"src/test/java/seedu/address/model/module/member/position/PositionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Samuel-bit-prog"},"content":"package seedu.address.model.module.member.position;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"LiuZhi1an"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"LiuZhi1an"},"content":"public class PositionTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"LiuZhi1an"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"LiuZhi1an"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"LiuZhi1an"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Position(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"LiuZhi1an"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"LiuZhi1an"},"content":"    public void constructor_invalidPositionName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"LiuZhi1an"},"content":"        String invalidPositionName \u003d \"\";","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"LiuZhi1an"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Position(invalidPositionName));","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"LiuZhi1an"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"LiuZhi1an"},"content":"    public void isValidPositionName() {","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"LiuZhi1an"},"content":"        // null position name","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"LiuZhi1an"},"content":"        assertThrows(NullPointerException.class, () -\u003e Position.isValidPositionName(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"LiuZhi1an"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"LiuZhi1an":25,"Samuel-bit-prog":1}},{"path":"src/test/java/seedu/address/model/module/task/TaskDeadlineTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package seedu.address.model.module.task;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"class TaskDeadlineTest {","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TaskDeadline(null));","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"    public void constructor_invalidTime_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"        String invalidTime \u003d \"1973/10/01 8:00\";","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new TaskDeadline(invalidTime));","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"    public void isValidTaskDeadline() {","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"        // null time","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"        assertThrows(NullPointerException.class, () -\u003e TaskDeadline.isValidTaskDeadline(null));","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"        // invalid time","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"        assertFalse(TaskDeadline.isValidTaskDeadline(\"\")); // empty string","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"        assertFalse(TaskDeadline.isValidTaskDeadline(\"  \")); // space only","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"        assertFalse(TaskDeadline.isValidTaskDeadline(\"1973/10/01 8:00\")); // error format","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"        assertFalse(TaskDeadline.isValidTaskDeadline(\"09/08/2021\")); // missing time","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"        assertFalse(TaskDeadline.isValidTaskDeadline(\"50/50/2021 23:59\")); // invalid date","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"        assertFalse(TaskDeadline.isValidTaskDeadline(\"10/10/2021 50:50\")); // invalid time","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"        // valid time","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"        assertTrue(TaskDeadline.isValidTaskDeadline(\"10/10/2021 12:00\"));","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"tsiyuk":37}},{"path":"src/test/java/seedu/address/model/module/task/TaskListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Samuel-bit-prog"},"content":"package seedu.address.model.module.task;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"import static seedu.address.testutil.TypicalTasks.MEETING;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"import static seedu.address.testutil.TypicalTasks.MEETING_DONE;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"import static seedu.address.testutil.TypicalTasks.PROJECT;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.testutil.TypicalTasks;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"public class TaskListTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"    private final TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"    public void contains_nullTask_throwsNullPointerException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"        assertThrows(NullPointerException.class, () -\u003e taskList.contains(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"    public void contains_taskNotInList_returnsFalse() {","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"        assertFalse(taskList.contains(MEETING));","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"    public void contains_taskInList_returnsTrue() {","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"        taskList.add(MEETING);","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"        assertTrue(taskList.contains(MEETING));","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"    public void isEmpty_emptyTaskList_returnsTrue() {","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"tsiyuk"},"content":"        assertTrue(taskList.isEmpty());","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"    public void isEmpty_nonEmptyTaskList_returnsFalse() {","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"        taskList.add(MEETING);","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"tsiyuk"},"content":"        assertFalse(taskList.isEmpty());","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"tsiyuk"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"tsiyuk"},"content":"    public void add_nullTask_throwsNullPointerException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"tsiyuk"},"content":"        assertThrows(NullPointerException.class, () -\u003e taskList.add(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"tsiyuk"},"content":"    /*@Test","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"tsiyuk"},"content":"    public void add_duplicateTask_throwsDuplicateTaskException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"tsiyuk"},"content":"        taskList.add(MEETING);","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"tsiyuk"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e taskList.add(MEETING));","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"tsiyuk"},"content":"    }*/","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"tsiyuk"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"tsiyuk"},"content":"    public void setTask_nullTargetTask_throwsNullPointerException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"tsiyuk"},"content":"        assertThrows(NullPointerException.class, () -\u003e taskList.setTask(null, MEETING));","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"tsiyuk"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"tsiyuk"},"content":"    public void setTask_nullEditedTask_throwsNullPointerException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"tsiyuk"},"content":"        assertThrows(NullPointerException.class, () -\u003e taskList.setTask(MEETING, null));","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"tsiyuk"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"tsiyuk"},"content":"    public void setTask_targetTaskNotInList_throwsTaskNotFoundException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"tsiyuk"},"content":"        assertThrows(TaskNotFoundException.class, () -\u003e taskList.setTask(MEETING, MEETING));","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"tsiyuk"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"tsiyuk"},"content":"    public void setTask_editedTaskIsSameMember_success() {","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"tsiyuk"},"content":"        taskList.add(MEETING);","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"tsiyuk"},"content":"        taskList.setTask(MEETING, MEETING);","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"tsiyuk"},"content":"        TaskList expectedTaskList \u003d new TaskList();","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"tsiyuk"},"content":"        expectedTaskList.add(MEETING);","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"tsiyuk"},"content":"        assertEquals(expectedTaskList, taskList);","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"tsiyuk"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"tsiyuk"},"content":"    public void setTask_editedTaskHasSameIdentity_success() {","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"tsiyuk"},"content":"        taskList.add(MEETING);","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"tsiyuk"},"content":"        taskList.setTask(MEETING, MEETING_DONE);","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"tsiyuk"},"content":"        TaskList expectedTaskList \u003d new TaskList();","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"tsiyuk"},"content":"        expectedTaskList.add(MEETING_DONE);","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"tsiyuk"},"content":"        assertEquals(expectedTaskList, taskList);","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"tsiyuk"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"tsiyuk"},"content":"    public void setTask_editedTaskHasDifferentIdentity_success() {","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"tsiyuk"},"content":"        taskList.add(MEETING);","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"tsiyuk"},"content":"        taskList.setTask(MEETING, PROJECT);","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"tsiyuk"},"content":"        TaskList expectedTaskList \u003d new TaskList();","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"tsiyuk"},"content":"        expectedTaskList.add(PROJECT);","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"tsiyuk"},"content":"        assertEquals(expectedTaskList, taskList);","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":103,"author":{"gitId":"tsiyuk"},"content":"    /*@Test","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"tsiyuk"},"content":"    public void setTask_editedTaskHasNonUniqueIdentity_throwsDuplicateTaskException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"tsiyuk"},"content":"        taskList.add(MEETING);","lastModifiedDate":"2021-10-09"},{"lineNumber":106,"author":{"gitId":"tsiyuk"},"content":"        taskList.add(PROJECT);","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"tsiyuk"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e taskList.setTask(MEETING, PROJECT));","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"tsiyuk"},"content":"    }*/","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":110,"author":{"gitId":"tsiyuk"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":111,"author":{"gitId":"tsiyuk"},"content":"    public void remove_nullTask_throwsNullPointerException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":112,"author":{"gitId":"tsiyuk"},"content":"        assertThrows(NullPointerException.class, () -\u003e taskList.remove(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":113,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":114,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":115,"author":{"gitId":"tsiyuk"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":116,"author":{"gitId":"tsiyuk"},"content":"    public void remove_taskDoesNotExist_throwsTaskNotFoundException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":117,"author":{"gitId":"tsiyuk"},"content":"        assertThrows(TaskNotFoundException.class, () -\u003e taskList.remove(MEETING));","lastModifiedDate":"2021-10-09"},{"lineNumber":118,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":119,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":120,"author":{"gitId":"tsiyuk"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":121,"author":{"gitId":"tsiyuk"},"content":"    public void remove_existingTask_removesTask() {","lastModifiedDate":"2021-10-09"},{"lineNumber":122,"author":{"gitId":"tsiyuk"},"content":"        taskList.add(MEETING);","lastModifiedDate":"2021-10-09"},{"lineNumber":123,"author":{"gitId":"tsiyuk"},"content":"        taskList.add(PROJECT);","lastModifiedDate":"2021-10-09"},{"lineNumber":124,"author":{"gitId":"tsiyuk"},"content":"        taskList.remove(PROJECT);","lastModifiedDate":"2021-10-09"},{"lineNumber":125,"author":{"gitId":"tsiyuk"},"content":"        TaskList expectedTaskList \u003d new TaskList();","lastModifiedDate":"2021-10-09"},{"lineNumber":126,"author":{"gitId":"tsiyuk"},"content":"        expectedTaskList.add(MEETING);","lastModifiedDate":"2021-10-09"},{"lineNumber":127,"author":{"gitId":"tsiyuk"},"content":"        assertEquals(expectedTaskList, taskList);","lastModifiedDate":"2021-10-09"},{"lineNumber":128,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":129,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":130,"author":{"gitId":"tsiyuk"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":131,"author":{"gitId":"tsiyuk"},"content":"    public void seTasks_nullTaskList_throwsNullPointerException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":132,"author":{"gitId":"tsiyuk"},"content":"        assertThrows(NullPointerException.class, () -\u003e taskList.setTasks((TaskList) null));","lastModifiedDate":"2021-10-09"},{"lineNumber":133,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":134,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":135,"author":{"gitId":"tsiyuk"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":136,"author":{"gitId":"tsiyuk"},"content":"    public void setTasks_taskList_replacesOwnListWithProvidedTaskList() {","lastModifiedDate":"2021-10-09"},{"lineNumber":137,"author":{"gitId":"tsiyuk"},"content":"        taskList.add(MEETING);","lastModifiedDate":"2021-10-09"},{"lineNumber":138,"author":{"gitId":"tsiyuk"},"content":"        TaskList expectedTaskList \u003d new TaskList();","lastModifiedDate":"2021-10-09"},{"lineNumber":139,"author":{"gitId":"tsiyuk"},"content":"        expectedTaskList.add(MEETING_DONE);","lastModifiedDate":"2021-10-09"},{"lineNumber":140,"author":{"gitId":"tsiyuk"},"content":"        expectedTaskList.add(PROJECT);","lastModifiedDate":"2021-10-09"},{"lineNumber":141,"author":{"gitId":"tsiyuk"},"content":"        taskList.setTasks(expectedTaskList);","lastModifiedDate":"2021-10-09"},{"lineNumber":142,"author":{"gitId":"tsiyuk"},"content":"        assertEquals(expectedTaskList, taskList);","lastModifiedDate":"2021-10-09"},{"lineNumber":143,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":144,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":145,"author":{"gitId":"tsiyuk"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":146,"author":{"gitId":"tsiyuk"},"content":"    public void setTasks_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":147,"author":{"gitId":"tsiyuk"},"content":"        assertThrows(NullPointerException.class, () -\u003e taskList.setTasks((List\u003cTask\u003e) null));","lastModifiedDate":"2021-10-09"},{"lineNumber":148,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":149,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":150,"author":{"gitId":"tsiyuk"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":151,"author":{"gitId":"tsiyuk"},"content":"    public void setTasks_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-10-09"},{"lineNumber":152,"author":{"gitId":"tsiyuk"},"content":"        taskList.add(MEETING);","lastModifiedDate":"2021-10-09"},{"lineNumber":153,"author":{"gitId":"tsiyuk"},"content":"        List\u003cTask\u003e tasks \u003d Collections.singletonList(PROJECT);","lastModifiedDate":"2021-10-09"},{"lineNumber":154,"author":{"gitId":"tsiyuk"},"content":"        taskList.setTasks(tasks);","lastModifiedDate":"2021-10-09"},{"lineNumber":155,"author":{"gitId":"tsiyuk"},"content":"        TaskList expectedTaskList \u003d new TaskList();","lastModifiedDate":"2021-10-09"},{"lineNumber":156,"author":{"gitId":"tsiyuk"},"content":"        expectedTaskList.add(PROJECT);","lastModifiedDate":"2021-10-09"},{"lineNumber":157,"author":{"gitId":"tsiyuk"},"content":"        assertEquals(expectedTaskList, taskList);","lastModifiedDate":"2021-10-09"},{"lineNumber":158,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":159,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":160,"author":{"gitId":"tsiyuk"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":161,"author":{"gitId":"tsiyuk"},"content":"    public void equals_test_notEqual() {","lastModifiedDate":"2021-10-09"},{"lineNumber":162,"author":{"gitId":"tsiyuk"},"content":"        taskList.setTasks(TypicalTasks.getTypicalTasks());","lastModifiedDate":"2021-10-09"},{"lineNumber":163,"author":{"gitId":"tsiyuk"},"content":"        TaskList otherTaskList \u003d new TaskList();","lastModifiedDate":"2021-10-09"},{"lineNumber":164,"author":{"gitId":"tsiyuk"},"content":"        otherTaskList.setTasks(TypicalTasks.getTypicalTasksDone());","lastModifiedDate":"2021-10-09"},{"lineNumber":165,"author":{"gitId":"tsiyuk"},"content":"        assertNotEquals(taskList, otherTaskList);","lastModifiedDate":"2021-10-09"},{"lineNumber":166,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":167,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":168,"author":{"gitId":"tsiyuk"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":169,"author":{"gitId":"tsiyuk"},"content":"    public void equals_test_equal() {","lastModifiedDate":"2021-10-09"},{"lineNumber":170,"author":{"gitId":"tsiyuk"},"content":"        taskList.setTasks(TypicalTasks.getTypicalTasks());","lastModifiedDate":"2021-10-09"},{"lineNumber":171,"author":{"gitId":"tsiyuk"},"content":"        TaskList otherTaskList \u003d new TaskList();","lastModifiedDate":"2021-10-09"},{"lineNumber":172,"author":{"gitId":"tsiyuk"},"content":"        otherTaskList.setTasks(TypicalTasks.getTypicalTasks());","lastModifiedDate":"2021-10-09"},{"lineNumber":173,"author":{"gitId":"tsiyuk"},"content":"        assertEquals(taskList, otherTaskList);","lastModifiedDate":"2021-10-09"},{"lineNumber":174,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":175,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"tsiyuk":173,"Samuel-bit-prog":2}},{"path":"src/test/java/seedu/address/model/module/task/TaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Samuel-bit-prog"},"content":"package seedu.address.model.module.task;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POEM_TASK_DEADLINE;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POEM_TASK_NAME;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"import static seedu.address.testutil.TypicalTasks.MEETING;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"import static seedu.address.testutil.TypicalTasks.MEETING_DONE;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"import static seedu.address.testutil.TypicalTasks.PROJECT;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"class TaskTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"    public void equals() {","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"        Task meetingCopy \u003d new TaskBuilder(MEETING).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"        Assertions.assertTrue(MEETING.equals(meetingCopy));","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"        Assertions.assertTrue(MEETING.equals(MEETING));","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"        Assertions.assertFalse(MEETING.equals(null));","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"        Assertions.assertFalse(MEETING.equals(5));","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"        Assertions.assertFalse(MEETING.equals(PROJECT));","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"        Task editedTask \u003d new TaskBuilder(MEETING).withName(VALID_POEM_TASK_NAME).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"        Assertions.assertFalse(MEETING.equals(editedTask));","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"        // different done status -\u003e returns false","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"        Assertions.assertFalse(MEETING.equals(MEETING_DONE));","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"tsiyuk"},"content":"        // different deadline -\u003e return false","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"        Task editedDeadlineMeeting \u003d new TaskBuilder(MEETING).withDeadline(VALID_POEM_TASK_DEADLINE).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"        Assertions.assertFalse(MEETING.equals(editedDeadlineMeeting));","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"tsiyuk":45,"Samuel-bit-prog":1}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedEventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Samuel-bit-prog"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"Samuel-bit-prog"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"Samuel-bit-prog"},"content":"import static seedu.address.storage.JsonAdaptedEvent.MISSING_FIELD_EVENT_FORMAT;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"Samuel-bit-prog"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"Samuel-bit-prog"},"content":"import static seedu.address.testutil.TypicalEvents.RUMBLING;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"Samuel-bit-prog"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"Samuel-bit-prog"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"Samuel-bit-prog"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"Samuel-bit-prog"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.Name;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.event.Event;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.event.EventDate;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"Samuel-bit-prog"},"content":"public class JsonAdaptedEventTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"Samuel-bit-prog"},"content":"    private static final String INVALID_NAME \u003d \"@sumo wrestling\";","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"Samuel-bit-prog"},"content":"    private static final String INVALID_DATE \u003d \"40/13/1010\";","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"Samuel-bit-prog"},"content":"    private static final String VALID_NAME \u003d RUMBLING.getName().toString();","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"Samuel-bit-prog"},"content":"    private static final String VALID_DATE \u003d RUMBLING.getDate().toString();","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"Samuel-bit-prog"},"content":"    private static final List\u003cJsonAdaptedMember\u003e VALID_PARTICIPANTS \u003d RUMBLING.getParticipants().stream()","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"Samuel-bit-prog"},"content":"            .map(JsonAdaptedMember::new)","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"Samuel-bit-prog"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"Samuel-bit-prog"},"content":"    private static final List\u003cBoolean\u003e VALID_ATTENDANCE \u003d new ArrayList\u003c\u003e(RUMBLING.getMap().values());","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"Samuel-bit-prog"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"Samuel-bit-prog"},"content":"    public void toModelType_validEventDetails_returnsEvent() throws Exception {","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"Samuel-bit-prog"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(RUMBLING);","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"Samuel-bit-prog"},"content":"        assertEquals(RUMBLING, event.toModelType());","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"Samuel-bit-prog"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"Samuel-bit-prog"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"Samuel-bit-prog"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"Samuel-bit-prog"},"content":"                new JsonAdaptedEvent(INVALID_NAME, VALID_DATE, VALID_PARTICIPANTS, VALID_ATTENDANCE);","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"Samuel-bit-prog"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"Samuel-bit-prog"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"Samuel-bit-prog"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"Samuel-bit-prog"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"Samuel-bit-prog"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"Samuel-bit-prog"},"content":"                new JsonAdaptedEvent(null, VALID_DATE, VALID_PARTICIPANTS, VALID_ATTENDANCE);","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"Samuel-bit-prog"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_EVENT_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"Samuel-bit-prog"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"Samuel-bit-prog"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"Samuel-bit-prog"},"content":"    public void toModelType_invalidDate_throwsIllegalValueException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"Samuel-bit-prog"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"Samuel-bit-prog"},"content":"                new JsonAdaptedEvent(VALID_NAME, INVALID_DATE, VALID_PARTICIPANTS, VALID_ATTENDANCE);","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"Samuel-bit-prog"},"content":"        String expectedMessage \u003d EventDate.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"Samuel-bit-prog"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"Samuel-bit-prog"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"Samuel-bit-prog"},"content":"    public void toModelType_nullDate_throwsIllegalValueException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"Samuel-bit-prog"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"Samuel-bit-prog"},"content":"                new JsonAdaptedEvent(VALID_NAME, null, VALID_PARTICIPANTS, VALID_ATTENDANCE);","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"Samuel-bit-prog"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_EVENT_FORMAT, \"date\");","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"Samuel-bit-prog"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"Samuel-bit-prog"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"Samuel-bit-prog"},"content":"    public void constructor_test() {","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"Samuel-bit-prog"},"content":"        JsonAdaptedEvent jsonAdaptedEvent \u003d new JsonAdaptedEvent(VALID_NAME, VALID_DATE, VALID_PARTICIPANTS,","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"Samuel-bit-prog"},"content":"                VALID_ATTENDANCE);","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"Samuel-bit-prog"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"Samuel-bit-prog"},"content":"            Event event \u003d jsonAdaptedEvent.toModelType();","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"Samuel-bit-prog"},"content":"            Event expectedEvent \u003d new EventBuilder(RUMBLING).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"Samuel-bit-prog"},"content":"            assertEquals(expectedEvent, event);","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"Samuel-bit-prog"},"content":"        } catch (IllegalValueException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"Samuel-bit-prog"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"Samuel-bit-prog"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"Samuel-bit-prog"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"Samuel-bit-prog":82}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedMemberTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.storage.JsonAdaptedMember.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.testutil.TypicalMembers.BENSON;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"import static seedu.address.testutil.TypicalMembers.JERRY;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"import static seedu.address.testutil.TypicalTasks.MEETING;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.Name;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Address;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Email;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Phone;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.task.TaskList;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.testutil.MemberBuilder;","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.testutil.TypicalTasks;","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"public class JsonAdaptedMemberTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"LiuZhi1an"},"content":"    private static final String INVALID_POSITION \u003d \"#friend\";","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"    private static final String INVALID_TASK_NAME \u003d \" \";","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"    private static final String INVALID_TASK_DEADLINE \u003d \"1973/01/01 00:00\";","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().get().toString();","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().get().toString();","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"    private static final String VALID_TASK_NAME \u003d MEETING.getName().toString();","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"    private static final String VALID_TASK_DEADLINE \u003d MEETING.getTaskDeadline().toString();","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"LiuZhi1an"},"content":"    private static final List\u003cJsonAdaptedPosition\u003e VALID_POSITIONS \u003d BENSON.getPositions().stream()","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"LiuZhi1an"},"content":"            .map(JsonAdaptedPosition::new)","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"    private static final List\u003cJsonAdaptedTask\u003e VALID_TASK_LIST \u003d TypicalTasks.getTypicalTasks().stream()","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"            .map(JsonAdaptedTask::new)","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"leeroy999"},"content":"    public void toModelType_validMemberDetails_returnsMember() throws Exception {","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"leeroy999"},"content":"        JsonAdaptedMember member \u003d new JsonAdaptedMember(BENSON);","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"leeroy999"},"content":"        assertEquals(BENSON, member.toModelType());","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"tsiyuk"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"tsiyuk"},"content":"    public void toModelType_validMemberDetailsWithNoOptionalFields_returnsMember() throws Exception {","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"tsiyuk"},"content":"        JsonAdaptedMember member \u003d new JsonAdaptedMember(JERRY);","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"tsiyuk"},"content":"        assertEquals(JERRY, member.toModelType());","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"leeroy999"},"content":"        JsonAdaptedMember member \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"tsiyuk"},"content":"                new JsonAdaptedMember(INVALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"tsiyuk"},"content":"                        VALID_ADDRESS, VALID_POSITIONS, VALID_TASK_LIST);","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"leeroy999"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, member::toModelType);","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"LiuZhi1an"},"content":"        JsonAdaptedMember member \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"tsiyuk"},"content":"                new JsonAdaptedMember(null, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"tsiyuk"},"content":"                        VALID_ADDRESS, VALID_POSITIONS, VALID_TASK_LIST);","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"leeroy999"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, member::toModelType);","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"leeroy999"},"content":"        JsonAdaptedMember member \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"tsiyuk"},"content":"                new JsonAdaptedMember(VALID_NAME, INVALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"tsiyuk"},"content":"                        VALID_ADDRESS, VALID_POSITIONS, VALID_TASK_LIST);","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"leeroy999"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, member::toModelType);","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"tsiyuk"},"content":"        JsonAdaptedMember member \u003d new JsonAdaptedMember(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"tsiyuk"},"content":"                VALID_POSITIONS, VALID_TASK_LIST);","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"leeroy999"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, member::toModelType);","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"leeroy999"},"content":"        JsonAdaptedMember member \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"tsiyuk"},"content":"                new JsonAdaptedMember(VALID_NAME, VALID_PHONE, INVALID_EMAIL,","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"tsiyuk"},"content":"                        VALID_ADDRESS, VALID_POSITIONS, VALID_TASK_LIST);","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"leeroy999"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, member::toModelType);","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"leeroy999"},"content":"        JsonAdaptedMember member \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"tsiyuk"},"content":"                new JsonAdaptedMember(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"tsiyuk"},"content":"                        INVALID_ADDRESS, VALID_POSITIONS, VALID_TASK_LIST);","lastModifiedDate":"2021-10-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"leeroy999"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, member::toModelType);","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"LiuZhi1an"},"content":"    public void toModelType_invalidPositions_throwsIllegalValueException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"LiuZhi1an"},"content":"        List\u003cJsonAdaptedPosition\u003e invalidPositions \u003d new ArrayList\u003c\u003e(VALID_POSITIONS);","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"LiuZhi1an"},"content":"        invalidPositions.add(new JsonAdaptedPosition(INVALID_POSITION));","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"leeroy999"},"content":"        JsonAdaptedMember member \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"tsiyuk"},"content":"                new JsonAdaptedMember(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-09"},{"lineNumber":119,"author":{"gitId":"tsiyuk"},"content":"                        VALID_ADDRESS, invalidPositions, VALID_TASK_LIST);","lastModifiedDate":"2021-10-09"},{"lineNumber":120,"author":{"gitId":"tsiyuk"},"content":"        assertThrows(IllegalValueException.class, member::toModelType);","lastModifiedDate":"2021-10-09"},{"lineNumber":121,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":122,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":123,"author":{"gitId":"tsiyuk"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":124,"author":{"gitId":"tsiyuk"},"content":"    public void toModelType_invalidTaskName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":125,"author":{"gitId":"tsiyuk"},"content":"        List\u003cJsonAdaptedTask\u003e invalidTaskList \u003d new ArrayList\u003c\u003e(VALID_TASK_LIST);","lastModifiedDate":"2021-10-09"},{"lineNumber":126,"author":{"gitId":"tsiyuk"},"content":"        invalidTaskList.add(new JsonAdaptedTask(INVALID_TASK_NAME, false, VALID_TASK_DEADLINE));","lastModifiedDate":"2021-10-22"},{"lineNumber":127,"author":{"gitId":"tsiyuk"},"content":"        JsonAdaptedMember member \u003d new JsonAdaptedMember(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-22"},{"lineNumber":128,"author":{"gitId":"tsiyuk"},"content":"                VALID_ADDRESS, VALID_POSITIONS, invalidTaskList);","lastModifiedDate":"2021-10-22"},{"lineNumber":129,"author":{"gitId":"tsiyuk"},"content":"        assertThrows(IllegalValueException.class, member::toModelType);","lastModifiedDate":"2021-10-22"},{"lineNumber":130,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":131,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":132,"author":{"gitId":"tsiyuk"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":133,"author":{"gitId":"tsiyuk"},"content":"    public void toModelType_invalidTaskDeadline_throwsIllegalValueException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":134,"author":{"gitId":"tsiyuk"},"content":"        List\u003cJsonAdaptedTask\u003e invalidTaskList \u003d new ArrayList\u003c\u003e(VALID_TASK_LIST);","lastModifiedDate":"2021-10-22"},{"lineNumber":135,"author":{"gitId":"tsiyuk"},"content":"        invalidTaskList.add(new JsonAdaptedTask(VALID_TASK_NAME, false, INVALID_TASK_DEADLINE));","lastModifiedDate":"2021-10-22"},{"lineNumber":136,"author":{"gitId":"tsiyuk"},"content":"        JsonAdaptedMember member \u003d new JsonAdaptedMember(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-09"},{"lineNumber":137,"author":{"gitId":"tsiyuk"},"content":"                VALID_ADDRESS, VALID_POSITIONS, invalidTaskList);","lastModifiedDate":"2021-10-09"},{"lineNumber":138,"author":{"gitId":"leeroy999"},"content":"        assertThrows(IllegalValueException.class, member::toModelType);","lastModifiedDate":"2021-10-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"tsiyuk"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":142,"author":{"gitId":"tsiyuk"},"content":"    public void constructor_test() {","lastModifiedDate":"2021-10-09"},{"lineNumber":143,"author":{"gitId":"tsiyuk"},"content":"        JsonAdaptedMember jsonAdaptedMember \u003d new JsonAdaptedMember(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-09"},{"lineNumber":144,"author":{"gitId":"tsiyuk"},"content":"                VALID_ADDRESS, VALID_POSITIONS, VALID_TASK_LIST);","lastModifiedDate":"2021-10-09"},{"lineNumber":145,"author":{"gitId":"tsiyuk"},"content":"        try {","lastModifiedDate":"2021-10-09"},{"lineNumber":146,"author":{"gitId":"tsiyuk"},"content":"            Member member \u003d jsonAdaptedMember.toModelType();","lastModifiedDate":"2021-10-09"},{"lineNumber":147,"author":{"gitId":"tsiyuk"},"content":"            Member expectedMember \u003d new MemberBuilder(BENSON).build();","lastModifiedDate":"2021-10-09"},{"lineNumber":148,"author":{"gitId":"tsiyuk"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-10-09"},{"lineNumber":149,"author":{"gitId":"tsiyuk"},"content":"            taskList.setTasks((TypicalTasks.getTypicalTasks()));","lastModifiedDate":"2021-10-09"},{"lineNumber":150,"author":{"gitId":"tsiyuk"},"content":"            assertEquals(expectedMember, member);","lastModifiedDate":"2021-10-09"},{"lineNumber":151,"author":{"gitId":"tsiyuk"},"content":"        } catch (IllegalValueException e) {","lastModifiedDate":"2021-10-09"},{"lineNumber":152,"author":{"gitId":"tsiyuk"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-09"},{"lineNumber":153,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":154,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":155,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"LiuZhi1an":7,"-":59,"tsiyuk":66,"leeroy999":18,"Samuel-bit-prog":6}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedTaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"import static seedu.address.storage.JsonAdaptedTask.MISSING_FIELD_TASK_FORMAT;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"import static seedu.address.testutil.TypicalTasks.PROJECT;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.model.module.Name;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.model.module.task.Task;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.model.module.task.TaskDeadline;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"class JsonAdaptedTaskTest {","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"    private static final String INVALID_NAME \u003d \"@read books\";","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"    private static final String INVALID_DEADLINE \u003d \"50/50/2000 26:62\";","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"    private static final String VALID_NAME \u003d PROJECT.getName().toString();","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"    private static final String VALID_DEADLINE \u003d PROJECT.getTaskDeadline().toString();","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"    public void toModelType_validTaskDetails_returnsTask() throws Exception {","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(PROJECT);","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"        assertEquals(PROJECT, task.toModelType());","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(INVALID_NAME, false, VALID_DEADLINE);","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(null, false, VALID_DEADLINE);","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_TASK_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"    public void toModelType_invalidDeadline_throwsIllegalValueException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(VALID_NAME, false, INVALID_DEADLINE);","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"        String expectedMessage \u003d TaskDeadline.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"tsiyuk"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"tsiyuk"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"tsiyuk"},"content":"    public void toModelType_nullDeadline_throwsIllegalValueException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"tsiyuk"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(VALID_NAME, false, null);","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"tsiyuk"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_TASK_FORMAT, TaskDeadline.class.getSimpleName());","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"tsiyuk"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"tsiyuk"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"tsiyuk"},"content":"    public void contructor_test() {","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"tsiyuk"},"content":"        JsonAdaptedTask jsonAdaptedTask \u003d new JsonAdaptedTask(VALID_NAME, false, VALID_DEADLINE);","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"tsiyuk"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"tsiyuk"},"content":"            Task task \u003d jsonAdaptedTask.toModelType();","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"tsiyuk"},"content":"            Task expectedTask \u003d new TaskBuilder(PROJECT).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"tsiyuk"},"content":"            assertEquals(expectedTask, task);","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"tsiyuk"},"content":"        } catch (IllegalValueException e) {","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"tsiyuk"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"tsiyuk":68}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.testutil.TypicalMembers.ALICE;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.testutil.TypicalMembers.HOON;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.testutil.TypicalMembers.IDA;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.testutil.TypicalMembers.getTypicalAddressBook;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"leeroy999"},"content":"    public void readAddressBook_invalidMemberAddressBook_throwDataConversionException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"leeroy999"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidMemberAddressBook.json\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"leeroy999"},"content":"    public void readAddressBook_invalidAndValidMemberAddressBook_throwDataConversionException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"leeroy999"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidMemberAddressBook.json\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"leeroy999"},"content":"        original.addMember(HOON);","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"leeroy999"},"content":"        original.removeMember(ALICE);","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"leeroy999"},"content":"        original.addMember(IDA);","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":99,"leeroy999":11}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"import seedu.address.testutil.TypicalMembers;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"LiuZhi1an"},"content":"    private static final Path TYPICAL_MEMBERS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalMembersAddressBook.json\");","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"LiuZhi1an"},"content":"    private static final Path INVALID_MEMBER_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidMemberAddressBook.json\");","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"LiuZhi1an"},"content":"    private static final Path DUPLICATE_MEMBER_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateMemberAddressBook.json\");","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"    public void toModelType_typicalMembersFile_success() throws Exception {","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"LiuZhi1an"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_MEMBERS_FILE,","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"        AddressBook typicalMembersAddressBook \u003d TypicalMembers.getTypicalAddressBook();","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"        assertEquals(addressBookFromFile, typicalMembersAddressBook);","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"    public void toModelType_invalidMemberFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"LiuZhi1an"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_MEMBER_FILE,","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"    public void toModelType_duplicateMembers_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"LiuZhi1an"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_MEMBER_FILE,","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"LiuZhi1an"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_MEMBER,","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"LiuZhi1an":7,"-":34,"leeroy999":6}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"import static seedu.address.testutil.TypicalMembers.getTypicalAddressBook;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":67,"leeroy999":1}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"leeroy999"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withMember(\"John\", \"Doe\").build();}","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"     * Adds a new {@code Member} to the {@code AddressBook} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"    public AddressBookBuilder withMember(Member member) {","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"        addressBook.addMember(member);","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":29,"Samuel-bit-prog":1,"leeroy999":4}},{"path":"src/test/java/seedu/address/testutil/EditMemberDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"leeroy999"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.member.MeditCommand.EditMemberDescriptor;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.Name;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Address;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Email;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Phone;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.position.Position;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":" * A utility class to help with building EditMemberDescriptor objects.","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":"public class EditMemberDescriptorBuilder {","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"    private EditMemberDescriptor descriptor;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"    public EditMemberDescriptorBuilder() {","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"        descriptor \u003d new EditMemberDescriptor();","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"    public EditMemberDescriptorBuilder(EditMemberDescriptor descriptor) {","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"        this.descriptor \u003d new EditMemberDescriptor(descriptor);","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"     * Returns an {@code EditMemberDescriptor} with fields containing {@code member}\u0027s details","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"    public EditMemberDescriptorBuilder(Member member) {","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"        descriptor \u003d new EditMemberDescriptor();","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"        descriptor.setName(member.getName());","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"        descriptor.setPhone(member.getPhone());","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"        descriptor.setEmail(member.getEmail().get());","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"        descriptor.setAddress(member.getAddress().get());","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"LiuZhi1an"},"content":"        descriptor.setPositions(member.getPositions());","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"leeroy999"},"content":"     * Sets the {@code Name} of the {@code EditMemberDescriptor} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"leeroy999"},"content":"    public EditMemberDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"leeroy999"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"leeroy999"},"content":"        return this;","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"leeroy999"},"content":"     * Sets the {@code Phone} of the {@code EditMemberDescriptor} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"leeroy999"},"content":"    public EditMemberDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"leeroy999"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"leeroy999"},"content":"        return this;","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"leeroy999"},"content":"     * Sets the {@code Email} of the {@code EditMemberDescriptor} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"leeroy999"},"content":"    public EditMemberDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"leeroy999"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"leeroy999"},"content":"        return this;","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"leeroy999"},"content":"     * Sets the {@code Address} of the {@code EditMemberDescriptor} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"leeroy999"},"content":"    public EditMemberDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"leeroy999"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"leeroy999"},"content":"        return this;","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"LiuZhi1an"},"content":"     * Parses the {@code positions} into a {@code Set\u003cPosition\u003e} and set it to the {@code EditMemberDescriptor}","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"leeroy999"},"content":"     * that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"LiuZhi1an"},"content":"    public EditMemberDescriptorBuilder withPositions(String... positions) {","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"LiuZhi1an"},"content":"        Set\u003cPosition\u003e positionSet \u003d Stream.of(positions).map(Position::new).collect(Collectors.toSet());","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"LiuZhi1an"},"content":"        descriptor.setPositions(positionSet);","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"leeroy999"},"content":"        return this;","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"leeroy999"},"content":"    public EditMemberDescriptor build() {","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"leeroy999"},"content":"        return descriptor;","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"leeroy999"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"LiuZhi1an":5,"tsiyuk":2,"leeroy999":74,"Samuel-bit-prog":6}},{"path":"src/test/java/seedu/address/testutil/EventBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Samuel-bit-prog"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"Samuel-bit-prog"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"Samuel-bit-prog"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"Samuel-bit-prog"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.Name;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.event.Event;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.event.EventDate;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"Samuel-bit-prog"},"content":"/**","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"Samuel-bit-prog"},"content":" * A utility class to help with building Event objects.","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"Samuel-bit-prog"},"content":" */","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"Samuel-bit-prog"},"content":"public class EventBuilder {","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"Samuel-bit-prog"},"content":"    public static final String DEFAULT_NAME \u003d \"CYCLING\";","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"Samuel-bit-prog"},"content":"    public static final String DEFAULT_DATE \u003d \"12/12/2022\";","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"Samuel-bit-prog"},"content":"    public static final Set\u003cMember\u003e DEFAULT_PARTICIPANTS \u003d Set.of(TypicalMembers.ALICE, TypicalMembers.BOB,","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"Samuel-bit-prog"},"content":"            TypicalMembers.BENSON);","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"Samuel-bit-prog"},"content":"    private Name name;","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"Samuel-bit-prog"},"content":"    private EventDate date;","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"Samuel-bit-prog"},"content":"    private Map\u003cMember, Boolean\u003e participants;","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"Samuel-bit-prog"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Creates a {@code EventBuilder} with the default details.","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"Samuel-bit-prog"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"Samuel-bit-prog"},"content":"    public EventBuilder() {","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"Samuel-bit-prog"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"Samuel-bit-prog"},"content":"        date \u003d new EventDate(DEFAULT_DATE);","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"Samuel-bit-prog"},"content":"        participants \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"Samuel-bit-prog"},"content":"        for (Member m : DEFAULT_PARTICIPANTS) {","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"Samuel-bit-prog"},"content":"            participants.put(m, false);","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"Samuel-bit-prog"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"Samuel-bit-prog"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Initializes the EventBuilder with the data of {@code eventToCopy}.","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"Samuel-bit-prog"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @param eventToCopy is the event to copy","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"Samuel-bit-prog"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"Samuel-bit-prog"},"content":"    public EventBuilder(Event eventToCopy) {","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"Samuel-bit-prog"},"content":"        name \u003d eventToCopy.getName();","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"Samuel-bit-prog"},"content":"        date \u003d eventToCopy.getDate();","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"Samuel-bit-prog"},"content":"        participants \u003d eventToCopy.getMap();","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"Samuel-bit-prog"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Sets the {@code Name} of the {@code Event} that we are building.","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"Samuel-bit-prog"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @param name is the name to be set","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @return the EventBuilder after setting","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"Samuel-bit-prog"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"Samuel-bit-prog"},"content":"    public EventBuilder withName(String name) {","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"Samuel-bit-prog"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"Samuel-bit-prog"},"content":"        return this;","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"Samuel-bit-prog"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Sets the {@code Date} of the {@code Event} that we are building.","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"Samuel-bit-prog"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @param date is the string representing the date","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @return the EventBuilder after setting","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"Samuel-bit-prog"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"Samuel-bit-prog"},"content":"    public EventBuilder withDate(String date) {","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"Samuel-bit-prog"},"content":"        this.date \u003d new EventDate(date);","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"Samuel-bit-prog"},"content":"        return this;","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"Samuel-bit-prog"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Parses the {@code Members} into a {@code Set\u003cMember\u003e} and set it to the {@code Event} that we are building.","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"Samuel-bit-prog"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @param members is the members to set","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @return the EventBuilder after setting","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"Samuel-bit-prog"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"Samuel-bit-prog"},"content":"    public EventBuilder withParticipants(Member... members) {","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"Samuel-bit-prog"},"content":"        this.participants \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"Samuel-bit-prog"},"content":"        for (Member m : SampleDataUtil.getMemberSet(members)) {","lastModifiedDate":"2021-10-14"},{"lineNumber":82,"author":{"gitId":"Samuel-bit-prog"},"content":"            participants.put(m, false);","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"Samuel-bit-prog"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":84,"author":{"gitId":"Samuel-bit-prog"},"content":"        return this;","lastModifiedDate":"2021-10-14"},{"lineNumber":85,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":86,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":87,"author":{"gitId":"Samuel-bit-prog"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Sets the {@code Participants} of the {@code Event} that we are building","lastModifiedDate":"2021-10-14"},{"lineNumber":89,"author":{"gitId":"Samuel-bit-prog"},"content":"     * from a map.","lastModifiedDate":"2021-10-14"},{"lineNumber":90,"author":{"gitId":"Samuel-bit-prog"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":91,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @param participants is the map of participants to be set","lastModifiedDate":"2021-10-14"},{"lineNumber":92,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @return the EventBuilder after setting","lastModifiedDate":"2021-10-14"},{"lineNumber":93,"author":{"gitId":"Samuel-bit-prog"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":94,"author":{"gitId":"Samuel-bit-prog"},"content":"    public EventBuilder withParticipants(Map\u003cMember, Boolean\u003e participants) {","lastModifiedDate":"2021-10-14"},{"lineNumber":95,"author":{"gitId":"Samuel-bit-prog"},"content":"        this.participants \u003d participants;","lastModifiedDate":"2021-10-14"},{"lineNumber":96,"author":{"gitId":"Samuel-bit-prog"},"content":"        return this;","lastModifiedDate":"2021-10-14"},{"lineNumber":97,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":98,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"Samuel-bit-prog"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":100,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Builds a default event.","lastModifiedDate":"2021-10-14"},{"lineNumber":101,"author":{"gitId":"Samuel-bit-prog"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":102,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @return default event","lastModifiedDate":"2021-10-14"},{"lineNumber":103,"author":{"gitId":"Samuel-bit-prog"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":104,"author":{"gitId":"Samuel-bit-prog"},"content":"    public Event build() {","lastModifiedDate":"2021-10-14"},{"lineNumber":105,"author":{"gitId":"Samuel-bit-prog"},"content":"        return new Event(name, date, participants);","lastModifiedDate":"2021-10-14"},{"lineNumber":106,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":107,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":108,"author":{"gitId":"Samuel-bit-prog"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"Samuel-bit-prog":108}},{"path":"src/test/java/seedu/address/testutil/MemberBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"leeroy999"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"leeroy999"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"leeroy999"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.Name;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Address;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Email;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Phone;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.position.Position;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.task.Task;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.task.TaskList;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"leeroy999"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"leeroy999"},"content":" * A utility class to help with building Member objects.","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"leeroy999"},"content":"public class MemberBuilder {","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"leeroy999"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"leeroy999"},"content":"    private Name name;","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"leeroy999"},"content":"    private Phone phone;","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"    private Email email;","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"leeroy999"},"content":"    private Address address;","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"LiuZhi1an"},"content":"    private Set\u003cPosition\u003e positions;","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"leeroy999"},"content":"     * Creates a {@code MemberBuilder} with the default details.","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"leeroy999"},"content":"    public MemberBuilder() {","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"leeroy999"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"leeroy999"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"leeroy999"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"LiuZhi1an"},"content":"        positions \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"leeroy999"},"content":"     * Initializes the MemberBuilder with the data of {@code memberToCopy}.","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"leeroy999"},"content":"    public MemberBuilder(Member memberToCopy) {","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"leeroy999"},"content":"        name \u003d memberToCopy.getName();","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"leeroy999"},"content":"        phone \u003d memberToCopy.getPhone();","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"tsiyuk"},"content":"        email \u003d memberToCopy.getEmail().get();","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"tsiyuk"},"content":"        address \u003d memberToCopy.getAddress().get();","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"LiuZhi1an"},"content":"        positions \u003d new HashSet\u003c\u003e(memberToCopy.getPositions());","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"tsiyuk"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"tsiyuk"},"content":"        taskList.setTasks(memberToCopy.getTaskList());","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"leeroy999"},"content":"     * Sets the {@code Name} of the {@code Member} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"leeroy999"},"content":"    public MemberBuilder withName(String name) {","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"leeroy999"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"leeroy999"},"content":"        return this;","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"LiuZhi1an"},"content":"     * Parses the {@code positions} into a {@code Set\u003cPosition\u003e} and set it to the {@code Member} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"LiuZhi1an"},"content":"    public MemberBuilder withPositions(String ... positions) {","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"LiuZhi1an"},"content":"        this.positions \u003d SampleDataUtil.getPositionSet(positions);","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"leeroy999"},"content":"        return this;","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"leeroy999"},"content":"     * Sets the {@code Address} of the {@code Member} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"leeroy999"},"content":"    public MemberBuilder withAddress(String address) {","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"tsiyuk"},"content":"        if (address !\u003d null) {","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"leeroy999"},"content":"            this.address \u003d new Address(address);","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"tsiyuk"},"content":"        } else {","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"tsiyuk"},"content":"            this.address \u003d null;","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"leeroy999"},"content":"        return this;","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"leeroy999"},"content":"     * Sets the {@code Phone} of the {@code Member} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"leeroy999"},"content":"    public MemberBuilder withPhone(String phone) {","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"leeroy999"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"leeroy999"},"content":"        return this;","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"leeroy999"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"leeroy999"},"content":"     * Sets the {@code Email} of the {@code Member} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"leeroy999"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"leeroy999"},"content":"    public MemberBuilder withEmail(String email) {","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"tsiyuk"},"content":"        if (email !\u003d null) {","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"leeroy999"},"content":"            this.email \u003d new Email(email);","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"tsiyuk"},"content":"        } else {","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"tsiyuk"},"content":"            this.email \u003d null;","lastModifiedDate":"2021-10-13"},{"lineNumber":103,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":104,"author":{"gitId":"leeroy999"},"content":"        return this;","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"tsiyuk"},"content":"     * Sets the {@code taskList} of the {@code Member} that we are building.","lastModifiedDate":"2021-10-09"},{"lineNumber":109,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":110,"author":{"gitId":"tsiyuk"},"content":"    public MemberBuilder withTaskList(Task ... tasks) {","lastModifiedDate":"2021-10-09"},{"lineNumber":111,"author":{"gitId":"tsiyuk"},"content":"        this.taskList.setTasks(SampleDataUtil.getTaskList(tasks));","lastModifiedDate":"2021-10-09"},{"lineNumber":112,"author":{"gitId":"tsiyuk"},"content":"        return this;","lastModifiedDate":"2021-10-09"},{"lineNumber":113,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":114,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":115,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":116,"author":{"gitId":"tsiyuk"},"content":"     * Sets the {@code taskList} of the {@code Member} that we are building.","lastModifiedDate":"2021-10-09"},{"lineNumber":117,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":118,"author":{"gitId":"tsiyuk"},"content":"    public MemberBuilder withTaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-10-09"},{"lineNumber":119,"author":{"gitId":"tsiyuk"},"content":"        this.taskList.setTasks(tasks);","lastModifiedDate":"2021-10-09"},{"lineNumber":120,"author":{"gitId":"tsiyuk"},"content":"        return this;","lastModifiedDate":"2021-10-09"},{"lineNumber":121,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":122,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":123,"author":{"gitId":"leeroy999"},"content":"    public Member build() {","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"tsiyuk"},"content":"        return new Member(name, phone, email, address, positions, taskList);","lastModifiedDate":"2021-10-09"},{"lineNumber":125,"author":{"gitId":"leeroy999"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"leeroy999"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"leeroy999"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"LiuZhi1an":6,"tsiyuk":32,"leeroy999":81,"Samuel-bit-prog":8}},{"path":"src/test/java/seedu/address/testutil/MemberUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.member.MaddCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.member.MeditCommand.EditMemberDescriptor;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.position.Position;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"leeroy999"},"content":" * A utility class for Member.","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"leeroy999"},"content":"public class MemberUtil {","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":"     * Returns an add command string for adding the {@code member}.","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"    public static String getPaddCommand(Member member) {","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"leeroy999"},"content":"        return MaddCommand.COMMAND_WORD + \" \" + getMemberDetails(member);","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"leeroy999"},"content":"     * Returns the part of command string for the given {@code member}\u0027s details.","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"    public static String getMemberDetails(Member member) {","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"leeroy999"},"content":"        sb.append(PREFIX_NAME + member.getName().fullName + \" \");","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"leeroy999"},"content":"        sb.append(PREFIX_PHONE + member.getPhone().value + \" \");","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"        if (member.getEmail().isPresent()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"            sb.append(PREFIX_EMAIL + member.getEmail().get().value + \" \");","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"        if (member.getAddress().isPresent()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"            sb.append(PREFIX_ADDRESS + member.getAddress().get().value + \" \");","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"LiuZhi1an"},"content":"        member.getPositions().stream().forEach(","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"LiuZhi1an"},"content":"            s -\u003e sb.append(PREFIX_POSITION + s.positionName + \" \")","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"leeroy999"},"content":"     * Returns the part of command string for the given {@code EditMemberDescriptor}\u0027s details.","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"leeroy999"},"content":"    public static String getEditMemberDescriptorDetails(EditMemberDescriptor descriptor) {","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"LiuZhi1an"},"content":"        if (descriptor.getPositions().isPresent()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"LiuZhi1an"},"content":"            Set\u003cPosition\u003e positions \u003d descriptor.getPositions().get();","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"LiuZhi1an"},"content":"            if (positions.isEmpty()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"LiuZhi1an"},"content":"                sb.append(PREFIX_POSITION);","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"LiuZhi1an"},"content":"                positions.forEach(s -\u003e sb.append(PREFIX_POSITION).append(s.positionName).append(\" \"));","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"LiuZhi1an":8,"-":37,"tsiyuk":6,"leeroy999":13,"Samuel-bit-prog":2}},{"path":"src/test/java/seedu/address/testutil/TaskBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.model.module.Name;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.model.module.task.Task;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"import seedu.address.model.module.task.TaskDeadline;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"tsiyuk"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":" * A utility class to help with building Task objects.","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"public class TaskBuilder {","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"    public static final String DEFAULT_NAME \u003d \"team meeting\";","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"    public static final boolean DEFAULT_IS_DONE \u003d false;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"    public static final String DEFAULT_DEADLINE \u003d \"27/10/2021 23:59\";","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"    private Name taskName;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"    private boolean isDone;","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"    private TaskDeadline taskDeadline;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"     * Creates a {@code TaskBuilder} with the default details.","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"    public TaskBuilder() {","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"        this.taskName \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"        this.isDone \u003d DEFAULT_IS_DONE;","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"        this.taskDeadline \u003d new TaskDeadline(DEFAULT_DEADLINE);","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"     * Initializes the {@code TaskBuilder} with the data of {@code toCopy}.","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"    public TaskBuilder(Task toCopy) {","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"        this.taskName \u003d toCopy.getName();","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"        this.isDone \u003d toCopy.isDone();","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"        this.taskDeadline \u003d toCopy.getTaskDeadline();","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"     * Sets the {@code taskName} of the {@code TaskBuilder} that we are building.","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"    public TaskBuilder withName(String name) {","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"tsiyuk"},"content":"        this.taskName \u003d new Name(name);","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"tsiyuk"},"content":"        return this;","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"tsiyuk"},"content":"     * Sets the {@code taskDeadline} of the {@code TaskBuilder} that we are building.","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"tsiyuk"},"content":"    public TaskBuilder withDeadline(String time) {","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"tsiyuk"},"content":"        this.taskDeadline \u003d new TaskDeadline(time);","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"tsiyuk"},"content":"        return this;","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"tsiyuk"},"content":"     * Sets the {@code isDone} of the {@code TaskBuilder} that we are building.","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"tsiyuk"},"content":"    public TaskBuilder withIsDone(boolean isDone) {","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"tsiyuk"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"tsiyuk"},"content":"        return this;","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"tsiyuk"},"content":"    public Task build() {","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"tsiyuk"},"content":"        return new Task(taskName, isDone, taskDeadline);","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"tsiyuk":64}},{"path":"src/test/java/seedu/address/testutil/TaskListBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.task.Task;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.task.TaskList;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"public class TaskListBuilder {","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"    public TaskListBuilder() {","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"     * Initializes the TaskBuilder with the data of {@code taskListToCopy}.","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"    public TaskListBuilder(TaskList taskListToCopy) {","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"        taskListToCopy.iterator().forEachRemaining((task -\u003e tasks.add(task)));","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"        tasks.add(task);","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"     * Returns a {@code TaskList} object.","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"    public TaskList build() {","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"        TaskList result \u003d new TaskList();","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"        result.setTasks(tasks);","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"        return result;","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"tsiyuk":34,"Samuel-bit-prog":2}},{"path":"src/test/java/seedu/address/testutil/TaskUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LiuZhi1an"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER_ID;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEMBER_ID_DEL;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_ID;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"LiuZhi1an"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.task.TaddCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"leeroy999"},"content":"import seedu.address.logic.commands.task.TdelCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.task.Task;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"LiuZhi1an"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"LiuZhi1an"},"content":" * A utility class for Task.","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"LiuZhi1an"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"LiuZhi1an"},"content":"public class TaskUtil {","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"LiuZhi1an"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"LiuZhi1an"},"content":"     * Returns an add command string for adding the {@code task} to the member with {@code memberId}.","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"LiuZhi1an"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"LiuZhi1an"},"content":"    public static String getTaddCommand(Task task, Index memberId) {","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"LiuZhi1an"},"content":"        return TaddCommand.COMMAND_WORD + \" \" + getTaskDetails(task, memberId);","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"LiuZhi1an"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"LiuZhi1an"},"content":"     * Returns the part of command string for the given {@code task}\u0027s details.","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"LiuZhi1an"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"LiuZhi1an"},"content":"    public static String getTaskDetails(Task task, Index memberId) {","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"LiuZhi1an"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"        sb.append(PREFIX_NAME + task.getName().toString() + \" \");","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"        sb.append(PREFIX_DATE + task.getTaskDeadline().toString() + \" \");","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"LiuZhi1an"},"content":"        sb.append(PREFIX_MEMBER_ID + Integer.toString(memberId.getOneBased()));","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"LiuZhi1an"},"content":"        return sb.toString();","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"LiuZhi1an"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"LiuZhi1an"},"content":"     * Returns a task delete command string for deleting the {@code task}","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"LiuZhi1an"},"content":"     * from the member with {@code memberId}.","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"LiuZhi1an"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"LiuZhi1an"},"content":"    public static String getTdelCommand(Index taskId) {","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"LiuZhi1an"},"content":"        return TdelCommand.COMMAND_WORD + \" \" + PREFIX_TASK_ID + Integer.toString(taskId.getOneBased());","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"LiuZhi1an"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"LiuZhi1an"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"LiuZhi1an"},"content":"     * Returns the part of command string for the given {@code taskId} and {@code memberId}\u0027s details.","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"LiuZhi1an"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"LiuZhi1an"},"content":"    public static String getTaskIdDetails(Index taskId, Index memberId) {","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"LiuZhi1an"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"LiuZhi1an"},"content":"        sb.append(PREFIX_TASK_ID + Integer.toString(taskId.getOneBased()) + \" \");","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"LiuZhi1an"},"content":"        sb.append(PREFIX_MEMBER_ID_DEL + Integer.toString(memberId.getOneBased()));","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"LiuZhi1an"},"content":"        return sb.toString();","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"LiuZhi1an"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"LiuZhi1an"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"LiuZhi1an":47,"tsiyuk":3,"leeroy999":2,"Samuel-bit-prog":1}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Returns the middle index of the data in either the {@code model}\u0027s member or event list","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Samuel-bit-prog"},"content":"     * based on specification.","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"Samuel-bit-prog"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @param model is the model to look in","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @param data is the string to identify which list to look","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"Samuel-bit-prog"},"content":"    public static Index getMidIndex(Model model, String data) {","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"Samuel-bit-prog"},"content":"        switch (data) {","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Samuel-bit-prog"},"content":"        case \"member\":","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"leeroy999"},"content":"            return Index.fromOneBased(model.getFilteredMemberList().size() / 2);","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"Samuel-bit-prog"},"content":"        case \"event\":","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"Samuel-bit-prog"},"content":"            return Index.fromOneBased(model.getFilteredEventList().size() / 2);","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"Samuel-bit-prog"},"content":"        default:","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"Samuel-bit-prog"},"content":"            return null;","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"Samuel-bit-prog"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":54,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Returns the last index of the data in either the {@code model}\u0027s member or event list","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"Samuel-bit-prog"},"content":"     * as specified.","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":57,"author":{"gitId":"Samuel-bit-prog"},"content":"    public static Index getLastIndex(Model model, String data) {","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Samuel-bit-prog"},"content":"        switch (data) {","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"Samuel-bit-prog"},"content":"        case \"member\":","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"leeroy999"},"content":"            return Index.fromOneBased(model.getFilteredMemberList().size());","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"Samuel-bit-prog"},"content":"        case \"event\":","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"Samuel-bit-prog"},"content":"            return Index.fromOneBased(model.getFilteredEventList().size());","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"Samuel-bit-prog"},"content":"        default:","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"Samuel-bit-prog"},"content":"            return null;","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"Samuel-bit-prog"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":69,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Returns the data in the {@code model}\u0027s member or event list at {@code index}","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"Samuel-bit-prog"},"content":"     * as specified.","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":72,"author":{"gitId":"Samuel-bit-prog"},"content":"    public static Module getData(Model model, Index index, String data) {","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"Samuel-bit-prog"},"content":"        switch (data) {","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"Samuel-bit-prog"},"content":"        case \"member\":","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"leeroy999"},"content":"            return model.getFilteredMemberList().get(index.getZeroBased());","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"Samuel-bit-prog"},"content":"        case \"event\":","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"Samuel-bit-prog"},"content":"            return model.getFilteredEventList().get(index.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"Samuel-bit-prog"},"content":"        default:","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"Samuel-bit-prog"},"content":"            return null;","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"Samuel-bit-prog"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":45,"Samuel-bit-prog":34,"leeroy999":3}},{"path":"src/test/java/seedu/address/testutil/TypicalEvents.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Samuel-bit-prog"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"Samuel-bit-prog"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_DATE_BADMINTON;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"Samuel-bit-prog"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_DATE_CHESS;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"Samuel-bit-prog"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_NAME_BADMINTON;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"Samuel-bit-prog"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_NAME_CHESS;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"Samuel-bit-prog"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"Samuel-bit-prog"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"Samuel-bit-prog"},"content":"import java.util.List;","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.event.Event;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"Samuel-bit-prog"},"content":"/**","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"Samuel-bit-prog"},"content":" * A utility class containing a list of {@code Events} objects to be used in tests.","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"Samuel-bit-prog"},"content":" */","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"Samuel-bit-prog"},"content":"public class TypicalEvents {","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"Samuel-bit-prog"},"content":"    public static final Event ICEBREAKER \u003d new EventBuilder().withName(\"Icebreaker\")","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"Samuel-bit-prog"},"content":"            .withDate(\"11/11/2022\").withParticipants(TypicalMembers.ALICE, TypicalMembers.BENSON).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"Samuel-bit-prog"},"content":"    public static final Event RUMBLING \u003d new EventBuilder().withName(\"that scenery\")","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"Samuel-bit-prog"},"content":"            .withDate(\"09/11/2022\").withParticipants(TypicalMembers.FIONA, TypicalMembers.BENSON).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"Samuel-bit-prog"},"content":"    public static final Event PERFORMANCE \u003d new EventBuilder().withName(\"Performance\")","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"Samuel-bit-prog"},"content":"            .withDate(\"01/12/2022\").withParticipants(TypicalMembers.CARL).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"Samuel-bit-prog"},"content":"    public static final Event OSMANTHUS_WINE \u003d new EventBuilder().withName(\"Wine party\")","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"Samuel-bit-prog"},"content":"            .withDate(\"11/11/2022\").withParticipants(TypicalMembers.ALICE, TypicalMembers.AMY,","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"Samuel-bit-prog"},"content":"                    TypicalMembers.IDA).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"Samuel-bit-prog"},"content":"    public static final Event BILLIARDS \u003d new EventBuilder().withName(\"Billiards\")","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"Samuel-bit-prog"},"content":"            .withDate(\"21/11/2022\").withParticipants(TypicalMembers.ELLE, TypicalMembers.BENSON).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"Samuel-bit-prog"},"content":"    public static final Event RED_LIGHT_GREEN_LIGHT \u003d new EventBuilder().withName(\"Red light Green light\")","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"Samuel-bit-prog"},"content":"            .withDate(\"09/12/2022\").withParticipants(TypicalMembers.ALICE, TypicalMembers.BENSON,","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"Samuel-bit-prog"},"content":"                    TypicalMembers.GEORGE, TypicalMembers.HOON).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"Samuel-bit-prog"},"content":"    public static final Event SYMPHONY_NO_9_ORCHESTRA \u003d new EventBuilder().withName(\"Orchestra\")","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"Samuel-bit-prog"},"content":"            .withDate(\"11/04/2023\").withParticipants(TypicalMembers.BENSON).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"Samuel-bit-prog"},"content":"    // Manually added","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"Samuel-bit-prog"},"content":"    public static final Event RIDER_WAR \u003d new EventBuilder().withName(\"Henshin\")","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"Samuel-bit-prog"},"content":"            .withDate(\"10/08/2023\").withParticipants(TypicalMembers.GEORGE, TypicalMembers.DANIEL,","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"Samuel-bit-prog"},"content":"                    TypicalMembers.AMY).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"Samuel-bit-prog"},"content":"    public static final Event ADVENTURE_TIME \u003d new EventBuilder().withName(\"Its Adventure Time\")","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"Samuel-bit-prog"},"content":"            .withDate(\"01/05/2023\").withParticipants(TypicalMembers.GEORGE).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"Samuel-bit-prog"},"content":"    // Manually added - Event\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"Samuel-bit-prog"},"content":"    public static final Event BADMINTON \u003d new EventBuilder().withName(VALID_EVENT_NAME_BADMINTON)","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"Samuel-bit-prog"},"content":"            .withDate(VALID_EVENT_DATE_BADMINTON).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"Samuel-bit-prog"},"content":"    public static final Event CHESS \u003d new EventBuilder().withName(VALID_EVENT_NAME_CHESS)","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"Samuel-bit-prog"},"content":"            .withDate(VALID_EVENT_DATE_CHESS).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"Samuel-bit-prog"},"content":"    private TypicalEvents() {} // prevents instantiation","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"Samuel-bit-prog"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"Samuel-bit-prog"},"content":"     * Returns an {@code AddressBook} with all the typical members and events.","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"Samuel-bit-prog"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"Samuel-bit-prog"},"content":"     * @return AddressBook with the typical members and events","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"Samuel-bit-prog"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"Samuel-bit-prog"},"content":"    public static AddressBook getTypicalAddressBookWithEvents() {","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"Samuel-bit-prog"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"Samuel-bit-prog"},"content":"        for (Member member : TypicalMembers.getTypicalMembers()) {","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"Samuel-bit-prog"},"content":"            ab.addMember(member);","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"Samuel-bit-prog"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"Samuel-bit-prog"},"content":"        for (Event event : getTypicalEvents()) {","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"Samuel-bit-prog"},"content":"            ab.addEvent(event);","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"Samuel-bit-prog"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"Samuel-bit-prog"},"content":"        return ab;","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"Samuel-bit-prog"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"Samuel-bit-prog"},"content":"    public static List\u003cEvent\u003e getTypicalEvents() {","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"Samuel-bit-prog"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ICEBREAKER, RUMBLING, PERFORMANCE, OSMANTHUS_WINE, BILLIARDS,","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"Samuel-bit-prog"},"content":"                RED_LIGHT_GREEN_LIGHT, SYMPHONY_NO_9_ORCHESTRA));","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"Samuel-bit-prog"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"Samuel-bit-prog"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"Samuel-bit-prog":72}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"LiuZhi1an"},"content":"    public static final Index INDEX_FIRST_MEMBER \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"LiuZhi1an"},"content":"    public static final Index INDEX_SECOND_MEMBER \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"LiuZhi1an"},"content":"    public static final Index INDEX_THIRD_MEMBER \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"LiuZhi1an":3,"-":9}},{"path":"src/test/java/seedu/address/testutil/TypicalMembers.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POSITION_FRIEND;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"LiuZhi1an"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_POSITION_HUSBAND;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.member.Member;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"leeroy999"},"content":" * A utility class containing a list of {@code Member} objects to be used in tests.","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"leeroy999"},"content":"public class TypicalMembers {","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"leeroy999"},"content":"    public static final Member ALICE \u003d new MemberBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"            .withPositions(\"friends\")","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"            .withTaskList(TypicalTasks.getTypicalTasks()).build();","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"leeroy999"},"content":"    public static final Member BENSON \u003d new MemberBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"            .withPositions(\"owesMoney\", \"friends\")","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"            .withTaskList(TypicalTasks.getTypicalTasks()).build();","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"leeroy999"},"content":"    public static final Member CARL \u003d new MemberBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"leeroy999"},"content":"    public static final Member DANIEL \u003d new MemberBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"LiuZhi1an"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withPositions(\"friends\").build();","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"leeroy999"},"content":"    public static final Member ELLE \u003d new MemberBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"leeroy999"},"content":"    public static final Member FIONA \u003d new MemberBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"leeroy999"},"content":"    public static final Member GEORGE \u003d new MemberBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":48,"author":{"gitId":"leeroy999"},"content":"    public static final Member HOON \u003d new MemberBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"leeroy999"},"content":"    public static final Member IDA \u003d new MemberBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"tsiyuk"},"content":"    // No email and no address","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"tsiyuk"},"content":"    public static final Member JERRY \u003d new MemberBuilder().withName(\"Jerry Smith\").withPhone(\"123456789\")","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"tsiyuk"},"content":"            .withEmail(null).withAddress(null).build();","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"leeroy999"},"content":"    // Manually added - Member\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"leeroy999"},"content":"    public static final Member AMY \u003d new MemberBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"LiuZhi1an"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"LiuZhi1an"},"content":"            .withPositions(VALID_POSITION_FRIEND).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"leeroy999"},"content":"    public static final Member BOB \u003d new MemberBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"LiuZhi1an"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"LiuZhi1an"},"content":"            .withPositions(VALID_POSITION_HUSBAND, VALID_POSITION_FRIEND)","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":68,"author":{"gitId":"leeroy999"},"content":"    private TypicalMembers() {} // prevents instantiation","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"leeroy999"},"content":"     * Returns an {@code AddressBook} with all the typical members.","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":75,"author":{"gitId":"leeroy999"},"content":"        for (Member member : getTypicalMembers()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"leeroy999"},"content":"            ab.addMember(member);","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":81,"author":{"gitId":"leeroy999"},"content":"    public static List\u003cMember\u003e getTypicalMembers() {","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"tsiyuk"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, JERRY, GEORGE));","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"LiuZhi1an":7,"-":48,"tsiyuk":9,"Samuel-bit-prog":1,"leeroy999":19}},{"path":"src/test/java/seedu/address/testutil/TypicalTasks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tsiyuk"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"tsiyuk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"tsiyuk"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"tsiyuk"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"Samuel-bit-prog"},"content":"import seedu.address.model.module.task.Task;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"tsiyuk"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"tsiyuk"},"content":" * A utility class containing a list of {@code Task} objects to be used in tests","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"tsiyuk"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"tsiyuk"},"content":"public class TypicalTasks {","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"tsiyuk"},"content":"    public static final Task MEETING \u003d new TaskBuilder().build();","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"tsiyuk"},"content":"    public static final Task PROJECT \u003d new TaskBuilder()","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"tsiyuk"},"content":"            .withName(\"group project\")","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"tsiyuk"},"content":"            .withDeadline(\"21/10/2021 23:59\")","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"tsiyuk"},"content":"            .build();","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"tsiyuk"},"content":"    public static final Task CHECK_PAYMENT \u003d new TaskBuilder().withName(\"check payment\").build();","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"tsiyuk"},"content":"    public static final Task CHECK_VACCINATION_STATUS \u003d new TaskBuilder()","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"tsiyuk"},"content":"            .withName(\"check vaccination status\")","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"tsiyuk"},"content":"            .withDeadline(\"22/10/2021 08:00\")","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"tsiyuk"},"content":"            .build();","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"tsiyuk"},"content":"    public static final Task REHEARSAL \u003d new TaskBuilder().withName(\"rehearse 2 times\").build();","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"tsiyuk"},"content":"    public static final Task MEETING_DONE \u003d new TaskBuilder(MEETING).withIsDone(true).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"tsiyuk"},"content":"    public static final Task PROJECT_DONE \u003d new TaskBuilder(PROJECT).withIsDone(true).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"tsiyuk"},"content":"    public static final Task CHECK_PAYMENT_DONE \u003d new TaskBuilder(CHECK_PAYMENT).withIsDone(true).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"tsiyuk"},"content":"    public static final Task CHECK_VACCINATION_STATUS_DONE \u003d new TaskBuilder(CHECK_VACCINATION_STATUS)","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"tsiyuk"},"content":"            .withIsDone(true).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"tsiyuk"},"content":"    public static final Task REHEARSAL_DONE \u003d new TaskBuilder(REHEARSAL).withIsDone(true).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"tsiyuk"},"content":"    public static List\u003cTask\u003e getTypicalTasks() {","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"tsiyuk"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(MEETING, PROJECT, CHECK_PAYMENT, CHECK_VACCINATION_STATUS, REHEARSAL));","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"tsiyuk"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"tsiyuk"},"content":"    public static List\u003cTask\u003e getTypicalTasksDone() {","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"tsiyuk"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(MEETING_DONE, PROJECT_DONE, CHECK_PAYMENT_DONE,","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"tsiyuk"},"content":"                CHECK_VACCINATION_STATUS_DONE, REHEARSAL_DONE));","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"tsiyuk"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"tsiyuk"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"tsiyuk":39,"Samuel-bit-prog":1}}]
