[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Linxcathyyy"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-T12-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-T12-1/tp/actions)","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"Linxcathyyy"},"content":"* **Sellah** is an address book containing the contact information and orders related to the clients and partners. The information and status of each order can also be easily monitored by the user. This product makes it easy and convenient to track orders and look for future cooperation.","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"Linxcathyyy"},"content":"* This product is for online sellers on e-commerce platforms who prefer CLI over GUI. These sellers have a large client base, so they need to keep track of the manufacturing and delivery of their products as well as the contact information of their customers and business partners with the help of **Sellah**.","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"Linxcathyyy"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"Linxcathyyy":4,"-":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"benluiwj"},"content":"### Lin Xingchen","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"benluiwj"},"content":"\u003cimg src\u003d\"images/linxcathyyy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"benluiwj"},"content":"[[github](http://github.com/Linxcathyyy)]","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"benluiwj"},"content":"[[portfolio](team/linxcathyyy.md)]","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"benluiwj"},"content":"### Benjamin Lui","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"benluiwj"},"content":"\u003cimg src\u003d\"images/benluiwj.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"SkyBlaise99"},"content":"[[github](http://github.com/benluiwj)]","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"SkyBlaise99"},"content":"[[portfolio](team/benluiwj.md)]","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"SkyBlaise99"},"content":"### Zhang Shi Chen","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"SkyBlaise99"},"content":"\u003cimg src\u003d\"images/skyblaise99.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"SkyBlaise99"},"content":"[[github](https://github.com/SkyBlaise99)]","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"SkyBlaise99"},"content":"[[portfolio](team/skyblaise99.md)]","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"SkyBlaise99"},"content":"* Responsibilities: Integration","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"NaokiShum"},"content":"### Naoki Shum","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"HongshuW"},"content":"\u003cimg src\u003d\"images/naokishum.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"NaokiShum"},"content":"[[github](http://github.com/NaokiShum)]","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"HongshuW"},"content":"[[portfolio](team/naokishum.md)]","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"HongshuW"},"content":"### Hongshu Wang","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"HongshuW"},"content":"\u003cimg src\u003d\"images/hongshuw.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"HongshuW"},"content":"[[github](http://github.com/HongshuW)]","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"HongshuW"},"content":"[[portfolio](team/hongshuw.md)]","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"HongshuW"},"content":"* Responsibilities: Testing","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"HongshuW":7,"NaokiShum":2,"SkyBlaise99":7,"-":38,"benluiwj":6}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"SkyBlaise99"},"content":"* Table of Contents {:toc}","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"SkyBlaise99"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"SkyBlaise99"},"content":"  original source as well}","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"SkyBlaise99"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"SkyBlaise99"},"content":"[diagrams](https://github.com/AY2122S1-CS2103T-T12-1/tp/tree/master/docs/diagrams/) folder. Refer to the","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"SkyBlaise99"},"content":"[_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"SkyBlaise99"},"content":"and edit diagrams.","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"SkyBlaise99"},"content":"**`Main`** has two classes called","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"SkyBlaise99"},"content":"[`Main`](https://github.com/AY2122S1-CS2103T-T12-1/tp/tree/master/src/main/java/seedu/address/Main.java) and","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"SkyBlaise99"},"content":"[`MainApp`](https://github.com/AY2122S1-CS2103T-T12-1/tp/tree/master/src/main/java/seedu/address/MainApp.java). It is","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"SkyBlaise99"},"content":"responsible for,","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"SkyBlaise99"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"SkyBlaise99"},"content":"the command `delete 1`.","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"SkyBlaise99"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding","lastModifiedDate":"2021-09-23"},{"lineNumber":72,"author":{"gitId":"SkyBlaise99"},"content":"  API `interface` mentioned in the previous point.","lastModifiedDate":"2021-09-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"SkyBlaise99"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using","lastModifiedDate":"2021-09-23"},{"lineNumber":75,"author":{"gitId":"SkyBlaise99"},"content":"the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component","lastModifiedDate":"2021-09-23"},{"lineNumber":76,"author":{"gitId":"SkyBlaise99"},"content":"through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the","lastModifiedDate":"2021-09-23"},{"lineNumber":77,"author":{"gitId":"SkyBlaise99"},"content":"implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-09-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"SkyBlaise99"},"content":"The **API** of this component is specified in","lastModifiedDate":"2021-09-23"},{"lineNumber":86,"author":{"gitId":"SkyBlaise99"},"content":"[`Ui.java`](https://github.com/AY2122S1-CS2103T-T12-1/tp/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-09-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"SkyBlaise99"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`,","lastModifiedDate":"2021-09-23"},{"lineNumber":91,"author":{"gitId":"SkyBlaise99"},"content":"`StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures","lastModifiedDate":"2021-09-23"},{"lineNumber":92,"author":{"gitId":"SkyBlaise99"},"content":"the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-09-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"SkyBlaise99"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that","lastModifiedDate":"2021-09-23"},{"lineNumber":95,"author":{"gitId":"SkyBlaise99"},"content":"are in the `src/main/resources/view` folder. For example, the layout of the","lastModifiedDate":"2021-09-23"},{"lineNumber":96,"author":{"gitId":"SkyBlaise99"},"content":"[`MainWindow`](https://github.com/AY2122S1-CS2103T-T12-1/tp/tree/master/src/main/java/seedu/address/ui/MainWindow.java)","lastModifiedDate":"2021-09-23"},{"lineNumber":97,"author":{"gitId":"SkyBlaise99"},"content":"is specified in","lastModifiedDate":"2021-09-23"},{"lineNumber":98,"author":{"gitId":"SkyBlaise99"},"content":"[`MainWindow.fxml`](https://github.com/AY2122S1-CS2103T-T12-1/tp/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-09-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"SkyBlaise99"},"content":"**API** :","lastModifiedDate":"2021-09-23"},{"lineNumber":110,"author":{"gitId":"SkyBlaise99"},"content":"[`Logic.java`](https://github.com/AY2122S1-CS2103T-T12-1/tp/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-09-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"SkyBlaise99"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is","lastModifiedDate":"2021-09-23"},{"lineNumber":120,"author":{"gitId":"SkyBlaise99"},"content":"   executed by the `LogicManager`.","lastModifiedDate":"2021-09-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"SkyBlaise99"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API","lastModifiedDate":"2021-09-23"},{"lineNumber":125,"author":{"gitId":"SkyBlaise99"},"content":"call.","lastModifiedDate":"2021-09-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"SkyBlaise99"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":130,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":131,"author":{"gitId":"SkyBlaise99"},"content":":information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a","lastModifiedDate":"2021-09-23"},{"lineNumber":132,"author":{"gitId":"SkyBlaise99"},"content":"limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-09-23"},{"lineNumber":133,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":142,"author":{"gitId":"SkyBlaise99"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a","lastModifiedDate":"2021-09-23"},{"lineNumber":143,"author":{"gitId":"SkyBlaise99"},"content":"  placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse","lastModifiedDate":"2021-09-23"},{"lineNumber":144,"author":{"gitId":"SkyBlaise99"},"content":"  the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as","lastModifiedDate":"2021-09-23"},{"lineNumber":145,"author":{"gitId":"SkyBlaise99"},"content":"  a `Command` object.","lastModifiedDate":"2021-09-23"},{"lineNumber":146,"author":{"gitId":"SkyBlaise99"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser`","lastModifiedDate":"2021-09-23"},{"lineNumber":147,"author":{"gitId":"SkyBlaise99"},"content":"  interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-09-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":150,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":151,"author":{"gitId":"SkyBlaise99"},"content":"**API** :","lastModifiedDate":"2021-09-23"},{"lineNumber":152,"author":{"gitId":"SkyBlaise99"},"content":"[`Model.java`](https://github.com/AY2122S1-CS2103T-T12-1/tp/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2021-09-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":160,"author":{"gitId":"SkyBlaise99"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which","lastModifiedDate":"2021-09-23"},{"lineNumber":161,"author":{"gitId":"SkyBlaise99"},"content":"  is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to","lastModifiedDate":"2021-09-23"},{"lineNumber":162,"author":{"gitId":"SkyBlaise99"},"content":"  this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-09-23"},{"lineNumber":163,"author":{"gitId":"SkyBlaise99"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as","lastModifiedDate":"2021-09-23"},{"lineNumber":164,"author":{"gitId":"SkyBlaise99"},"content":"  a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-09-23"},{"lineNumber":165,"author":{"gitId":"SkyBlaise99"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they","lastModifiedDate":"2021-09-23"},{"lineNumber":166,"author":{"gitId":"SkyBlaise99"},"content":"  should make sense on their own without depending on other components)","lastModifiedDate":"2021-09-23"},{"lineNumber":167,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":168,"author":{"gitId":"SkyBlaise99"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":169,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":170,"author":{"gitId":"SkyBlaise99"},"content":":information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the","lastModifiedDate":"2021-09-23"},{"lineNumber":171,"author":{"gitId":"SkyBlaise99"},"content":"`AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag,","lastModifiedDate":"2021-09-23"},{"lineNumber":172,"author":{"gitId":"SkyBlaise99"},"content":"instead of each `Person` needing their own `Tag` objects.","lastModifiedDate":"2021-09-23"},{"lineNumber":173,"author":{"gitId":"SkyBlaise99"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"SkyBlaise99"},"content":"**API** :","lastModifiedDate":"2021-09-23"},{"lineNumber":181,"author":{"gitId":"SkyBlaise99"},"content":"[`Storage.java`](https://github.com/AY2122S1-CS2103T-T12-1/tp/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2021-09-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":187,"author":{"gitId":"SkyBlaise99"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding","lastModifiedDate":"2021-09-23"},{"lineNumber":188,"author":{"gitId":"SkyBlaise99"},"content":"  objects.","lastModifiedDate":"2021-09-23"},{"lineNumber":189,"author":{"gitId":"SkyBlaise99"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only","lastModifiedDate":"2021-09-23"},{"lineNumber":190,"author":{"gitId":"SkyBlaise99"},"content":"  the functionality of only one is needed).","lastModifiedDate":"2021-09-23"},{"lineNumber":191,"author":{"gitId":"SkyBlaise99"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects","lastModifiedDate":"2021-09-23"},{"lineNumber":192,"author":{"gitId":"SkyBlaise99"},"content":"  that belong to the `Model`)","lastModifiedDate":"2021-09-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"SkyBlaise99"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo","lastModifiedDate":"2021-09-23"},{"lineNumber":209,"author":{"gitId":"SkyBlaise99"},"content":"history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the","lastModifiedDate":"2021-09-23"},{"lineNumber":210,"author":{"gitId":"SkyBlaise99"},"content":"following operations:","lastModifiedDate":"2021-09-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"SkyBlaise99"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2021-09-23"},{"lineNumber":213,"author":{"gitId":"SkyBlaise99"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2021-09-23"},{"lineNumber":214,"author":{"gitId":"SkyBlaise99"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2021-09-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"SkyBlaise99"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()`","lastModifiedDate":"2021-09-23"},{"lineNumber":217,"author":{"gitId":"SkyBlaise99"},"content":"and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2021-09-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"SkyBlaise99"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the","lastModifiedDate":"2021-09-23"},{"lineNumber":222,"author":{"gitId":"SkyBlaise99"},"content":"initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2021-09-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"SkyBlaise99"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls","lastModifiedDate":"2021-09-23"},{"lineNumber":227,"author":{"gitId":"SkyBlaise99"},"content":"`Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be","lastModifiedDate":"2021-09-23"},{"lineNumber":228,"author":{"gitId":"SkyBlaise99"},"content":"saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2021-09-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"SkyBlaise99"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls","lastModifiedDate":"2021-09-23"},{"lineNumber":233,"author":{"gitId":"SkyBlaise99"},"content":"`Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2021-09-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"SkyBlaise99"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":238,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":239,"author":{"gitId":"SkyBlaise99"},"content":":information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the","lastModifiedDate":"2021-09-23"},{"lineNumber":240,"author":{"gitId":"SkyBlaise99"},"content":"address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2021-09-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"SkyBlaise99"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the","lastModifiedDate":"2021-09-23"},{"lineNumber":245,"author":{"gitId":"SkyBlaise99"},"content":"`undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer`","lastModifiedDate":"2021-09-23"},{"lineNumber":246,"author":{"gitId":"SkyBlaise99"},"content":"once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2021-09-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"SkyBlaise99"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":251,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":252,"author":{"gitId":"SkyBlaise99"},"content":":information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state,","lastModifiedDate":"2021-09-23"},{"lineNumber":253,"author":{"gitId":"SkyBlaise99"},"content":"then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check","lastModifiedDate":"2021-09-23"},{"lineNumber":254,"author":{"gitId":"SkyBlaise99"},"content":"if this is the case. If so, it will return an error to the user rather than attempting to perform the undo.","lastModifiedDate":"2021-09-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"SkyBlaise99"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":263,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":264,"author":{"gitId":"SkyBlaise99"},"content":":information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a","lastModifiedDate":"2021-09-23"},{"lineNumber":265,"author":{"gitId":"SkyBlaise99"},"content":"limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-09-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"SkyBlaise99"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once","lastModifiedDate":"2021-09-23"},{"lineNumber":270,"author":{"gitId":"SkyBlaise99"},"content":"to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2021-09-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"SkyBlaise99"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"SkyBlaise99"},"content":":information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to","lastModifiedDate":"2021-09-23"},{"lineNumber":275,"author":{"gitId":"SkyBlaise99"},"content":"the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses","lastModifiedDate":"2021-09-23"},{"lineNumber":276,"author":{"gitId":"SkyBlaise99"},"content":"`Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than","lastModifiedDate":"2021-09-23"},{"lineNumber":277,"author":{"gitId":"SkyBlaise99"},"content":"attempting to perform the redo.","lastModifiedDate":"2021-09-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"SkyBlaise99"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as","lastModifiedDate":"2021-09-23"},{"lineNumber":282,"author":{"gitId":"SkyBlaise99"},"content":"`list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus,","lastModifiedDate":"2021-09-23"},{"lineNumber":283,"author":{"gitId":"SkyBlaise99"},"content":"the `addressBookStateList` remains unchanged.","lastModifiedDate":"2021-09-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"SkyBlaise99"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not","lastModifiedDate":"2021-09-23"},{"lineNumber":288,"author":{"gitId":"SkyBlaise99"},"content":"pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be","lastModifiedDate":"2021-09-23"},{"lineNumber":289,"author":{"gitId":"SkyBlaise99"},"content":"purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern","lastModifiedDate":"2021-09-23"},{"lineNumber":290,"author":{"gitId":"SkyBlaise99"},"content":"desktop applications follow.","lastModifiedDate":"2021-09-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"SkyBlaise99"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by itself.","lastModifiedDate":"2021-09-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":322,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":323,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":324,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":325,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"Linxcathyyy"},"content":"* online seller on e-commerce platforms who have a large client base","lastModifiedDate":"2021-09-22"},{"lineNumber":336,"author":{"gitId":"SkyBlaise99"},"content":"* has a need to keep track of the manufacturing and delivery of their products as well as the contact information of","lastModifiedDate":"2021-09-23"},{"lineNumber":337,"author":{"gitId":"SkyBlaise99"},"content":"  their customers and business partners","lastModifiedDate":"2021-09-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":341,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"SkyBlaise99"},"content":"**Value proposition**: Sellah is an address book containing the contact information and orders related to the clients","lastModifiedDate":"2021-09-23"},{"lineNumber":344,"author":{"gitId":"SkyBlaise99"},"content":"and partners. The information and status of each order can also be easily monitored by the user. This product makes it","lastModifiedDate":"2021-09-23"},{"lineNumber":345,"author":{"gitId":"SkyBlaise99"},"content":"easy and convenient to track orders and look for future cooperation.","lastModifiedDate":"2021-09-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"Linxcathyyy"},"content":"| `* * *`  | new user                                   | download the app               | use it                                                                 |","lastModifiedDate":"2021-09-22"},{"lineNumber":354,"author":{"gitId":"Linxcathyyy"},"content":"| `* * *`  | new user                                   | type ‘exit’                    | quit the app immediately                                               |","lastModifiedDate":"2021-09-22"},{"lineNumber":355,"author":{"gitId":"Linxcathyyy"},"content":"| `* * *`  | 2nd-time user                              | add a client                   | keep track of the details of a specific client                         |","lastModifiedDate":"2021-09-22"},{"lineNumber":356,"author":{"gitId":"Linxcathyyy"},"content":"| `* * *`  | 2nd-time user                              | add a product                  | keep track of the details of a specific product                        |","lastModifiedDate":"2021-09-22"},{"lineNumber":357,"author":{"gitId":"Linxcathyyy"},"content":"| `* * * ` | 2nd-time user                              | edit a client                  | edit the details of a specific client                                  |","lastModifiedDate":"2021-09-22"},{"lineNumber":358,"author":{"gitId":"Linxcathyyy"},"content":"| `* * * ` | 2nd-time user                              | edit a product                 | edit the details of a specific product                                 |","lastModifiedDate":"2021-09-22"},{"lineNumber":359,"author":{"gitId":"Linxcathyyy"},"content":"| `* * * ` | 2nd-time user                              | view a client                  | view the details of a specific client                                  |","lastModifiedDate":"2021-09-22"},{"lineNumber":360,"author":{"gitId":"Linxcathyyy"},"content":"| `* * * ` | 2nd-time user                              | view a product                 | view the details of a specific product                                 |","lastModifiedDate":"2021-09-22"},{"lineNumber":361,"author":{"gitId":"Linxcathyyy"},"content":"| `* * * ` | 2nd-time user                              | delete a client                | remove client that I no longer need                                    |","lastModifiedDate":"2021-09-22"},{"lineNumber":362,"author":{"gitId":"Linxcathyyy"},"content":"| `* * * ` | 2nd-time user                              | delete a product               | remove product that I no longer need                                   |","lastModifiedDate":"2021-09-22"},{"lineNumber":363,"author":{"gitId":"Linxcathyyy"},"content":"| `* * `   | 10th-time user                             | list all my clients            | locate a client easily                                                 |","lastModifiedDate":"2021-09-22"},{"lineNumber":364,"author":{"gitId":"Linxcathyyy"},"content":"| `* * `   | 10th-time user                             | list all my products           | locate a product easily                                                |","lastModifiedDate":"2021-09-22"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"Linxcathyyy"},"content":"(For all use cases below, the **System** is the `Sellah` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-09-22"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"SkyBlaise99"},"content":"**Use case: UC01 - Add a client/product**","lastModifiedDate":"2021-09-23"},{"lineNumber":373,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":374,"author":{"gitId":"HongshuW"},"content":"**MSS**","lastModifiedDate":"2021-09-22"},{"lineNumber":375,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":376,"author":{"gitId":"HongshuW"},"content":"1. User requests to add a new client/product.","lastModifiedDate":"2021-09-22"},{"lineNumber":377,"author":{"gitId":"HongshuW"},"content":"2. Sellah adds the client/product.","lastModifiedDate":"2021-09-22"},{"lineNumber":378,"author":{"gitId":"SkyBlaise99"},"content":"3. Sellah displays success message and shows the updated list of clients/products.","lastModifiedDate":"2021-09-23"},{"lineNumber":379,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":380,"author":{"gitId":"HongshuW"},"content":"   Use case ends.","lastModifiedDate":"2021-09-22"},{"lineNumber":381,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":382,"author":{"gitId":"HongshuW"},"content":"**Extensions**","lastModifiedDate":"2021-09-22"},{"lineNumber":383,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":384,"author":{"gitId":"SkyBlaise99"},"content":"* 1a. The input parameter(s) is/are invalid.","lastModifiedDate":"2021-09-23"},{"lineNumber":385,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":386,"author":{"gitId":"HongshuW"},"content":"    * 1a1. Sellah shows an error message.","lastModifiedDate":"2021-09-22"},{"lineNumber":387,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":388,"author":{"gitId":"HongshuW"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-22"},{"lineNumber":389,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":390,"author":{"gitId":"HongshuW"},"content":"* 1b. The command format is incorrect.","lastModifiedDate":"2021-09-22"},{"lineNumber":391,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":392,"author":{"gitId":"HongshuW"},"content":"    * 1b1. Sellah shows an error message.","lastModifiedDate":"2021-09-22"},{"lineNumber":393,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":394,"author":{"gitId":"HongshuW"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-22"},{"lineNumber":395,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":396,"author":{"gitId":"HongshuW"},"content":"  Use case ends.","lastModifiedDate":"2021-09-22"},{"lineNumber":397,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":398,"author":{"gitId":"SkyBlaise99"},"content":"**Use case: UC02 - Edit a client/product**","lastModifiedDate":"2021-09-23"},{"lineNumber":399,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":400,"author":{"gitId":"SkyBlaise99"},"content":"**MSS**","lastModifiedDate":"2021-09-23"},{"lineNumber":401,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":402,"author":{"gitId":"SkyBlaise99"},"content":"1. User \u003cins\u003erequests to list clients/products (UC04)\u003c/ins\u003e.","lastModifiedDate":"2021-09-23"},{"lineNumber":403,"author":{"gitId":"SkyBlaise99"},"content":"2. Sellah shows a list of clients/products.","lastModifiedDate":"2021-09-23"},{"lineNumber":404,"author":{"gitId":"SkyBlaise99"},"content":"3. User requests to edit a specific client/product in the list.","lastModifiedDate":"2021-09-23"},{"lineNumber":405,"author":{"gitId":"SkyBlaise99"},"content":"4. Sellah edits the client/product.","lastModifiedDate":"2021-09-23"},{"lineNumber":406,"author":{"gitId":"SkyBlaise99"},"content":"5. Sellah displays success message and shows the updated list of clients/products.","lastModifiedDate":"2021-09-23"},{"lineNumber":407,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":408,"author":{"gitId":"SkyBlaise99"},"content":"   Use case ends.","lastModifiedDate":"2021-09-23"},{"lineNumber":409,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":410,"author":{"gitId":"SkyBlaise99"},"content":"**Extensions**","lastModifiedDate":"2021-09-23"},{"lineNumber":411,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":412,"author":{"gitId":"SkyBlaise99"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-09-23"},{"lineNumber":413,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":414,"author":{"gitId":"SkyBlaise99"},"content":"    * 2a1. Sellah shows an error message.","lastModifiedDate":"2021-09-23"},{"lineNumber":415,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":416,"author":{"gitId":"SkyBlaise99"},"content":"      Use case ends.","lastModifiedDate":"2021-09-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":418,"author":{"gitId":"SkyBlaise99"},"content":"* 3a. The input parameter(s) is/are invalid.","lastModifiedDate":"2021-09-23"},{"lineNumber":419,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":420,"author":{"gitId":"SkyBlaise99"},"content":"    * 3a1. Sellah shows an error message.","lastModifiedDate":"2021-09-23"},{"lineNumber":421,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":422,"author":{"gitId":"SkyBlaise99"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2021-09-23"},{"lineNumber":423,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":424,"author":{"gitId":"SkyBlaise99"},"content":"* 3b. The command format is incorrect.","lastModifiedDate":"2021-09-23"},{"lineNumber":425,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":426,"author":{"gitId":"SkyBlaise99"},"content":"    * 3b1. Sellah shows an error message.","lastModifiedDate":"2021-09-23"},{"lineNumber":427,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":428,"author":{"gitId":"SkyBlaise99"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2021-09-23"},{"lineNumber":429,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":430,"author":{"gitId":"benluiwj"},"content":"**Use case: UC03 - View a client/product**","lastModifiedDate":"2021-09-25"},{"lineNumber":431,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":432,"author":{"gitId":"benluiwj"},"content":"**MSS**","lastModifiedDate":"2021-09-25"},{"lineNumber":433,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":434,"author":{"gitId":"benluiwj"},"content":"1. User \u003cins\u003e requests to list clients/products (UC04) \u003c/ins\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":435,"author":{"gitId":"benluiwj"},"content":"2. Sellah shows a list of clients/products.","lastModifiedDate":"2021-09-25"},{"lineNumber":436,"author":{"gitId":"benluiwj"},"content":"3. User request to see more information of a specific client/product in the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":437,"author":{"gitId":"benluiwj"},"content":"4. Sellah shows the details of the product/item.","lastModifiedDate":"2021-09-25"},{"lineNumber":438,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":439,"author":{"gitId":"benluiwj"},"content":"  User story ends.","lastModifiedDate":"2021-09-25"},{"lineNumber":440,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":441,"author":{"gitId":"benluiwj"},"content":"**Extensions**","lastModifiedDate":"2021-09-25"},{"lineNumber":442,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":443,"author":{"gitId":"benluiwj"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-09-25"},{"lineNumber":444,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":445,"author":{"gitId":"benluiwj"},"content":"    * 2a1. Sellah shows an error message.","lastModifiedDate":"2021-09-25"},{"lineNumber":446,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":447,"author":{"gitId":"benluiwj"},"content":"      Use case ends.","lastModifiedDate":"2021-09-25"},{"lineNumber":448,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":449,"author":{"gitId":"benluiwj"},"content":"* 3a. The input parameter(s) is/are invalid.","lastModifiedDate":"2021-09-25"},{"lineNumber":450,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":451,"author":{"gitId":"benluiwj"},"content":"    * 3a1. Sellah shows an error message.","lastModifiedDate":"2021-09-25"},{"lineNumber":452,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":453,"author":{"gitId":"benluiwj"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2021-09-25"},{"lineNumber":454,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":455,"author":{"gitId":"benluiwj"},"content":"* 3b. The command format is incorrect.","lastModifiedDate":"2021-09-25"},{"lineNumber":456,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":457,"author":{"gitId":"benluiwj"},"content":"    * 3b1. Sellah shows an error message.","lastModifiedDate":"2021-09-25"},{"lineNumber":458,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":459,"author":{"gitId":"benluiwj"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2021-09-25"},{"lineNumber":460,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":461,"author":{"gitId":"benluiwj"},"content":"* 4a. Some optional details are not present.","lastModifiedDate":"2021-09-25"},{"lineNumber":462,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":463,"author":{"gitId":"benluiwj"},"content":"    * 4a1. Sellah shows a placeholder value at the optional detail.","lastModifiedDate":"2021-09-25"},{"lineNumber":464,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":465,"author":{"gitId":"benluiwj"},"content":"      Use case ends. ","lastModifiedDate":"2021-09-25"},{"lineNumber":466,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":467,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":468,"author":{"gitId":"benluiwj"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":469,"author":{"gitId":"NaokiShum"},"content":"**Use case: UC04 - List all client/product**","lastModifiedDate":"2021-09-25"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":471,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-09-25"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":473,"author":{"gitId":"NaokiShum"},"content":"1. User requests to list clients/products.","lastModifiedDate":"2021-09-25"},{"lineNumber":474,"author":{"gitId":"NaokiShum"},"content":"2. Sellah shows a list of clients/products.","lastModifiedDate":"2021-09-25"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":476,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2021-09-25"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":478,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2021-09-25"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":480,"author":{"gitId":"NaokiShum"},"content":"* 2a. The list is empty. ","lastModifiedDate":"2021-09-25"},{"lineNumber":481,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":482,"author":{"gitId":"NaokiShum"},"content":"    * 2a1. Sellah shows an error message.","lastModifiedDate":"2021-09-25"},{"lineNumber":483,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":484,"author":{"gitId":"NaokiShum"},"content":"      Use case ends.","lastModifiedDate":"2021-09-25"},{"lineNumber":485,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":486,"author":{"gitId":"SkyBlaise99"},"content":"**Use case: UC05 - Delete a client/product**","lastModifiedDate":"2021-09-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"SkyBlaise99"},"content":"1. User \u003cins\u003erequests to list clients/products (UC04)\u003c/ins\u003e.","lastModifiedDate":"2021-09-23"},{"lineNumber":491,"author":{"gitId":"SkyBlaise99"},"content":"2. Sellah shows a list of clients/products.","lastModifiedDate":"2021-09-23"},{"lineNumber":492,"author":{"gitId":"SkyBlaise99"},"content":"3. User requests to delete a specific client/product in the list.","lastModifiedDate":"2021-09-23"},{"lineNumber":493,"author":{"gitId":"SkyBlaise99"},"content":"4. Sellah deletes the client/product.","lastModifiedDate":"2021-09-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"SkyBlaise99"},"content":"* 3a. The input ID is invalid.","lastModifiedDate":"2021-09-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"Linxcathyyy"},"content":"    * 3a1. Sellah shows an error message.","lastModifiedDate":"2021-09-22"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"SkyBlaise99"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2021-09-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"SkyBlaise99"},"content":"* 3b. The command format is incorrect.","lastModifiedDate":"2021-09-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":511,"author":{"gitId":"SkyBlaise99"},"content":"    * 3b1. Sellah shows an error message.","lastModifiedDate":"2021-09-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":513,"author":{"gitId":"SkyBlaise99"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2021-09-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"SkyBlaise99"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be","lastModifiedDate":"2021-09-23"},{"lineNumber":522,"author":{"gitId":"SkyBlaise99"},"content":"   able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-09-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"SkyBlaise99"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":536,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":537,"author":{"gitId":"SkyBlaise99"},"content":":information_source: **Note:** These instructions only provide a starting point for testers to work on; testers are","lastModifiedDate":"2021-09-23"},{"lineNumber":538,"author":{"gitId":"SkyBlaise99"},"content":"expected to do more *exploratory* testing.","lastModifiedDate":"2021-09-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"SkyBlaise99"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be","lastModifiedDate":"2021-09-23"},{"lineNumber":549,"author":{"gitId":"SkyBlaise99"},"content":"       optimum.","lastModifiedDate":"2021-09-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"SkyBlaise99"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message.","lastModifiedDate":"2021-09-23"},{"lineNumber":568,"author":{"gitId":"SkyBlaise99"},"content":"       Timestamp in the status bar is updated.","lastModifiedDate":"2021-09-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Linxcathyyy":15,"HongshuW":23,"NaokiShum":9,"SkyBlaise99":182,"-":316,"benluiwj":39}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"SkyBlaise99"},"content":"Sellah is a desktop application optimized for online sellers who prefer CLI over GUI. It is an address book that","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"SkyBlaise99"},"content":"contains the contact information and order details related to clients and partners.","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"SkyBlaise99"},"content":"    * [Quick Start](#quick-start)","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"SkyBlaise99"},"content":"    * [Features](#features)","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"SkyBlaise99"},"content":"        * [Add (Coming Soon)](#adding-add-coming-soon)","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"SkyBlaise99"},"content":"        * [Edit (Coming Soon)](#editing-edit-coming-soon)","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"SkyBlaise99"},"content":"        * [View (Coming Soon)](#viewing-view-coming-soon)","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"SkyBlaise99"},"content":"        * [Delete (Coming Soon)](#deleting-delete-coming-soon)","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"SkyBlaise99"},"content":"        * [List (Coming Soon)](#listing-list-coming-soon)","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"SkyBlaise99"},"content":"        * [Exit](#exiting-exit)","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"SkyBlaise99"},"content":"        * [Load \u0026 Save Data (Coming Soon)](#loading-and-saving-the-data-coming-soon)","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"SkyBlaise99"},"content":"    * [FAQ](#faq)","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"SkyBlaise99"},"content":"    * [Command Summary](#command-summary)","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"SkyBlaise99"},"content":"1. Download the latest `sellah.jar` from [here](https://github.com/AY2122S1-CS2103T-T12-1/tp/releases).","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"SkyBlaise99"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your Sellah.","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"SkyBlaise99"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"SkyBlaise99"},"content":"   contains some sample data.\u003cbr\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"SkyBlaise99"},"content":"  e.g. in `add NAME`, `NAME` is a parameter which can be used as `add Ben`.","lastModifiedDate":"2021-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"SkyBlaise99"},"content":"  e.g `NAME [-e EMAIL]` can be used as `Ben -e ben@gmail.com` or as `Ben`.","lastModifiedDate":"2021-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"SkyBlaise99"},"content":"  e.g. if the command specifies `-pn PHONE_NUMBER -e EMAIL`, `-e EMAIL -pn PHONE_NUMBER` is also acceptable.","lastModifiedDate":"2021-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"SkyBlaise99"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of","lastModifiedDate":"2021-09-21"},{"lineNumber":56,"author":{"gitId":"SkyBlaise99"},"content":"  the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":57,"author":{"gitId":"SkyBlaise99"},"content":"  e.g. if you specify `-pn 12341234 -pn 56785678`, only `-pn 56785678` will be taken.","lastModifiedDate":"2021-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":59,"author":{"gitId":"SkyBlaise99"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `exit`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":60,"author":{"gitId":"SkyBlaise99"},"content":"  e.g. if the command specifies `exit 123`, it will be interpreted as `exit`.","lastModifiedDate":"2021-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"HongshuW"},"content":"### Adding: `add` [coming soon]","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"HongshuW"},"content":"Adds a new client or product to the application with an automatically generated ID.","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"SkyBlaise99"},"content":"Format:","lastModifiedDate":"2021-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":70,"author":{"gitId":"HongshuW"},"content":"* Add a client: `add -c NAME -pn PHONE_NUMBER [-e EMAIL] [-a ADDRESS]`","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"HongshuW"},"content":"* Add a product: `add -p NAME -$ UNIT_PRICE [-q QUANTITY]`","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"SkyBlaise99"},"content":"Notes:","lastModifiedDate":"2021-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"HongshuW"},"content":"* Adds a client with name, phone number and optional email and address.","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"HongshuW"},"content":"* Adds a product with name, unit price and optional quantity.","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"HongshuW"},"content":"* The user will be informed if the format of a field is incorrect, e.g. input `ten dollars` for the field `price`.","lastModifiedDate":"2021-09-22"},{"lineNumber":78,"author":{"gitId":"HongshuW"},"content":"* The user will be informed if the client/product to be added already exits.","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"HongshuW"},"content":"* `add -c Ben -pn 98765432` adds a new `client` `Ben`, whose `phone number` is `98765432`.","lastModifiedDate":"2021-09-22"},{"lineNumber":83,"author":{"gitId":"HongshuW"},"content":"* `add -p pen -$ 10.0 -q 150` adds a new `product` `pen` with a `unit price` of `$10.0` and there are `150`","lastModifiedDate":"2021-09-22"},{"lineNumber":84,"author":{"gitId":"HongshuW"},"content":"  pens in stock.","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"SkyBlaise99"},"content":"### Editing: `edit` [coming soon]","lastModifiedDate":"2021-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"SkyBlaise99"},"content":"Edits an existing client or product in the application.","lastModifiedDate":"2021-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"SkyBlaise99"},"content":"Format:","lastModifiedDate":"2021-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"SkyBlaise99"},"content":"* Edit a client: `edit -c ID [-n NAME] [-pn PHONE_NUMBER] [-e EMAIL] [-a ADDRESS]`","lastModifiedDate":"2021-09-21"},{"lineNumber":93,"author":{"gitId":"SkyBlaise99"},"content":"* Edit a product: `edit -p ID [-n NAME] [-$ UNIT_PRICE] [-q QUANTITY]`","lastModifiedDate":"2021-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"SkyBlaise99"},"content":"Notes:","lastModifiedDate":"2021-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"SkyBlaise99"},"content":"* Edits the client/product with the specified `ID`. The `ID` can be found by [`list`](#listing-list)","lastModifiedDate":"2021-09-21"},{"lineNumber":98,"author":{"gitId":"SkyBlaise99"},"content":"  or [`view`](#viewing-view) commands.","lastModifiedDate":"2021-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"SkyBlaise99"},"content":"* User will be informed if the client/product of the give `ID` does not exist.","lastModifiedDate":"2021-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"SkyBlaise99"},"content":"* `edit -c 1 -n Ben` Edits the name of the client with `ID` of `1` to `Ben`.","lastModifiedDate":"2021-09-21"},{"lineNumber":106,"author":{"gitId":"SkyBlaise99"},"content":"* `edit -p 3 -n Ben10 -q 20` Edits the name of the product with `ID` of `3` to `Ben10` and the quantity to `20`.","lastModifiedDate":"2021-09-21"},{"lineNumber":107,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":108,"author":{"gitId":"SkyBlaise99"},"content":"### Viewing: `view` [coming soon]","lastModifiedDate":"2021-09-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"benluiwj"},"content":"Views a current client/product from the application.","lastModifiedDate":"2021-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"SkyBlaise99"},"content":"Format:","lastModifiedDate":"2021-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":114,"author":{"gitId":"benluiwj"},"content":"* View a client: `view -c ID`","lastModifiedDate":"2021-09-21"},{"lineNumber":115,"author":{"gitId":"benluiwj"},"content":"* View a product: `view -p ID`","lastModifiedDate":"2021-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"SkyBlaise99"},"content":"Notes:","lastModifiedDate":"2021-09-21"},{"lineNumber":118,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":119,"author":{"gitId":"SkyBlaise99"},"content":"* If the product/client doesn\u0027t exist, then we inform the user that such a product/client doesn\u0027t exist.","lastModifiedDate":"2021-09-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":123,"author":{"gitId":"benluiwj"},"content":"* `view -c 20` Views all the details of the client with `ID` of `20` including name, address, etc.","lastModifiedDate":"2021-09-21"},{"lineNumber":124,"author":{"gitId":"benluiwj"},"content":"* `view -p 5` Views all the details of the product with `ID` of `5` including name, price, etc.","lastModifiedDate":"2021-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"SkyBlaise99"},"content":"### Deleting: `delete` [coming soon]","lastModifiedDate":"2021-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"Linxcathyyy"},"content":"Deletes the specified client/product from the tracker.","lastModifiedDate":"2021-09-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"SkyBlaise99"},"content":"Format:","lastModifiedDate":"2021-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":132,"author":{"gitId":"Linxcathyyy"},"content":"* Delete a client: `delete -c ID`","lastModifiedDate":"2021-09-22"},{"lineNumber":133,"author":{"gitId":"Linxcathyyy"},"content":"* Delete a product: `delete -p ID`","lastModifiedDate":"2021-09-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"SkyBlaise99"},"content":"Notes:","lastModifiedDate":"2021-09-21"},{"lineNumber":136,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":137,"author":{"gitId":"Linxcathyyy"},"content":"* Deletes the client/product based on the client/product’s ID.","lastModifiedDate":"2021-09-22"},{"lineNumber":138,"author":{"gitId":"Linxcathyyy"},"content":"* The ID refers to the id shown in the displayed client/product list.","lastModifiedDate":"2021-09-22"},{"lineNumber":139,"author":{"gitId":"Linxcathyyy"},"content":"* If the product/client doesn\u0027t exist, then we inform the user that such a product/client doesn\u0027t exist.","lastModifiedDate":"2021-09-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":143,"author":{"gitId":"Linxcathyyy"},"content":"* `delete -c 135` deletes the client with id 135 in the tracker.","lastModifiedDate":"2021-09-22"},{"lineNumber":144,"author":{"gitId":"Linxcathyyy"},"content":"* `delete -p 197` deletes the product with id 197 in the tracker.","lastModifiedDate":"2021-09-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"SkyBlaise99"},"content":"### Listing: `list` [coming soon]","lastModifiedDate":"2021-09-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"NaokiShum"},"content":"Shows a list of all clients/products in the application","lastModifiedDate":"2021-09-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"SkyBlaise99"},"content":"Format:","lastModifiedDate":"2021-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"NaokiShum"},"content":"* List clients: `list -c`","lastModifiedDate":"2021-09-23"},{"lineNumber":153,"author":{"gitId":"NaokiShum"},"content":"* List products: `list -p`","lastModifiedDate":"2021-09-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":155,"author":{"gitId":"SkyBlaise99"},"content":"Notes:","lastModifiedDate":"2021-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"NaokiShum"},"content":"* Shows a list of clients and products if -c/-p is not specified.","lastModifiedDate":"2021-09-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":159,"author":{"gitId":"SkyBlaise99"},"content":"Examples:","lastModifiedDate":"2021-09-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"NaokiShum"},"content":"* `list -c` Shows a list of all clients in the application","lastModifiedDate":"2021-09-23"},{"lineNumber":162,"author":{"gitId":"NaokiShum"},"content":"* `list -p` Shows a list of all products in the application","lastModifiedDate":"2021-09-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":164,"author":{"gitId":"SkyBlaise99"},"content":"### Exiting: `exit`","lastModifiedDate":"2021-09-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":166,"author":{"gitId":"SkyBlaise99"},"content":"Exits the program.","lastModifiedDate":"2021-09-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":168,"author":{"gitId":"SkyBlaise99"},"content":"Format: `exit`","lastModifiedDate":"2021-09-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":170,"author":{"gitId":"SkyBlaise99"},"content":"### Loading and Saving the data [coming soon]","lastModifiedDate":"2021-09-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"SkyBlaise99"},"content":"**Q**: ...\u003cbr\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":179,"author":{"gitId":"SkyBlaise99"},"content":"**A**: ...\u003cbr\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"SkyBlaise99"},"content":"**Q**: ...\u003cbr\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":182,"author":{"gitId":"SkyBlaise99"},"content":"**A**: ...\u003cbr\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"SkyBlaise99"},"content":"## Command Summary","lastModifiedDate":"2021-09-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"SkyBlaise99"},"content":"\u003ctable\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":189,"author":{"gitId":"SkyBlaise99"},"content":"    \u003ctr\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":190,"author":{"gitId":"SkyBlaise99"},"content":"        \u003cth\u003eAction\u003c/th\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":191,"author":{"gitId":"SkyBlaise99"},"content":"        \u003cth\u003eFormat, Examples\u003c/th\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":192,"author":{"gitId":"SkyBlaise99"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":193,"author":{"gitId":"HongshuW"},"content":"    \u003ctr\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":194,"author":{"gitId":"HongshuW"},"content":"        \u003ctd\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":195,"author":{"gitId":"HongshuW"},"content":"            \u003ca href\u003d\"#adding-add-coming-soon\"\u003eAdd\u003c/a\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":196,"author":{"gitId":"HongshuW"},"content":"        \u003c/td\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":197,"author":{"gitId":"HongshuW"},"content":"        \u003ctd\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":198,"author":{"gitId":"HongshuW"},"content":"            Add a client: \u003ccode\u003eadd -c NAME -pn PHONE_NUMBER [-e EMAIL] [-a ADDRESS]\u003c/code\u003e\u003cbr\u003e ","lastModifiedDate":"2021-09-23"},{"lineNumber":199,"author":{"gitId":"HongshuW"},"content":"            e.g., \u003ccode\u003eadd -c James Tan -pn 98765432 -e james.email@example.com -a 123, Clementi Rd\u003c/code\u003e\u003cbr\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":200,"author":{"gitId":"HongshuW"},"content":"            \u003cbr\u003e ","lastModifiedDate":"2021-09-23"},{"lineNumber":201,"author":{"gitId":"HongshuW"},"content":"            Add a product: \u003ccode\u003eadd -p NAME -$ UNIT_PRICE [-q QUANTITY]\u003c/code\u003e\u003cbr\u003e ","lastModifiedDate":"2021-09-23"},{"lineNumber":202,"author":{"gitId":"HongshuW"},"content":"            e.g., \u003ccode\u003eadd -p pen -$ 10.0 -q 120\u003c/code\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":203,"author":{"gitId":"HongshuW"},"content":"        \u003c/td\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":204,"author":{"gitId":"HongshuW"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":205,"author":{"gitId":"SkyBlaise99"},"content":"    \u003ctr\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":206,"author":{"gitId":"SkyBlaise99"},"content":"        \u003ctd\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":207,"author":{"gitId":"SkyBlaise99"},"content":"            \u003ca href\u003d\"#editing-edit-coming-soon\"\u003eEdit\u003c/a\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":208,"author":{"gitId":"SkyBlaise99"},"content":"        \u003c/td\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":209,"author":{"gitId":"SkyBlaise99"},"content":"        \u003ctd\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":210,"author":{"gitId":"SkyBlaise99"},"content":"            Edit a client: \u003ccode\u003eedit -c ID [-n NAME] [-pn PHONE_NUMBER] [-e EMAIL] [-a ADDRESS]\u003c/code\u003e\u003cbr\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":211,"author":{"gitId":"SkyBlaise99"},"content":"            e.g., \u003ccode\u003eedit -c 1 -n Ben\u003c/code\u003e Edits the name of the client with \u003ccode\u003eID\u003c/code\u003e of \u003ccode\u003e1\u003c/code\u003e to","lastModifiedDate":"2021-09-23"},{"lineNumber":212,"author":{"gitId":"SkyBlaise99"},"content":"            \u003ccode\u003eBen\u003c/code\u003e.\u003cbr\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":213,"author":{"gitId":"SkyBlaise99"},"content":"            \u003cbr\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":214,"author":{"gitId":"SkyBlaise99"},"content":"            Edit a product: \u003ccode\u003eedit -p ID [-n NAME] [-$ UNIT_PRICE] [-q QUANTITY]\u003c/code\u003e\u003cbr\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":215,"author":{"gitId":"SkyBlaise99"},"content":"            e.g., \u003ccode\u003eedit -p 3 -n Ben10 -q 20\u003c/code\u003e Edits the name of the product with \u003ccode\u003eID\u003c/code\u003e of","lastModifiedDate":"2021-09-23"},{"lineNumber":216,"author":{"gitId":"SkyBlaise99"},"content":"            \u003ccode\u003e3\u003c/code\u003e to \u003ccode\u003eBen10\u003c/code\u003e and the quantity to \u003ccode\u003e20\u003c/code\u003e.","lastModifiedDate":"2021-09-23"},{"lineNumber":217,"author":{"gitId":"SkyBlaise99"},"content":"        \u003c/td\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":218,"author":{"gitId":"SkyBlaise99"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":219,"author":{"gitId":"benluiwj"},"content":"    \u003ctr\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":220,"author":{"gitId":"benluiwj"},"content":"        \u003ctd\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":221,"author":{"gitId":"benluiwj"},"content":"            \u003ca href\u003d\"#viewing-view-coming-soon\"\u003eView\u003c/a\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":222,"author":{"gitId":"benluiwj"},"content":"        \u003c/td\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":223,"author":{"gitId":"benluiwj"},"content":"        \u003ctd\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":224,"author":{"gitId":"benluiwj"},"content":"            View a client: \u003ccode\u003eview -c ID\u003c/code\u003e\u003cbr\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":225,"author":{"gitId":"benluiwj"},"content":"            e.g., \u003ccode\u003eview -c 20\u003c/code\u003e Views all the details of the client with \u003ccode\u003eID\u003c/code\u003e of \u003ccode\u003e20\u003c/code\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":226,"author":{"gitId":"benluiwj"},"content":"            including name, address, etc.\u003cbr\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":227,"author":{"gitId":"benluiwj"},"content":"            \u003cbr\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":228,"author":{"gitId":"benluiwj"},"content":"            View a product: \u003ccode\u003eview -p ID\u003c/code\u003e\u003cbr\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":229,"author":{"gitId":"benluiwj"},"content":"            e.g., \u003ccode\u003eview -p 5\u003c/code\u003e Views all the details of the product with \u003ccode\u003eID\u003c/code\u003e of","lastModifiedDate":"2021-09-25"},{"lineNumber":230,"author":{"gitId":"benluiwj"},"content":"            \u003ccode\u003e5\u003c/code\u003e including name, price, etc.","lastModifiedDate":"2021-09-25"},{"lineNumber":231,"author":{"gitId":"benluiwj"},"content":"        \u003c/td\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":232,"author":{"gitId":"benluiwj"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":233,"author":{"gitId":"NaokiShum"},"content":"    \u003ctr\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":234,"author":{"gitId":"NaokiShum"},"content":"        \u003ctd\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":235,"author":{"gitId":"NaokiShum"},"content":"            \u003ca href\u003d\"#listing-list-coming-soon\"\u003eList\u003c/a\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":236,"author":{"gitId":"NaokiShum"},"content":"        \u003c/td\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":237,"author":{"gitId":"NaokiShum"},"content":"        \u003ctd\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":238,"author":{"gitId":"NaokiShum"},"content":"            List all client: \u003ccode\u003elist -c\u003c/code\u003e\u003cbr\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":239,"author":{"gitId":"NaokiShum"},"content":"            e.g., \u003ccode\u003elist -c\u003c/code\u003e Lists all the clients in the application.\u003cbr\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":240,"author":{"gitId":"NaokiShum"},"content":"            \u003cbr\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":241,"author":{"gitId":"NaokiShum"},"content":"            List all product: \u003ccode\u003elist -p\u003c/code\u003e\u003cbr\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":242,"author":{"gitId":"NaokiShum"},"content":"            e.g., \u003ccode\u003elist -p\u003c/code\u003e Lists all the products in the application.","lastModifiedDate":"2021-09-25"},{"lineNumber":243,"author":{"gitId":"NaokiShum"},"content":"        \u003c/td\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":244,"author":{"gitId":"NaokiShum"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":245,"author":{"gitId":"Linxcathyyy"},"content":"    \u003ctr\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":246,"author":{"gitId":"Linxcathyyy"},"content":"        \u003ctd\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":247,"author":{"gitId":"benluiwj"},"content":"            \u003ca href\u003d\"#deleting-delete-coming-soon\"\u003eDelete\u003c/a\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":248,"author":{"gitId":"Linxcathyyy"},"content":"        \u003c/td\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":249,"author":{"gitId":"Linxcathyyy"},"content":"        \u003ctd\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":250,"author":{"gitId":"Linxcathyyy"},"content":"            Delete a client: \u003ccode\u003edelete -c ID \u003c/code\u003e\u003cbr\u003e ","lastModifiedDate":"2021-09-24"},{"lineNumber":251,"author":{"gitId":"Linxcathyyy"},"content":"            e.g., \u003ccode\u003edelete -c 20\u003c/code\u003e Deletes all the details of the client with \u003ccode\u003eID\u003c/code\u003e of ","lastModifiedDate":"2021-09-24"},{"lineNumber":252,"author":{"gitId":"Linxcathyyy"},"content":"            \u003ccode\u003e20\u003c/code\u003e including name, address, etc.\u003cbr\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":253,"author":{"gitId":"Linxcathyyy"},"content":"            \u003cbr\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":254,"author":{"gitId":"Linxcathyyy"},"content":"            Delete a product: \u003ccode\u003edelete -p ID \u003c/code\u003e\u003cbr\u003e ","lastModifiedDate":"2021-09-24"},{"lineNumber":255,"author":{"gitId":"Linxcathyyy"},"content":"            e.g., \u003ccode\u003edelete -p 5\u003c/code\u003e Deletes all the details of the product with \u003ccode\u003eID\u003c/code\u003e of ","lastModifiedDate":"2021-09-24"},{"lineNumber":256,"author":{"gitId":"Linxcathyyy"},"content":"            \u003ccode\u003e5\u003c/code\u003e including name, price, etc.","lastModifiedDate":"2021-09-24"},{"lineNumber":257,"author":{"gitId":"Linxcathyyy"},"content":"            \u003cbr\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":258,"author":{"gitId":"Linxcathyyy"},"content":"        \u003c/td\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":259,"author":{"gitId":"Linxcathyyy"},"content":"    \u003c/tr\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":260,"author":{"gitId":"SkyBlaise99"},"content":"\u003c/table\u003e","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"Linxcathyyy":22,"HongshuW":23,"NaokiShum":19,"SkyBlaise99":80,"-":96,"benluiwj":20}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"SkyBlaise99"},"content":"    content: \"Sellah\";","lastModifiedDate":"2021-09-21"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"SkyBlaise99":1,"-":293}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"SkyBlaise99"},"content":"title: Sellah","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"SkyBlaise99"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-T12-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-T12-1/tp/actions)","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-T12-1/tp/branch/master/graph/badge.svg?token\u003dPHRUR4ICCB)](https://codecov.io/gh/AY2122S1-CS2103T-T12-1/tp)","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"SkyBlaise99"},"content":"**Sellah** is an address book containing the contact information and orders related to the clients and partners. The","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"SkyBlaise99"},"content":"information and status of each order can also be easily monitored by the user. This product makes it easy and convenient","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"SkyBlaise99"},"content":"to track orders and look for future cooperation.","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"SkyBlaise99"},"content":"* If you are interested in using Sellah, head over to the [_Quick Start_ section of the **User","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"SkyBlaise99"},"content":"  Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"SkyBlaise99"},"content":"* If you are interested about developing Sellah, the [**Developer Guide**](DeveloperGuide.html) is a good place to","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"SkyBlaise99"},"content":"  start.","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"SkyBlaise99"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"SkyBlaise99"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson)","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"SkyBlaise99"},"content":"  , [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"SkyBlaise99":12,"-":12}},{"path":"docs/team/benluiwj.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SkyBlaise99"},"content":"---","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"SkyBlaise99"},"content":"layout: page","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"SkyBlaise99"},"content":"title: Benjamin Lui\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"SkyBlaise99"},"content":"---","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"SkyBlaise99"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"SkyBlaise99"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"SkyBlaise99"},"content":"interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"SkyBlaise99"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"SkyBlaise99"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"SkyBlaise99"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"SkyBlaise99"},"content":"      by using the redo command.","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"SkyBlaise99"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"SkyBlaise99"},"content":"      the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"SkyBlaise99"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"SkyBlaise99"},"content":"      analysis of design alternatives. The implementation too was challenging as it required changes to existing","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"SkyBlaise99"},"content":"      commands.","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"SkyBlaise99"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"SkyBlaise99"},"content":"      the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"SkyBlaise99"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"SkyBlaise99"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"SkyBlaise99"},"content":"* **Project management**:","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"SkyBlaise99"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"SkyBlaise99"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"SkyBlaise99"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"SkyBlaise99"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36]()","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"SkyBlaise99"},"content":"      , [\\#38]())","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"SkyBlaise99"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"SkyBlaise99"},"content":"    * User Guide:","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"SkyBlaise99"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"SkyBlaise99"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"SkyBlaise99"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"SkyBlaise99"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"SkyBlaise99"},"content":"* **Community**:","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"SkyBlaise99"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"SkyBlaise99"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-21"},{"lineNumber":46,"author":{"gitId":"SkyBlaise99"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-21"},{"lineNumber":47,"author":{"gitId":"SkyBlaise99"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-21"},{"lineNumber":48,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":49,"author":{"gitId":"SkyBlaise99"},"content":"* **Tools**:","lastModifiedDate":"2021-09-21"},{"lineNumber":50,"author":{"gitId":"SkyBlaise99"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-21"},{"lineNumber":51,"author":{"gitId":"SkyBlaise99"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-21"},{"lineNumber":52,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":53,"author":{"gitId":"SkyBlaise99"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"SkyBlaise99":53}},{"path":"docs/team/hongshuw.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"SkyBlaise99"},"content":"layout: page","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"title: Hongshu Wang\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-07-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"SkyBlaise99"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"SkyBlaise99"},"content":"interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"SkyBlaise99"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"SkyBlaise99"},"content":"      by using the redo command.","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"SkyBlaise99"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"SkyBlaise99"},"content":"      the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"SkyBlaise99"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"SkyBlaise99"},"content":"      analysis of design alternatives. The implementation too was challenging as it required changes to existing","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"SkyBlaise99"},"content":"      commands.","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"SkyBlaise99"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"SkyBlaise99"},"content":"      the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"SkyBlaise99"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36]()","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"SkyBlaise99"},"content":"      , [\\#38]())","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"HongshuW":1,"SkyBlaise99":14,"-":38}},{"path":"docs/team/linxcathyyy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Linxcathyyy"},"content":"---","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"SkyBlaise99"},"content":"layout: page","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"SkyBlaise99"},"content":"title: Xingchen\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"Linxcathyyy"},"content":"---","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"Linxcathyyy"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"SkyBlaise99"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"SkyBlaise99"},"content":"interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"Linxcathyyy"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"Linxcathyyy"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"SkyBlaise99"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"SkyBlaise99"},"content":"      by using the redo command.","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"SkyBlaise99"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"SkyBlaise99"},"content":"      the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"SkyBlaise99"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"SkyBlaise99"},"content":"      analysis of design alternatives. The implementation too was challenging as it required changes to existing","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"SkyBlaise99"},"content":"      commands.","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"SkyBlaise99"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"SkyBlaise99"},"content":"      the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"Linxcathyyy"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"Linxcathyyy"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"Linxcathyyy"},"content":"* **Project management**:","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"Linxcathyyy"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"Linxcathyyy"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"Linxcathyyy"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"SkyBlaise99"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36]()","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"SkyBlaise99"},"content":"      , [\\#38]())","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"Linxcathyyy"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"Linxcathyyy"},"content":"    * User Guide:","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"Linxcathyyy"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"Linxcathyyy"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"Linxcathyyy"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"Linxcathyyy"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"Linxcathyyy"},"content":"* **Community**:","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"Linxcathyyy"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"Linxcathyyy"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"Linxcathyyy"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"Linxcathyyy"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"Linxcathyyy"},"content":"* **Tools**:","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"Linxcathyyy"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"Linxcathyyy"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"Linxcathyyy"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"Linxcathyyy":38,"SkyBlaise99":15}},{"path":"docs/team/naokishum.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"NaokiShum"},"content":"---","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"NaokiShum"},"content":"layout: page","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"NaokiShum"},"content":"title: Naoki Shum\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"NaokiShum"},"content":"---","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"NaokiShum"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"NaokiShum"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"NaokiShum"},"content":"interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"NaokiShum"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"NaokiShum"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"NaokiShum"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"NaokiShum"},"content":"      by using the redo command.","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"NaokiShum"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"NaokiShum"},"content":"      the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"NaokiShum"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"NaokiShum"},"content":"      analysis of design alternatives. The implementation too was challenging as it required changes to existing","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"NaokiShum"},"content":"      commands.","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"NaokiShum"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"NaokiShum"},"content":"      the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"NaokiShum"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"NaokiShum"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"NaokiShum"},"content":"* **Project management**:","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"NaokiShum"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"NaokiShum"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"NaokiShum"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"NaokiShum"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36]()","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"NaokiShum"},"content":"      , [\\#38]())","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"NaokiShum"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"NaokiShum"},"content":"    * User Guide:","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"NaokiShum"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"NaokiShum"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"NaokiShum"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"NaokiShum"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"NaokiShum"},"content":"* **Community**:","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"NaokiShum"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"NaokiShum"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"NaokiShum"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"NaokiShum"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"NaokiShum"},"content":"* **Tools**:","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"NaokiShum"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"NaokiShum"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"NaokiShum"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"NaokiShum"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"NaokiShum":53}},{"path":"docs/team/skyblaise99.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SkyBlaise99"},"content":"---","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"SkyBlaise99"},"content":"layout: page","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"SkyBlaise99"},"content":"title: Shi Chen\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"SkyBlaise99"},"content":"---","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"SkyBlaise99"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"SkyBlaise99"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"SkyBlaise99"},"content":"interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"SkyBlaise99"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"SkyBlaise99"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"SkyBlaise99"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"SkyBlaise99"},"content":"      by using the redo command.","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"SkyBlaise99"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"SkyBlaise99"},"content":"      the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"SkyBlaise99"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"SkyBlaise99"},"content":"      analysis of design alternatives. The implementation too was challenging as it required changes to existing","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"SkyBlaise99"},"content":"      commands.","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"SkyBlaise99"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"SkyBlaise99"},"content":"      the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"SkyBlaise99"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"SkyBlaise99"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"SkyBlaise99"},"content":"* **Project management**:","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"SkyBlaise99"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"SkyBlaise99"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"SkyBlaise99"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"SkyBlaise99"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36]()","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"SkyBlaise99"},"content":"      , [\\#38]())","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"SkyBlaise99"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"SkyBlaise99"},"content":"    * User Guide:","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"SkyBlaise99"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"SkyBlaise99"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"SkyBlaise99"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"SkyBlaise99"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"SkyBlaise99"},"content":"* **Community**:","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"SkyBlaise99"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"SkyBlaise99"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-21"},{"lineNumber":46,"author":{"gitId":"SkyBlaise99"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-21"},{"lineNumber":47,"author":{"gitId":"SkyBlaise99"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-21"},{"lineNumber":48,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":49,"author":{"gitId":"SkyBlaise99"},"content":"* **Tools**:","lastModifiedDate":"2021-09-21"},{"lineNumber":50,"author":{"gitId":"SkyBlaise99"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-21"},{"lineNumber":51,"author":{"gitId":"SkyBlaise99"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-21"},{"lineNumber":52,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":53,"author":{"gitId":"SkyBlaise99"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"SkyBlaise99":53}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"SkyBlaise99"},"content":"    public static final String MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX \u003d \"The client index provided is invalid\";","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"SkyBlaise99"},"content":"    public static final String MESSAGE_CLIENTS_LISTED_OVERVIEW \u003d \"%1$d clients listed!\";","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"SkyBlaise99"},"content":"    public static final String MESSAGE_INVALID_PRODUCT_DISPLAYED_INDEX \u003d \"The product index provided is invalid\";","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"SkyBlaise99"},"content":"    public static final String MESSAGE_PRODUCTS_LISTED_OVERVIEW \u003d \"%1$d products listed!\";","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"SkyBlaise99"},"content":"    // todo remove later","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"SkyBlaise99":8,"-":11}},{"path":"src/main/java/seedu/address/logic/commands/EditClientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SkyBlaise99"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"SkyBlaise99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"SkyBlaise99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"SkyBlaise99"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CLIENTS;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"SkyBlaise99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"SkyBlaise99"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"SkyBlaise99"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"SkyBlaise99"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"SkyBlaise99"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"SkyBlaise99"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"SkyBlaise99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"SkyBlaise99"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"SkyBlaise99"},"content":"import seedu.address.model.commons.Name;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"SkyBlaise99"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"SkyBlaise99"},"content":" * Edits the details of an existing client in the address book.","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"SkyBlaise99"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"SkyBlaise99"},"content":"public class EditClientCommand extends Command {","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"SkyBlaise99"},"content":"    public static final String COMMAND_WORD \u003d \"edit -c\";","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"SkyBlaise99"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"SkyBlaise99"},"content":"            COMMAND_WORD + \": Edits the details of the client identified by the index number used in the displayed \"","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"SkyBlaise99"},"content":"                    + \"client list.\\n\"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"SkyBlaise99"},"content":"                    + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"SkyBlaise99"},"content":"                    + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"SkyBlaise99"},"content":"                    + \"[\" + PREFIX_NAME + \"NAME]\\n\"","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"SkyBlaise99"},"content":"                    + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"SkyBlaise99"},"content":"                    + PREFIX_NAME + \" Ben\";","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"SkyBlaise99"},"content":"    public static final String MESSAGE_EDIT_CLIENT_SUCCESS \u003d \"Edited Client: %1$s\";","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"SkyBlaise99"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"SkyBlaise99"},"content":"    public static final String MESSAGE_DUPLICATE_CLIENT \u003d \"This client already exists in the address book.\";","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"SkyBlaise99"},"content":"    private final Index index;","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"SkyBlaise99"},"content":"    private final EditClientDescriptor editClientDescriptor;","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"SkyBlaise99"},"content":"     * @param index of the client in the filtered client list to edit","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"SkyBlaise99"},"content":"     * @param editClientDescriptor details to edit the client with","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"SkyBlaise99"},"content":"    public EditClientCommand(Index index, EditClientDescriptor editClientDescriptor) {","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"SkyBlaise99"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"SkyBlaise99"},"content":"        requireNonNull(editClientDescriptor);","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"SkyBlaise99"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"SkyBlaise99"},"content":"        this.editClientDescriptor \u003d new EditClientDescriptor(editClientDescriptor);","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"SkyBlaise99"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"SkyBlaise99"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"SkyBlaise99"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"SkyBlaise99"},"content":"        List\u003cClient\u003e lastShownList \u003d model.getFilteredClientList();","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"SkyBlaise99"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"SkyBlaise99"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"SkyBlaise99"},"content":"        Client clientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"SkyBlaise99"},"content":"        Client editedClient \u003d createEditedClient(clientToEdit, editClientDescriptor);","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"SkyBlaise99"},"content":"        if (!clientToEdit.isSameClient(editedClient) \u0026\u0026 model.hasClient(editedClient)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"SkyBlaise99"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"SkyBlaise99"},"content":"        model.setClient(clientToEdit, editedClient);","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"SkyBlaise99"},"content":"        model.updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"SkyBlaise99"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_CLIENT_SUCCESS, editedClient));","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"SkyBlaise99"},"content":"     * Creates and returns a {@code Client} with the details of {@code clientToEdit}","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"SkyBlaise99"},"content":"     * edited with {@code editClientDescriptor}.","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"SkyBlaise99"},"content":"    private static Client createEditedClient(Client clientToEdit, EditClientDescriptor editClientDescriptor) {","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"SkyBlaise99"},"content":"        assert clientToEdit !\u003d null;","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"SkyBlaise99"},"content":"        Name updatedName \u003d editClientDescriptor.getName().orElse(clientToEdit.getName());","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"SkyBlaise99"},"content":"        return Client.updateClient(clientToEdit, updatedName);","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"SkyBlaise99"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"SkyBlaise99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"SkyBlaise99"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"SkyBlaise99"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"SkyBlaise99"},"content":"            return true;","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"SkyBlaise99"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"SkyBlaise99"},"content":"        if (!(other instanceof EditClientCommand)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"SkyBlaise99"},"content":"            return false;","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":97,"author":{"gitId":"SkyBlaise99"},"content":"        // state check","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"SkyBlaise99"},"content":"        EditClientCommand e \u003d (EditClientCommand) other;","lastModifiedDate":"2021-10-05"},{"lineNumber":99,"author":{"gitId":"SkyBlaise99"},"content":"        return index.equals(e.index)","lastModifiedDate":"2021-10-05"},{"lineNumber":100,"author":{"gitId":"SkyBlaise99"},"content":"                       \u0026\u0026 editClientDescriptor.equals(e.editClientDescriptor);","lastModifiedDate":"2021-10-05"},{"lineNumber":101,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":102,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":103,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":104,"author":{"gitId":"SkyBlaise99"},"content":"     * Stores the details to edit the client with. Each non-empty field value will replace the","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"SkyBlaise99"},"content":"     * corresponding field value of the client.","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"SkyBlaise99"},"content":"    public static class EditClientDescriptor {","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"SkyBlaise99"},"content":"        private Name name;","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":110,"author":{"gitId":"SkyBlaise99"},"content":"        public EditClientDescriptor() {}","lastModifiedDate":"2021-10-05"},{"lineNumber":111,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":112,"author":{"gitId":"SkyBlaise99"},"content":"        /**","lastModifiedDate":"2021-10-05"},{"lineNumber":113,"author":{"gitId":"SkyBlaise99"},"content":"         * Copy constructor.","lastModifiedDate":"2021-10-05"},{"lineNumber":114,"author":{"gitId":"SkyBlaise99"},"content":"         */","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"SkyBlaise99"},"content":"        public EditClientDescriptor(EditClientDescriptor toCopy) {","lastModifiedDate":"2021-10-05"},{"lineNumber":116,"author":{"gitId":"SkyBlaise99"},"content":"            setName(toCopy.name);","lastModifiedDate":"2021-10-05"},{"lineNumber":117,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":119,"author":{"gitId":"SkyBlaise99"},"content":"        /**","lastModifiedDate":"2021-10-05"},{"lineNumber":120,"author":{"gitId":"SkyBlaise99"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2021-10-05"},{"lineNumber":121,"author":{"gitId":"SkyBlaise99"},"content":"         */","lastModifiedDate":"2021-10-05"},{"lineNumber":122,"author":{"gitId":"SkyBlaise99"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-10-05"},{"lineNumber":123,"author":{"gitId":"SkyBlaise99"},"content":"            return CollectionUtil.isAnyNonNull(name);","lastModifiedDate":"2021-10-05"},{"lineNumber":124,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":125,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":126,"author":{"gitId":"SkyBlaise99"},"content":"        public void setName(Name name) {","lastModifiedDate":"2021-10-05"},{"lineNumber":127,"author":{"gitId":"SkyBlaise99"},"content":"            this.name \u003d name;","lastModifiedDate":"2021-10-05"},{"lineNumber":128,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":129,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":130,"author":{"gitId":"SkyBlaise99"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2021-10-05"},{"lineNumber":131,"author":{"gitId":"SkyBlaise99"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2021-10-05"},{"lineNumber":132,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":133,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":134,"author":{"gitId":"SkyBlaise99"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":135,"author":{"gitId":"SkyBlaise99"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":136,"author":{"gitId":"SkyBlaise99"},"content":"            // short circuit if same object","lastModifiedDate":"2021-10-05"},{"lineNumber":137,"author":{"gitId":"SkyBlaise99"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-05"},{"lineNumber":138,"author":{"gitId":"SkyBlaise99"},"content":"                return true;","lastModifiedDate":"2021-10-05"},{"lineNumber":139,"author":{"gitId":"SkyBlaise99"},"content":"            }","lastModifiedDate":"2021-10-05"},{"lineNumber":140,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":141,"author":{"gitId":"SkyBlaise99"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":142,"author":{"gitId":"SkyBlaise99"},"content":"            if (!(other instanceof EditClientDescriptor)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":143,"author":{"gitId":"SkyBlaise99"},"content":"                return false;","lastModifiedDate":"2021-10-05"},{"lineNumber":144,"author":{"gitId":"SkyBlaise99"},"content":"            }","lastModifiedDate":"2021-10-05"},{"lineNumber":145,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":146,"author":{"gitId":"SkyBlaise99"},"content":"            // state check","lastModifiedDate":"2021-10-05"},{"lineNumber":147,"author":{"gitId":"SkyBlaise99"},"content":"            EditClientDescriptor e \u003d (EditClientDescriptor) other;","lastModifiedDate":"2021-10-05"},{"lineNumber":148,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":149,"author":{"gitId":"SkyBlaise99"},"content":"            return getName().equals(e.getName());","lastModifiedDate":"2021-10-05"},{"lineNumber":150,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":151,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":152,"author":{"gitId":"SkyBlaise99"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"SkyBlaise99":152}},{"path":"src/main/java/seedu/address/logic/commands/EditProductCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SkyBlaise99"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"SkyBlaise99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"SkyBlaise99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"SkyBlaise99"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PRODUCTS;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"SkyBlaise99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"SkyBlaise99"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"SkyBlaise99"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"SkyBlaise99"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"SkyBlaise99"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"SkyBlaise99"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"SkyBlaise99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"SkyBlaise99"},"content":"import seedu.address.model.commons.Name;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"SkyBlaise99"},"content":"import seedu.address.model.product.Product;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"SkyBlaise99"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"SkyBlaise99"},"content":" * Edits the details of an existing product in the address book.","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"SkyBlaise99"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"SkyBlaise99"},"content":"public class EditProductCommand extends Command {","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"SkyBlaise99"},"content":"    public static final String COMMAND_WORD \u003d \"edit -p\";","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"SkyBlaise99"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"SkyBlaise99"},"content":"            COMMAND_WORD + \": Edits the details of the product identified by the index number used in the displayed \"","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"SkyBlaise99"},"content":"                    + \"product list.\\n\"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"SkyBlaise99"},"content":"                    + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"SkyBlaise99"},"content":"                    + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"SkyBlaise99"},"content":"                    + \"[\" + PREFIX_NAME + \"NAME]\\n\"","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"SkyBlaise99"},"content":"                    + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"SkyBlaise99"},"content":"                    + PREFIX_NAME + \" Ben\";","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"SkyBlaise99"},"content":"    public static final String MESSAGE_EDIT_PRODUCT_SUCCESS \u003d \"Edited Product: %1$s\";","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"SkyBlaise99"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"SkyBlaise99"},"content":"    public static final String MESSAGE_DUPLICATE_PRODUCT \u003d \"This product already exists in the address book.\";","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"SkyBlaise99"},"content":"    private final Index index;","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"SkyBlaise99"},"content":"    private final EditProductDescriptor editProductDescriptor;","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"SkyBlaise99"},"content":"     * @param index of the product in the filtered product list to edit","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"SkyBlaise99"},"content":"     * @param editProductDescriptor details to edit the product with","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"SkyBlaise99"},"content":"    public EditProductCommand(Index index, EditProductDescriptor editProductDescriptor) {","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"SkyBlaise99"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"SkyBlaise99"},"content":"        requireNonNull(editProductDescriptor);","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"SkyBlaise99"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"SkyBlaise99"},"content":"        this.editProductDescriptor \u003d new EditProductDescriptor(editProductDescriptor);","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"SkyBlaise99"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"SkyBlaise99"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"SkyBlaise99"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"SkyBlaise99"},"content":"        List\u003cProduct\u003e lastShownList \u003d model.getFilteredProductList();","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"SkyBlaise99"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"SkyBlaise99"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PRODUCT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"SkyBlaise99"},"content":"        Product productToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"SkyBlaise99"},"content":"        Product editedProduct \u003d createEditedProduct(productToEdit, editProductDescriptor);","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"SkyBlaise99"},"content":"        if (!productToEdit.isSameProduct(editedProduct) \u0026\u0026 model.hasProduct(editedProduct)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"SkyBlaise99"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PRODUCT);","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"SkyBlaise99"},"content":"        model.setProduct(productToEdit, editedProduct);","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"SkyBlaise99"},"content":"        model.updateFilteredProductList(PREDICATE_SHOW_ALL_PRODUCTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"SkyBlaise99"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PRODUCT_SUCCESS, editedProduct));","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"SkyBlaise99"},"content":"     * Creates and returns a {@code Product} with the details of {@code productToEdit}","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"SkyBlaise99"},"content":"     * edited with {@code editProductDescriptor}.","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"SkyBlaise99"},"content":"    private static Product createEditedProduct(Product productToEdit, EditProductDescriptor editProductDescriptor) {","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"SkyBlaise99"},"content":"        assert productToEdit !\u003d null;","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"SkyBlaise99"},"content":"        Name updatedName \u003d editProductDescriptor.getName().orElse(productToEdit.getName());","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"SkyBlaise99"},"content":"        return Product.updateProduct(productToEdit, updatedName);","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"SkyBlaise99"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"SkyBlaise99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"SkyBlaise99"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"SkyBlaise99"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"SkyBlaise99"},"content":"            return true;","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"SkyBlaise99"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"SkyBlaise99"},"content":"        if (!(other instanceof EditProductCommand)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"SkyBlaise99"},"content":"            return false;","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":97,"author":{"gitId":"SkyBlaise99"},"content":"        // state check","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"SkyBlaise99"},"content":"        EditProductCommand e \u003d (EditProductCommand) other;","lastModifiedDate":"2021-10-05"},{"lineNumber":99,"author":{"gitId":"SkyBlaise99"},"content":"        return index.equals(e.index)","lastModifiedDate":"2021-10-05"},{"lineNumber":100,"author":{"gitId":"SkyBlaise99"},"content":"                       \u0026\u0026 editProductDescriptor.equals(e.editProductDescriptor);","lastModifiedDate":"2021-10-05"},{"lineNumber":101,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":102,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":103,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":104,"author":{"gitId":"SkyBlaise99"},"content":"     * Stores the details to edit the product with. Each non-empty field value will replace the","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"SkyBlaise99"},"content":"     * corresponding field value of the product.","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"SkyBlaise99"},"content":"    public static class EditProductDescriptor {","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"SkyBlaise99"},"content":"        private Name name;","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":110,"author":{"gitId":"SkyBlaise99"},"content":"        public EditProductDescriptor() {}","lastModifiedDate":"2021-10-05"},{"lineNumber":111,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":112,"author":{"gitId":"SkyBlaise99"},"content":"        /**","lastModifiedDate":"2021-10-05"},{"lineNumber":113,"author":{"gitId":"SkyBlaise99"},"content":"         * Copy constructor.","lastModifiedDate":"2021-10-05"},{"lineNumber":114,"author":{"gitId":"SkyBlaise99"},"content":"         */","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"SkyBlaise99"},"content":"        public EditProductDescriptor(EditProductDescriptor toCopy) {","lastModifiedDate":"2021-10-05"},{"lineNumber":116,"author":{"gitId":"SkyBlaise99"},"content":"            setName(toCopy.name);","lastModifiedDate":"2021-10-05"},{"lineNumber":117,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":119,"author":{"gitId":"SkyBlaise99"},"content":"        /**","lastModifiedDate":"2021-10-05"},{"lineNumber":120,"author":{"gitId":"SkyBlaise99"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2021-10-05"},{"lineNumber":121,"author":{"gitId":"SkyBlaise99"},"content":"         */","lastModifiedDate":"2021-10-05"},{"lineNumber":122,"author":{"gitId":"SkyBlaise99"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-10-05"},{"lineNumber":123,"author":{"gitId":"SkyBlaise99"},"content":"            return CollectionUtil.isAnyNonNull(name);","lastModifiedDate":"2021-10-05"},{"lineNumber":124,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":125,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":126,"author":{"gitId":"SkyBlaise99"},"content":"        public void setName(Name name) {","lastModifiedDate":"2021-10-05"},{"lineNumber":127,"author":{"gitId":"SkyBlaise99"},"content":"            this.name \u003d name;","lastModifiedDate":"2021-10-05"},{"lineNumber":128,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":129,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":130,"author":{"gitId":"SkyBlaise99"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2021-10-05"},{"lineNumber":131,"author":{"gitId":"SkyBlaise99"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2021-10-05"},{"lineNumber":132,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":133,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":134,"author":{"gitId":"SkyBlaise99"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":135,"author":{"gitId":"SkyBlaise99"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":136,"author":{"gitId":"SkyBlaise99"},"content":"            // short circuit if same object","lastModifiedDate":"2021-10-05"},{"lineNumber":137,"author":{"gitId":"SkyBlaise99"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-05"},{"lineNumber":138,"author":{"gitId":"SkyBlaise99"},"content":"                return true;","lastModifiedDate":"2021-10-05"},{"lineNumber":139,"author":{"gitId":"SkyBlaise99"},"content":"            }","lastModifiedDate":"2021-10-05"},{"lineNumber":140,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":141,"author":{"gitId":"SkyBlaise99"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":142,"author":{"gitId":"SkyBlaise99"},"content":"            if (!(other instanceof EditProductDescriptor)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":143,"author":{"gitId":"SkyBlaise99"},"content":"                return false;","lastModifiedDate":"2021-10-05"},{"lineNumber":144,"author":{"gitId":"SkyBlaise99"},"content":"            }","lastModifiedDate":"2021-10-05"},{"lineNumber":145,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":146,"author":{"gitId":"SkyBlaise99"},"content":"            // state check","lastModifiedDate":"2021-10-05"},{"lineNumber":147,"author":{"gitId":"SkyBlaise99"},"content":"            EditProductDescriptor e \u003d (EditProductDescriptor) other;","lastModifiedDate":"2021-10-05"},{"lineNumber":148,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":149,"author":{"gitId":"SkyBlaise99"},"content":"            return getName().equals(e.getName());","lastModifiedDate":"2021-10-05"},{"lineNumber":150,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":151,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":152,"author":{"gitId":"SkyBlaise99"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"SkyBlaise99":152}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"SkyBlaise99"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                    || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"SkyBlaise99"},"content":"        // todo remove later","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"SkyBlaise99"},"content":"        Name name \u003d new Name(\"If you see this, you forgot to remove smt...\");","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"SkyBlaise99"},"content":"        //ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList);","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"SkyBlaise99":4,"-":59}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"SkyBlaise99"},"content":"import seedu.address.logic.commands.EditClientCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"SkyBlaise99"},"content":"import seedu.address.logic.commands.EditProductCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"SkyBlaise99"},"content":"    private static final Pattern ADVANCED_COMMAND_FORMAT \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"SkyBlaise99"},"content":"            Pattern.compile(\"(?\u003ccommandWord\u003e.*)(?\u003cflag\u003e(-c|-p))(?\u003carguments\u003e.*)\");","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"SkyBlaise99"},"content":"        final String trimmedUserInput \u003d userInput.trim();","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"SkyBlaise99"},"content":"        Matcher matcher \u003d ADVANCED_COMMAND_FORMAT.matcher(trimmedUserInput);","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"SkyBlaise99"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"SkyBlaise99"},"content":"            matcher \u003d BASIC_COMMAND_FORMAT.matcher(trimmedUserInput);","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"SkyBlaise99"},"content":"        final String commandWord \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"SkyBlaise99"},"content":"                matcher.group(\"commandWord\").trim()","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"SkyBlaise99"},"content":"                        + (matcher.pattern() \u003d\u003d ADVANCED_COMMAND_FORMAT","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"SkyBlaise99"},"content":"                           ? \" \" + matcher.group(\"flag\").trim()","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"SkyBlaise99"},"content":"                           : \"\");","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"SkyBlaise99"},"content":"        ","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"SkyBlaise99"},"content":"        final String arguments \u003d matcher.group(\"arguments\").trim();","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"SkyBlaise99"},"content":"        case EditClientCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"SkyBlaise99"},"content":"            return new EditClientCommandParser().parse(arguments);","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"SkyBlaise99"},"content":"        case EditProductCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"SkyBlaise99"},"content":"            return new EditProductCommandParser().parse(arguments);","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"SkyBlaise99"},"content":"        // todo remove later","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"SkyBlaise99":25,"-":73}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"SkyBlaise99"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"-n \");","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"SkyBlaise99"},"content":"    // todo remove later","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"SkyBlaise99":3,"-":12}},{"path":"src/main/java/seedu/address/logic/parser/EditClientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SkyBlaise99"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"SkyBlaise99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"SkyBlaise99"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"SkyBlaise99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"SkyBlaise99"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"SkyBlaise99"},"content":"import seedu.address.logic.commands.EditClientCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"SkyBlaise99"},"content":"import seedu.address.logic.commands.EditClientCommand.EditClientDescriptor;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"SkyBlaise99"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"SkyBlaise99"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"SkyBlaise99"},"content":" * Parses input arguments and creates a new EditClientCommand object","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"SkyBlaise99"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"SkyBlaise99"},"content":"public class EditClientCommandParser implements Parser\u003cEditClientCommand\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"SkyBlaise99"},"content":"     * Parses the given {@code String} of arguments in the context of the EditClientCommand","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"SkyBlaise99"},"content":"     * and returns an EditClientCommand object for execution.","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"SkyBlaise99"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"SkyBlaise99"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"SkyBlaise99"},"content":"    public EditClientCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"SkyBlaise99"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"SkyBlaise99"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME);","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"SkyBlaise99"},"content":"        Index index;","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"SkyBlaise99"},"content":"        try {","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"SkyBlaise99"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"SkyBlaise99"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"SkyBlaise99"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"SkyBlaise99"},"content":"                    EditClientCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"SkyBlaise99"},"content":"        EditClientDescriptor editClientDescriptor \u003d new EditClientDescriptor();","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"SkyBlaise99"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"SkyBlaise99"},"content":"            editClientDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"SkyBlaise99"},"content":"        if (!editClientDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"SkyBlaise99"},"content":"            throw new ParseException(EditClientCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"SkyBlaise99"},"content":"        return new EditClientCommand(index, editClientDescriptor);","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"SkyBlaise99"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"SkyBlaise99":45}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"SkyBlaise99"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"SkyBlaise99"},"content":"            // editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"SkyBlaise99":2,"-":81}},{"path":"src/main/java/seedu/address/logic/parser/EditProductCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SkyBlaise99"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"SkyBlaise99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"SkyBlaise99"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"SkyBlaise99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"SkyBlaise99"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"SkyBlaise99"},"content":"import seedu.address.logic.commands.EditProductCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"SkyBlaise99"},"content":"import seedu.address.logic.commands.EditProductCommand.EditProductDescriptor;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"SkyBlaise99"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"SkyBlaise99"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"SkyBlaise99"},"content":" * Parses input arguments and creates a new EditProductCommand object","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"SkyBlaise99"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"SkyBlaise99"},"content":"public class EditProductCommandParser implements Parser\u003cEditProductCommand\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"SkyBlaise99"},"content":"     * Parses the given {@code String} of arguments in the context of the EditProductCommand","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"SkyBlaise99"},"content":"     * and returns an EditProductCommand object for execution.","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"SkyBlaise99"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"SkyBlaise99"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"SkyBlaise99"},"content":"    public EditProductCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"SkyBlaise99"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"SkyBlaise99"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME);","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"SkyBlaise99"},"content":"        Index index;","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"SkyBlaise99"},"content":"        try {","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"SkyBlaise99"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"SkyBlaise99"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"SkyBlaise99"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"SkyBlaise99"},"content":"                    EditProductCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"SkyBlaise99"},"content":"        EditProductDescriptor editProductDescriptor \u003d new EditProductDescriptor();","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"SkyBlaise99"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"SkyBlaise99"},"content":"            editProductDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"SkyBlaise99"},"content":"        if (!editProductDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"SkyBlaise99"},"content":"            throw new ParseException(EditProductCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"SkyBlaise99"},"content":"        return new EditProductCommand(index, editProductDescriptor);","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"SkyBlaise99"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"SkyBlaise99":45}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"SkyBlaise99"},"content":"import seedu.address.model.commons.Name;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":27,"author":{"gitId":"SkyBlaise99"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"SkyBlaise99":2,"-":122}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"SkyBlaise99"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"SkyBlaise99"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"SkyBlaise99"},"content":"import seedu.address.model.client.UniqueClientList;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"SkyBlaise99"},"content":"import seedu.address.model.product.Product;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"SkyBlaise99"},"content":"import seedu.address.model.product.UniqueProductList;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"SkyBlaise99"},"content":"    private final UniqueClientList clients;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"SkyBlaise99"},"content":"    private final UniqueProductList products;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"SkyBlaise99"},"content":"    // todo remove later","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"SkyBlaise99"},"content":"        clients \u003d new UniqueClientList();","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"SkyBlaise99"},"content":"        products \u003d new UniqueProductList();","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"SkyBlaise99"},"content":"        // todo remove later","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"SkyBlaise99"},"content":"     * Replaces the contents of the client list with {@code clients}.","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"SkyBlaise99"},"content":"     * {@code clients} must not contain duplicate clients.","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"SkyBlaise99"},"content":"    public void setClients(List\u003cClient\u003e clients) {","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"SkyBlaise99"},"content":"        this.clients.setClients(clients);","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"SkyBlaise99"},"content":"     * Replaces the contents of the product list with {@code products}.","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"SkyBlaise99"},"content":"     * {@code products} must not contain duplicate products.","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"SkyBlaise99"},"content":"    public void setProducts(List\u003cProduct\u003e products) {","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"SkyBlaise99"},"content":"        this.products.setProducts(products);","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"SkyBlaise99"},"content":"    // todo remove later","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":87,"author":{"gitId":"SkyBlaise99"},"content":"        setClients(newData.getClientList());","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"SkyBlaise99"},"content":"        setProducts(newData.getProductList());","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"SkyBlaise99"},"content":"        // todo remove later","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"SkyBlaise99"},"content":"    //// client-level operations","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":97,"author":{"gitId":"SkyBlaise99"},"content":"     * Returns true if a client with the same identity as {@code client} exists in the address book.","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":99,"author":{"gitId":"SkyBlaise99"},"content":"    public boolean hasClient(Client client) {","lastModifiedDate":"2021-10-05"},{"lineNumber":100,"author":{"gitId":"SkyBlaise99"},"content":"        requireNonNull(client);","lastModifiedDate":"2021-10-05"},{"lineNumber":101,"author":{"gitId":"SkyBlaise99"},"content":"        return clients.contains(client);","lastModifiedDate":"2021-10-05"},{"lineNumber":102,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":103,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":104,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"SkyBlaise99"},"content":"     * Adds a client to the address book.","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"SkyBlaise99"},"content":"     * The client must not already exist in the address book.","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"SkyBlaise99"},"content":"    public void addClient(Client p) {","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"SkyBlaise99"},"content":"        clients.add(p);","lastModifiedDate":"2021-10-05"},{"lineNumber":110,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":111,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":112,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":113,"author":{"gitId":"SkyBlaise99"},"content":"     * Replaces the given client {@code target} in the list with {@code editedClient}.","lastModifiedDate":"2021-10-05"},{"lineNumber":114,"author":{"gitId":"SkyBlaise99"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"SkyBlaise99"},"content":"     * The client identity of {@code editedClient} must not be the same as another existing client in the address book.","lastModifiedDate":"2021-10-05"},{"lineNumber":116,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":117,"author":{"gitId":"SkyBlaise99"},"content":"    public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"SkyBlaise99"},"content":"        requireNonNull(editedClient);","lastModifiedDate":"2021-10-05"},{"lineNumber":119,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":120,"author":{"gitId":"SkyBlaise99"},"content":"        clients.setClient(target, editedClient);","lastModifiedDate":"2021-10-05"},{"lineNumber":121,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":122,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":123,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":124,"author":{"gitId":"SkyBlaise99"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2021-10-05"},{"lineNumber":125,"author":{"gitId":"SkyBlaise99"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2021-10-05"},{"lineNumber":126,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":127,"author":{"gitId":"SkyBlaise99"},"content":"    public void removeClient(Client key) {","lastModifiedDate":"2021-10-05"},{"lineNumber":128,"author":{"gitId":"SkyBlaise99"},"content":"        clients.remove(key);","lastModifiedDate":"2021-10-05"},{"lineNumber":129,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":130,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":131,"author":{"gitId":"SkyBlaise99"},"content":"    //// product-level operations","lastModifiedDate":"2021-10-05"},{"lineNumber":132,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":133,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":134,"author":{"gitId":"SkyBlaise99"},"content":"     * Returns true if a product with the same identity as {@code product} exists in the address book.","lastModifiedDate":"2021-10-05"},{"lineNumber":135,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":136,"author":{"gitId":"SkyBlaise99"},"content":"    public boolean hasProduct(Product product) {","lastModifiedDate":"2021-10-05"},{"lineNumber":137,"author":{"gitId":"SkyBlaise99"},"content":"        requireNonNull(product);","lastModifiedDate":"2021-10-05"},{"lineNumber":138,"author":{"gitId":"SkyBlaise99"},"content":"        return products.contains(product);","lastModifiedDate":"2021-10-05"},{"lineNumber":139,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":140,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":141,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":142,"author":{"gitId":"SkyBlaise99"},"content":"     * Adds a product to the address book.","lastModifiedDate":"2021-10-05"},{"lineNumber":143,"author":{"gitId":"SkyBlaise99"},"content":"     * The product must not already exist in the address book.","lastModifiedDate":"2021-10-05"},{"lineNumber":144,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":145,"author":{"gitId":"SkyBlaise99"},"content":"    public void addProduct(Product p) {","lastModifiedDate":"2021-10-05"},{"lineNumber":146,"author":{"gitId":"SkyBlaise99"},"content":"        products.add(p);","lastModifiedDate":"2021-10-05"},{"lineNumber":147,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":148,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":149,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":150,"author":{"gitId":"SkyBlaise99"},"content":"     * Replaces the given product {@code target} in the list with {@code editedProduct}.","lastModifiedDate":"2021-10-05"},{"lineNumber":151,"author":{"gitId":"SkyBlaise99"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-10-05"},{"lineNumber":152,"author":{"gitId":"SkyBlaise99"},"content":"     * The product identity of {@code editedProduct} must not be the same as another existing product in the address","lastModifiedDate":"2021-10-05"},{"lineNumber":153,"author":{"gitId":"SkyBlaise99"},"content":"     * book.","lastModifiedDate":"2021-10-05"},{"lineNumber":154,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":155,"author":{"gitId":"SkyBlaise99"},"content":"    public void setProduct(Product target, Product editedProduct) {","lastModifiedDate":"2021-10-05"},{"lineNumber":156,"author":{"gitId":"SkyBlaise99"},"content":"        requireNonNull(editedProduct);","lastModifiedDate":"2021-10-05"},{"lineNumber":157,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":158,"author":{"gitId":"SkyBlaise99"},"content":"        products.setProduct(target, editedProduct);","lastModifiedDate":"2021-10-05"},{"lineNumber":159,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":160,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":161,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":162,"author":{"gitId":"SkyBlaise99"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2021-10-05"},{"lineNumber":163,"author":{"gitId":"SkyBlaise99"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2021-10-05"},{"lineNumber":164,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":165,"author":{"gitId":"SkyBlaise99"},"content":"    public void removeProduct(Product key) {","lastModifiedDate":"2021-10-05"},{"lineNumber":166,"author":{"gitId":"SkyBlaise99"},"content":"        products.remove(key);","lastModifiedDate":"2021-10-05"},{"lineNumber":167,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":168,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":169,"author":{"gitId":"SkyBlaise99"},"content":"    // todo remove later","lastModifiedDate":"2021-10-05"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"SkyBlaise99"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\"","lastModifiedDate":"2021-10-05"},{"lineNumber":213,"author":{"gitId":"SkyBlaise99"},"content":"                       + clients.asUnmodifiableObservableList().size() + \" clients\"","lastModifiedDate":"2021-10-05"},{"lineNumber":214,"author":{"gitId":"SkyBlaise99"},"content":"                       + products.asUnmodifiableObservableList().size() + \" products\";","lastModifiedDate":"2021-10-05"},{"lineNumber":215,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":216,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":217,"author":{"gitId":"SkyBlaise99"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":218,"author":{"gitId":"SkyBlaise99"},"content":"    public ObservableList\u003cClient\u003e getClientList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":219,"author":{"gitId":"SkyBlaise99"},"content":"        return clients.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-05"},{"lineNumber":220,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":221,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":222,"author":{"gitId":"SkyBlaise99"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":223,"author":{"gitId":"SkyBlaise99"},"content":"    public ObservableList\u003cProduct\u003e getProductList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":224,"author":{"gitId":"SkyBlaise99"},"content":"        return products.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"SkyBlaise99"},"content":"    // todo remove later","lastModifiedDate":"2021-10-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                       || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":237,"author":{"gitId":"SkyBlaise99"},"content":"                                   \u0026\u0026 persons.equals(((AddressBook) other).persons)","lastModifiedDate":"2021-10-05"},{"lineNumber":238,"author":{"gitId":"SkyBlaise99"},"content":"                                   \u0026\u0026 clients.equals(((AddressBook) other).clients)","lastModifiedDate":"2021-10-05"},{"lineNumber":239,"author":{"gitId":"SkyBlaise99"},"content":"                                   \u0026\u0026 products.equals(((AddressBook) other).products));","lastModifiedDate":"2021-10-05"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":244,"author":{"gitId":"SkyBlaise99"},"content":"        return Arrays.hashCode(new Object[]{persons, clients, products});","lastModifiedDate":"2021-10-05"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":246,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"SkyBlaise99":129,"-":117}},{"path":"src/main/java/seedu/address/model/Category.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SkyBlaise99"},"content":"package seedu.address.model;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"SkyBlaise99"},"content":"/** Represents a Category in the address book. */","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"SkyBlaise99"},"content":"public interface Category {}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"SkyBlaise99":4}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"SkyBlaise99"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"SkyBlaise99"},"content":"import seedu.address.model.product.Product;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"SkyBlaise99"},"content":"    Predicate\u003cClient\u003e PREDICATE_SHOW_ALL_CLIENTS \u003d unused -\u003e true;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"SkyBlaise99"},"content":"    Predicate\u003cProduct\u003e PREDICATE_SHOW_ALL_PRODUCTS \u003d unused -\u003e true;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"SkyBlaise99"},"content":"    // todo remove later","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"SkyBlaise99"},"content":"     * Returns true if a client with the same identity as {@code client} exists in the address book.","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"SkyBlaise99"},"content":"    boolean hasClient(Client client);","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"SkyBlaise99"},"content":"     * Deletes the given client.","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"SkyBlaise99"},"content":"     * The client must exist in the address book.","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"SkyBlaise99"},"content":"    void deleteClient(Client target);","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"SkyBlaise99"},"content":"     * Adds the given client.","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"SkyBlaise99"},"content":"     * {@code client} must not already exist in the address book.","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"SkyBlaise99"},"content":"    void addClient(Client client);","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"SkyBlaise99"},"content":"     * Replaces the given client {@code target} with {@code editedClient}.","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"SkyBlaise99"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"SkyBlaise99"},"content":"     * The client identity of {@code editedClient} must not be the same as another existing client in the address book.","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"SkyBlaise99"},"content":"    void setClient(Client target, Client editedClient);","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"SkyBlaise99"},"content":"    /** Returns an unmodifiable view of the filtered client list */","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"SkyBlaise99"},"content":"    ObservableList\u003cClient\u003e getFilteredClientList();","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"SkyBlaise99"},"content":"     * Updates the filter of the filtered client list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"SkyBlaise99"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"SkyBlaise99"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"SkyBlaise99"},"content":"    void updateFilteredClientList(Predicate\u003cClient\u003e predicate);","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"SkyBlaise99"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":97,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"SkyBlaise99"},"content":"     * Returns true if a product with the same identity as {@code product} exists in the address book.","lastModifiedDate":"2021-10-05"},{"lineNumber":99,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":100,"author":{"gitId":"SkyBlaise99"},"content":"    boolean hasProduct(Product product);","lastModifiedDate":"2021-10-05"},{"lineNumber":101,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":102,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":103,"author":{"gitId":"SkyBlaise99"},"content":"     * Deletes the given product.","lastModifiedDate":"2021-10-05"},{"lineNumber":104,"author":{"gitId":"SkyBlaise99"},"content":"     * The product must exist in the address book.","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"SkyBlaise99"},"content":"    void deleteProduct(Product target);","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"SkyBlaise99"},"content":"     * Adds the given product.","lastModifiedDate":"2021-10-05"},{"lineNumber":110,"author":{"gitId":"SkyBlaise99"},"content":"     * {@code product} must not already exist in the address book.","lastModifiedDate":"2021-10-05"},{"lineNumber":111,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":112,"author":{"gitId":"SkyBlaise99"},"content":"    void addProduct(Product product);","lastModifiedDate":"2021-10-05"},{"lineNumber":113,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":114,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"SkyBlaise99"},"content":"     * Replaces the given product {@code target} with {@code editedProduct}.","lastModifiedDate":"2021-10-05"},{"lineNumber":116,"author":{"gitId":"SkyBlaise99"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-10-05"},{"lineNumber":117,"author":{"gitId":"SkyBlaise99"},"content":"     * The product identity of {@code editedProduct} must not be the same as another existing product in the address","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"SkyBlaise99"},"content":"     * book.","lastModifiedDate":"2021-10-05"},{"lineNumber":119,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":120,"author":{"gitId":"SkyBlaise99"},"content":"    void setProduct(Product target, Product editedProduct);","lastModifiedDate":"2021-10-05"},{"lineNumber":121,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":122,"author":{"gitId":"SkyBlaise99"},"content":"    /** Returns an unmodifiable view of the filtered product list */","lastModifiedDate":"2021-10-05"},{"lineNumber":123,"author":{"gitId":"SkyBlaise99"},"content":"    ObservableList\u003cProduct\u003e getFilteredProductList();","lastModifiedDate":"2021-10-05"},{"lineNumber":124,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":125,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":126,"author":{"gitId":"SkyBlaise99"},"content":"     * Updates the filter of the filtered product list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-05"},{"lineNumber":127,"author":{"gitId":"SkyBlaise99"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":128,"author":{"gitId":"SkyBlaise99"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-10-05"},{"lineNumber":129,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":130,"author":{"gitId":"SkyBlaise99"},"content":"    void updateFilteredProductList(Predicate\u003cProduct\u003e predicate);","lastModifiedDate":"2021-10-05"},{"lineNumber":131,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":132,"author":{"gitId":"SkyBlaise99"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":133,"author":{"gitId":"SkyBlaise99"},"content":"    // todo remove later","lastModifiedDate":"2021-10-05"},{"lineNumber":134,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":164,"author":{"gitId":"SkyBlaise99"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":168,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":169,"author":{"gitId":"SkyBlaise99"},"content":"    // todo till here","lastModifiedDate":"2021-10-05"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"SkyBlaise99":83,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"SkyBlaise99"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"SkyBlaise99"},"content":"import seedu.address.model.product.Product;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"SkyBlaise99"},"content":"    private final FilteredList\u003cClient\u003e filteredClients;","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"SkyBlaise99"},"content":"    private final FilteredList\u003cProduct\u003e filteredProducts;","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"SkyBlaise99"},"content":"    // todo remove later","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"SkyBlaise99"},"content":"        filteredClients \u003d new FilteredList\u003c\u003e(this.addressBook.getClientList());","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"SkyBlaise99"},"content":"        filteredProducts \u003d new FilteredList\u003c\u003e(this.addressBook.getProductList());","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"SkyBlaise99"},"content":"        // todo remove later","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"SkyBlaise99"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":104,"author":{"gitId":"SkyBlaise99"},"content":"    public boolean hasClient(Client client) {","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"SkyBlaise99"},"content":"        requireNonNull(client);","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"SkyBlaise99"},"content":"        return addressBook.hasClient(client);","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"SkyBlaise99"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":110,"author":{"gitId":"SkyBlaise99"},"content":"    public void deleteClient(Client target) {","lastModifiedDate":"2021-10-05"},{"lineNumber":111,"author":{"gitId":"SkyBlaise99"},"content":"        addressBook.removeClient(target);","lastModifiedDate":"2021-10-05"},{"lineNumber":112,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":113,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":114,"author":{"gitId":"SkyBlaise99"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"SkyBlaise99"},"content":"    public void addClient(Client client) {","lastModifiedDate":"2021-10-05"},{"lineNumber":116,"author":{"gitId":"SkyBlaise99"},"content":"        addressBook.addClient(client);","lastModifiedDate":"2021-10-05"},{"lineNumber":117,"author":{"gitId":"SkyBlaise99"},"content":"        updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":119,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":120,"author":{"gitId":"SkyBlaise99"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":121,"author":{"gitId":"SkyBlaise99"},"content":"    public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2021-10-05"},{"lineNumber":122,"author":{"gitId":"SkyBlaise99"},"content":"        requireAllNonNull(target, editedClient);","lastModifiedDate":"2021-10-05"},{"lineNumber":123,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":124,"author":{"gitId":"SkyBlaise99"},"content":"        addressBook.setClient(target, editedClient);","lastModifiedDate":"2021-10-05"},{"lineNumber":125,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":126,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":127,"author":{"gitId":"SkyBlaise99"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":128,"author":{"gitId":"SkyBlaise99"},"content":"    public boolean hasProduct(Product product) {","lastModifiedDate":"2021-10-05"},{"lineNumber":129,"author":{"gitId":"SkyBlaise99"},"content":"        requireNonNull(product);","lastModifiedDate":"2021-10-05"},{"lineNumber":130,"author":{"gitId":"SkyBlaise99"},"content":"        return addressBook.hasProduct(product);","lastModifiedDate":"2021-10-05"},{"lineNumber":131,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":132,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":133,"author":{"gitId":"SkyBlaise99"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":134,"author":{"gitId":"SkyBlaise99"},"content":"    public void deleteProduct(Product target) {","lastModifiedDate":"2021-10-05"},{"lineNumber":135,"author":{"gitId":"SkyBlaise99"},"content":"        addressBook.removeProduct(target);","lastModifiedDate":"2021-10-05"},{"lineNumber":136,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":137,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":138,"author":{"gitId":"SkyBlaise99"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":139,"author":{"gitId":"SkyBlaise99"},"content":"    public void addProduct(Product product) {","lastModifiedDate":"2021-10-05"},{"lineNumber":140,"author":{"gitId":"SkyBlaise99"},"content":"        addressBook.addProduct(product);","lastModifiedDate":"2021-10-05"},{"lineNumber":141,"author":{"gitId":"SkyBlaise99"},"content":"        updateFilteredProductList(PREDICATE_SHOW_ALL_PRODUCTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":142,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":143,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":144,"author":{"gitId":"SkyBlaise99"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":145,"author":{"gitId":"SkyBlaise99"},"content":"    public void setProduct(Product target, Product editedProduct) {","lastModifiedDate":"2021-10-05"},{"lineNumber":146,"author":{"gitId":"SkyBlaise99"},"content":"        requireAllNonNull(target, editedProduct);","lastModifiedDate":"2021-10-05"},{"lineNumber":147,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":148,"author":{"gitId":"SkyBlaise99"},"content":"        addressBook.setProduct(target, editedProduct);","lastModifiedDate":"2021-10-05"},{"lineNumber":149,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":150,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":151,"author":{"gitId":"SkyBlaise99"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":152,"author":{"gitId":"SkyBlaise99"},"content":"    // todo remove later","lastModifiedDate":"2021-10-05"},{"lineNumber":153,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":178,"author":{"gitId":"SkyBlaise99"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Client List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":179,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":180,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":181,"author":{"gitId":"SkyBlaise99"},"content":"     * Returns an unmodifiable view of the list of {@code Client} backed by the internal list of","lastModifiedDate":"2021-10-05"},{"lineNumber":182,"author":{"gitId":"SkyBlaise99"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2021-10-05"},{"lineNumber":183,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":184,"author":{"gitId":"SkyBlaise99"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":185,"author":{"gitId":"SkyBlaise99"},"content":"    public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":186,"author":{"gitId":"SkyBlaise99"},"content":"        return filteredClients;","lastModifiedDate":"2021-10-05"},{"lineNumber":187,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":188,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":189,"author":{"gitId":"SkyBlaise99"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":190,"author":{"gitId":"SkyBlaise99"},"content":"    public void updateFilteredClientList(Predicate\u003cClient\u003e predicate) {","lastModifiedDate":"2021-10-05"},{"lineNumber":191,"author":{"gitId":"SkyBlaise99"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-05"},{"lineNumber":192,"author":{"gitId":"SkyBlaise99"},"content":"        filteredClients.setPredicate(predicate);","lastModifiedDate":"2021-10-05"},{"lineNumber":193,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":194,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":195,"author":{"gitId":"SkyBlaise99"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Product List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":196,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":197,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":198,"author":{"gitId":"SkyBlaise99"},"content":"     * Returns an unmodifiable view of the list of {@code Product} backed by the internal list of","lastModifiedDate":"2021-10-05"},{"lineNumber":199,"author":{"gitId":"SkyBlaise99"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2021-10-05"},{"lineNumber":200,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":201,"author":{"gitId":"SkyBlaise99"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":202,"author":{"gitId":"SkyBlaise99"},"content":"    public ObservableList\u003cProduct\u003e getFilteredProductList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":203,"author":{"gitId":"SkyBlaise99"},"content":"        return filteredProducts;","lastModifiedDate":"2021-10-05"},{"lineNumber":204,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":205,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":206,"author":{"gitId":"SkyBlaise99"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":207,"author":{"gitId":"SkyBlaise99"},"content":"    public void updateFilteredProductList(Predicate\u003cProduct\u003e predicate) {","lastModifiedDate":"2021-10-05"},{"lineNumber":208,"author":{"gitId":"SkyBlaise99"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-05"},{"lineNumber":209,"author":{"gitId":"SkyBlaise99"},"content":"        filteredProducts.setPredicate(predicate);","lastModifiedDate":"2021-10-05"},{"lineNumber":210,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":211,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":213,"author":{"gitId":"SkyBlaise99"},"content":"    // todo remove later","lastModifiedDate":"2021-10-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":216,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":217,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":218,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                       \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                       \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"SkyBlaise99":98,"-":151}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"SkyBlaise99"},"content":"import seedu.address.model.client.Client;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"SkyBlaise99"},"content":"import seedu.address.model.product.Product;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":12,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"SkyBlaise99"},"content":"     * Returns an unmodifiable view of the clients list.","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"SkyBlaise99"},"content":"     * This list will not contain any duplicate clients.","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"SkyBlaise99"},"content":"    ObservableList\u003cClient\u003e getClientList();","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"SkyBlaise99"},"content":"     * Returns an unmodifiable view of the products list.","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"SkyBlaise99"},"content":"     * This list will not contain any duplicate products.","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"SkyBlaise99"},"content":"    ObservableList\u003cProduct\u003e getProductList();","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"SkyBlaise99"},"content":"    // todo remove later","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"SkyBlaise99":15,"-":16}},{"path":"src/main/java/seedu/address/model/client/Client.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SkyBlaise99"},"content":"package seedu.address.model.client;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"SkyBlaise99"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"SkyBlaise99"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"SkyBlaise99"},"content":"import seedu.address.model.Category;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"SkyBlaise99"},"content":"import seedu.address.model.commons.ID;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"SkyBlaise99"},"content":"import seedu.address.model.commons.Name;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"SkyBlaise99"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"SkyBlaise99"},"content":" * Represents a Client in the app.","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"SkyBlaise99"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"SkyBlaise99"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"SkyBlaise99"},"content":"public class Client implements Category {","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"SkyBlaise99"},"content":"    // Identity fields","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"SkyBlaise99"},"content":"    private final ID id;","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"SkyBlaise99"},"content":"    // Data fields","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"SkyBlaise99"},"content":"    private final Name name;","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"SkyBlaise99"},"content":"    public Client(Name name) {","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"SkyBlaise99"},"content":"        this(new ID(), name);","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"SkyBlaise99"},"content":"    private Client(ID id, Name name) {","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"SkyBlaise99"},"content":"        requireAllNonNull(id, name);","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"SkyBlaise99"},"content":"        this.id \u003d id;","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"SkyBlaise99"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"SkyBlaise99"},"content":"    public ID getId() {","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"SkyBlaise99"},"content":"        return id;","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"SkyBlaise99"},"content":"    public Name getName() {","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"SkyBlaise99"},"content":"        return name;","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"SkyBlaise99"},"content":"    public static Client updateClient(Client client, Name name) {","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"SkyBlaise99"},"content":"        return new Client(client.getId(), name);","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"SkyBlaise99"},"content":"     * Returns true if both clients have the same id.","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"SkyBlaise99"},"content":"     * This defines a weaker notion of equality between two clients.","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"SkyBlaise99"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"SkyBlaise99"},"content":"     * @param otherClient Another Client being compared to.","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"SkyBlaise99"},"content":"    public boolean isSameClient(Client otherClient) {","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"SkyBlaise99"},"content":"        if (otherClient \u003d\u003d this) {","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"SkyBlaise99"},"content":"            return true;","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"SkyBlaise99"},"content":"        return otherClient !\u003d null \u0026\u0026 otherClient.getId().equals(this.getId());","lastModifiedDate":"2021-10-04"},{"lineNumber":57,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":58,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"SkyBlaise99"},"content":"     * Returns true if both clients have the same identity and data fields.","lastModifiedDate":"2021-10-04"},{"lineNumber":61,"author":{"gitId":"SkyBlaise99"},"content":"     * This defines a stronger notion of equality between two clients.","lastModifiedDate":"2021-10-04"},{"lineNumber":62,"author":{"gitId":"SkyBlaise99"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":63,"author":{"gitId":"SkyBlaise99"},"content":"     * @param other Any Object being compared to. May or may not be a instance of Client.","lastModifiedDate":"2021-10-04"},{"lineNumber":64,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":65,"author":{"gitId":"SkyBlaise99"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":66,"author":{"gitId":"SkyBlaise99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-04"},{"lineNumber":67,"author":{"gitId":"SkyBlaise99"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-04"},{"lineNumber":68,"author":{"gitId":"SkyBlaise99"},"content":"            return true;","lastModifiedDate":"2021-10-04"},{"lineNumber":69,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":70,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":71,"author":{"gitId":"SkyBlaise99"},"content":"        if (!(other instanceof Client)) {","lastModifiedDate":"2021-10-04"},{"lineNumber":72,"author":{"gitId":"SkyBlaise99"},"content":"            return false;","lastModifiedDate":"2021-10-04"},{"lineNumber":73,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":74,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":75,"author":{"gitId":"SkyBlaise99"},"content":"        Client otherClient \u003d (Client) other;","lastModifiedDate":"2021-10-04"},{"lineNumber":76,"author":{"gitId":"SkyBlaise99"},"content":"        return this.getId() \u003d\u003d otherClient.getId();","lastModifiedDate":"2021-10-04"},{"lineNumber":77,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":78,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":79,"author":{"gitId":"SkyBlaise99"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":80,"author":{"gitId":"SkyBlaise99"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-04"},{"lineNumber":81,"author":{"gitId":"SkyBlaise99"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-10-04"},{"lineNumber":82,"author":{"gitId":"SkyBlaise99"},"content":"        return Objects.hash(id, name);","lastModifiedDate":"2021-10-04"},{"lineNumber":83,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":84,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":85,"author":{"gitId":"SkyBlaise99"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":86,"author":{"gitId":"SkyBlaise99"},"content":"    public String toString() {","lastModifiedDate":"2021-10-04"},{"lineNumber":87,"author":{"gitId":"SkyBlaise99"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-04"},{"lineNumber":88,"author":{"gitId":"SkyBlaise99"},"content":"        builder.append(\"ID: \")","lastModifiedDate":"2021-10-04"},{"lineNumber":89,"author":{"gitId":"SkyBlaise99"},"content":"                .append(getId())","lastModifiedDate":"2021-10-04"},{"lineNumber":90,"author":{"gitId":"SkyBlaise99"},"content":"                .append(\"; Name: \")","lastModifiedDate":"2021-10-04"},{"lineNumber":91,"author":{"gitId":"SkyBlaise99"},"content":"                .append(getName());","lastModifiedDate":"2021-10-04"},{"lineNumber":92,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":93,"author":{"gitId":"SkyBlaise99"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-04"},{"lineNumber":94,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":95,"author":{"gitId":"SkyBlaise99"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"SkyBlaise99":95}},{"path":"src/main/java/seedu/address/model/client/UniqueClientList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Linxcathyyy"},"content":"package seedu.address.model.client;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"SkyBlaise99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"SkyBlaise99"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"Linxcathyyy"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"Linxcathyyy"},"content":"import java.util.List;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"SkyBlaise99"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"SkyBlaise99"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"SkyBlaise99"},"content":"import seedu.address.model.client.exceptions.ClientNotFoundException;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"SkyBlaise99"},"content":"import seedu.address.model.client.exceptions.DuplicateClientException;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"Linxcathyyy"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"Linxcathyyy"},"content":" * A list of clients that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"Linxcathyyy"},"content":" * A client is considered unique by comparing using {@code Client#isSameClient(Client)}. As such, adding and updating of","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"Linxcathyyy"},"content":" * clients uses Client#isSameClient(Client) for equality so as to ensure that the client being added or updated is","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"Linxcathyyy"},"content":" * unique in terms of identity in the UniqueClientList. However, the removal of a client uses Client#equals(Object) so","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"Linxcathyyy"},"content":" * as to ensure that the client with exactly the same fields will be removed.","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"Linxcathyyy"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"Linxcathyyy"},"content":" *","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"Linxcathyyy"},"content":" * @see Client#isSameClient(Client)","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"Linxcathyyy"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"Linxcathyyy"},"content":"public class UniqueClientList implements Iterable\u003cClient\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"Linxcathyyy"},"content":"    private final ObservableList\u003cClient\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"Linxcathyyy"},"content":"    private final ObservableList\u003cClient\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"Linxcathyyy"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"SkyBlaise99"},"content":"     * Returns true if the list contains an equivalent client as the given argument.","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"Linxcathyyy"},"content":"    public boolean contains(Client toCheck) {","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"Linxcathyyy"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"Linxcathyyy"},"content":"        return internalList.stream().anyMatch(toCheck::isSameClient);","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"Linxcathyyy"},"content":"     * Adds a client to the list.","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"Linxcathyyy"},"content":"     * The client must not already exist in the list.","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"Linxcathyyy"},"content":"    public void add(Client toAdd) {","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"Linxcathyyy"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"Linxcathyyy"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"Linxcathyyy"},"content":"            throw new DuplicateClientException();","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"Linxcathyyy"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"Linxcathyyy"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"Linxcathyyy"},"content":"     * Replaces the client {@code target} in the list with {@code editedClient}.","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"Linxcathyyy"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"SkyBlaise99"},"content":"     * The client identity of {@code editedClient} must not be the same as another existing client in the list.","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"SkyBlaise99"},"content":"    public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"Linxcathyyy"},"content":"        requireAllNonNull(target, editedClient);","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"Linxcathyyy"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"Linxcathyyy"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"SkyBlaise99"},"content":"            throw new ClientNotFoundException();","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"Linxcathyyy"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"Linxcathyyy"},"content":"        if (!target.isSameClient(editedClient) \u0026\u0026 contains(editedClient)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"SkyBlaise99"},"content":"            throw new DuplicateClientException();","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"Linxcathyyy"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"Linxcathyyy"},"content":"        internalList.set(index, editedClient);","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"Linxcathyyy"},"content":"     * Removes the equivalent client from the list.","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"Linxcathyyy"},"content":"     * The client must exist in the list.","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"Linxcathyyy"},"content":"    public void remove(Client toRemove) {","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"Linxcathyyy"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"Linxcathyyy"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"SkyBlaise99"},"content":"            throw new ClientNotFoundException();","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"Linxcathyyy"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"Linxcathyyy"},"content":"    public void setClients(UniqueClientList replacement) {","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"Linxcathyyy"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"Linxcathyyy"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"Linxcathyyy"},"content":"     * Replaces the contents of this list with {@code clients}.","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"Linxcathyyy"},"content":"     * {@code clients} must not contain duplicate clients.","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"Linxcathyyy"},"content":"    public void setClients(List\u003cClient\u003e clients) {","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"Linxcathyyy"},"content":"        requireAllNonNull(clients);","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"Linxcathyyy"},"content":"        if (!clientsAreUnique(clients)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"Linxcathyyy"},"content":"            throw new DuplicateClientException();","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"Linxcathyyy"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"Linxcathyyy"},"content":"        internalList.setAll(clients);","lastModifiedDate":"2021-10-05"},{"lineNumber":97,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":99,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":100,"author":{"gitId":"Linxcathyyy"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-05"},{"lineNumber":101,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":102,"author":{"gitId":"Linxcathyyy"},"content":"    public ObservableList\u003cClient\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":103,"author":{"gitId":"Linxcathyyy"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-05"},{"lineNumber":104,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"Linxcathyyy"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"Linxcathyyy"},"content":"    public Iterator\u003cClient\u003e iterator() {","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"Linxcathyyy"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":110,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":111,"author":{"gitId":"Linxcathyyy"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":112,"author":{"gitId":"Linxcathyyy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":113,"author":{"gitId":"Linxcathyyy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-05"},{"lineNumber":114,"author":{"gitId":"Linxcathyyy"},"content":"                       || (other instanceof UniqueClientList // instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"Linxcathyyy"},"content":"                                   \u0026\u0026 internalList.equals(((UniqueClientList) other).internalList));","lastModifiedDate":"2021-10-05"},{"lineNumber":116,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":117,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"Linxcathyyy"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":119,"author":{"gitId":"Linxcathyyy"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-05"},{"lineNumber":120,"author":{"gitId":"Linxcathyyy"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-10-05"},{"lineNumber":121,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":122,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":123,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":124,"author":{"gitId":"SkyBlaise99"},"content":"     * Returns true if {@code clients} contains only unique clients.","lastModifiedDate":"2021-10-05"},{"lineNumber":125,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":126,"author":{"gitId":"Linxcathyyy"},"content":"    private boolean clientsAreUnique(List\u003cClient\u003e clients) {","lastModifiedDate":"2021-10-05"},{"lineNumber":127,"author":{"gitId":"Linxcathyyy"},"content":"        for (int i \u003d 0; i \u003c clients.size() - 1; i++) {","lastModifiedDate":"2021-10-05"},{"lineNumber":128,"author":{"gitId":"Linxcathyyy"},"content":"            for (int j \u003d i + 1; j \u003c clients.size(); j++) {","lastModifiedDate":"2021-10-05"},{"lineNumber":129,"author":{"gitId":"Linxcathyyy"},"content":"                if (clients.get(i).isSameClient(clients.get(j))) {","lastModifiedDate":"2021-10-05"},{"lineNumber":130,"author":{"gitId":"Linxcathyyy"},"content":"                    return false;","lastModifiedDate":"2021-10-05"},{"lineNumber":131,"author":{"gitId":"Linxcathyyy"},"content":"                }","lastModifiedDate":"2021-10-05"},{"lineNumber":132,"author":{"gitId":"Linxcathyyy"},"content":"            }","lastModifiedDate":"2021-10-05"},{"lineNumber":133,"author":{"gitId":"Linxcathyyy"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":134,"author":{"gitId":"Linxcathyyy"},"content":"        return true;","lastModifiedDate":"2021-10-05"},{"lineNumber":135,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":136,"author":{"gitId":"Linxcathyyy"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"Linxcathyyy":123,"SkyBlaise99":13}},{"path":"src/main/java/seedu/address/model/client/exceptions/ClientNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SkyBlaise99"},"content":"package seedu.address.model.client.exceptions;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"SkyBlaise99"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"SkyBlaise99"},"content":" * Signals that the operation is unable to find the specified client.","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"SkyBlaise99"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"SkyBlaise99"},"content":"public class ClientNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"SkyBlaise99":6}},{"path":"src/main/java/seedu/address/model/client/exceptions/DuplicateClientException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SkyBlaise99"},"content":"package seedu.address.model.client.exceptions;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"SkyBlaise99"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"SkyBlaise99"},"content":" * Signals that the operation will result in duplicate Clients (Clients are considered duplicates if they have the same","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"SkyBlaise99"},"content":" * identity).","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"SkyBlaise99"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"SkyBlaise99"},"content":"public class DuplicateClientException extends RuntimeException {","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"SkyBlaise99"},"content":"    public DuplicateClientException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"SkyBlaise99"},"content":"        super(\"Operation would result in duplicate clients\");","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"SkyBlaise99"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"SkyBlaise99":11}},{"path":"src/main/java/seedu/address/model/commons/ID.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SkyBlaise99"},"content":"package seedu.address.model.commons;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"SkyBlaise99"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"SkyBlaise99"},"content":" * Represents a Client\u0027s or Product\u0027s ID in the address book.","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"SkyBlaise99"},"content":" * Guarantees: immutable; is unique.","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"SkyBlaise99"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"SkyBlaise99"},"content":"public class ID {","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"SkyBlaise99"},"content":"    private static int idCounter \u003d 0;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"SkyBlaise99"},"content":"    private final int id;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"SkyBlaise99"},"content":"    /** Constructs a {@code ID}. */","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"SkyBlaise99"},"content":"    public ID() {","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"SkyBlaise99"},"content":"        id \u003d idCounter;","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"SkyBlaise99"},"content":"        idCounter++;","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"SkyBlaise99"},"content":"    public int getId() {","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"SkyBlaise99"},"content":"        return id;","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"SkyBlaise99"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"SkyBlaise99"},"content":"    public String toString() {","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"SkyBlaise99"},"content":"        return Integer.toString(getId());","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"SkyBlaise99"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"SkyBlaise99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"SkyBlaise99"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"SkyBlaise99"},"content":"                       || (other instanceof ID // instanceof handles nulls","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"SkyBlaise99"},"content":"                                   \u0026\u0026 this.getId() \u003d\u003d ((ID) other).getId()); // state check","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"SkyBlaise99"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"SkyBlaise99"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"SkyBlaise99"},"content":"        return getId();","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"SkyBlaise99"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"SkyBlaise99":37}},{"path":"src/main/java/seedu/address/model/commons/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SkyBlaise99"},"content":"package seedu.address.model.commons;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"SkyBlaise99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"SkyBlaise99"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"SkyBlaise99"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"SkyBlaise99"},"content":" * Represents a Client\u0027s or Product\u0027s name in the address book.","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"SkyBlaise99"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}.","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"SkyBlaise99"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"SkyBlaise99"},"content":"public class Name {","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"SkyBlaise99"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"SkyBlaise99"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"SkyBlaise99"},"content":"    /*","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"SkyBlaise99"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"SkyBlaise99"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"SkyBlaise99"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"SkyBlaise99"},"content":"    public final String fullName;","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"SkyBlaise99"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"SkyBlaise99"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"SkyBlaise99"},"content":"     * @param name A valid name.","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"SkyBlaise99"},"content":"    public Name(String name) {","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"SkyBlaise99"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"SkyBlaise99"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"SkyBlaise99"},"content":"        fullName \u003d name;","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"SkyBlaise99"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"SkyBlaise99"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"SkyBlaise99"},"content":"     * @param name Name to be tested.","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"SkyBlaise99"},"content":"    public static boolean isValidName(String name) {","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"SkyBlaise99"},"content":"        return name.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"SkyBlaise99"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"SkyBlaise99"},"content":"    public String toString() {","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"SkyBlaise99"},"content":"        return fullName;","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"SkyBlaise99"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"SkyBlaise99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"SkyBlaise99"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"SkyBlaise99"},"content":"                       || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"SkyBlaise99"},"content":"                                   \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"SkyBlaise99"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"SkyBlaise99"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"SkyBlaise99"},"content":"        return fullName.hashCode();","lastModifiedDate":"2021-10-04"},{"lineNumber":57,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":58,"author":{"gitId":"SkyBlaise99"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"SkyBlaise99":58}},{"path":"src/main/java/seedu/address/model/product/Product.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SkyBlaise99"},"content":"package seedu.address.model.product;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"SkyBlaise99"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"SkyBlaise99"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"SkyBlaise99"},"content":"import seedu.address.model.Category;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"SkyBlaise99"},"content":"import seedu.address.model.commons.ID;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"SkyBlaise99"},"content":"import seedu.address.model.commons.Name;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"SkyBlaise99"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"SkyBlaise99"},"content":" * Represents a Product in the app.","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"SkyBlaise99"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"SkyBlaise99"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"SkyBlaise99"},"content":"public class Product implements Category {","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"SkyBlaise99"},"content":"    // Identity fields","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"SkyBlaise99"},"content":"    private final ID id;","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"SkyBlaise99"},"content":"    // Data fields","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"SkyBlaise99"},"content":"    private final Name name;","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"SkyBlaise99"},"content":"    public Product(Name name) {","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"SkyBlaise99"},"content":"        this(new ID(), name);","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"SkyBlaise99"},"content":"    private Product(ID id, Name name) {","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"SkyBlaise99"},"content":"        requireAllNonNull(id, name);","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"SkyBlaise99"},"content":"        this.id \u003d id;","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"SkyBlaise99"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"SkyBlaise99"},"content":"    public ID getId() {","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"SkyBlaise99"},"content":"        return id;","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"SkyBlaise99"},"content":"    public Name getName() {","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"SkyBlaise99"},"content":"        return name;","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"SkyBlaise99"},"content":"    public static Product updateProduct(Product product, Name name) {","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"SkyBlaise99"},"content":"        return new Product(product.getId(), name);","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"SkyBlaise99"},"content":"     * Returns true if both products have the same id.","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"SkyBlaise99"},"content":"     * This defines a weaker notion of equality between two products.","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"SkyBlaise99"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"SkyBlaise99"},"content":"     * @param otherProduct Another Product being compared to.","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"SkyBlaise99"},"content":"    public boolean isSameProduct(Product otherProduct) {","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"SkyBlaise99"},"content":"        if (otherProduct \u003d\u003d this) {","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"SkyBlaise99"},"content":"            return true;","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"SkyBlaise99"},"content":"        return otherProduct !\u003d null \u0026\u0026 otherProduct.getId().equals(this.getId());","lastModifiedDate":"2021-10-04"},{"lineNumber":57,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":58,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"SkyBlaise99"},"content":"     * Returns true if both products have the same identity and data fields.","lastModifiedDate":"2021-10-04"},{"lineNumber":61,"author":{"gitId":"SkyBlaise99"},"content":"     * This defines a stronger notion of equality between two products.","lastModifiedDate":"2021-10-04"},{"lineNumber":62,"author":{"gitId":"SkyBlaise99"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":63,"author":{"gitId":"SkyBlaise99"},"content":"     * @param other Any Object being compared to. May or may not be a instance of Product.","lastModifiedDate":"2021-10-04"},{"lineNumber":64,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":65,"author":{"gitId":"SkyBlaise99"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":66,"author":{"gitId":"SkyBlaise99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-04"},{"lineNumber":67,"author":{"gitId":"SkyBlaise99"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-04"},{"lineNumber":68,"author":{"gitId":"SkyBlaise99"},"content":"            return true;","lastModifiedDate":"2021-10-04"},{"lineNumber":69,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":70,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":71,"author":{"gitId":"SkyBlaise99"},"content":"        if (!(other instanceof Product)) {","lastModifiedDate":"2021-10-04"},{"lineNumber":72,"author":{"gitId":"SkyBlaise99"},"content":"            return false;","lastModifiedDate":"2021-10-04"},{"lineNumber":73,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":74,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":75,"author":{"gitId":"SkyBlaise99"},"content":"        Product otherProduct \u003d (Product) other;","lastModifiedDate":"2021-10-04"},{"lineNumber":76,"author":{"gitId":"SkyBlaise99"},"content":"        return this.getId() \u003d\u003d otherProduct.getId();","lastModifiedDate":"2021-10-04"},{"lineNumber":77,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":78,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":79,"author":{"gitId":"SkyBlaise99"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":80,"author":{"gitId":"SkyBlaise99"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-04"},{"lineNumber":81,"author":{"gitId":"SkyBlaise99"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-10-04"},{"lineNumber":82,"author":{"gitId":"SkyBlaise99"},"content":"        return Objects.hash(id, name);","lastModifiedDate":"2021-10-04"},{"lineNumber":83,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":84,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":85,"author":{"gitId":"SkyBlaise99"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":86,"author":{"gitId":"SkyBlaise99"},"content":"    public String toString() {","lastModifiedDate":"2021-10-04"},{"lineNumber":87,"author":{"gitId":"SkyBlaise99"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-04"},{"lineNumber":88,"author":{"gitId":"SkyBlaise99"},"content":"        builder.append(\"ID: \")","lastModifiedDate":"2021-10-04"},{"lineNumber":89,"author":{"gitId":"SkyBlaise99"},"content":"                .append(getId())","lastModifiedDate":"2021-10-04"},{"lineNumber":90,"author":{"gitId":"SkyBlaise99"},"content":"                .append(\"; Name: \")","lastModifiedDate":"2021-10-04"},{"lineNumber":91,"author":{"gitId":"SkyBlaise99"},"content":"                .append(getName());","lastModifiedDate":"2021-10-04"},{"lineNumber":92,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":93,"author":{"gitId":"SkyBlaise99"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-04"},{"lineNumber":94,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":95,"author":{"gitId":"SkyBlaise99"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"SkyBlaise99":95}},{"path":"src/main/java/seedu/address/model/product/UniqueProductList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SkyBlaise99"},"content":"package seedu.address.model.product;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"SkyBlaise99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"SkyBlaise99"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"SkyBlaise99"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"SkyBlaise99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"SkyBlaise99"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"SkyBlaise99"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"SkyBlaise99"},"content":"import seedu.address.model.product.exceptions.DuplicateProductException;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"SkyBlaise99"},"content":"import seedu.address.model.product.exceptions.ProductNotFoundException;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"SkyBlaise99"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"SkyBlaise99"},"content":" * A list of products that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"SkyBlaise99"},"content":" * A product is considered unique by comparing using {@code Product#isSameProduct(Product)}. As such, adding and","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"SkyBlaise99"},"content":" * updating of products uses Product#isSameProduct(Product) for equality so as to ensure that the product being added","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"SkyBlaise99"},"content":" * or updated is unique in terms of identity in the UniqueProductList. However, the removal of a product uses","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"SkyBlaise99"},"content":" * Product#equals(Object) so as to ensure that the product with exactly the same fields will be removed.","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"SkyBlaise99"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"SkyBlaise99"},"content":" *","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"SkyBlaise99"},"content":" * @see Product#isSameProduct(Product)","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"SkyBlaise99"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"SkyBlaise99"},"content":"public class UniqueProductList implements Iterable\u003cProduct\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"SkyBlaise99"},"content":"    private final ObservableList\u003cProduct\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"SkyBlaise99"},"content":"    private final ObservableList\u003cProduct\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"SkyBlaise99"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"SkyBlaise99"},"content":"     * Returns true if the list contains an equivalent product as the given argument.","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"SkyBlaise99"},"content":"    public boolean contains(Product toCheck) {","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"SkyBlaise99"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"SkyBlaise99"},"content":"        return internalList.stream().anyMatch(toCheck::isSameProduct);","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"SkyBlaise99"},"content":"     * Adds a product to the list.","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"SkyBlaise99"},"content":"     * The product must not already exist in the list.","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"SkyBlaise99"},"content":"    public void add(Product toAdd) {","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"SkyBlaise99"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"SkyBlaise99"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"SkyBlaise99"},"content":"            throw new DuplicateProductException();","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"SkyBlaise99"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"SkyBlaise99"},"content":"     * Replaces the product {@code target} in the list with {@code editedProduct}.","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"SkyBlaise99"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"SkyBlaise99"},"content":"     * The product identity of {@code editedProduct} must not be the same as another existing product in the list.","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"SkyBlaise99"},"content":"    public void setProduct(Product target, Product editedProduct) {","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"SkyBlaise99"},"content":"        requireAllNonNull(target, editedProduct);","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"SkyBlaise99"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"SkyBlaise99"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"SkyBlaise99"},"content":"            throw new ProductNotFoundException();","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"SkyBlaise99"},"content":"        if (!target.isSameProduct(editedProduct) \u0026\u0026 contains(editedProduct)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"SkyBlaise99"},"content":"            throw new DuplicateProductException();","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"SkyBlaise99"},"content":"        internalList.set(index, editedProduct);","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"SkyBlaise99"},"content":"     * Removes the equivalent product from the list.","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"SkyBlaise99"},"content":"     * The product must exist in the list.","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"SkyBlaise99"},"content":"    public void remove(Product toRemove) {","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"SkyBlaise99"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"SkyBlaise99"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"SkyBlaise99"},"content":"            throw new ProductNotFoundException();","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"SkyBlaise99"},"content":"    public void setProducts(UniqueProductList replacement) {","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"SkyBlaise99"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"SkyBlaise99"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"SkyBlaise99"},"content":"     * Replaces the contents of this list with {@code products}.","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"SkyBlaise99"},"content":"     * {@code products} must not contain duplicate products.","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"SkyBlaise99"},"content":"    public void setProducts(List\u003cProduct\u003e products) {","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"SkyBlaise99"},"content":"        requireAllNonNull(products);","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"SkyBlaise99"},"content":"        if (!productsAreUnique(products)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"SkyBlaise99"},"content":"            throw new DuplicateProductException();","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"SkyBlaise99"},"content":"        internalList.setAll(products);","lastModifiedDate":"2021-10-05"},{"lineNumber":97,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":99,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":100,"author":{"gitId":"SkyBlaise99"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-05"},{"lineNumber":101,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":102,"author":{"gitId":"SkyBlaise99"},"content":"    public ObservableList\u003cProduct\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":103,"author":{"gitId":"SkyBlaise99"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-05"},{"lineNumber":104,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"SkyBlaise99"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"SkyBlaise99"},"content":"    public Iterator\u003cProduct\u003e iterator() {","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"SkyBlaise99"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":110,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":111,"author":{"gitId":"SkyBlaise99"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":112,"author":{"gitId":"SkyBlaise99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":113,"author":{"gitId":"SkyBlaise99"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-05"},{"lineNumber":114,"author":{"gitId":"SkyBlaise99"},"content":"                       || (other instanceof UniqueProductList // instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"SkyBlaise99"},"content":"                                   \u0026\u0026 internalList.equals(((UniqueProductList) other).internalList));","lastModifiedDate":"2021-10-05"},{"lineNumber":116,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":117,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"SkyBlaise99"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":119,"author":{"gitId":"SkyBlaise99"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-05"},{"lineNumber":120,"author":{"gitId":"SkyBlaise99"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-10-05"},{"lineNumber":121,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":122,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":123,"author":{"gitId":"SkyBlaise99"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":124,"author":{"gitId":"SkyBlaise99"},"content":"     * Returns true if {@code products} contains only unique products.","lastModifiedDate":"2021-10-05"},{"lineNumber":125,"author":{"gitId":"SkyBlaise99"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":126,"author":{"gitId":"SkyBlaise99"},"content":"    private boolean productsAreUnique(List\u003cProduct\u003e products) {","lastModifiedDate":"2021-10-05"},{"lineNumber":127,"author":{"gitId":"SkyBlaise99"},"content":"        for (int i \u003d 0; i \u003c products.size() - 1; i++) {","lastModifiedDate":"2021-10-05"},{"lineNumber":128,"author":{"gitId":"SkyBlaise99"},"content":"            for (int j \u003d i + 1; j \u003c products.size(); j++) {","lastModifiedDate":"2021-10-05"},{"lineNumber":129,"author":{"gitId":"SkyBlaise99"},"content":"                if (products.get(i).isSameProduct(products.get(j))) {","lastModifiedDate":"2021-10-05"},{"lineNumber":130,"author":{"gitId":"SkyBlaise99"},"content":"                    return false;","lastModifiedDate":"2021-10-05"},{"lineNumber":131,"author":{"gitId":"SkyBlaise99"},"content":"                }","lastModifiedDate":"2021-10-05"},{"lineNumber":132,"author":{"gitId":"SkyBlaise99"},"content":"            }","lastModifiedDate":"2021-10-05"},{"lineNumber":133,"author":{"gitId":"SkyBlaise99"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":134,"author":{"gitId":"SkyBlaise99"},"content":"        return true;","lastModifiedDate":"2021-10-05"},{"lineNumber":135,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":136,"author":{"gitId":"SkyBlaise99"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"SkyBlaise99":136}},{"path":"src/main/java/seedu/address/model/product/exceptions/DuplicateProductException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SkyBlaise99"},"content":"package seedu.address.model.product.exceptions;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"SkyBlaise99"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"SkyBlaise99"},"content":" * Signals that the operation will result in duplicate Products (Products are considered duplicates if they have the","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"SkyBlaise99"},"content":" * same identity).","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"SkyBlaise99"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"SkyBlaise99"},"content":"public class DuplicateProductException extends RuntimeException {","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"SkyBlaise99"},"content":"    public DuplicateProductException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"SkyBlaise99"},"content":"        super(\"Operation would result in duplicate products\");","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"SkyBlaise99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"SkyBlaise99"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"SkyBlaise99":11}},{"path":"src/main/java/seedu/address/model/product/exceptions/ProductNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SkyBlaise99"},"content":"package seedu.address.model.product.exceptions;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"SkyBlaise99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"SkyBlaise99"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"SkyBlaise99"},"content":" * Signals that the operation is unable to find the specified product.","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"SkyBlaise99"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"SkyBlaise99"},"content":"public class ProductNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"SkyBlaise99":6}}]
