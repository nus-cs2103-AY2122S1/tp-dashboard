[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YaleChen299"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-T12-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-T12-3/tp/actions)","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"YaleChen299"},"content":"PlaceBook (PB) is a desktop app for managing contacts and appointments, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, PB can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"YaleChen299"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"YaleChen299":4,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"YaleChen299"},"content":"run {","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"YaleChen299"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"YaleChen299"},"content":"    implementation \u0027junit:junit:4.12\u0027","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    archiveName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2018-04-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"YaleChen299":5,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"YaleChen299"},"content":"### Chai Yew Meng","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"NecroWolf28"},"content":"\u003cimg src\u003d\"images/necrowolf28.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"NecroWolf28"},"content":"[[github](https://github.com/NecroWolf28)]","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"NecroWolf28"},"content":"* Role: Developer","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"NecroWolf28"},"content":"* Responsibilities: Proof-reading and Documentation","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"YaleChen299"},"content":"### Chen Yanyu","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"YaleChen299"},"content":"\u003cimg src\u003d\"images/yalechen299.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"YaleChen299"},"content":"[[github](http://github.com/jYaleChen299)]","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"YaleChen299"},"content":"* Role: UI design and implementation","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"YaleChen299"},"content":"* Responsibilities: Merging PRs and implement UI.","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"YaleChen299"},"content":"### Li Lehao","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Li-Lehao"},"content":"\u003cimg src\u003d\"images/li-lehao.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"Li-Lehao"},"content":"[[github](https://github.com/Li-Lehao)] [[portfolio](team/johndoe.md)]","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"YaleChen299"},"content":"* Responsibilities: ..","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"YaleChen299"},"content":"### Nicholas","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"nwhloo99"},"content":"\u003cimg src\u003d\"images/nwhloo99.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"nwhloo99"},"content":"[[github](http://github.com/nwhloo)]","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"nwhloo99"},"content":"* Responsibilities: Creating Commands","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"YaleChen299"},"content":"### Teng Chiong","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"tchiong"},"content":"\u003cimg src\u003d\"images/tchiong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"tchiong"},"content":"[[github](http://github.com/tchiong)]","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"tchiong"},"content":"* Responsibilities: Testing","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"Li-Lehao":2,"tchiong":3,"YaleChen299":10,"nwhloo99":3,"-":37,"NecroWolf28":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"nwhloo99"},"content":"* stores appointment data in `Appointment` objects (which contain `UniquePersonList` for clients, `Address` for location, `LocalDate` for date, `LocalTime` for time, `String` for description)","lastModifiedDate":"2021-10-20"},{"lineNumber":128,"author":{"gitId":"nwhloo99"},"content":"* stores the schedule data i.e., all `Appointment` objects.","lastModifiedDate":"2021-10-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"nwhloo99"},"content":"* can save address book data, schedule data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-10-20"},{"lineNumber":146,"author":{"gitId":"nwhloo99"},"content":"* inherits from both `AddressBookStorage`, `ScheduleStorage` and `UserPrefStorage`, which means it can be treated as any (if only the functionality of only one is needed).","lastModifiedDate":"2021-10-20"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"tchiong"},"content":"### timePeriod Class","lastModifiedDate":"2021-10-29"},{"lineNumber":160,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":161,"author":{"gitId":"tchiong"},"content":"#### Implementation","lastModifiedDate":"2021-10-29"},{"lineNumber":162,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":163,"author":{"gitId":"tchiong"},"content":"The feature is a variable contained within the Appointment class. `timePeriod` tracks the start and end time","lastModifiedDate":"2021-10-29"},{"lineNumber":164,"author":{"gitId":"tchiong"},"content":"of the Appointment and contains functions to check if two appointments have clashing timePeriods and thus","lastModifiedDate":"2021-10-29"},{"lineNumber":165,"author":{"gitId":"tchiong"},"content":"cannot both happen. `timePeriod` is also used to calculate the urgency of the appointment, assigning the","lastModifiedDate":"2021-10-29"},{"lineNumber":166,"author":{"gitId":"tchiong"},"content":"appointment either `High`, `Medium` or `Low` urgency.","lastModifiedDate":"2021-10-29"},{"lineNumber":167,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":168,"author":{"gitId":"tchiong"},"content":"### AddApp feature","lastModifiedDate":"2021-10-20"},{"lineNumber":169,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":170,"author":{"gitId":"tchiong"},"content":"#### Implementation","lastModifiedDate":"2021-10-20"},{"lineNumber":171,"author":{"gitId":"nwhloo99"},"content":"The feature allows users to create an appointment with any number of clients (`Person`), ","lastModifiedDate":"2021-10-21"},{"lineNumber":172,"author":{"gitId":"tchiong"},"content":"along with a location (`Address`), a time period (`timePeriod`) and a description (`String`).","lastModifiedDate":"2021-10-29"},{"lineNumber":173,"author":{"gitId":"tchiong"},"content":"The addApp mechanism is facilitated by `Schedule`.","lastModifiedDate":"2021-10-20"},{"lineNumber":174,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":175,"author":{"gitId":"nwhloo99"},"content":"`Schedule` contains an Observable List of `Appointment` that we can add appointments to. These appointments will be","lastModifiedDate":"2021-10-21"},{"lineNumber":176,"author":{"gitId":"tchiong"},"content":"generated from the inputs entered by the user using the `AddAppCommand`","lastModifiedDate":"2021-10-29"},{"lineNumber":177,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":178,"author":{"gitId":"tchiong"},"content":"Given below is an example usage scenario and how the addApp mechanism behaves at each step.","lastModifiedDate":"2021-10-29"},{"lineNumber":179,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":180,"author":{"gitId":"tchiong"},"content":"Step 1. The user launches the application. Placebook will be initialized with a `LogicManager`, a `StorageManage`, a `UiManager`","lastModifiedDate":"2021-10-29"},{"lineNumber":181,"author":{"gitId":"tchiong"},"content":"and a `ModelManager`. `StorageManager` contains an `AddressBookStorage` an a `ScheduleStorage` which manages","lastModifiedDate":"2021-10-29"},{"lineNumber":182,"author":{"gitId":"tchiong"},"content":"the specific saved data. `StorageManager` will attempt to read data from a saved json file and loads the ","lastModifiedDate":"2021-10-29"},{"lineNumber":183,"author":{"gitId":"tchiong"},"content":"data into `ModelManager` when the class is initialized","lastModifiedDate":"2021-10-29"},{"lineNumber":184,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":185,"author":{"gitId":"tchiong"},"content":"![AddAppStep1](images/AddAppStep1.png)","lastModifiedDate":"2021-10-29"},{"lineNumber":186,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":187,"author":{"gitId":"tchiong"},"content":"Step 2. The user inputs the addApp command with `addApp id/1,2,3 a/Starbucks @ Raffles City start/01-01-2021 1400 end/01-01-2021 1500 ds/discuss marketing strategies`","lastModifiedDate":"2021-10-29"},{"lineNumber":188,"author":{"gitId":"tchiong"},"content":"The `logicManager`, which has been initialized with an `AddressBookParser`, will use that class to create and return an `addAppCommand` with the appropriate inputs to be executed by `LogicManger`","lastModifiedDate":"2021-10-29"},{"lineNumber":189,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":190,"author":{"gitId":"tchiong"},"content":"![AddAppStep2](images/AddAppStep2.png)","lastModifiedDate":"2021-10-29"},{"lineNumber":191,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":192,"author":{"gitId":"tchiong"},"content":"Step 3. On the execution of the command, the command will retrieve the list of persons and appointments from","lastModifiedDate":"2021-10-29"},{"lineNumber":193,"author":{"gitId":"tchiong"},"content":"`ModelManager` and create a new `UniquePersonList`. The new `UniquePersonList` will then be populated with the","lastModifiedDate":"2021-10-29"},{"lineNumber":194,"author":{"gitId":"tchiong"},"content":"appropriate client or clients retrieved from the list of persons according to the input index or indexes.","lastModifiedDate":"2021-10-29"},{"lineNumber":195,"author":{"gitId":"tchiong"},"content":"A new Appointment will then be created and added to the `ModelManager`. It is at this stage the input will","lastModifiedDate":"2021-10-29"},{"lineNumber":196,"author":{"gitId":"tchiong"},"content":"be checked to ensure that there are no duplicates or clashes with other appointments.","lastModifiedDate":"2021-10-29"},{"lineNumber":197,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":198,"author":{"gitId":"tchiong"},"content":"##INSERT UML HERE","lastModifiedDate":"2021-10-29"},{"lineNumber":199,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":200,"author":{"gitId":"tchiong"},"content":"Step 4. After execution, the CommandResult is passed upwards to the UI so that it can return a status message","lastModifiedDate":"2021-10-29"},{"lineNumber":201,"author":{"gitId":"tchiong"},"content":"and update the display to match the updated model","lastModifiedDate":"2021-10-29"},{"lineNumber":202,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":203,"author":{"gitId":"tchiong"},"content":"##@Yanyu im not 100% sure how the UI interacts with the overall model, if you see any issues could you help me correct them?","lastModifiedDate":"2021-10-29"},{"lineNumber":204,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":205,"author":{"gitId":"tchiong"},"content":"The following sequence diagram shows how the addAppCommand operation works:","lastModifiedDate":"2021-10-29"},{"lineNumber":206,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":207,"author":{"gitId":"tchiong"},"content":"![AddAppSequenceDiagram](images/AddAppSequenceDiagram.png)","lastModifiedDate":"2021-10-29"},{"lineNumber":208,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":209,"author":{"gitId":"nwhloo99"},"content":"####Design considerations","lastModifiedDate":"2021-10-21"},{"lineNumber":210,"author":{"gitId":"nwhloo99"},"content":"* **Alternative 1 (current choice):** User selects `Person` in `Appointment` through indexes of the displayed list.","lastModifiedDate":"2021-10-21"},{"lineNumber":211,"author":{"gitId":"nwhloo99"},"content":"    * Pros: Easy to implement, every `Person` in the displayed list will have a unique index.","lastModifiedDate":"2021-10-21"},{"lineNumber":212,"author":{"gitId":"nwhloo99"},"content":"    * Cons: As the user filters the displayed list, the indexes may change and be re-ordered, causing some confusion to the user.","lastModifiedDate":"2021-10-21"},{"lineNumber":213,"author":{"gitId":"nwhloo99"},"content":"* **Alternative 2:** User selects `Person` in `Appointment` through the name field in `Person`","lastModifiedDate":"2021-10-21"},{"lineNumber":214,"author":{"gitId":"nwhloo99"},"content":"    * Pros: The user will have greater confidence that they are adding the correct person.","lastModifiedDate":"2021-10-21"},{"lineNumber":215,"author":{"gitId":"nwhloo99"},"content":"    * Cons: Longer command lines, especially if multiple `Person` added to the same `Appointment`. One spelling mistake in the name will cause an error. There the possibility that there are multiple `Person` with the same name.","lastModifiedDate":"2021-10-21"},{"lineNumber":216,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":217,"author":{"gitId":"tchiong"},"content":"### Filter \u0026 Sort Feature","lastModifiedDate":"2021-10-29"},{"lineNumber":218,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":219,"author":{"gitId":"tchiong"},"content":"#### Implementation","lastModifiedDate":"2021-10-29"},{"lineNumber":220,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":221,"author":{"gitId":"tchiong"},"content":"##### Filtering","lastModifiedDate":"2021-10-29"},{"lineNumber":222,"author":{"gitId":"tchiong"},"content":"The feature allows users to filter using `findApp` . The input of the command will be passed down through the parser into ","lastModifiedDate":"2021-10-29"},{"lineNumber":223,"author":{"gitId":"tchiong"},"content":"the findAppCommand as a `DescriptionContainsKeywordsPredicate`, where on execution, this predicate is passed","lastModifiedDate":"2021-10-29"},{"lineNumber":224,"author":{"gitId":"tchiong"},"content":"into the initialized `ModelManager` filters the list of Appointments by setting this predicate in a ","lastModifiedDate":"2021-10-29"},{"lineNumber":225,"author":{"gitId":"tchiong"},"content":"FilteredList of Appointments, updating it to be displayed by the UI.","lastModifiedDate":"2021-10-29"},{"lineNumber":226,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":227,"author":{"gitId":"tchiong"},"content":"##### Sorting","lastModifiedDate":"2021-10-29"},{"lineNumber":228,"author":{"gitId":"tchiong"},"content":"The feature allows sort using one of two metrics, time of appointment or description, and return to the original list.","lastModifiedDate":"2021-10-29"},{"lineNumber":229,"author":{"gitId":"tchiong"},"content":"Using `listApp Time` or `listApp Description` will sort the list, and `listApp` will return the list of appointments to","lastModifiedDate":"2021-10-29"},{"lineNumber":230,"author":{"gitId":"tchiong"},"content":"its original display. This is also done through the `ModelManager`. The parser will first determine what type of `listApp`","lastModifiedDate":"2021-10-29"},{"lineNumber":231,"author":{"gitId":"tchiong"},"content":"is being input by the user, before passing it into `listAppCommand`. On execution, `listAppComand` will call `ModelManager`","lastModifiedDate":"2021-10-29"},{"lineNumber":232,"author":{"gitId":"tchiong"},"content":"functions to sort the list according to input and update the displayed list to be displayed by the UI","lastModifiedDate":"2021-10-29"},{"lineNumber":233,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":234,"author":{"gitId":"YaleChen299"},"content":"### Delete feature","lastModifiedDate":"2021-10-22"},{"lineNumber":235,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":236,"author":{"gitId":"YaleChen299"},"content":"#### Implementation","lastModifiedDate":"2021-10-22"},{"lineNumber":237,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":238,"author":{"gitId":"YaleChen299"},"content":"The delete feature deletes a person from the storage by specifying an index shown on the display list.","lastModifiedDate":"2021-10-22"},{"lineNumber":239,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":240,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":241,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":242,"author":{"gitId":"YaleChen299"},"content":"####Design considerations","lastModifiedDate":"2021-10-22"},{"lineNumber":243,"author":{"gitId":"YaleChen299"},"content":"* This will likely be break the current data relations as those appointments that refer to this person will","lastModifiedDate":"2021-10-22"},{"lineNumber":244,"author":{"gitId":"YaleChen299"},"content":"no longer be able to query information about this person.","lastModifiedDate":"2021-10-22"},{"lineNumber":245,"author":{"gitId":"YaleChen299"},"content":"* Thus, we either:  ","lastModifiedDate":"2021-10-22"},{"lineNumber":246,"author":{"gitId":"YaleChen299"},"content":"    1. implement a soft delete, which marks the data as \u0027deleted\u0027, so it will not be shown on the person list and keep ","lastModifiedDate":"2021-10-22"},{"lineNumber":247,"author":{"gitId":"YaleChen299"},"content":"    showing information about the person in the related appointment.","lastModifiedDate":"2021-10-22"},{"lineNumber":248,"author":{"gitId":"YaleChen299"},"content":"    2. remove the person from related appointments and delete the appointment if it has no more related client","lastModifiedDate":"2021-10-22"},{"lineNumber":249,"author":{"gitId":"YaleChen299"},"content":"* We chose the second one, and gives a warning message to user when they try to delete. As we think that, it makes ","lastModifiedDate":"2021-10-22"},{"lineNumber":250,"author":{"gitId":"YaleChen299"},"content":"little sense in this case to keep the person related to appointments show up event after they deletes the person. Moreover,","lastModifiedDate":"2021-10-22"},{"lineNumber":251,"author":{"gitId":"YaleChen299"},"content":"  it makes the code harder to maintain, as we will need to consider whether the person is mark as deleted for every other ","lastModifiedDate":"2021-10-22"},{"lineNumber":252,"author":{"gitId":"YaleChen299"},"content":"  query.","lastModifiedDate":"2021-10-22"},{"lineNumber":253,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":254,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":344,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":345,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":346,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":347,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"YaleChen299"},"content":"* Marketing Professional","lastModifiedDate":"2021-09-29"},{"lineNumber":358,"author":{"gitId":"YaleChen299"},"content":"* Meets many people everyday","lastModifiedDate":"2021-09-29"},{"lineNumber":359,"author":{"gitId":"YaleChen299"},"content":"* Have to send a lot of emails","lastModifiedDate":"2021-09-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":364,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":367,"author":{"gitId":"YaleChen299"},"content":"**Value proposition**: ","lastModifiedDate":"2021-09-29"},{"lineNumber":368,"author":{"gitId":"YaleChen299"},"content":"Our product aims to ease the process of adding many addresses every day, ","lastModifiedDate":"2021-09-29"},{"lineNumber":369,"author":{"gitId":"YaleChen299"},"content":"help to create template emails from the addresses and generate emails in batches for a target group of people. ","lastModifiedDate":"2021-09-29"},{"lineNumber":370,"author":{"gitId":"YaleChen299"},"content":"The product also keeps track of appointments and in the future, we look to potentially link to gmail.","lastModifiedDate":"2021-09-29"},{"lineNumber":371,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                   | see usage instructions         | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | add a new person               |                                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | delete a person                | remove entries that I no longer need                                   |","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | find a person by name          | locate details of persons without having to go through the entire list |","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"nwhloo99"},"content":"| `* * *`  | marketeer                                  | add appointments with clients  |                                                                        |","lastModifiedDate":"2021-09-29"},{"lineNumber":385,"author":{"gitId":"nwhloo99"},"content":"| `* * *`  | marketeer                                  | delete appointments            | remove cancelled/finished appointments                                 |","lastModifiedDate":"2021-09-29"},{"lineNumber":386,"author":{"gitId":"nwhloo99"},"content":"| `* * *`  | new user                                   | view some example contacts     | have an idea of what contact info will look like                       |","lastModifiedDate":"2021-09-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"| `*`      | user with many persons in the address book | sort persons by name           | locate a person easily                                                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"nwhloo99"},"content":"| `* *`   | marketeer\t\t                            | list appointments with clients  | view and plan my week and meet clients in a timely manner             |","lastModifiedDate":"2021-09-29"},{"lineNumber":389,"author":{"gitId":"nwhloo99"},"content":"| `* *`   | user\t\t                                | view my list of contacts\t      | see who is already inside and contact clients that are forgotten      |","lastModifiedDate":"2021-09-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"nwhloo99"},"content":"(For all use cases below, the **System** is the `PlaceBook(PB)` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-09-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"nwhloo99"},"content":"**Use case: UC01 - Add a person**","lastModifiedDate":"2021-10-28"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"nwhloo99"},"content":"1. User requests to add a new person.","lastModifiedDate":"2021-10-28"},{"lineNumber":402,"author":{"gitId":"nwhloo99"},"content":"2. PB adds the person.","lastModifiedDate":"2021-10-28"},{"lineNumber":403,"author":{"gitId":"nwhloo99"},"content":"3. PB displays success message and shows the updated list of persons.","lastModifiedDate":"2021-10-28"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"nwhloo99"},"content":"* 1a. The command format is invalid.","lastModifiedDate":"2021-10-28"},{"lineNumber":410,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":411,"author":{"gitId":"nwhloo99"},"content":"    * 1a1. PB displays an error message, and gives an example of the correct format.","lastModifiedDate":"2021-10-28"},{"lineNumber":412,"author":{"gitId":"nwhloo99"},"content":"    ","lastModifiedDate":"2021-10-28"},{"lineNumber":413,"author":{"gitId":"nwhloo99"},"content":"      Use case resumes on step 1.","lastModifiedDate":"2021-10-28"},{"lineNumber":414,"author":{"gitId":"nwhloo99"},"content":"      ","lastModifiedDate":"2021-10-28"},{"lineNumber":415,"author":{"gitId":"nwhloo99"},"content":"* 1b. The input parameters are invalid.","lastModifiedDate":"2021-10-28"},{"lineNumber":416,"author":{"gitId":"nwhloo99"},"content":"    ","lastModifiedDate":"2021-10-28"},{"lineNumber":417,"author":{"gitId":"nwhloo99"},"content":"    * 1b1. PB displays an error message, informing user what the valid input format should be.","lastModifiedDate":"2021-10-28"},{"lineNumber":418,"author":{"gitId":"nwhloo99"},"content":"    ","lastModifiedDate":"2021-10-28"},{"lineNumber":419,"author":{"gitId":"nwhloo99"},"content":"      Use case resumes on step 1.","lastModifiedDate":"2021-10-28"},{"lineNumber":420,"author":{"gitId":"nwhloo99"},"content":"      ","lastModifiedDate":"2021-10-28"},{"lineNumber":421,"author":{"gitId":"nwhloo99"},"content":"**Use case: UC02 - List all persons**","lastModifiedDate":"2021-10-28"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":423,"author":{"gitId":"nwhloo99"},"content":"**MSS**","lastModifiedDate":"2021-10-28"},{"lineNumber":424,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":425,"author":{"gitId":"nwhloo99"},"content":"1. User requests to list all persons.","lastModifiedDate":"2021-10-28"},{"lineNumber":426,"author":{"gitId":"nwhloo99"},"content":"2. PB shows the list of persons.","lastModifiedDate":"2021-10-28"},{"lineNumber":427,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":428,"author":{"gitId":"nwhloo99"},"content":"**Extensions**","lastModifiedDate":"2021-10-28"},{"lineNumber":429,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":430,"author":{"gitId":"nwhloo99"},"content":"* 1a. The list is empty.","lastModifiedDate":"2021-10-28"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"nwhloo99"},"content":"    * 2a1. PB informs the user that the list is empty.","lastModifiedDate":"2021-10-28"},{"lineNumber":433,"author":{"gitId":"nwhloo99"},"content":"    ","lastModifiedDate":"2021-10-28"},{"lineNumber":434,"author":{"gitId":"nwhloo99"},"content":"      Use case ends. ","lastModifiedDate":"2021-10-28"},{"lineNumber":435,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":436,"author":{"gitId":"nwhloo99"},"content":"**Use case: UC03 - Edit a person**","lastModifiedDate":"2021-10-28"},{"lineNumber":437,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":438,"author":{"gitId":"nwhloo99"},"content":"**MSS**","lastModifiedDate":"2021-10-28"},{"lineNumber":439,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":440,"author":{"gitId":"nwhloo99"},"content":"1. User \u003cins\u003erequests to list persons(UC02).\u003cins/\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":441,"author":{"gitId":"nwhloo99"},"content":"2. User requests to edit a specific person in the list.","lastModifiedDate":"2021-10-28"},{"lineNumber":442,"author":{"gitId":"nwhloo99"},"content":"3. PB edits the person.","lastModifiedDate":"2021-10-28"},{"lineNumber":443,"author":{"gitId":"nwhloo99"},"content":"4. PB displays success message and shows updated list of persons.","lastModifiedDate":"2021-10-28"},{"lineNumber":444,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":445,"author":{"gitId":"nwhloo99"},"content":"**Extensions**","lastModifiedDate":"2021-10-28"},{"lineNumber":446,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":447,"author":{"gitId":"nwhloo99"},"content":"* 2a. The command format is invalid.","lastModifiedDate":"2021-10-28"},{"lineNumber":448,"author":{"gitId":"nwhloo99"},"content":"    ","lastModifiedDate":"2021-10-28"},{"lineNumber":449,"author":{"gitId":"nwhloo99"},"content":"    * 2a1. PB displays an error message, and gives an example of the correct format.","lastModifiedDate":"2021-10-28"},{"lineNumber":450,"author":{"gitId":"nwhloo99"},"content":"    ","lastModifiedDate":"2021-10-28"},{"lineNumber":451,"author":{"gitId":"nwhloo99"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-10-28"},{"lineNumber":452,"author":{"gitId":"nwhloo99"},"content":"   ","lastModifiedDate":"2021-10-28"},{"lineNumber":453,"author":{"gitId":"nwhloo99"},"content":"* 2b. The input parameters are invalid.","lastModifiedDate":"2021-10-28"},{"lineNumber":454,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":455,"author":{"gitId":"nwhloo99"},"content":"    * 2b1. PB displays an error message, informing user what the valid input format should be.","lastModifiedDate":"2021-10-28"},{"lineNumber":456,"author":{"gitId":"nwhloo99"},"content":"      ","lastModifiedDate":"2021-10-28"},{"lineNumber":457,"author":{"gitId":"nwhloo99"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-10-28"},{"lineNumber":458,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":459,"author":{"gitId":"nwhloo99"},"content":"**Use case: UC04 - Delete a person**","lastModifiedDate":"2021-10-28"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":461,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-10-28"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":463,"author":{"gitId":"nwhloo99"},"content":"1. User \u003cins\u003erequests to list persons(UC02).\u003cins/\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":464,"author":{"gitId":"nwhloo99"},"content":"2. User requests to delete a specific person in the list.","lastModifiedDate":"2021-10-28"},{"lineNumber":465,"author":{"gitId":"nwhloo99"},"content":"3. PB displays a pop up window with asking for user confirmation to delete.","lastModifiedDate":"2021-10-28"},{"lineNumber":466,"author":{"gitId":"nwhloo99"},"content":"4. User confirms they want to delete.","lastModifiedDate":"2021-10-28"},{"lineNumber":467,"author":{"gitId":"nwhloo99"},"content":"5. PB deletes the person.","lastModifiedDate":"2021-10-28"},{"lineNumber":468,"author":{"gitId":"nwhloo99"},"content":"6. PB displays success message and shows updated list of persons.","lastModifiedDate":"2021-10-28"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":470,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2021-10-28"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":474,"author":{"gitId":"nwhloo99"},"content":"* 2a. The given index is invalid.","lastModifiedDate":"2021-10-28"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"nwhloo99"},"content":"    * 2a1. PB displays an error message.","lastModifiedDate":"2021-10-28"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"      ","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"nwhloo99"},"content":"* 4a. User indicates that they do not want to delete.","lastModifiedDate":"2021-10-28"},{"lineNumber":481,"author":{"gitId":"nwhloo99"},"content":"    ","lastModifiedDate":"2021-10-28"},{"lineNumber":482,"author":{"gitId":"nwhloo99"},"content":"    Use case ends.","lastModifiedDate":"2021-10-28"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":484,"author":{"gitId":"nwhloo99"},"content":"**Use case: UC05 - Find persons by name**","lastModifiedDate":"2021-10-28"},{"lineNumber":485,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":486,"author":{"gitId":"NecroWolf28"},"content":"**MSS**","lastModifiedDate":"2021-10-24"},{"lineNumber":487,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":488,"author":{"gitId":"nwhloo99"},"content":"1.  User inputs the find command with keywords to search for.","lastModifiedDate":"2021-10-28"},{"lineNumber":489,"author":{"gitId":"nwhloo99"},"content":"2.  PB shows a list of persons whose names match the given keywords.","lastModifiedDate":"2021-10-28"},{"lineNumber":490,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":491,"author":{"gitId":"NecroWolf28"},"content":"    Use case ends.","lastModifiedDate":"2021-10-24"},{"lineNumber":492,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":493,"author":{"gitId":"NecroWolf28"},"content":"**Extensions**","lastModifiedDate":"2021-10-24"},{"lineNumber":494,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":495,"author":{"gitId":"nwhloo99"},"content":"* 1a. PB cannot find any matching Person.","lastModifiedDate":"2021-10-28"},{"lineNumber":496,"author":{"gitId":"nwhloo99"},"content":"    ","lastModifiedDate":"2021-10-28"},{"lineNumber":497,"author":{"gitId":"nwhloo99"},"content":"    * PB displays an empty list.","lastModifiedDate":"2021-10-28"},{"lineNumber":498,"author":{"gitId":"NecroWolf28"},"content":"        ","lastModifiedDate":"2021-10-24"},{"lineNumber":499,"author":{"gitId":"NecroWolf28"},"content":"      Use case ends.","lastModifiedDate":"2021-10-24"},{"lineNumber":500,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":501,"author":{"gitId":"nwhloo99"},"content":"**Use case: UC06 - Find persons by tags**","lastModifiedDate":"2021-10-28"},{"lineNumber":502,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":503,"author":{"gitId":"nwhloo99"},"content":"**MSS**","lastModifiedDate":"2021-10-28"},{"lineNumber":504,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":505,"author":{"gitId":"nwhloo99"},"content":"1. User inputs the find tags command with keywords to search for.","lastModifiedDate":"2021-10-28"},{"lineNumber":506,"author":{"gitId":"nwhloo99"},"content":"2. PB shows a list of persons whose tags match the given keywords.","lastModifiedDate":"2021-10-28"},{"lineNumber":507,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":508,"author":{"gitId":"nwhloo99"},"content":"    Use case ends.","lastModifiedDate":"2021-10-28"},{"lineNumber":509,"author":{"gitId":"nwhloo99"},"content":"    ","lastModifiedDate":"2021-10-28"},{"lineNumber":510,"author":{"gitId":"nwhloo99"},"content":"**Extensions**","lastModifiedDate":"2021-10-28"},{"lineNumber":511,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":512,"author":{"gitId":"nwhloo99"},"content":"* 1a. PB cannot find any matching tags with any Person.","lastModifiedDate":"2021-10-28"},{"lineNumber":513,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":514,"author":{"gitId":"nwhloo99"},"content":"    * PB displays an empty list.","lastModifiedDate":"2021-10-28"},{"lineNumber":515,"author":{"gitId":"nwhloo99"},"content":"    ","lastModifiedDate":"2021-10-28"},{"lineNumber":516,"author":{"gitId":"nwhloo99"},"content":"      Use case ends.","lastModifiedDate":"2021-10-28"},{"lineNumber":517,"author":{"gitId":"nwhloo99"},"content":"    ","lastModifiedDate":"2021-10-28"},{"lineNumber":518,"author":{"gitId":"nwhloo99"},"content":"**Use case: UC07 - Add appointment**","lastModifiedDate":"2021-10-28"},{"lineNumber":519,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":520,"author":{"gitId":"nwhloo99"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":522,"author":{"gitId":"nwhloo99"},"content":"1. User enters add appointment command specifying the index or indexes of persons, address, start and end datetimes and description of the appointment.","lastModifiedDate":"2021-10-28"},{"lineNumber":523,"author":{"gitId":"nwhloo99"},"content":"2. PB adds the appointment.","lastModifiedDate":"2021-10-28"},{"lineNumber":524,"author":{"gitId":"nwhloo99"},"content":"3. PB displays success message and shows the updated list of appointments.","lastModifiedDate":"2021-10-28"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":526,"author":{"gitId":"nwhloo99"},"content":"    Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":527,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":528,"author":{"gitId":"nwhloo99"},"content":"**Extensions**","lastModifiedDate":"2021-09-29"},{"lineNumber":529,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":530,"author":{"gitId":"nwhloo99"},"content":"* 1a. PB detects an error in command format.","lastModifiedDate":"2021-10-28"},{"lineNumber":531,"author":{"gitId":"nwhloo99"},"content":"    * 1a1. PB displays an error message, showing an example of the correct format.","lastModifiedDate":"2021-09-29"},{"lineNumber":532,"author":{"gitId":"nwhloo99"},"content":"    ","lastModifiedDate":"2021-09-29"},{"lineNumber":533,"author":{"gitId":"nwhloo99"},"content":"\t  Use case resumes at step 1.","lastModifiedDate":"2021-09-29"},{"lineNumber":534,"author":{"gitId":"nwhloo99"},"content":"\t","lastModifiedDate":"2021-09-29"},{"lineNumber":535,"author":{"gitId":"nwhloo99"},"content":"* 1b. PB detects an error in input format.","lastModifiedDate":"2021-10-28"},{"lineNumber":536,"author":{"gitId":"nwhloo99"},"content":"    ","lastModifiedDate":"2021-10-28"},{"lineNumber":537,"author":{"gitId":"nwhloo99"},"content":"    * 1b1. PB displays an error message, informing user what the valid input format should be.","lastModifiedDate":"2021-10-28"},{"lineNumber":538,"author":{"gitId":"nwhloo99"},"content":"\t","lastModifiedDate":"2021-10-28"},{"lineNumber":539,"author":{"gitId":"nwhloo99"},"content":"* 1c. PB does not have the specified person in the contact list.","lastModifiedDate":"2021-10-28"},{"lineNumber":540,"author":{"gitId":"nwhloo99"},"content":"\t    ","lastModifiedDate":"2021-09-29"},{"lineNumber":541,"author":{"gitId":"nwhloo99"},"content":"\t * 1c1. PB informs the user that the person does not exist.","lastModifiedDate":"2021-10-28"},{"lineNumber":542,"author":{"gitId":"nwhloo99"},"content":"        ","lastModifiedDate":"2021-09-29"},{"lineNumber":543,"author":{"gitId":"nwhloo99"},"content":"       Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":544,"author":{"gitId":"nwhloo99"},"content":"        ","lastModifiedDate":"2021-09-29"},{"lineNumber":545,"author":{"gitId":"nwhloo99"},"content":"* 1d. PB detects a collision in the time period of appointment to be added with previously added appointments.","lastModifiedDate":"2021-10-28"},{"lineNumber":546,"author":{"gitId":"nwhloo99"},"content":"    ","lastModifiedDate":"2021-10-28"},{"lineNumber":547,"author":{"gitId":"nwhloo99"},"content":"    * 1d1. PB informs the user that there is a clash.","lastModifiedDate":"2021-10-28"},{"lineNumber":548,"author":{"gitId":"nwhloo99"},"content":"    ","lastModifiedDate":"2021-10-28"},{"lineNumber":549,"author":{"gitId":"nwhloo99"},"content":"      Use case ends.","lastModifiedDate":"2021-10-28"},{"lineNumber":550,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":551,"author":{"gitId":"nwhloo99"},"content":"**Use case: UC08 - List appointments**","lastModifiedDate":"2021-10-28"},{"lineNumber":552,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":553,"author":{"gitId":"nwhloo99"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":554,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":555,"author":{"gitId":"nwhloo99"},"content":"1. User enters the list appointments command.","lastModifiedDate":"2021-10-28"},{"lineNumber":556,"author":{"gitId":"nwhloo99"},"content":"2. PB displays a list of all currently added appointments.","lastModifiedDate":"2021-10-28"},{"lineNumber":557,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":558,"author":{"gitId":"nwhloo99"},"content":"Use case ends.","lastModifiedDate":"2021-10-28"},{"lineNumber":559,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":560,"author":{"gitId":"nwhloo99"},"content":"**Extensions**","lastModifiedDate":"2021-10-28"},{"lineNumber":561,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":562,"author":{"gitId":"nwhloo99"},"content":"* 1a. PB detects that there are no appointments added.","lastModifiedDate":"2021-10-28"},{"lineNumber":563,"author":{"gitId":"nwhloo99"},"content":"    * 1a1. PB informs the user that there are no appointments added yet.","lastModifiedDate":"2021-10-28"},{"lineNumber":564,"author":{"gitId":"nwhloo99"},"content":"\t","lastModifiedDate":"2021-09-29"},{"lineNumber":565,"author":{"gitId":"nwhloo99"},"content":"      Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":566,"author":{"gitId":"nwhloo99"},"content":"    ","lastModifiedDate":"2021-09-29"},{"lineNumber":567,"author":{"gitId":"nwhloo99"},"content":"**Use case: UC09 - List appointments by Time**","lastModifiedDate":"2021-10-28"},{"lineNumber":568,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":569,"author":{"gitId":"nwhloo99"},"content":"**MSS**","lastModifiedDate":"2021-10-28"},{"lineNumber":570,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":571,"author":{"gitId":"nwhloo99"},"content":"1. User requests to list the appointments sorted by time.","lastModifiedDate":"2021-10-28"},{"lineNumber":572,"author":{"gitId":"nwhloo99"},"content":"2. PB displays a list of all currently added appointments sorted by time.","lastModifiedDate":"2021-10-28"},{"lineNumber":573,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":574,"author":{"gitId":"nwhloo99"},"content":"**Extensions**","lastModifiedDate":"2021-09-29"},{"lineNumber":575,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":576,"author":{"gitId":"nwhloo99"},"content":"* 1a. PB detects that there are no appointments added.","lastModifiedDate":"2021-10-28"},{"lineNumber":577,"author":{"gitId":"nwhloo99"},"content":"    * 1a1. PB informs the user that there are no appointments added yet.","lastModifiedDate":"2021-09-29"},{"lineNumber":578,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":579,"author":{"gitId":"nwhloo99"},"content":"      Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":580,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":581,"author":{"gitId":"nwhloo99"},"content":"**Use case: UC10 - List appointments by Description**","lastModifiedDate":"2021-10-28"},{"lineNumber":582,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":583,"author":{"gitId":"nwhloo99"},"content":"**MSS**","lastModifiedDate":"2021-10-28"},{"lineNumber":584,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":585,"author":{"gitId":"nwhloo99"},"content":"1. User requests to list the appointments sorted by description.","lastModifiedDate":"2021-10-28"},{"lineNumber":586,"author":{"gitId":"nwhloo99"},"content":"2. PB displays a list of all currently added appointments sorted by description.","lastModifiedDate":"2021-10-28"},{"lineNumber":587,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":588,"author":{"gitId":"nwhloo99"},"content":"**Extensions**","lastModifiedDate":"2021-10-28"},{"lineNumber":589,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":590,"author":{"gitId":"nwhloo99"},"content":"* 1a. PB detects that there are no appointments added.","lastModifiedDate":"2021-10-28"},{"lineNumber":591,"author":{"gitId":"nwhloo99"},"content":"    * 1a1. PB informs the user that there are no appointments added yet.","lastModifiedDate":"2021-10-28"},{"lineNumber":592,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":593,"author":{"gitId":"nwhloo99"},"content":"      Use case ends.","lastModifiedDate":"2021-10-28"},{"lineNumber":594,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":595,"author":{"gitId":"nwhloo99"},"content":"**Use case: UC11 - Delete appointment**","lastModifiedDate":"2021-10-28"},{"lineNumber":596,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":597,"author":{"gitId":"nwhloo99"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":598,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":599,"author":{"gitId":"nwhloo99"},"content":"1. User \u003cins\u003erequests to list appointments (UC08)\u003cins/\u003e.","lastModifiedDate":"2021-10-28"},{"lineNumber":600,"author":{"gitId":"nwhloo99"},"content":"2. User enters delete appointment command indicating the index of the appointment to be deleted.","lastModifiedDate":"2021-10-28"},{"lineNumber":601,"author":{"gitId":"nwhloo99"},"content":"3. PB displays a pop up window with asking for user confirmation to delete.","lastModifiedDate":"2021-10-28"},{"lineNumber":602,"author":{"gitId":"nwhloo99"},"content":"4. User confirms they want to delete.","lastModifiedDate":"2021-10-28"},{"lineNumber":603,"author":{"gitId":"nwhloo99"},"content":"5. PB deletes the appointment and displays a successful message. ","lastModifiedDate":"2021-10-28"},{"lineNumber":604,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":605,"author":{"gitId":"nwhloo99"},"content":"Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":606,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":607,"author":{"gitId":"nwhloo99"},"content":"**Extensions**","lastModifiedDate":"2021-09-29"},{"lineNumber":608,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":609,"author":{"gitId":"nwhloo99"},"content":"* 2a. PB detects that the inputted index is out of range.","lastModifiedDate":"2021-10-28"},{"lineNumber":610,"author":{"gitId":"nwhloo99"},"content":"    * 2a1. PB informs the user that the index is out of range.","lastModifiedDate":"2021-10-28"},{"lineNumber":611,"author":{"gitId":"nwhloo99"},"content":"\t ","lastModifiedDate":"2021-09-29"},{"lineNumber":612,"author":{"gitId":"nwhloo99"},"content":"\t Use case resumes at step 2.","lastModifiedDate":"2021-09-29"},{"lineNumber":613,"author":{"gitId":"nwhloo99"},"content":"\t ","lastModifiedDate":"2021-09-29"},{"lineNumber":614,"author":{"gitId":"nwhloo99"},"content":"* 4a. User indicates that they do not want to delete.","lastModifiedDate":"2021-10-28"},{"lineNumber":615,"author":{"gitId":"nwhloo99"},"content":"    ","lastModifiedDate":"2021-10-28"},{"lineNumber":616,"author":{"gitId":"nwhloo99"},"content":"    Use case ends.","lastModifiedDate":"2021-10-28"},{"lineNumber":617,"author":{"gitId":"nwhloo99"},"content":"\t\t","lastModifiedDate":"2021-10-28"},{"lineNumber":618,"author":{"gitId":"nwhloo99"},"content":"**Use case: UC12 - Edit an appointment**","lastModifiedDate":"2021-10-28"},{"lineNumber":619,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":620,"author":{"gitId":"nwhloo99"},"content":"**MSS**","lastModifiedDate":"2021-10-28"},{"lineNumber":621,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":622,"author":{"gitId":"nwhloo99"},"content":"1. User \u003cins\u003erequests to list appointments(UC08).\u003cins/\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":623,"author":{"gitId":"nwhloo99"},"content":"2. User requests to edit a specific appointment in the list.","lastModifiedDate":"2021-10-28"},{"lineNumber":624,"author":{"gitId":"nwhloo99"},"content":"3. PB edits the appointment.","lastModifiedDate":"2021-10-28"},{"lineNumber":625,"author":{"gitId":"nwhloo99"},"content":"4. PB displays success message and shows updated list of appointments.","lastModifiedDate":"2021-10-28"},{"lineNumber":626,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":627,"author":{"gitId":"nwhloo99"},"content":"    Use case ends.","lastModifiedDate":"2021-10-28"},{"lineNumber":628,"author":{"gitId":"nwhloo99"},"content":"    ","lastModifiedDate":"2021-10-28"},{"lineNumber":629,"author":{"gitId":"nwhloo99"},"content":"**Extensions**","lastModifiedDate":"2021-10-28"},{"lineNumber":630,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":631,"author":{"gitId":"nwhloo99"},"content":"* 2a. The command format is invalid.","lastModifiedDate":"2021-10-28"},{"lineNumber":632,"author":{"gitId":"nwhloo99"},"content":"    ","lastModifiedDate":"2021-10-28"},{"lineNumber":633,"author":{"gitId":"nwhloo99"},"content":"    * 2a1. PB shows an error message, and gives an example of the correct format.","lastModifiedDate":"2021-10-28"},{"lineNumber":634,"author":{"gitId":"nwhloo99"},"content":"    ","lastModifiedDate":"2021-10-28"},{"lineNumber":635,"author":{"gitId":"nwhloo99"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-10-28"},{"lineNumber":636,"author":{"gitId":"nwhloo99"},"content":"   ","lastModifiedDate":"2021-10-28"},{"lineNumber":637,"author":{"gitId":"nwhloo99"},"content":"* 2b. The input parameters are invalid.","lastModifiedDate":"2021-10-28"},{"lineNumber":638,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":639,"author":{"gitId":"nwhloo99"},"content":"    * 2b1. PB shows an error message, informing user what the valid input format should be.","lastModifiedDate":"2021-10-28"},{"lineNumber":640,"author":{"gitId":"nwhloo99"},"content":"      ","lastModifiedDate":"2021-10-28"},{"lineNumber":641,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-10-28"},{"lineNumber":642,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":643,"author":{"gitId":"nwhloo99"},"content":"**Use case: UC13 - Find Appointment by description**","lastModifiedDate":"2021-10-28"},{"lineNumber":644,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":645,"author":{"gitId":"nwhloo99"},"content":"**MSS**","lastModifiedDate":"2021-10-28"},{"lineNumber":646,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":647,"author":{"gitId":"nwhloo99"},"content":"1.  User inputs the find command with keywords to search for.","lastModifiedDate":"2021-10-28"},{"lineNumber":648,"author":{"gitId":"nwhloo99"},"content":"2.  PB shows a list of persons whose names match the given keywords.","lastModifiedDate":"2021-10-28"},{"lineNumber":649,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":650,"author":{"gitId":"nwhloo99"},"content":"    Use case ends.","lastModifiedDate":"2021-10-28"},{"lineNumber":651,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":652,"author":{"gitId":"nwhloo99"},"content":"**Extensions**","lastModifiedDate":"2021-10-28"},{"lineNumber":653,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":654,"author":{"gitId":"nwhloo99"},"content":"* 2a. PB cannot find any matching Person.","lastModifiedDate":"2021-10-28"},{"lineNumber":655,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":656,"author":{"gitId":"nwhloo99"},"content":"    * PB displays an empty list.","lastModifiedDate":"2021-10-28"},{"lineNumber":657,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":658,"author":{"gitId":"nwhloo99"},"content":"      Use case ends.","lastModifiedDate":"2021-10-28"},{"lineNumber":659,"author":{"gitId":"nwhloo99"},"content":"\t\t","lastModifiedDate":"2021-09-29"},{"lineNumber":660,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":661,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":662,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":663,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":664,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":665,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":666,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":667,"author":{"gitId":"nwhloo99"},"content":"4.  The system is not required to handle sending emails to contacts.","lastModifiedDate":"2021-09-29"},{"lineNumber":668,"author":{"gitId":"nwhloo99"},"content":"5.  Users can see previously written commands in the same session.","lastModifiedDate":"2021-09-29"},{"lineNumber":669,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":670,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":671,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":672,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":673,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":674,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":675,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":676,"author":{"gitId":"NecroWolf28"},"content":"### Commands","lastModifiedDate":"2021-10-29"},{"lineNumber":677,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":678,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":679,"author":{"gitId":"NecroWolf28"},"content":"`GeneralCommands`","lastModifiedDate":"2021-10-29"},{"lineNumber":680,"author":{"gitId":"NecroWolf28"},"content":"* `ClearCommand`","lastModifiedDate":"2021-10-29"},{"lineNumber":681,"author":{"gitId":"NecroWolf28"},"content":"* `ExitCommand`","lastModifiedDate":"2021-10-29"},{"lineNumber":682,"author":{"gitId":"NecroWolf28"},"content":"* `HelpCommand`","lastModifiedDate":"2021-10-29"},{"lineNumber":683,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":684,"author":{"gitId":"NecroWolf28"},"content":"`PersonCommands`","lastModifiedDate":"2021-10-29"},{"lineNumber":685,"author":{"gitId":"NecroWolf28"},"content":"* `AddCommand`","lastModifiedDate":"2021-10-29"},{"lineNumber":686,"author":{"gitId":"NecroWolf28"},"content":"* `DeleteCommand`","lastModifiedDate":"2021-10-29"},{"lineNumber":687,"author":{"gitId":"NecroWolf28"},"content":"* `EditCommand`","lastModifiedDate":"2021-10-29"},{"lineNumber":688,"author":{"gitId":"NecroWolf28"},"content":"* `FindCommand`","lastModifiedDate":"2021-10-29"},{"lineNumber":689,"author":{"gitId":"NecroWolf28"},"content":"* `FindTagsCommand`","lastModifiedDate":"2021-10-29"},{"lineNumber":690,"author":{"gitId":"NecroWolf28"},"content":"* `ListCommand`","lastModifiedDate":"2021-10-29"},{"lineNumber":691,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":692,"author":{"gitId":"NecroWolf28"},"content":"`AppointmentCommands`","lastModifiedDate":"2021-10-29"},{"lineNumber":693,"author":{"gitId":"NecroWolf28"},"content":"* `AddAppCommand`","lastModifiedDate":"2021-10-29"},{"lineNumber":694,"author":{"gitId":"NecroWolf28"},"content":"* `DelAppCommand`","lastModifiedDate":"2021-10-29"},{"lineNumber":695,"author":{"gitId":"NecroWolf28"},"content":"* `EditAppCommand`","lastModifiedDate":"2021-10-29"},{"lineNumber":696,"author":{"gitId":"NecroWolf28"},"content":"* `FindAppCommand`","lastModifiedDate":"2021-10-29"},{"lineNumber":697,"author":{"gitId":"YaleChen299"},"content":"* `ListAppCommand`","lastModifiedDate":"2021-10-29"},{"lineNumber":698,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":699,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":700,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":701,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":702,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":703,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":704,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":705,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":706,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":707,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":708,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":709,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":710,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":711,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":712,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":713,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":714,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":715,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":716,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":717,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":718,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":719,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":720,"author":{"gitId":"tchiong"},"content":"2. Saving window preferences","lastModifiedDate":"2021-10-28"},{"lineNumber":721,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":722,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":723,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":724,"author":{"gitId":"tchiong"},"content":"   2. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":725,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":726,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":727,"author":{"gitId":"tchiong"},"content":"### Adding a person","lastModifiedDate":"2021-10-28"},{"lineNumber":728,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":729,"author":{"gitId":"tchiong"},"content":"1. Adding a person to the list of people","lastModifiedDate":"2021-10-28"},{"lineNumber":730,"author":{"gitId":"tchiong"},"content":"   1. Test case: `add n/Susan p/90090099 e/susan@example.com a/serangoon t/Housewife` \u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":731,"author":{"gitId":"tchiong"},"content":"      Expected: New person Susan is added to the list. Details of the person will be as displayed in the","lastModifiedDate":"2021-10-28"},{"lineNumber":732,"author":{"gitId":"tchiong"},"content":"      UI under the person list, as well as the status message","lastModifiedDate":"2021-10-28"},{"lineNumber":733,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":734,"author":{"gitId":"tchiong"},"content":"   2. Test case: `add n/Susan p/90090099 e/susan@example.com a/serangoon t/Housewife` then ","lastModifiedDate":"2021-10-28"},{"lineNumber":735,"author":{"gitId":"tchiong"},"content":"      `add n/Susan p/90090099 e/susan@example.com a/serangoon t/Housewife` again \u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":736,"author":{"gitId":"tchiong"},"content":"      Expected: No person is added. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-10-28"},{"lineNumber":737,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":738,"author":{"gitId":"tchiong"},"content":"   3. Other incorrect add commands to try: `add`, `add Susan`, `add n/Susan` and other incomplete `add` commands.","lastModifiedDate":"2021-10-28"},{"lineNumber":739,"author":{"gitId":"tchiong"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2021-10-28"},{"lineNumber":740,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":741,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":742,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":743,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":744,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":745,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":746,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":747,"author":{"gitId":"tchiong"},"content":"   2. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":748,"author":{"gitId":"tchiong"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message.","lastModifiedDate":"2021-10-28"},{"lineNumber":749,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":750,"author":{"gitId":"tchiong"},"content":"   5. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":751,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":752,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":753,"author":{"gitId":"tchiong"},"content":"   6. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":754,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2021-10-28"},{"lineNumber":755,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":756,"author":{"gitId":"tchiong"},"content":"### Adding an Appointment","lastModifiedDate":"2021-10-28"},{"lineNumber":757,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":758,"author":{"gitId":"tchiong"},"content":"1. Adding an Appointment to the list of Appointments","lastModifiedDate":"2021-10-28"},{"lineNumber":759,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":760,"author":{"gitId":"tchiong"},"content":"   1. Prerequisites: List all persons using the `list` command. At least two people in the list.","lastModifiedDate":"2021-10-28"},{"lineNumber":761,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":762,"author":{"gitId":"tchiong"},"content":"   2. Test case: `addApp id/1 a/Starbucks @ Raffles City start/01-01-2021 1400 end/01-01-2021 1500 ds/discuss marketing strategies` \u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":763,"author":{"gitId":"tchiong"},"content":"      Expected: New Appointment discuss marketing strategies is added to the list. Details of the Appointment will be as shown in the","lastModifiedDate":"2021-10-28"},{"lineNumber":764,"author":{"gitId":"tchiong"},"content":"      UI under the Appointment list, and details of the person can be viewed as well. This will also be displayed in the status message.","lastModifiedDate":"2021-10-28"},{"lineNumber":765,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":766,"author":{"gitId":"tchiong"},"content":"   3. Test case: `addApp id/1,2 a/Starbucks @ Nex start/01-01-2021 1500 end/01-01-2021 1600 ds/sell product` \u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":767,"author":{"gitId":"tchiong"},"content":"      Expected: New Appointment discuss marketing strategies is added to the list. Details of the Appointment will be as shown in the","lastModifiedDate":"2021-10-28"},{"lineNumber":768,"author":{"gitId":"tchiong"},"content":"      UI under the Appointment list, and details of the two people added can be viewed as well. This will also be displayed in the status message.","lastModifiedDate":"2021-10-28"},{"lineNumber":769,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":770,"author":{"gitId":"tchiong"},"content":"   4. Test case: `addApp id/1 a/Starbucks @ Raffles City start/01-01-2021 1400 end/01-01-2021 1500 ds/discuss marketing strategies` then","lastModifiedDate":"2021-10-28"},{"lineNumber":771,"author":{"gitId":"tchiong"},"content":"      `addApp id/2 a/Starbucks @ Raffles City start/01-01-2021 1400 end/01-01-2021 1500 ds/sell product`\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":772,"author":{"gitId":"tchiong"},"content":"      Expected: No Appointment is added due to clashing time period. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-10-28"},{"lineNumber":773,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":774,"author":{"gitId":"tchiong"},"content":"   5. Other incorrect add commands to try: `addApp`, `addApp Susan`, `addApp n/Susan` and incomplete `addApp` commands.","lastModifiedDate":"2021-10-28"},{"lineNumber":775,"author":{"gitId":"tchiong"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2021-10-28"},{"lineNumber":776,"author":{"gitId":"tchiong"},"content":"   ","lastModifiedDate":"2021-10-28"},{"lineNumber":777,"author":{"gitId":"tchiong"},"content":"### Deleting an Appointment","lastModifiedDate":"2021-10-28"},{"lineNumber":778,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":779,"author":{"gitId":"tchiong"},"content":"1. Deleting an Appointment while all Appointments are being shown","lastModifiedDate":"2021-10-28"},{"lineNumber":780,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":781,"author":{"gitId":"tchiong"},"content":"    1. Prerequisites: List all persons using the `listApp` command. Multiple Appointments in the list.","lastModifiedDate":"2021-10-28"},{"lineNumber":782,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":783,"author":{"gitId":"tchiong"},"content":"    2. Test case: `delApp 1`\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":784,"author":{"gitId":"tchiong"},"content":"       Expected: First Appointment is deleted from the list. Details of the deleted Appointment shown in the status message.","lastModifiedDate":"2021-10-28"},{"lineNumber":785,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":786,"author":{"gitId":"tchiong"},"content":"    3. Test case: `delApp 0`\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":787,"author":{"gitId":"tchiong"},"content":"       Expected: No Appointment is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-10-28"},{"lineNumber":788,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":789,"author":{"gitId":"tchiong"},"content":"    4. Other incorrect delete commands to try: `delApp`, `delApp x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":790,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":791,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":792,"author":{"gitId":"tchiong"},"content":"### Editing an Appointment","lastModifiedDate":"2021-10-28"},{"lineNumber":793,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":794,"author":{"gitId":"tchiong"},"content":"1. Editing an existing Appointment while all Appointments are being shown","lastModifiedDate":"2021-10-28"},{"lineNumber":795,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":796,"author":{"gitId":"tchiong"},"content":"   1. Prerequisites: List all persons using the `listApp` command. Multiple Appointments in the list.","lastModifiedDate":"2021-10-28"},{"lineNumber":797,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":798,"author":{"gitId":"tchiong"},"content":"   2. Test case: `editApp 1 a/Earth` \u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":799,"author":{"gitId":"tchiong"},"content":"      Expected: The appointment at index 1 will have its address changed to Earth. Details of the edited Appointment shown in the status message.","lastModifiedDate":"2021-10-28"},{"lineNumber":800,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":801,"author":{"gitId":"tchiong"},"content":"   3. Incorrect edit commands to try: `editApp`, `editApp 1`, `editApp x a/address` (where x is larger than the list size)","lastModifiedDate":"2021-10-28"},{"lineNumber":802,"author":{"gitId":"tchiong"},"content":"      `editApp 1 edit` and other incorrect edited inputs \u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":803,"author":{"gitId":"tchiong"},"content":"      Expected: No Appointment is edited. Error details shown in the status message. Status bar remains the same","lastModifiedDate":"2021-10-28"},{"lineNumber":804,"author":{"gitId":"-"},"content":"      ","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"tchiong":126,"YaleChen299":30,"nwhloo99":246,"-":367,"NecroWolf28":35}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"YaleChen299"},"content":"**PlaceBook (PB) is a desktop app for managing contacts and appointments, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).** If you can type fast, PB can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"NecroWolf28"},"content":"It is most beneficial to Sales or Marketing staff who have to manage various appointments with potential clients and customers on a daily basis.","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"YaleChen299"},"content":"1. Download the latest `placebook.jar` from [here](https://github.com/AY2122S1-CS2103T-T12-3/tp/releases).","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"YaleChen299"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your PlaceBook.","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   * **`list`** : Lists all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"YaleChen299"},"content":"   * **`add`**`n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the PlaceBook.","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   * **`delete`**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * **`clear`** : Deletes all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"nwhloo99"},"content":"## Reading the document","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"nwhloo99"},"content":"This purpose of this section is to provide you with definitions of syntax, data formats that would be used in ","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"nwhloo99"},"content":"the next section [Features](#features) which contains detailed information on all the commands provided in PlaceBook.","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"nwhloo99"},"content":"### Syntax and symbols","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"nwhloo99"},"content":"The table below contains definitions of syntax used in the command format.","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"nwhloo99"},"content":"Syntax | Definition","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"nwhloo99"},"content":"-------|-----------","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"nwhloo99"},"content":"`n/, p/, etc...` | Words or letters followed by a slash refer to parameter tags. \u003cbr\u003e e.g. `n/` refers to the name parameter.","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"nwhloo99"},"content":"`UPPER_CASE` | Words in `UPPER_CASE` are the parameters to be supplied by the user. \u003cbr\u003e e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"nwhloo99"},"content":"`[]` | Words in square brackets are optional. \u003cbr\u003e  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"nwhloo99"},"content":"`...` | Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"nwhloo99"},"content":"### Data format","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"nwhloo99"},"content":"The table below contains definitions of data formats used in various parameters in the command format.","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"nwhloo99"},"content":"Parameter | Data format","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"nwhloo99"},"content":"----------|------------","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"nwhloo99"},"content":"`INDEX` | Positive integers, e.g. 1,2,3, ...","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"nwhloo99"},"content":"`DATETIME` | dd-MM-yyyy HHmm, e.g. 03-11-2021 1730 represents 3 November 2021 5.30 pm \u003cbr\u003e **Notes:** The format uses the 24 hour clock formats.","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"nwhloo99"},"content":"`EMAIL` | Emails should be of the format local-part@domain. e.g. Johnny@gmail.com","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"nwhloo99"},"content":"`Others` | All other parameters will take any alphanumeric characters and special characters as input. ","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"nwhloo99"},"content":"### Additional notes","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2021-02-03"},{"lineNumber":82,"author":{"gitId":"nwhloo99"},"content":"* If there is any error in command format, PlaceBook will notify you and show you the correct format, and provide an example.","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"nwhloo99"},"content":"* Some commands will have some command specific errors, which will be elaborated on in [Features](#features), to help you troubleshoot.","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"nwhloo99"},"content":"  ","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"nwhloo99"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"nwhloo99"},"content":"## Features","lastModifiedDate":"2021-10-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"nwhloo99"},"content":"## **Contact Features**","lastModifiedDate":"2021-10-28"},{"lineNumber":90,"author":{"gitId":"nwhloo99"},"content":"This section contains information on features related to adding contacts to the contact list.","lastModifiedDate":"2021-10-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"YaleChen299"},"content":"Adds a person to the PlaceBook.","lastModifiedDate":"2021-09-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"nwhloo99"},"content":"Error Messages:","lastModifiedDate":"2021-10-28"},{"lineNumber":107,"author":{"gitId":"nwhloo99"},"content":"* Emails should be of the format local-part@domain...","lastModifiedDate":"2021-10-28"},{"lineNumber":108,"author":{"gitId":"nwhloo99"},"content":"    * This error occurs when an invalid email format is entered. ","lastModifiedDate":"2021-10-28"},{"lineNumber":109,"author":{"gitId":"nwhloo99"},"content":"    * Please enter the correct email format, e.g. Johnny@gmail.com.","lastModifiedDate":"2021-10-28"},{"lineNumber":110,"author":{"gitId":"nwhloo99"},"content":"    ","lastModifiedDate":"2021-10-28"},{"lineNumber":111,"author":{"gitId":"nwhloo99"},"content":"* Tag names should be alphanumeric","lastModifiedDate":"2021-10-28"},{"lineNumber":112,"author":{"gitId":"nwhloo99"},"content":"    * There may be some special characters in the tag input, e.g.!@#*","lastModifiedDate":"2021-10-28"},{"lineNumber":113,"author":{"gitId":"nwhloo99"},"content":"    * There should be no spaces in tags, e.g. close friend, is invalid.","lastModifiedDate":"2021-10-28"},{"lineNumber":114,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":115,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"YaleChen299"},"content":"Shows a list of all persons in the PlaceBook.","lastModifiedDate":"2021-09-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"YaleChen299"},"content":"Edits an existing person in the PlaceBook.","lastModifiedDate":"2021-09-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"nwhloo99"},"content":"Error Messages:","lastModifiedDate":"2021-10-28"},{"lineNumber":139,"author":{"gitId":"nwhloo99"},"content":"* Emails should be of the format local-part@domain...","lastModifiedDate":"2021-10-28"},{"lineNumber":140,"author":{"gitId":"nwhloo99"},"content":"    * This error occurs when an invalid email format is entered.","lastModifiedDate":"2021-10-28"},{"lineNumber":141,"author":{"gitId":"nwhloo99"},"content":"    * Please enter the correct email format, e.g. Johnny@gmail.com.","lastModifiedDate":"2021-10-28"},{"lineNumber":142,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":143,"author":{"gitId":"nwhloo99"},"content":"* Tag names should be alphanumeric","lastModifiedDate":"2021-10-28"},{"lineNumber":144,"author":{"gitId":"nwhloo99"},"content":"    * There may be some special characters in the tag input, e.g.!@#*","lastModifiedDate":"2021-10-28"},{"lineNumber":145,"author":{"gitId":"nwhloo99"},"content":"    * There should be no spaces in tags, e.g. close friend, is invalid.","lastModifiedDate":"2021-10-28"},{"lineNumber":146,"author":{"gitId":"nwhloo99"},"content":"    ","lastModifiedDate":"2021-10-28"},{"lineNumber":147,"author":{"gitId":"nwhloo99"},"content":"* The person index provided is invalid.","lastModifiedDate":"2021-10-28"},{"lineNumber":148,"author":{"gitId":"nwhloo99"},"content":"    * The index inputted may be out of the range of the displayed list indexes.","lastModifiedDate":"2021-10-28"},{"lineNumber":149,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":150,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"nwhloo99"},"content":"* `find alex` returns `Alex Yeoh`\u003cbr\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":165,"author":{"gitId":"YaleChen299"},"content":"  ","lastModifiedDate":"2021-10-23"},{"lineNumber":166,"author":{"gitId":"nwhloo99"},"content":"![result for \u0027find alex\u0027](images/findAlexResult.png)","lastModifiedDate":"2021-10-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"NecroWolf28"},"content":"### Locating persons by tags: `findTags`","lastModifiedDate":"2021-10-26"},{"lineNumber":169,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":170,"author":{"gitId":"NecroWolf28"},"content":"Finds persons whose tags contain any of the given keywords.","lastModifiedDate":"2021-10-26"},{"lineNumber":171,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":172,"author":{"gitId":"NecroWolf28"},"content":"Format: `findTags KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-10-26"},{"lineNumber":173,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":174,"author":{"gitId":"NecroWolf28"},"content":"* The search is case-insensitive. e.g `fRieNds` will match `friends`","lastModifiedDate":"2021-10-26"},{"lineNumber":175,"author":{"gitId":"NecroWolf28"},"content":"* Only the tags are searched.","lastModifiedDate":"2021-10-26"},{"lineNumber":176,"author":{"gitId":"NecroWolf28"},"content":"* Only full words will be matched e.g. `colleague` will not match `colleagues`","lastModifiedDate":"2021-10-26"},{"lineNumber":177,"author":{"gitId":"NecroWolf28"},"content":"* Persons matching at least one tag keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2021-10-26"},{"lineNumber":178,"author":{"gitId":"NecroWolf28"},"content":"  e.g. `friends colleagues` will return persons with either `friends`, `colleagues` or both tags","lastModifiedDate":"2021-10-26"},{"lineNumber":179,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":180,"author":{"gitId":"NecroWolf28"},"content":"Examples:","lastModifiedDate":"2021-10-26"},{"lineNumber":181,"author":{"gitId":"NecroWolf28"},"content":"* `findTags friends` returns `Alex Yeoh` and `Bernice Yu`, who both have the `friends` tag","lastModifiedDate":"2021-10-26"},{"lineNumber":182,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":183,"author":{"gitId":"NecroWolf28"},"content":"![result for \u0027findTags friends\u0027](images/findTagsFriendsResult.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":184,"author":{"gitId":"NecroWolf28"},"content":"* `findTags friends colleagues` returns `Alex Yeoh`, `Bernice Yu` and `Roy Balakrishnan`, who all have either","lastModifiedDate":"2021-10-26"},{"lineNumber":185,"author":{"gitId":"NecroWolf28"},"content":"one or both of the `friends` and `colleagues` tags","lastModifiedDate":"2021-10-26"},{"lineNumber":186,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":187,"author":{"gitId":"NecroWolf28"},"content":"![result for \u0027findTags friends colleagues\u0027](images/findTagsFriendsColleaguesResult.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"YaleChen299"},"content":"Deletes the specified person from the PlaceBook.","lastModifiedDate":"2021-09-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"nwhloo99"},"content":"Error messages:","lastModifiedDate":"2021-10-28"},{"lineNumber":199,"author":{"gitId":"nwhloo99"},"content":"* The person index provided is invalid.","lastModifiedDate":"2021-10-28"},{"lineNumber":200,"author":{"gitId":"nwhloo99"},"content":"    * The index inputted may be out of the range of the displayed list indexes.","lastModifiedDate":"2021-10-28"},{"lineNumber":201,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":202,"author":{"gitId":"nwhloo99"},"content":"\u003e **Note:** The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2021-10-28"},{"lineNumber":203,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":204,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"YaleChen299"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the PlaceBook.","lastModifiedDate":"2021-09-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2021-10-28"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":210,"author":{"gitId":"nwhloo99"},"content":"Clears all contacts from PlaceBook.","lastModifiedDate":"2021-10-28"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":212,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2021-10-28"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":214,"author":{"gitId":"nwhloo99"},"content":"## **Appointment Features**","lastModifiedDate":"2021-10-28"},{"lineNumber":215,"author":{"gitId":"nwhloo99"},"content":"This section contains information on features related to adding appointments to the appointment list.","lastModifiedDate":"2021-10-28"},{"lineNumber":216,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":217,"author":{"gitId":"nwhloo99"},"content":"### Adding an appointment: `addApp`","lastModifiedDate":"2021-09-27"},{"lineNumber":218,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":219,"author":{"gitId":"tchiong"},"content":"Adds an appointment for the specified person or persons identified using a list of index(es) with ","lastModifiedDate":"2021-10-20"},{"lineNumber":220,"author":{"gitId":"tchiong"},"content":"the date (dd-MM-yyyy), optional time field (24 hour eg. 1530) and description to the ","lastModifiedDate":"2021-10-20"},{"lineNumber":221,"author":{"gitId":"tchiong"},"content":"appointment list.","lastModifiedDate":"2021-10-20"},{"lineNumber":222,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":223,"author":{"gitId":"nwhloo99"},"content":"Format: `addApp id/INDEX[INDEX,INDEX,INDEX...] a/ADDRESS start/DATETIME ti/DATETIME ds/DESCRIPTION`","lastModifiedDate":"2021-10-28"},{"lineNumber":224,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":225,"author":{"gitId":"nwhloo99"},"content":"Examples:","lastModifiedDate":"2021-09-27"},{"lineNumber":226,"author":{"gitId":"Li-Lehao"},"content":"* `addApp id/1,5 a/Starbucks @ Raffles City start/14-12-2021 1400 end/14-12-2021 1500 ds/discuss marketing strategies`","lastModifiedDate":"2021-10-29"},{"lineNumber":227,"author":{"gitId":"nwhloo99"},"content":"creates an appointment with Alex Yeoh and Irfan Ibrahim on 14-12-2021 at 1400 hrs to discuss marketing strategies","lastModifiedDate":"2021-10-22"},{"lineNumber":228,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":229,"author":{"gitId":"nwhloo99"},"content":"Error messages:","lastModifiedDate":"2021-10-28"},{"lineNumber":230,"author":{"gitId":"nwhloo99"},"content":"* The person index provided is invalid.","lastModifiedDate":"2021-10-28"},{"lineNumber":231,"author":{"gitId":"nwhloo99"},"content":"    * The index inputted may be out of the range of the displayed list indexes.","lastModifiedDate":"2021-10-28"},{"lineNumber":232,"author":{"gitId":"nwhloo99"},"content":"*  DateTime format should be \"dd-MM-yyyy HHmm\"","lastModifiedDate":"2021-10-28"},{"lineNumber":233,"author":{"gitId":"nwhloo99"},"content":"    * A common error would be not putting a 0 before numbers less than 10, e.g. 3rd March 2022 9.05 am should be represented as 03-03-2022 0905.","lastModifiedDate":"2021-10-28"},{"lineNumber":234,"author":{"gitId":"nwhloo99"},"content":"    * Ensure there is a space between the date section and the time section.","lastModifiedDate":"2021-10-28"},{"lineNumber":235,"author":{"gitId":"nwhloo99"},"content":"* Clashing appointment Timings","lastModifiedDate":"2021-10-28"},{"lineNumber":236,"author":{"gitId":"nwhloo99"},"content":"    * The appointment you are trying to add clashes with an existing appointment.","lastModifiedDate":"2021-10-28"},{"lineNumber":237,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":238,"author":{"gitId":"nwhloo99"},"content":"![result for \u0027addApp\u0027](images/addAppResult.png)","lastModifiedDate":"2021-10-23"},{"lineNumber":239,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":240,"author":{"gitId":"NecroWolf28"},"content":"### Editing an appointment: `editApp`","lastModifiedDate":"2021-09-28"},{"lineNumber":241,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":242,"author":{"gitId":"NecroWolf28"},"content":"Edits an existing appointment, rewriting all the data in the appointment.","lastModifiedDate":"2021-09-28"},{"lineNumber":243,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":244,"author":{"gitId":"nwhloo99"},"content":"Format: `editApp ai/INDEX a/ADDRESS start/DATETIME ti/DATETIME ds/DESCRIPTION`","lastModifiedDate":"2021-10-28"},{"lineNumber":245,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":246,"author":{"gitId":"NecroWolf28"},"content":"* Edits the appointment at the specified `INDEX`.","lastModifiedDate":"2021-09-28"},{"lineNumber":247,"author":{"gitId":"NecroWolf28"},"content":"* The details of the appointment will be changed accordingly.","lastModifiedDate":"2021-09-28"},{"lineNumber":248,"author":{"gitId":"NecroWolf28"},"content":"* The persons in the appointment will remain the same.","lastModifiedDate":"2021-10-26"},{"lineNumber":249,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":250,"author":{"gitId":"NecroWolf28"},"content":"Examples:","lastModifiedDate":"2021-09-28"},{"lineNumber":251,"author":{"gitId":"Li-Lehao"},"content":"* `editApp ai/1 a/Utown start/28-12-2021 1400 end/28-12-2021 1500 ds/discuss marketing strategies`","lastModifiedDate":"2021-10-29"},{"lineNumber":252,"author":{"gitId":"NecroWolf28"},"content":"  edits the details of a prior created group appointment, changing it to meet at UTown on 28-12-2021 at 1400 hrs","lastModifiedDate":"2021-10-26"},{"lineNumber":253,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":254,"author":{"gitId":"nwhloo99"},"content":"Error messages:","lastModifiedDate":"2021-10-28"},{"lineNumber":255,"author":{"gitId":"nwhloo99"},"content":"* The person index provided is invalid.","lastModifiedDate":"2021-10-28"},{"lineNumber":256,"author":{"gitId":"nwhloo99"},"content":"    * The index inputted may be out of the range of the displayed list indexes.","lastModifiedDate":"2021-10-28"},{"lineNumber":257,"author":{"gitId":"nwhloo99"},"content":"* The appointment index provided is invalid.","lastModifiedDate":"2021-10-28"},{"lineNumber":258,"author":{"gitId":"nwhloo99"},"content":"    * The index inputted may be out of the range of the displayed list indexes.","lastModifiedDate":"2021-10-28"},{"lineNumber":259,"author":{"gitId":"nwhloo99"},"content":"*  DateTime format should be \"dd-MM-yyyy HHmm\"","lastModifiedDate":"2021-10-28"},{"lineNumber":260,"author":{"gitId":"nwhloo99"},"content":"    * A common error would be not putting a 0 before numbers less than 10, e.g. 3rd March 2022 9.05 am should be represented as 03-03-2022 0905.","lastModifiedDate":"2021-10-28"},{"lineNumber":261,"author":{"gitId":"nwhloo99"},"content":"    * Ensure there is a space between the date section and the time section.","lastModifiedDate":"2021-10-28"},{"lineNumber":262,"author":{"gitId":"nwhloo99"},"content":"* Clashing appointment Timings","lastModifiedDate":"2021-10-28"},{"lineNumber":263,"author":{"gitId":"nwhloo99"},"content":"    * The appointment you are trying to add clashes with an existing appointment.","lastModifiedDate":"2021-10-28"},{"lineNumber":264,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":265,"author":{"gitId":"NecroWolf28"},"content":"Before:","lastModifiedDate":"2021-10-26"},{"lineNumber":266,"author":{"gitId":"NecroWolf28"},"content":"![result for \u0027editApp\u0027 before change](images/editAppResultBefore.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":267,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":268,"author":{"gitId":"NecroWolf28"},"content":"After:","lastModifiedDate":"2021-10-26"},{"lineNumber":269,"author":{"gitId":"NecroWolf28"},"content":"![result for \u0027editApp\u0027 after change](images/editAppResultAfter.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":270,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":271,"author":{"gitId":"tchiong"},"content":"### Deleting an appointment: `delApp`","lastModifiedDate":"2021-09-27"},{"lineNumber":272,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":273,"author":{"gitId":"tchiong"},"content":"* Deletes an appointment at the specified `INDEX`","lastModifiedDate":"2021-09-27"},{"lineNumber":274,"author":{"gitId":"NecroWolf28"},"content":"* A popup will appear asking for confirmation before actually deleting the appointment.","lastModifiedDate":"2021-10-26"},{"lineNumber":275,"author":{"gitId":"NecroWolf28"},"content":"* If the user chooses to cancel the deletion, the appointment will not be deleted.","lastModifiedDate":"2021-10-26"},{"lineNumber":276,"author":{"gitId":"tchiong"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2021-09-27"},{"lineNumber":277,"author":{"gitId":"tchiong"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-09-27"},{"lineNumber":278,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":279,"author":{"gitId":"tchiong"},"content":"Format: delApp INDEX","lastModifiedDate":"2021-09-27"},{"lineNumber":280,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":281,"author":{"gitId":"tchiong"},"content":"Examples:","lastModifiedDate":"2021-09-27"},{"lineNumber":282,"author":{"gitId":"Li-Lehao"},"content":"* `delApp 1` and the user selects \u0027OK\u0027 in the popup","lastModifiedDate":"2021-10-29"},{"lineNumber":283,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":284,"author":{"gitId":"nwhloo99"},"content":"Error messages:","lastModifiedDate":"2021-10-28"},{"lineNumber":285,"author":{"gitId":"nwhloo99"},"content":"* The appointment index provided is invalid.","lastModifiedDate":"2021-10-28"},{"lineNumber":286,"author":{"gitId":"nwhloo99"},"content":"    * The index inputted may be out of the range of the displayed list indexes.","lastModifiedDate":"2021-10-28"},{"lineNumber":287,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":288,"author":{"gitId":"NecroWolf28"},"content":"Before:","lastModifiedDate":"2021-10-26"},{"lineNumber":289,"author":{"gitId":"NecroWolf28"},"content":"![result for \u0027delApp\u0027 before change](images/delAppResultBefore.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":290,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":291,"author":{"gitId":"NecroWolf28"},"content":"Confirmation:","lastModifiedDate":"2021-10-26"},{"lineNumber":292,"author":{"gitId":"NecroWolf28"},"content":"![result for \u0027delApp\u0027 confirmation stage](images/delAppResultConfirmation.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":293,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":294,"author":{"gitId":"NecroWolf28"},"content":"After:","lastModifiedDate":"2021-10-26"},{"lineNumber":295,"author":{"gitId":"NecroWolf28"},"content":"![result for \u0027delApp\u0027 after change](images/delAppResultAfter.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":296,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":297,"author":{"gitId":"NecroWolf28"},"content":"### Locating appointments by description: `findApp`","lastModifiedDate":"2021-10-26"},{"lineNumber":298,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":299,"author":{"gitId":"YaleChen299"},"content":"Finds appointments whose descriptions contain any of the given keywords.","lastModifiedDate":"2021-10-21"},{"lineNumber":300,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":301,"author":{"gitId":"YaleChen299"},"content":"Format: `findApp KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-10-21"},{"lineNumber":302,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":303,"author":{"gitId":"YaleChen299"},"content":"* The search is case-insensitive. e.g `meeting` will match `Meeting`","lastModifiedDate":"2021-10-21"},{"lineNumber":304,"author":{"gitId":"YaleChen299"},"content":"* The order of the keywords does not matter. e.g. `Meeting online` will match `online meeting`","lastModifiedDate":"2021-10-21"},{"lineNumber":305,"author":{"gitId":"YaleChen299"},"content":"* Only the description is searched.","lastModifiedDate":"2021-10-21"},{"lineNumber":306,"author":{"gitId":"YaleChen299"},"content":"* Only full words will be matched e.g. `meet` will not match `meeting`","lastModifiedDate":"2021-10-21"},{"lineNumber":307,"author":{"gitId":"YaleChen299"},"content":"* Appointments matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2021-10-21"},{"lineNumber":308,"author":{"gitId":"YaleChen299"},"content":"  e.g. `Zoom meeting` will return `Zoom talk`, `offline meeting`","lastModifiedDate":"2021-10-21"},{"lineNumber":309,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":310,"author":{"gitId":"YaleChen299"},"content":"Examples:","lastModifiedDate":"2021-10-21"},{"lineNumber":311,"author":{"gitId":"YaleChen299"},"content":"* `findApp zoom` returns `Zoom` and `Zoom meeting`","lastModifiedDate":"2021-10-21"},{"lineNumber":312,"author":{"gitId":"YaleChen299"},"content":"* `findApp meeting talk` returns `sales talk`, `urgent meeting`\u003cbr\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":313,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":314,"author":{"gitId":"tchiong"},"content":"### Listing all appointments : `listapp` ","lastModifiedDate":"2021-10-20"},{"lineNumber":315,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":316,"author":{"gitId":"Li-Lehao"},"content":"Show all the appointments in the appointment list currently.","lastModifiedDate":"2021-09-27"},{"lineNumber":317,"author":{"gitId":"tchiong"},"content":"List is sorted by Date, Time and Description baseline. Can optionally add a condition","lastModifiedDate":"2021-10-20"},{"lineNumber":318,"author":{"gitId":"tchiong"},"content":"to sort List by, if an invalid condition is input, it will sort by baseline conditions","lastModifiedDate":"2021-10-20"},{"lineNumber":319,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":320,"author":{"gitId":"nwhloo99"},"content":"Format: `listapp` Optional: `listapp Time` or `listapp Description`","lastModifiedDate":"2021-10-28"},{"lineNumber":321,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":322,"author":{"gitId":"nwhloo99"},"content":"## **Other Features**","lastModifiedDate":"2021-10-28"},{"lineNumber":323,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":324,"author":{"gitId":"nwhloo99"},"content":"### Viewing help : `help`","lastModifiedDate":"2021-10-28"},{"lineNumber":325,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":326,"author":{"gitId":"nwhloo99"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2021-10-28"},{"lineNumber":327,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":328,"author":{"gitId":"nwhloo99"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2021-10-28"},{"lineNumber":329,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":330,"author":{"gitId":"nwhloo99"},"content":"Format: `help`","lastModifiedDate":"2021-10-28"},{"lineNumber":331,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":332,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"nwhloo99"},"content":"PlaceBook data will be saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-10-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":344,"author":{"gitId":"nwhloo99"},"content":"PlaceBook data will be saved as a JSON file `[JAR file location]/data/placebook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-10-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":346,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":347,"author":{"gitId":"YaleChen299"},"content":"If your changes to the data file makes its format invalid, PlaceBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-09-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":350,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"NecroWolf28"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains ","lastModifiedDate":"2021-10-29"},{"lineNumber":360,"author":{"gitId":"NecroWolf28"},"content":"the data of your previous PlaceBook home folder.","lastModifiedDate":"2021-10-29"},{"lineNumber":361,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":362,"author":{"gitId":"NecroWolf28"},"content":"**Q**: Will I be notified if I edit an appointment and the timing clashes with another appointment?\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":363,"author":{"gitId":"NecroWolf28"},"content":"**A**: Yes, there will be a message saying that there is an existing conflicting appointment.","lastModifiedDate":"2021-10-29"},{"lineNumber":364,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":365,"author":{"gitId":"NecroWolf28"},"content":"**Q**: Can I still use my mouse when using PlaceBook?\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":366,"author":{"gitId":"NecroWolf28"},"content":"**A**: Yes, you are still able to use your mouse for certain functionalities such as scrolling lists.","lastModifiedDate":"2021-10-29"},{"lineNumber":367,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":368,"author":{"gitId":"NecroWolf28"},"content":"**Q**: Is there a way for me to share my PlaceBook data with other people?\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":369,"author":{"gitId":"NecroWolf28"},"content":"**A**: Yes, similarly to how you transfer data from one computer to another, you can simply send the data file to ","lastModifiedDate":"2021-10-29"},{"lineNumber":370,"author":{"gitId":"NecroWolf28"},"content":"others, and then get them to download another PlaceBook jar file, then replace the data file with the one you sent.","lastModifiedDate":"2021-10-29"},{"lineNumber":371,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":372,"author":{"gitId":"NecroWolf28"},"content":"**Q**: Is there a way we can see all our appointments in a calendar grid view?\u003cbr\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":373,"author":{"gitId":"NecroWolf28"},"content":"**A**: We do not currently have a calendar view function, but we are looking into implementing it in the future.","lastModifiedDate":"2021-10-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"nwhloo99"},"content":"**AddApp** | `addApp id/INDEX[INDEX,INDEX,INDEX...] a/ADDRESS start/DATETIME ti/DATETIME ds/DESCRIPTION` \u003cbr\u003e e.g., `addApp id/1,2,3 a/Starbucks @ Raffles City start/2021-01-01 1400 end/2021-01-01 1500 ds/discuss marketing strategies`","lastModifiedDate":"2021-10-28"},{"lineNumber":383,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"tchiong"},"content":"**DelApp** | `delApp INDEX` \u003cbr\u003e e.g., `delApp 1`","lastModifiedDate":"2021-10-21"},{"lineNumber":386,"author":{"gitId":"-"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"nwhloo99"},"content":"**EditApp** | `editApp ai/INDEX a/ADDRESS start/DATETIME ti/DATETIME ds/DESCRIPTION` \u003cbr\u003e e.g., `editApp ai/1 a/UTown d/27-12-2021 ti/1400 ds/discuss UG and DG stuff`","lastModifiedDate":"2021-10-28"},{"lineNumber":388,"author":{"gitId":"-"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"NecroWolf28"},"content":"**FindTags** | `findTags KEYWORD [MORE_KEYWORDS]` \u003cbr\u003e e.g., `findTags friends`","lastModifiedDate":"2021-10-26"},{"lineNumber":390,"author":{"gitId":"YaleChen299"},"content":"**FindApp** | `findApp KEYWORD [MORE KEYWORDS`\u003cbr\u003e e.g., `findApp Zoom Meeting`","lastModifiedDate":"2021-10-21"},{"lineNumber":391,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"tchiong"},"content":"**ListApp** | `listapp [Date / Duration]`","lastModifiedDate":"2021-10-21"},{"lineNumber":393,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"tchiong":19,"Li-Lehao":7,"YaleChen299":29,"nwhloo99":113,"-":159,"NecroWolf28":67}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"YaleChen299"},"content":"    content: \"PlaceBook\";","lastModifiedDate":"2021-10-21"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"YaleChen299":1,"-":294}},{"path":"docs/diagrams/AddAppSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tchiong"},"content":"@startuml","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"tchiong"},"content":"!include style.puml","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"tchiong"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"tchiong"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"tchiong"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"tchiong"},"content":"participant \":AddAppCommandParser\" as AddAppCommandParser LOGIC_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"tchiong"},"content":"participant \"AddAppCommand\" as AddAppCommand LOGIC_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"tchiong"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"tchiong"},"content":"end box","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"tchiong"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"tchiong"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"tchiong"},"content":"end box","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"tchiong"},"content":"[-\u003e LogicManager : execute(\"addApp ...\")","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"tchiong"},"content":"activate LogicManager","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"tchiong"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"addApp ...\")","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"tchiong"},"content":"activate AddressBookParser","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"tchiong"},"content":"create AddAppCommandParser","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"tchiong"},"content":"AddressBookParser -\u003e AddAppCommandParser","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"tchiong"},"content":"activate AddAppCommandParser","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"tchiong"},"content":"AddAppCommandParser --\u003e AddressBookParser","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"tchiong"},"content":"deactivate AddAppCommandParser","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"tchiong"},"content":"AddressBookParser -\u003e AddAppCommandParser : parse(\"...\")","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"tchiong"},"content":"activate AddAppCommandParser","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"tchiong"},"content":"create AddAppCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"tchiong"},"content":"AddAppCommandParser -\u003e AddAppCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"tchiong"},"content":"activate AddAppCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"tchiong"},"content":"AddAppCommand --\u003e AddAppCommandParser","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"tchiong"},"content":"deactivate AddAppCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"tchiong"},"content":"AddAppCommandParser --\u003e AddressBookParser","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"tchiong"},"content":"deactivate AddAppCommandParser","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"tchiong"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"tchiong"},"content":"AddAppCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"tchiong"},"content":"destroy AddAppCommandParser","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"tchiong"},"content":"AddressBookParser --\u003e LogicManager","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"tchiong"},"content":"deactivate AddressBookParser","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"tchiong"},"content":"LogicManager -\u003e AddAppCommand : execute()","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"tchiong"},"content":"activate AddAppCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"tchiong"},"content":"AddAppCommand -\u003e Model : addApp","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"tchiong"},"content":"activate Model","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"tchiong"},"content":"Model --\u003e AddAppCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"tchiong"},"content":"deactivate Model","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"tchiong"},"content":"create CommandResult","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"tchiong"},"content":"AddAppCommand -\u003e CommandResult","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"tchiong"},"content":"activate CommandResult","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"tchiong"},"content":"CommandResult --\u003e AddAppCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"tchiong"},"content":"deactivate CommandResult","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":64,"author":{"gitId":"tchiong"},"content":"AddAppCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"tchiong"},"content":"deactivate AddAppCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"tchiong"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"tchiong"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-29"},{"lineNumber":69,"author":{"gitId":"tchiong"},"content":"@enduml","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"tchiong":69}},{"path":"docs/diagrams/AddAppStep1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tchiong"},"content":"@startuml","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"tchiong"},"content":"!include \u003coffice/Users/user\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"tchiong"},"content":"!include style.puml","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"tchiong"},"content":"Package \" \"\u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"tchiong"},"content":"    Class UiManager UI_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"tchiong"},"content":"    Class LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"tchiong"},"content":"    Class StorageManager STORAGE_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"tchiong"},"content":"    Class ModelManager MODEL_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"tchiong"},"content":"    Class Main #grey","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"tchiong"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"tchiong"},"content":"Class \"\u003c$user\u003e\" as User MODEL_COLOR_T2","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"tchiong"},"content":"Main -[#grey]-\u003e UiManager","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"tchiong"},"content":"Main -[#grey]-\u003e LogicManager","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"tchiong"},"content":"Main -[#grey]-\u003e StorageManager","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"tchiong"},"content":"Main -[#grey]-\u003e ModelManager","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"tchiong"},"content":"User -\u003e Main","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"tchiong"},"content":"@enduml","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"tchiong":21}},{"path":"docs/diagrams/AddAppStep2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tchiong"},"content":"@startuml","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"tchiong"},"content":"!include style.puml","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"tchiong"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"tchiong"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"tchiong"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"tchiong"},"content":"Participant \":AddressBookParser\" as addressBookParser LOGIC_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"tchiong"},"content":"Participant \":AddAppCommandParser\" as addAppCommandParser LOGIC_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"tchiong"},"content":"user -[USER_COLOR]\u003e ui : \"addApp ...\"","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"tchiong"},"content":"activate ui UI_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"tchiong"},"content":"ui -[UI_COLOR]\u003e logic : executeCommand(\"addApp ...\")","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"tchiong"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"tchiong"},"content":"logic -[LOGIC_COLOR]\u003e addressBookParser : parseCommand(\"addApp ...\")","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"tchiong"},"content":"activate addressBookParser LOGIC_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"tchiong"},"content":"addressBookParser -[LOGIC_COLOR]\u003e addAppCommandParser : parse(\"...\")","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"tchiong"},"content":"activate addAppCommandParser LOGIC_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"tchiong"},"content":"addAppCommandParser --[LOGIC_COLOR]\u003e addressBookParser: AddAppCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"tchiong"},"content":"deactivate addAppCommandParser LOGIC_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"tchiong"},"content":"addressBookParser --[LOGIC_COLOR]\u003e logic: AddAppCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"tchiong"},"content":"deactivate addressBookParser LOGIC_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"tchiong"},"content":"@enduml","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"tchiong":28}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface ReadOnlyAddressBook \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"YaleChen299"},"content":"Interface ReadOnlySchedule \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface ReadOnlyUserPrefs \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-05-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class Model","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"YaleChen299"},"content":"Class Schedule","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"YaleChen299"},"content":"Class Appointment","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"YaleChen299"},"content":"Class TimePeriod","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"YaleChen299"},"content":"Class Urgency \u003c\u003cEnumeration\u003e\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"YaleChen299"},"content":"Schedule .up.|\u003e ReadOnlySchedule","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"YaleChen299"},"content":"Model .right.\u003e ReadOnlySchedule","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"YaleChen299"},"content":"ModelManager -right-\u003e \"1\" Schedule","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"YaleChen299"},"content":"AddressBook *-left-\u003e \"1\" UniquePersonList","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"YaleChen299"},"content":"Schedule --\u003e \"~* all\" Appointment","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"YaleChen299"},"content":"Appointment -left-\u003e\"~* clients\" Person","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"YaleChen299"},"content":"Appointment *--\u003e Address","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"YaleChen299"},"content":"Appointment *--\u003e \"1\" TimePeriod","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"YaleChen299"},"content":"Appointment *--\u003e \"description\" String","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"YaleChen299"},"content":"Appointment ..\u003e Urgency","lastModifiedDate":"2021-10-29"},{"lineNumber":64,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"YaleChen299"},"content":"TimePeriod --\u003e\"start time\" LocalDateTIme","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"YaleChen299"},"content":"TimePeriod --\u003e\"end time\" LocalDateTIme","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"ModelManager --\u003e\"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"YaleChen299"},"content":"ModelManager --\u003e\"~* filtered\" Appointment","lastModifiedDate":"2021-10-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"YaleChen299":21,"-":53}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface UserPrefsStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Interface Storage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Interface AddressBookStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"YaleChen299"},"content":"package \"Schedule Storage\" #F4F6F6{","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"YaleChen299"},"content":"Interface ScheduleStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"YaleChen299"},"content":"Class JsonScheduleStorage","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"YaleChen299"},"content":"Class JsonSerializableSchedule","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"YaleChen299"},"content":"Class JsonAdaptedAppointment","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"YaleChen299"},"content":"StorageManager -up-\u003e \"1\" ScheduleStorage","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"YaleChen299"},"content":"Storage -left-|\u003e AddressBookStorage","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"YaleChen299"},"content":"Storage -right-|\u003e ScheduleStorage","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"YaleChen299"},"content":"JsonScheduleStorage .up.|\u003e ScheduleStorage","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"YaleChen299"},"content":"JsonScheduleStorage ..\u003e JsonSerializableSchedule","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"YaleChen299"},"content":"JsonSerializableSchedule --\u003e \"*\" JsonAdaptedAppointment","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"YaleChen299"},"content":"JsonAdaptedAppointment --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"YaleChen299":16,"-":41}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"YaleChen299"},"content":"title: Placebook","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"YaleChen299"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-T12-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-T12-3/tp/actions)","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-T12-3/tp/branch/master/graph/badge.svg?token\u003dOZEX1OJ121)](https://codecov.io/gh/AY2122S1-CS2103T-T12-3/tp)","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"YaleChen299"},"content":"**PlaceBook (PB) is a desktop app for managing contacts and appointments, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).** If you can type fast, PB can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"YaleChen299"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"YaleChen299":5,"-":13}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.model.ReadOnlySchedule;","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":25,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.storage.JsonScheduleStorage;","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.storage.ScheduleStorage;","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"YaleChen299"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing PLaceBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"nwhloo99"},"content":"        ScheduleStorage scheduleStorage \u003d new JsonScheduleStorage(userPrefs.getScheduleFilePath());","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"nwhloo99"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, scheduleStorage);","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"nwhloo99"},"content":"        Optional\u003cReadOnlySchedule\u003e scheduleOptional;","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"nwhloo99"},"content":"        ReadOnlySchedule initialSchedule;","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"nwhloo99"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"nwhloo99"},"content":"            scheduleOptional \u003d storage.readSchedule();","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"nwhloo99"},"content":"            // TODO: Create sample data","lastModifiedDate":"2021-10-13"},{"lineNumber":103,"author":{"gitId":"YaleChen299"},"content":"            if (!scheduleOptional.isPresent()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":104,"author":{"gitId":"YaleChen299"},"content":"                logger.info(\"Data file not found. Will be starting with a sample Schedule\");","lastModifiedDate":"2021-10-29"},{"lineNumber":105,"author":{"gitId":"YaleChen299"},"content":"            }","lastModifiedDate":"2021-10-29"},{"lineNumber":106,"author":{"gitId":"YaleChen299"},"content":"            initialSchedule \u003d scheduleOptional.orElseGet(SampleDataUtil::getSampleSchedule);","lastModifiedDate":"2021-10-29"},{"lineNumber":107,"author":{"gitId":"nwhloo99"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"nwhloo99"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty Schedule\");","lastModifiedDate":"2021-10-13"},{"lineNumber":109,"author":{"gitId":"nwhloo99"},"content":"            initialSchedule \u003d new Schedule();","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"nwhloo99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":111,"author":{"gitId":"nwhloo99"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2021-10-13"},{"lineNumber":112,"author":{"gitId":"nwhloo99"},"content":"            initialSchedule \u003d new Schedule();","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":114,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":115,"author":{"gitId":"nwhloo99"},"content":"        return new ModelManager(initialData, userPrefs, initialSchedule);","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"YaleChen299"},"content":"        logger.info(\"Starting PlaceBook \" + MainApp.VERSION);","lastModifiedDate":"2021-10-06"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"YaleChen299"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping PlaceBook ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-10-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"YaleChen299":7,"nwhloo99":20,"-":178}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"YaleChen299"},"content":"    public static final String MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"YaleChen299"},"content":"            \"The appointment index provided is invalid\";","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"YaleChen299"},"content":"    public static final String MESSAGE_APPOINTMENTS_LISTED_OVERVIEW \u003d \"%1$d appointments listed!\";","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"nwhloo99"},"content":"    public static final String MESSAGE_APPOINTMENTS_DUPLICATE_PERSON_ADDED \u003d \"Duplicated Person not allowed!\";","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"tchiong"},"content":"    public static final String MESSAGE_APPOINTMENTS_DUPLICATE_APPOINTMENT_ADDED \u003d \"Clashing appointment Timings\";","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tchiong":1,"YaleChen299":3,"nwhloo99":1,"-":12}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"YaleChen299"},"content":"import seedu.address.model.schedule.Appointment;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"YaleChen299"},"content":"    /** Returns an unmodifiable view of the filtered list of appointments */","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"YaleChen299"},"content":"    ObservableList\u003cAppointment\u003e getFilteredAppointmentList();","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"YaleChen299":4,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"YaleChen299"},"content":"import seedu.address.model.schedule.Appointment;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"nwhloo99"},"content":"            storage.saveSchedule(model.getSchedule());","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":69,"author":{"gitId":"YaleChen299"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"YaleChen299"},"content":"    public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"YaleChen299"},"content":"        return model.getFilteredAppointmentList();","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"YaleChen299"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"YaleChen299":6,"nwhloo99":1,"-":81}},{"path":"src/main/java/seedu/address/logic/commands/AddAppCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nwhloo99"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"nwhloo99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"nwhloo99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"nwhloo99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"tchiong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ENDDATETIME;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"nwhloo99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEXES;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"tchiong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STARTDATETIME;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"nwhloo99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.model.schedule.Appointment;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"tchiong"},"content":"import seedu.address.model.schedule.TimePeriod;","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"nwhloo99"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"nwhloo99"},"content":" * Creates an appointment with an existing person in PlaceBook","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"nwhloo99"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"nwhloo99"},"content":"public class AddAppCommand extends Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"nwhloo99"},"content":"    public static final String COMMAND_WORD \u003d \"addApp\";","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"nwhloo99"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an appointment to PlaceBook. \"","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"nwhloo99"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"YaleChen299"},"content":"            + PREFIX_INDEXES + \"INDEX,INDEX \"","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"nwhloo99"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"nwhloo99"},"content":"            + PREFIX_STARTDATETIME + \"DATE (dd-MM-yyyy) TIME (HHmm) \"","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"nwhloo99"},"content":"            + PREFIX_ENDDATETIME + \"DATE (dd-MM-yyyy) TIME (HHmm) \"","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"nwhloo99"},"content":"            + PREFIX_DESCRIPTION + \"DESCRIPTION \"","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"YaleChen299"},"content":"            + \"\\nExample: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"nwhloo99"},"content":"            + PREFIX_INDEXES + \"1,2,3 \"","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"nwhloo99"},"content":"            + PREFIX_ADDRESS + \"Starbucks @ Raffles City \"","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"nwhloo99"},"content":"            + PREFIX_STARTDATETIME + \"01-11-2021 1400 \"","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"nwhloo99"},"content":"            + PREFIX_ENDDATETIME + \"01-11-2021 1500 \"","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"nwhloo99"},"content":"            + PREFIX_DESCRIPTION + \"discuss marketing strategies\";","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"nwhloo99"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New appointment added: %1$s\";","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"nwhloo99"},"content":"    private final List\u003cIndex\u003e indexes;","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"nwhloo99"},"content":"    private final Address location;","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"tchiong"},"content":"    private final TimePeriod timePeriod;","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"nwhloo99"},"content":"    private final String description;","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"nwhloo99"},"content":"     * Creates an AddAppCommand","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"nwhloo99"},"content":"     * @param indexes The indexes of the person to be met during the appointment","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"nwhloo99"},"content":"     * @param location The location of the appointment","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"tchiong"},"content":"     * @param timePeriod the Time period of the appointment","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"nwhloo99"},"content":"     * @param description The description of the appointment","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"tchiong"},"content":"    public AddAppCommand(List\u003cIndex\u003e indexes, Address location, TimePeriod timePeriod, String description) {","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"nwhloo99"},"content":"        requireNonNull(indexes);","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"nwhloo99"},"content":"        requireNonNull(location);","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"tchiong"},"content":"        requireNonNull(timePeriod);","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"nwhloo99"},"content":"        requireNonNull(description);","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"nwhloo99"},"content":"        this.indexes \u003d indexes;","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"nwhloo99"},"content":"        this.location \u003d location;","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"tchiong"},"content":"        this.timePeriod \u003d timePeriod;","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"nwhloo99"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"nwhloo99"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"nwhloo99"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"nwhloo99"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"nwhloo99"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"tchiong"},"content":"        List\u003cAppointment\u003e lastShownAppList \u003d model.getFilteredAppointmentList();","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"nwhloo99"},"content":"        UniquePersonList clients \u003d new UniquePersonList();","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"nwhloo99"},"content":"        for (Index index : indexes) {","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"nwhloo99"},"content":"            if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"nwhloo99"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"nwhloo99"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"nwhloo99"},"content":"            Person client \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"nwhloo99"},"content":"            try {","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"nwhloo99"},"content":"                clients.add(client);","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"nwhloo99"},"content":"            } catch (DuplicatePersonException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"nwhloo99"},"content":"                throw new CommandException(Messages.MESSAGE_APPOINTMENTS_DUPLICATE_PERSON_ADDED);","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"nwhloo99"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"tchiong"},"content":"        for (Appointment app : lastShownAppList) {","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"tchiong"},"content":"            if (app.getTimePeriod().hasConflictWith(this.timePeriod)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"tchiong"},"content":"                throw new CommandException(Messages.MESSAGE_APPOINTMENTS_DUPLICATE_APPOINTMENT_ADDED);","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"tchiong"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"tchiong"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"Li-Lehao"},"content":"        Appointment appointmentToAdd \u003d new Appointment(clients, location, timePeriod, description);","lastModifiedDate":"2021-10-28"},{"lineNumber":94,"author":{"gitId":"Li-Lehao"},"content":"        if (!model.getClashingAppointments(appointmentToAdd).isEmpty()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":95,"author":{"gitId":"Li-Lehao"},"content":"            String clashingAppointments \u003d model.getClashingAppointmentsAsString(appointmentToAdd);","lastModifiedDate":"2021-10-28"},{"lineNumber":96,"author":{"gitId":"Li-Lehao"},"content":"            throw new CommandException(Messages.MESSAGE_APPOINTMENTS_DUPLICATE_APPOINTMENT_ADDED","lastModifiedDate":"2021-10-28"},{"lineNumber":97,"author":{"gitId":"Li-Lehao"},"content":"                    + \u0027\\n\u0027 + clashingAppointments);","lastModifiedDate":"2021-10-28"},{"lineNumber":98,"author":{"gitId":"Li-Lehao"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":99,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"Li-Lehao"},"content":"        model.addAppointment(appointmentToAdd);","lastModifiedDate":"2021-10-28"},{"lineNumber":101,"author":{"gitId":"Li-Lehao"},"content":"        model.updateState();","lastModifiedDate":"2021-10-29"},{"lineNumber":102,"author":{"gitId":"Li-Lehao"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, appointmentToAdd));","lastModifiedDate":"2021-10-28"},{"lineNumber":103,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"nwhloo99"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"nwhloo99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"nwhloo99"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"nwhloo99"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"nwhloo99"},"content":"            return true;","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"nwhloo99"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"nwhloo99"},"content":"        if (!(other instanceof AddAppCommand)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"nwhloo99"},"content":"            return false;","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"nwhloo99"},"content":"        AddAppCommand aa \u003d (AddAppCommand) other;","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"nwhloo99"},"content":"        return this.indexes.equals(aa.indexes)","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"nwhloo99"},"content":"                \u0026\u0026 this.location.equals(aa.location)","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"tchiong"},"content":"                \u0026\u0026 this.timePeriod.equals(aa.timePeriod)","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"nwhloo99"},"content":"                \u0026\u0026 this.description.equals(aa.description);","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"nwhloo99"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"tchiong":15,"Li-Lehao":9,"YaleChen299":2,"nwhloo99":97}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"Li-Lehao"},"content":"        model.updateState();","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Li-Lehao":1,"-":67}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"Li-Lehao"},"content":"        model.updateState();","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Li-Lehao":1,"-":23}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"Li-Lehao"},"content":"    /** The main window should load the filtered list again. */","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"Li-Lehao"},"content":"    private final boolean undo;","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"Li-Lehao"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, boolean undo) {","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"Li-Lehao"},"content":"        this.undo \u003d undo;","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"Li-Lehao"},"content":"        this(feedbackToUser, false, false, false);","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"Li-Lehao"},"content":"    public boolean isUndo() {","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"Li-Lehao"},"content":"        return undo;","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Li-Lehao":10,"-":69}},{"path":"src/main/java/seedu/address/logic/commands/DelAppCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NecroWolf28"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"NecroWolf28"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"NecroWolf28"},"content":"import java.util.List;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"NecroWolf28"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"NecroWolf28"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"NecroWolf28"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"NecroWolf28"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"NecroWolf28"},"content":"import seedu.address.model.schedule.Appointment;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"YaleChen299"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"NecroWolf28"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"NecroWolf28"},"content":" * Deletes an existing appointment in the schedule","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"NecroWolf28"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"NecroWolf28"},"content":"public class DelAppCommand extends Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"NecroWolf28"},"content":"    public static final String COMMAND_WORD \u003d \"delApp\";","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"NecroWolf28"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Deletes an existing appointment from PlaceBook. \"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"NecroWolf28"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"NecroWolf28"},"content":"            + \"INDEX \"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"NecroWolf28"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"NecroWolf28"},"content":"            + \"4\";","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"NecroWolf28"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Appointment deleted: %1$s\";","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"NecroWolf28"},"content":"    private final Index index;","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"NecroWolf28"},"content":"     * Creates an DelAppCommand","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"NecroWolf28"},"content":"     * @param index The index of the appointment to be deleted","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"NecroWolf28"},"content":"    public DelAppCommand(Index index) {","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"NecroWolf28"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"NecroWolf28"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"NecroWolf28"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"NecroWolf28"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"NecroWolf28"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"NecroWolf28"},"content":"        List\u003cAppointment\u003e lastShownList \u003d model.getFilteredAppointmentList();","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"NecroWolf28"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"NecroWolf28"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"NecroWolf28"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"NecroWolf28"},"content":"        Appointment appointmentToDelete \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"YaleChen299"},"content":"        String deleteWarning \u003d \"You are about to delete:\\n\" + appointmentToDelete;","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"YaleChen299"},"content":"        if (UiManager.showDeleteDialogAndWait(deleteWarning)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"NecroWolf28"},"content":"            model.deleteAppointment(appointmentToDelete);","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"Li-Lehao"},"content":"            model.updateState();","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"NecroWolf28"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, appointmentToDelete));","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"YaleChen299"},"content":"        } else {","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"YaleChen299"},"content":"            return new CommandResult(\"No appointment deleted.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"YaleChen299"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"NecroWolf28"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"Li-Lehao":1,"YaleChen299":7,"NecroWolf28":55}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"YaleChen299"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"YaleChen299"},"content":"    public static final String MESSAGE_DELETE_PERSON_WARNING \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"YaleChen299"},"content":"            \"The following appointments related to the client will be deleted as well:\\n\";","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"YaleChen299"},"content":"        String relatedAppointment \u003d MESSAGE_DELETE_PERSON_WARNING","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"Li-Lehao"},"content":"                + model.getAppointmentsThatOnlyHaveThisClientAsString(personToDelete);","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"YaleChen299"},"content":"        if (UiManager.showDeleteDialogAndWait(relatedAppointment)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"Li-Lehao"},"content":"            model.removePersonFromAppointments(personToDelete);","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"Li-Lehao"},"content":"            model.updateState();","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":55,"author":{"gitId":"YaleChen299"},"content":"        } else {","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"YaleChen299"},"content":"            return new CommandResult(\"No person deleted.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"YaleChen299"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Li-Lehao":3,"YaleChen299":10,"-":53}},{"path":"src/main/java/seedu/address/logic/commands/EditAppCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NecroWolf28"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"NecroWolf28"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"NecroWolf28"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"NecroWolf28"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"nwhloo99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ENDDATETIME;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"nwhloo99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STARTDATETIME;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"NecroWolf28"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_APPOINTMENTS;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"NecroWolf28"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"NecroWolf28"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"NecroWolf28"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"NecroWolf28"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"NecroWolf28"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"NecroWolf28"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"NecroWolf28"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"NecroWolf28"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"NecroWolf28"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"NecroWolf28"},"content":"import seedu.address.model.schedule.Appointment;","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.model.schedule.TimePeriod;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"NecroWolf28"},"content":"public class EditAppCommand extends Command {","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"NecroWolf28"},"content":"    public static final String COMMAND_WORD \u003d \"editApp\";","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"NecroWolf28"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the appointment identified \"","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"NecroWolf28"},"content":"            + \"by the index number used in the displayed appointment list. \"","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"NecroWolf28"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"NecroWolf28"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"NecroWolf28"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"NecroWolf28"},"content":"            + \"[\" + PREFIX_STARTDATETIME + \"DATE (dd-MM-yyyy) TIME (HHmm) ] \"","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"NecroWolf28"},"content":"            + \"[\" + PREFIX_ENDDATETIME + \"DATE (dd-MM-yyyy) TIME (HHmm) ] \"","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"NecroWolf28"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION] \"","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"NecroWolf28"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"NecroWolf28"},"content":"            + PREFIX_ADDRESS + \"Starbucks @ Raffles City \"","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"nwhloo99"},"content":"            + PREFIX_STARTDATETIME + \"14-12-2021 1600\"","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"nwhloo99"},"content":"            + PREFIX_ENDDATETIME + \"14-12-2021 1800\"","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"NecroWolf28"},"content":"            + PREFIX_DESCRIPTION + \"discuss marketing strategies\";","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"NecroWolf28"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Edited Appointment: %1$s\";","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"NecroWolf28"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"NecroWolf28"},"content":"    public static final String MESSAGE_DUPLICATE_APPOINTMENT \u003d \"This appointment already exists in the address book.\";","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"NecroWolf28"},"content":"    private final Index index;","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"NecroWolf28"},"content":"    private final EditAppCommand.EditAppDescriptor editAppDescriptor;","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"NecroWolf28"},"content":"     * @param index of the appointment in the filtered appointment list to edit","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"NecroWolf28"},"content":"     * @param editAppDescriptor details to edit the appointment with","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"NecroWolf28"},"content":"    public EditAppCommand(Index index, EditAppCommand.EditAppDescriptor editAppDescriptor) {","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"NecroWolf28"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"NecroWolf28"},"content":"        requireNonNull(editAppDescriptor);","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"NecroWolf28"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"NecroWolf28"},"content":"        this.editAppDescriptor \u003d new EditAppCommand.EditAppDescriptor(editAppDescriptor);","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"NecroWolf28"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"NecroWolf28"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"NecroWolf28"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"NecroWolf28"},"content":"        List\u003cAppointment\u003e lastShownList \u003d model.getFilteredAppointmentList();","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"NecroWolf28"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"NecroWolf28"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"NecroWolf28"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"NecroWolf28"},"content":"        Appointment appointmentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"NecroWolf28"},"content":"        Appointment editedAppointment \u003d createEditedAppointment(appointmentToEdit, editAppDescriptor);","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":72,"author":{"gitId":"Li-Lehao"},"content":"        if (!model.getClashingAppointments(editedAppointment).isEmpty()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"NecroWolf28"},"content":"            if (!model.getClashingAppointments(editedAppointment).contains(appointmentToEdit)) {","lastModifiedDate":"2021-10-29"},{"lineNumber":74,"author":{"gitId":"Li-Lehao"},"content":"                String clashingAppointments \u003d model.getClashingAppointmentsAsString(editedAppointment);","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"NecroWolf28"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_APPOINTMENT","lastModifiedDate":"2021-10-29"},{"lineNumber":76,"author":{"gitId":"Li-Lehao"},"content":"                        + \u0027\\n\u0027 + clashingAppointments);","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"Li-Lehao"},"content":"            }","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"NecroWolf28"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":79,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":80,"author":{"gitId":"NecroWolf28"},"content":"        model.setAppointment(appointmentToEdit, editedAppointment);","lastModifiedDate":"2021-10-29"},{"lineNumber":81,"author":{"gitId":"NecroWolf28"},"content":"        model.updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPOINTMENTS);","lastModifiedDate":"2021-10-29"},{"lineNumber":82,"author":{"gitId":"Li-Lehao"},"content":"        model.updateState();","lastModifiedDate":"2021-10-29"},{"lineNumber":83,"author":{"gitId":"NecroWolf28"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, editedAppointment));","lastModifiedDate":"2021-10-29"},{"lineNumber":84,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":85,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":87,"author":{"gitId":"NecroWolf28"},"content":"     * Creates and returns an {@code Appointment} with the details of {@code appointmentToEdit}","lastModifiedDate":"2021-10-29"},{"lineNumber":88,"author":{"gitId":"NecroWolf28"},"content":"     * edited with {@code editAppDescriptor}.","lastModifiedDate":"2021-10-29"},{"lineNumber":89,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":90,"author":{"gitId":"NecroWolf28"},"content":"    private static Appointment createEditedAppointment(Appointment appointmentToEdit,","lastModifiedDate":"2021-10-29"},{"lineNumber":91,"author":{"gitId":"NecroWolf28"},"content":"                                                       EditAppDescriptor editAppDescriptor) {","lastModifiedDate":"2021-10-29"},{"lineNumber":92,"author":{"gitId":"NecroWolf28"},"content":"        assert appointmentToEdit !\u003d null;","lastModifiedDate":"2021-10-29"},{"lineNumber":93,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":94,"author":{"gitId":"NecroWolf28"},"content":"        UniquePersonList clients \u003d appointmentToEdit.getClients();","lastModifiedDate":"2021-10-29"},{"lineNumber":95,"author":{"gitId":"NecroWolf28"},"content":"        Address updatedLocation \u003d editAppDescriptor.getLocation().orElse(appointmentToEdit.getLocation());","lastModifiedDate":"2021-10-29"},{"lineNumber":96,"author":{"gitId":"NecroWolf28"},"content":"        TimePeriod updatedTimePeriod \u003d editAppDescriptor.getTimePeriod().orElse(appointmentToEdit.getTimePeriod());","lastModifiedDate":"2021-10-29"},{"lineNumber":97,"author":{"gitId":"NecroWolf28"},"content":"        String updatedDescription \u003d editAppDescriptor.getDescription().orElse(appointmentToEdit.getDescription());","lastModifiedDate":"2021-10-29"},{"lineNumber":98,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":99,"author":{"gitId":"NecroWolf28"},"content":"        return new Appointment(clients, updatedLocation, updatedTimePeriod, updatedDescription);","lastModifiedDate":"2021-10-29"},{"lineNumber":100,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"NecroWolf28"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"NecroWolf28"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"NecroWolf28"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"NecroWolf28"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"NecroWolf28"},"content":"            return true;","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"NecroWolf28"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"NecroWolf28"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-26"},{"lineNumber":110,"author":{"gitId":"NecroWolf28"},"content":"        if (!(other instanceof EditAppCommand)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"NecroWolf28"},"content":"            return false;","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"NecroWolf28"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":114,"author":{"gitId":"NecroWolf28"},"content":"        // state check","lastModifiedDate":"2021-10-29"},{"lineNumber":115,"author":{"gitId":"NecroWolf28"},"content":"        EditAppCommand e \u003d (EditAppCommand) other;","lastModifiedDate":"2021-10-29"},{"lineNumber":116,"author":{"gitId":"NecroWolf28"},"content":"        return index.equals(e.index)","lastModifiedDate":"2021-10-29"},{"lineNumber":117,"author":{"gitId":"NecroWolf28"},"content":"                \u0026\u0026 editAppDescriptor.equals(e.editAppDescriptor);","lastModifiedDate":"2021-10-29"},{"lineNumber":118,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":119,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":120,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":121,"author":{"gitId":"NecroWolf28"},"content":"     * Stores the details to edit the appointment with. Each non-empty field value will replace the","lastModifiedDate":"2021-10-29"},{"lineNumber":122,"author":{"gitId":"NecroWolf28"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2021-10-29"},{"lineNumber":123,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":124,"author":{"gitId":"NecroWolf28"},"content":"    public static class EditAppDescriptor {","lastModifiedDate":"2021-10-29"},{"lineNumber":125,"author":{"gitId":"NecroWolf28"},"content":"        private UniquePersonList clients;","lastModifiedDate":"2021-10-29"},{"lineNumber":126,"author":{"gitId":"NecroWolf28"},"content":"        private Address location;","lastModifiedDate":"2021-10-29"},{"lineNumber":127,"author":{"gitId":"NecroWolf28"},"content":"        private TimePeriod timePeriod;","lastModifiedDate":"2021-10-29"},{"lineNumber":128,"author":{"gitId":"NecroWolf28"},"content":"        private String description;","lastModifiedDate":"2021-10-29"},{"lineNumber":129,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":130,"author":{"gitId":"NecroWolf28"},"content":"        public EditAppDescriptor() {}","lastModifiedDate":"2021-10-29"},{"lineNumber":131,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":132,"author":{"gitId":"NecroWolf28"},"content":"        /**","lastModifiedDate":"2021-10-29"},{"lineNumber":133,"author":{"gitId":"NecroWolf28"},"content":"         * Copy constructor.","lastModifiedDate":"2021-10-29"},{"lineNumber":134,"author":{"gitId":"NecroWolf28"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-10-29"},{"lineNumber":135,"author":{"gitId":"NecroWolf28"},"content":"         */","lastModifiedDate":"2021-10-29"},{"lineNumber":136,"author":{"gitId":"NecroWolf28"},"content":"        public EditAppDescriptor(EditAppCommand.EditAppDescriptor toCopy) {","lastModifiedDate":"2021-10-29"},{"lineNumber":137,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":138,"author":{"gitId":"NecroWolf28"},"content":"            setClients(toCopy.clients);","lastModifiedDate":"2021-10-29"},{"lineNumber":139,"author":{"gitId":"NecroWolf28"},"content":"            setLocation(toCopy.location);","lastModifiedDate":"2021-10-29"},{"lineNumber":140,"author":{"gitId":"NecroWolf28"},"content":"            setTimePeriod(toCopy.timePeriod);","lastModifiedDate":"2021-10-29"},{"lineNumber":141,"author":{"gitId":"NecroWolf28"},"content":"            setDescription(toCopy.description);","lastModifiedDate":"2021-10-29"},{"lineNumber":142,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":143,"author":{"gitId":"NecroWolf28"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":144,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":145,"author":{"gitId":"NecroWolf28"},"content":"        /**","lastModifiedDate":"2021-10-29"},{"lineNumber":146,"author":{"gitId":"NecroWolf28"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2021-10-29"},{"lineNumber":147,"author":{"gitId":"NecroWolf28"},"content":"         */","lastModifiedDate":"2021-10-29"},{"lineNumber":148,"author":{"gitId":"NecroWolf28"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-10-29"},{"lineNumber":149,"author":{"gitId":"NecroWolf28"},"content":"            return CollectionUtil","lastModifiedDate":"2021-10-29"},{"lineNumber":150,"author":{"gitId":"NecroWolf28"},"content":"                    .isAnyNonNull(location, timePeriod, description);","lastModifiedDate":"2021-10-29"},{"lineNumber":151,"author":{"gitId":"NecroWolf28"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":152,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":153,"author":{"gitId":"NecroWolf28"},"content":"        public void setClients(UniquePersonList clients) {","lastModifiedDate":"2021-10-29"},{"lineNumber":154,"author":{"gitId":"NecroWolf28"},"content":"            this.clients \u003d clients;","lastModifiedDate":"2021-10-29"},{"lineNumber":155,"author":{"gitId":"NecroWolf28"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":156,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":157,"author":{"gitId":"NecroWolf28"},"content":"        public UniquePersonList getClients() {","lastModifiedDate":"2021-10-29"},{"lineNumber":158,"author":{"gitId":"NecroWolf28"},"content":"            return clients;","lastModifiedDate":"2021-10-29"},{"lineNumber":159,"author":{"gitId":"NecroWolf28"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":160,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":161,"author":{"gitId":"NecroWolf28"},"content":"        public void setLocation(Address location) {","lastModifiedDate":"2021-10-29"},{"lineNumber":162,"author":{"gitId":"NecroWolf28"},"content":"            this.location \u003d location;","lastModifiedDate":"2021-10-29"},{"lineNumber":163,"author":{"gitId":"NecroWolf28"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":164,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":165,"author":{"gitId":"NecroWolf28"},"content":"        public Optional\u003cAddress\u003e getLocation() {","lastModifiedDate":"2021-10-29"},{"lineNumber":166,"author":{"gitId":"NecroWolf28"},"content":"            return Optional.ofNullable(location);","lastModifiedDate":"2021-10-29"},{"lineNumber":167,"author":{"gitId":"NecroWolf28"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":168,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":169,"author":{"gitId":"NecroWolf28"},"content":"        public void setTimePeriod(TimePeriod timePeriod) {","lastModifiedDate":"2021-10-29"},{"lineNumber":170,"author":{"gitId":"NecroWolf28"},"content":"            this.timePeriod \u003d timePeriod;","lastModifiedDate":"2021-10-29"},{"lineNumber":171,"author":{"gitId":"NecroWolf28"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":172,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":173,"author":{"gitId":"NecroWolf28"},"content":"        public Optional\u003cTimePeriod\u003e getTimePeriod() {","lastModifiedDate":"2021-10-29"},{"lineNumber":174,"author":{"gitId":"NecroWolf28"},"content":"            return Optional.ofNullable(timePeriod);","lastModifiedDate":"2021-10-29"},{"lineNumber":175,"author":{"gitId":"NecroWolf28"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":176,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":177,"author":{"gitId":"NecroWolf28"},"content":"        public void setDescription(String description) {","lastModifiedDate":"2021-10-29"},{"lineNumber":178,"author":{"gitId":"NecroWolf28"},"content":"            this.description \u003d description;","lastModifiedDate":"2021-10-29"},{"lineNumber":179,"author":{"gitId":"NecroWolf28"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":180,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":181,"author":{"gitId":"NecroWolf28"},"content":"        public Optional\u003cString\u003e getDescription() {","lastModifiedDate":"2021-10-29"},{"lineNumber":182,"author":{"gitId":"NecroWolf28"},"content":"            return Optional.ofNullable(description);","lastModifiedDate":"2021-10-29"},{"lineNumber":183,"author":{"gitId":"NecroWolf28"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":184,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":185,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":186,"author":{"gitId":"NecroWolf28"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":187,"author":{"gitId":"NecroWolf28"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-10-29"},{"lineNumber":188,"author":{"gitId":"NecroWolf28"},"content":"            // short circuit if same object","lastModifiedDate":"2021-10-29"},{"lineNumber":189,"author":{"gitId":"NecroWolf28"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-29"},{"lineNumber":190,"author":{"gitId":"NecroWolf28"},"content":"                return true;","lastModifiedDate":"2021-10-29"},{"lineNumber":191,"author":{"gitId":"NecroWolf28"},"content":"            }","lastModifiedDate":"2021-10-29"},{"lineNumber":192,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":193,"author":{"gitId":"NecroWolf28"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-10-29"},{"lineNumber":194,"author":{"gitId":"NecroWolf28"},"content":"            if (!(other instanceof EditAppCommand.EditAppDescriptor)) {","lastModifiedDate":"2021-10-29"},{"lineNumber":195,"author":{"gitId":"NecroWolf28"},"content":"                return false;","lastModifiedDate":"2021-10-29"},{"lineNumber":196,"author":{"gitId":"NecroWolf28"},"content":"            }","lastModifiedDate":"2021-10-29"},{"lineNumber":197,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":198,"author":{"gitId":"NecroWolf28"},"content":"            // state check","lastModifiedDate":"2021-10-29"},{"lineNumber":199,"author":{"gitId":"NecroWolf28"},"content":"            EditAppCommand.EditAppDescriptor e \u003d (EditAppCommand.EditAppDescriptor) other;","lastModifiedDate":"2021-10-29"},{"lineNumber":200,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":201,"author":{"gitId":"NecroWolf28"},"content":"            return getClients().equals(e.getClients())","lastModifiedDate":"2021-10-29"},{"lineNumber":202,"author":{"gitId":"NecroWolf28"},"content":"                    \u0026\u0026 getLocation().equals(e.getLocation())","lastModifiedDate":"2021-10-29"},{"lineNumber":203,"author":{"gitId":"NecroWolf28"},"content":"                    \u0026\u0026 getTimePeriod().equals(e.getTimePeriod())","lastModifiedDate":"2021-10-29"},{"lineNumber":204,"author":{"gitId":"NecroWolf28"},"content":"                    \u0026\u0026 getDescription().equals(e.getDescription());","lastModifiedDate":"2021-10-29"},{"lineNumber":205,"author":{"gitId":"NecroWolf28"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":206,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":207,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":208,"author":{"gitId":"NecroWolf28"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"Li-Lehao":5,"nwhloo99":5,"NecroWolf28":198}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"Li-Lehao"},"content":"        model.updateEditedClientInAppointments(personToEdit, editedPerson);","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"Li-Lehao"},"content":"        model.updateState();","lastModifiedDate":"2021-10-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2017-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":228,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"Li-Lehao":2,"-":226}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"Li-Lehao"},"content":"        model.updateState();","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"Li-Lehao"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false);","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Li-Lehao":2,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/FindAppCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YaleChen299"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"YaleChen299"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"YaleChen299"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"YaleChen299"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"YaleChen299"},"content":"import seedu.address.model.schedule.DescriptionContainsKeywordsPredicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"YaleChen299"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"YaleChen299"},"content":" * Finds and lists all appointments in address book whose description contains any of the argument keywords.","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"YaleChen299"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"YaleChen299"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"YaleChen299"},"content":"public class FindAppCommand extends Command {","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"YaleChen299"},"content":"    public static final String COMMAND_WORD \u003d \"findApp\";","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"YaleChen299"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"YaleChen299"},"content":"            + \": Finds all appointments whose description contain any of \"","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"YaleChen299"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"YaleChen299"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"YaleChen299"},"content":"            + \"Example: \" + COMMAND_WORD + \" meeting\";","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"YaleChen299"},"content":"    private final DescriptionContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"YaleChen299"},"content":"    public FindAppCommand(DescriptionContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"YaleChen299"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"YaleChen299"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"YaleChen299"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"YaleChen299"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"YaleChen299"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"YaleChen299"},"content":"        model.updateFilteredAppointmentList(predicate);","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"Li-Lehao"},"content":"        model.updateState();","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"YaleChen299"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"YaleChen299"},"content":"                String.format(Messages.MESSAGE_APPOINTMENTS_LISTED_OVERVIEW,","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"YaleChen299"},"content":"                        model.getFilteredAppointmentList().size()));","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"YaleChen299"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"YaleChen299"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"YaleChen299"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"YaleChen299"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"YaleChen299"},"content":"                || (other instanceof FindAppCommand // instanceof handles nulls","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"YaleChen299"},"content":"                \u0026\u0026 predicate.equals(((FindAppCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"YaleChen299"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"Li-Lehao":1,"YaleChen299":44}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"Li-Lehao"},"content":"        model.updateState();","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Li-Lehao":1,"-":42}},{"path":"src/main/java/seedu/address/logic/commands/FindTagsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NecroWolf28"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"NecroWolf28"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"NecroWolf28"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"NecroWolf28"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"NecroWolf28"},"content":"import seedu.address.model.person.PersonHasTagsPredicate;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"NecroWolf28"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"NecroWolf28"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"NecroWolf28"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"NecroWolf28"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"NecroWolf28"},"content":"public class FindTagsCommand extends Command {","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"NecroWolf28"},"content":"    public static final String COMMAND_WORD \u003d \"findTags\";","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"NecroWolf28"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose tags contain any of \"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"NecroWolf28"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"NecroWolf28"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"NecroWolf28"},"content":"            + \"Example: \" + COMMAND_WORD + \" CompanyA HR Married\";","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"NecroWolf28"},"content":"    private final PersonHasTagsPredicate predicate;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"NecroWolf28"},"content":"    public FindTagsCommand(PersonHasTagsPredicate predicate) {","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"NecroWolf28"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"NecroWolf28"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"NecroWolf28"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"NecroWolf28"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"NecroWolf28"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"Li-Lehao"},"content":"        model.updateState();","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"NecroWolf28"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"NecroWolf28"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"NecroWolf28"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"NecroWolf28"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"NecroWolf28"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"NecroWolf28"},"content":"                || (other instanceof FindTagsCommand // instanceof handles nulls","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"NecroWolf28"},"content":"                \u0026\u0026 predicate.equals(((FindTagsCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"NecroWolf28"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"Li-Lehao":1,"NecroWolf28":42}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"Li-Lehao"},"content":"        model.updateState();","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"Li-Lehao"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false, false);","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Li-Lehao":2,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/ListAppCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Li-Lehao"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"Li-Lehao"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"Li-Lehao"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_APPOINTMENTS;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"Li-Lehao"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"Li-Lehao"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"Li-Lehao"},"content":" * List all appointments in PlaceBook to the user.","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"Li-Lehao"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"Li-Lehao"},"content":"public class ListAppCommand extends Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"Li-Lehao"},"content":"    public static final String COMMAND_WORD \u003d \"listApp\";","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"tchiong"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all Appointments\";","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"tchiong"},"content":"    private final String sortBy;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"tchiong"},"content":"    public ListAppCommand(String sortBy) {","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"tchiong"},"content":"        this.sortBy \u003d sortBy;","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"tchiong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"Li-Lehao"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"Li-Lehao"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"Li-Lehao"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"Li-Lehao"},"content":"        model.updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPOINTMENTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"tchiong"},"content":"        model.sortFilteredAppointmentList(sortBy);","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"Li-Lehao"},"content":"        model.updateState();","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"Li-Lehao"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"Li-Lehao"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"Li-Lehao":21,"tchiong":9}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"Li-Lehao"},"content":"        model.updateState();","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Li-Lehao":1,"-":24}},{"path":"src/main/java/seedu/address/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Li-Lehao"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"Li-Lehao"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"Li-Lehao"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"YaleChen299"},"content":"import seedu.address.model.historystates.exceptions.NoHistoryStatesException;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"Li-Lehao"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"Li-Lehao"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"Li-Lehao"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Undo success\";","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"Li-Lehao"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"Li-Lehao"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"Li-Lehao"},"content":"        try {","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"Li-Lehao"},"content":"            model.undo();","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"Li-Lehao"},"content":"        } catch (NoHistoryStatesException e) {","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"Li-Lehao"},"content":"            throw new CommandException(\"Cannot undo: No history states\");","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"Li-Lehao"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"Li-Lehao"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false, true);","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"Li-Lehao"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"Li-Lehao":20,"YaleChen299":1}},{"path":"src/main/java/seedu/address/logic/parser/AddAppCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nwhloo99"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"nwhloo99"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"nwhloo99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"nwhloo99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"tchiong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ENDDATETIME;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"nwhloo99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEXES;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"tchiong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STARTDATETIME;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"tchiong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"nwhloo99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"nwhloo99"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.logic.commands.AddAppCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"tchiong"},"content":"import seedu.address.model.schedule.TimePeriod;","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"nwhloo99"},"content":"public class AddAppCommandParser implements Parser\u003cAddAppCommand\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"nwhloo99"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"nwhloo99"},"content":"    public AddAppCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"nwhloo99"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"tchiong"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_INDEXES, PREFIX_ADDRESS, PREFIX_STARTDATETIME,","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"tchiong"},"content":"                        PREFIX_ENDDATETIME, PREFIX_DESCRIPTION);","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"tchiong"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_INDEXES, PREFIX_ADDRESS, PREFIX_STARTDATETIME, PREFIX_ENDDATETIME,","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"nwhloo99"},"content":"                PREFIX_DESCRIPTION)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"nwhloo99"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddAppCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"nwhloo99"},"content":"        List\u003cIndex\u003e indexes \u003d ParserUtil.parseIndexes(argMultimap.getValue(PREFIX_INDEXES).get());","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"nwhloo99"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"tchiong"},"content":"        LocalDateTime startDateTime \u003d ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_STARTDATETIME).get());","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"tchiong"},"content":"        LocalDateTime endDateTime \u003d ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_ENDDATETIME).get());","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"nwhloo99"},"content":"        String description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"tchiong"},"content":"        return new AddAppCommand(indexes, address, new TimePeriod(startDateTime, endDateTime), description);","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"nwhloo99"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"nwhloo99"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"nwhloo99"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"nwhloo99"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"nwhloo99"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"tchiong":10,"nwhloo99":39}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"tchiong"},"content":"     * and returns an AddCommand object for execution","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"tchiong"},"content":"     * @return AddCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"tchiong"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"tchiong":3,"-":58}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"NecroWolf28"},"content":"import seedu.address.logic.commands.AddAppCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"NecroWolf28"},"content":"import seedu.address.logic.commands.DelAppCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"NecroWolf28"},"content":"import seedu.address.logic.commands.EditAppCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"NecroWolf28"},"content":"import seedu.address.logic.commands.FindAppCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"NecroWolf28"},"content":"import seedu.address.logic.commands.FindTagsCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"NecroWolf28"},"content":"import seedu.address.logic.commands.ListAppCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"Li-Lehao"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"YaleChen299"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":78,"author":{"gitId":"nwhloo99"},"content":"        case AddAppCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"nwhloo99"},"content":"            return new AddAppCommandParser().parse(arguments);","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"NecroWolf28"},"content":"        case DelAppCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"NecroWolf28"},"content":"            return new DelAppCommandParser().parse(arguments);","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"NecroWolf28"},"content":"        case EditAppCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"NecroWolf28"},"content":"            return new EditAppCommandParser().parse(arguments);","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"Li-Lehao"},"content":"        case ListAppCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"tchiong"},"content":"            return new ListAppCommandParser().parse(arguments);","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"YaleChen299"},"content":"        case FindAppCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"YaleChen299"},"content":"            return new FindAppCommandParser().parse(arguments);","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"NecroWolf28"},"content":"        case FindTagsCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"NecroWolf28"},"content":"            return new FindTagsCommandParser().parse(arguments);","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"Li-Lehao"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-29"},{"lineNumber":97,"author":{"gitId":"Li-Lehao"},"content":"            return new UndoCommand();","lastModifiedDate":"2021-10-29"},{"lineNumber":98,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Li-Lehao":6,"tchiong":1,"YaleChen299":4,"nwhloo99":3,"-":75,"NecroWolf28":15}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"tchiong"},"content":"    public static final Prefix PREFIX_STARTDATETIME \u003d new Prefix(\"start/\");","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"tchiong"},"content":"    public static final Prefix PREFIX_ENDDATETIME \u003d new Prefix(\"end/\");","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"nwhloo99"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"ds/\");","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"nwhloo99"},"content":"    public static final Prefix PREFIX_INDEXES \u003d new Prefix(\"id/\");","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"tchiong":2,"nwhloo99":2,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/DelAppCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NecroWolf28"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"NecroWolf28"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"NecroWolf28"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"NecroWolf28"},"content":"import seedu.address.logic.commands.DelAppCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"NecroWolf28"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"NecroWolf28"},"content":"public class DelAppCommandParser implements Parser\u003cDelAppCommand\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"NecroWolf28"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"NecroWolf28"},"content":"    public DelAppCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"NecroWolf28"},"content":"        Index index;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"NecroWolf28"},"content":"        try {","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"NecroWolf28"},"content":"            index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"NecroWolf28"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"NecroWolf28"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DelAppCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"NecroWolf28"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"NecroWolf28"},"content":"        return new DelAppCommand(index);","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"NecroWolf28"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"NecroWolf28":25}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"tchiong"},"content":"     * @return DeleteCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"tchiong"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"tchiong":2,"-":28}},{"path":"src/main/java/seedu/address/logic/parser/EditAppCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NecroWolf28"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"NecroWolf28"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"NecroWolf28"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"NecroWolf28"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"nwhloo99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ENDDATETIME;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"nwhloo99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STARTDATETIME;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"NecroWolf28"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"NecroWolf28"},"content":"import seedu.address.logic.commands.EditAppCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"NecroWolf28"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.model.schedule.TimePeriod;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"NecroWolf28"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"NecroWolf28"},"content":" * Parses input arguments and creates a new EditAppCommand object","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"NecroWolf28"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"NecroWolf28"},"content":"public class EditAppCommandParser implements Parser\u003cEditAppCommand\u003e {","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"NecroWolf28"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"NecroWolf28"},"content":"    public EditAppCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"NecroWolf28"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"NecroWolf28"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ADDRESS, PREFIX_STARTDATETIME,","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"nwhloo99"},"content":"                        PREFIX_ENDDATETIME, PREFIX_DESCRIPTION);","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"NecroWolf28"},"content":"        Index index;","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"NecroWolf28"},"content":"        try {","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"NecroWolf28"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"NecroWolf28"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"NecroWolf28"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditAppCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"NecroWolf28"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"NecroWolf28"},"content":"        EditAppCommand.EditAppDescriptor editAppDescriptor \u003d new EditAppCommand.EditAppDescriptor();","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"NecroWolf28"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"NecroWolf28"},"content":"            editAppDescriptor.setLocation(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"NecroWolf28"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"NecroWolf28"},"content":"        if (argMultimap.getValue(PREFIX_STARTDATETIME).isPresent()","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"NecroWolf28"},"content":"                \u0026\u0026 argMultimap.getValue(PREFIX_ENDDATETIME).isPresent()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"NecroWolf28"},"content":"            editAppDescriptor","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"NecroWolf28"},"content":"                    .setTimePeriod(new TimePeriod(ParserUtil.parseDateTime(argMultimap","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"NecroWolf28"},"content":"                            .getValue(PREFIX_STARTDATETIME).get()),","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"NecroWolf28"},"content":"                            ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_ENDDATETIME).get())));","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"NecroWolf28"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"NecroWolf28"},"content":"        if (argMultimap.getValue(PREFIX_DESCRIPTION).isPresent()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"NecroWolf28"},"content":"            editAppDescriptor.setDescription(ParserUtil","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"NecroWolf28"},"content":"                    .parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get()));","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"NecroWolf28"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"NecroWolf28"},"content":"        if (!editAppDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"NecroWolf28"},"content":"            throw new ParseException(EditAppCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"NecroWolf28"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"NecroWolf28"},"content":"        return new EditAppCommand(index, editAppDescriptor);","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"NecroWolf28"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"nwhloo99":4,"NecroWolf28":52}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"tchiong"},"content":"     * @return EditCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"tchiong"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"tchiong":2,"-":81}},{"path":"src/main/java/seedu/address/logic/parser/FindAppCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YaleChen299"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"YaleChen299"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"YaleChen299"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"YaleChen299"},"content":"import seedu.address.logic.commands.FindAppCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"YaleChen299"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"YaleChen299"},"content":"import seedu.address.model.schedule.DescriptionContainsKeywordsPredicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"YaleChen299"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"YaleChen299"},"content":" * Parses input arguments and creates a new FindAppCommand object","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"YaleChen299"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"YaleChen299"},"content":"public class FindAppCommandParser implements Parser\u003cFindAppCommand\u003e {","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"YaleChen299"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"YaleChen299"},"content":"     * Parses the given {@code String} of arguments in the context of the FindAppCommand","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"YaleChen299"},"content":"     * and returns a FindAppCommand object for execution.","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"tchiong"},"content":"     * @return FindAppCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"tchiong"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"YaleChen299"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"YaleChen299"},"content":"    public FindAppCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"YaleChen299"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"YaleChen299"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"YaleChen299"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"YaleChen299"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindAppCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"YaleChen299"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"YaleChen299"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"YaleChen299"},"content":"        return new FindAppCommand(new DescriptionContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"YaleChen299"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"tchiong":2,"YaleChen299":32}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"tchiong"},"content":"     * @return FindCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"YaleChen299"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"tchiong":1,"YaleChen299":1,"-":32}},{"path":"src/main/java/seedu/address/logic/parser/FindTagsCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NecroWolf28"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"NecroWolf28"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"NecroWolf28"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"NecroWolf28"},"content":"import seedu.address.logic.commands.FindTagsCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"NecroWolf28"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"NecroWolf28"},"content":"import seedu.address.model.person.PersonHasTagsPredicate;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"NecroWolf28"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"NecroWolf28"},"content":" * Parses input arguments and creates a new FindTagsCommand object","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"NecroWolf28"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"NecroWolf28"},"content":"public class FindTagsCommandParser implements Parser\u003cFindTagsCommand\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"NecroWolf28"},"content":"     * Parses the given {@code String} of arguments in the context of the FindTagsCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"NecroWolf28"},"content":"     * and returns a FindTagsCommand object for execution.","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"NecroWolf28"},"content":"     * @return FindTagsCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"NecroWolf28"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"NecroWolf28"},"content":"    public FindTagsCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"NecroWolf28"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"NecroWolf28"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"NecroWolf28"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"NecroWolf28"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindTagsCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"NecroWolf28"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"NecroWolf28"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"NecroWolf28"},"content":"        return new FindTagsCommand(new PersonHasTagsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"NecroWolf28"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"NecroWolf28":34}},{"path":"src/main/java/seedu/address/logic/parser/ListAppCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tchiong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"tchiong"},"content":"import seedu.address.logic.commands.ListAppCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"tchiong"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"tchiong"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"tchiong"},"content":" * Parses input arguments and creates a new FindAppCommand object","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"tchiong"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"tchiong"},"content":"public class ListAppCommandParser implements Parser\u003cListAppCommand\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"tchiong"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"tchiong"},"content":"     * Parses the given {@code String} of arguments in the context of the FindAppCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"tchiong"},"content":"     * and returns a FindAppCommand object for execution.","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"tchiong"},"content":"     * @return ListAppCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"tchiong"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"tchiong"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"tchiong"},"content":"    public ListAppCommand parse (String args) throws ParseException {","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"tchiong"},"content":"        String sortBy \u003d args.trim();","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"tchiong"},"content":"        return new ListAppCommand(sortBy);","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"tchiong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"tchiong"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"tchiong":23}},{"path":"src/main/java/seedu/address/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-07-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-07-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"tchiong"},"content":"     * @return Command","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"YaleChen299"},"content":"     * @throws ParseException if {@code userInput} does not conform to the expected format","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"tchiong":1,"YaleChen299":1,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"nwhloo99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"tchiong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"nwhloo99"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"nwhloo99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"nwhloo99"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"nwhloo99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"nwhloo99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"nwhloo99"},"content":"     * Parses {@code oneBasedIndexes} into a {@code List\u003cIndex\u003e} and returns it.","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"nwhloo99"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"nwhloo99"},"content":"     * @throws ParseException if the any index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"nwhloo99"},"content":"    public static List\u003cIndex\u003e parseIndexes(String oneBasedIndexes) throws ParseException {","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"nwhloo99"},"content":"        String trimmedIndexes \u003d oneBasedIndexes.trim();","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"nwhloo99"},"content":"        String[] indexesArray \u003d trimmedIndexes.split(\",\");","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"nwhloo99"},"content":"        List\u003cIndex\u003e indexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"nwhloo99"},"content":"        for (String oneBasedIndex : indexesArray) {","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"nwhloo99"},"content":"            indexes.add(parseIndex(oneBasedIndex));","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"nwhloo99"},"content":"        return indexes;","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":146,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":147,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":148,"author":{"gitId":"nwhloo99"},"content":"     * Parses a {@code String date} into a {@Code LocalDate}","lastModifiedDate":"2021-10-07"},{"lineNumber":149,"author":{"gitId":"nwhloo99"},"content":"     * Leading and trailing whitespaces will be removed.","lastModifiedDate":"2021-10-07"},{"lineNumber":150,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":151,"author":{"gitId":"nwhloo99"},"content":"     * @throws ParseException if the given {@Code LocalDate} is invalid","lastModifiedDate":"2021-10-07"},{"lineNumber":152,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":153,"author":{"gitId":"nwhloo99"},"content":"    public static LocalDate parseDate(String date) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":154,"author":{"gitId":"nwhloo99"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-10-07"},{"lineNumber":155,"author":{"gitId":"nwhloo99"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2021-10-07"},{"lineNumber":156,"author":{"gitId":"nwhloo99"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2021-10-07"},{"lineNumber":157,"author":{"gitId":"nwhloo99"},"content":"        try {","lastModifiedDate":"2021-10-07"},{"lineNumber":158,"author":{"gitId":"nwhloo99"},"content":"            return LocalDate.parse(trimmedDate, formatter);","lastModifiedDate":"2021-10-07"},{"lineNumber":159,"author":{"gitId":"nwhloo99"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-07"},{"lineNumber":160,"author":{"gitId":"nwhloo99"},"content":"            throw new ParseException(\"Date format should be dd-MM-yyyy\");","lastModifiedDate":"2021-10-07"},{"lineNumber":161,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":162,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":163,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":164,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":165,"author":{"gitId":"nwhloo99"},"content":"     * Parses a {@code String time} into a {@Code LocalTime}","lastModifiedDate":"2021-10-07"},{"lineNumber":166,"author":{"gitId":"nwhloo99"},"content":"     * Leading and trailing whitespaces will be removed.","lastModifiedDate":"2021-10-07"},{"lineNumber":167,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":168,"author":{"gitId":"nwhloo99"},"content":"     * @throws ParseException if the given {@Code LocalTime} is invalid","lastModifiedDate":"2021-10-07"},{"lineNumber":169,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":170,"author":{"gitId":"nwhloo99"},"content":"    public static LocalTime parseTime(String time) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":171,"author":{"gitId":"nwhloo99"},"content":"        requireNonNull(time);","lastModifiedDate":"2021-10-07"},{"lineNumber":172,"author":{"gitId":"nwhloo99"},"content":"        String trimmedTime \u003d time.trim();","lastModifiedDate":"2021-10-07"},{"lineNumber":173,"author":{"gitId":"nwhloo99"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2021-10-07"},{"lineNumber":174,"author":{"gitId":"nwhloo99"},"content":"        try {","lastModifiedDate":"2021-10-07"},{"lineNumber":175,"author":{"gitId":"nwhloo99"},"content":"            return LocalTime.parse(trimmedTime, formatter);","lastModifiedDate":"2021-10-07"},{"lineNumber":176,"author":{"gitId":"nwhloo99"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-07"},{"lineNumber":177,"author":{"gitId":"nwhloo99"},"content":"            throw new ParseException(\"Time format should be HHMM\");","lastModifiedDate":"2021-10-07"},{"lineNumber":178,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":179,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":180,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":181,"author":{"gitId":"tchiong"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":182,"author":{"gitId":"tchiong"},"content":"     * Parses a {@code String time} into a {@Code LocalTime}","lastModifiedDate":"2021-10-26"},{"lineNumber":183,"author":{"gitId":"tchiong"},"content":"     * Leading and trailing whitespaces will be removed.","lastModifiedDate":"2021-10-26"},{"lineNumber":184,"author":{"gitId":"tchiong"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":185,"author":{"gitId":"tchiong"},"content":"     * @throws ParseException if the given {@Code LocalTime} is invalid","lastModifiedDate":"2021-10-26"},{"lineNumber":186,"author":{"gitId":"tchiong"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":187,"author":{"gitId":"tchiong"},"content":"    public static LocalDateTime parseDateTime(String dateTime) throws ParseException {","lastModifiedDate":"2021-10-26"},{"lineNumber":188,"author":{"gitId":"tchiong"},"content":"        requireNonNull(dateTime);","lastModifiedDate":"2021-10-26"},{"lineNumber":189,"author":{"gitId":"tchiong"},"content":"        String trimmedDateTime \u003d dateTime.trim();","lastModifiedDate":"2021-10-26"},{"lineNumber":190,"author":{"gitId":"nwhloo99"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2021-10-26"},{"lineNumber":191,"author":{"gitId":"tchiong"},"content":"        try {","lastModifiedDate":"2021-10-26"},{"lineNumber":192,"author":{"gitId":"tchiong"},"content":"            return LocalDateTime.parse(trimmedDateTime, formatter);","lastModifiedDate":"2021-10-26"},{"lineNumber":193,"author":{"gitId":"tchiong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":194,"author":{"gitId":"nwhloo99"},"content":"            throw new ParseException(\"DateTime format should be \\\"dd-MM-yyyy HHmm\\\"\");","lastModifiedDate":"2021-10-26"},{"lineNumber":195,"author":{"gitId":"tchiong"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":196,"author":{"gitId":"tchiong"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":197,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":198,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":199,"author":{"gitId":"nwhloo99"},"content":"     * Parses a {@code String description} by removing leading and trailing whitespaces.","lastModifiedDate":"2021-10-07"},{"lineNumber":200,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":201,"author":{"gitId":"nwhloo99"},"content":"    public static String parseDescription(String description) {","lastModifiedDate":"2021-10-07"},{"lineNumber":202,"author":{"gitId":"nwhloo99"},"content":"        requireNonNull(description);","lastModifiedDate":"2021-10-07"},{"lineNumber":203,"author":{"gitId":"nwhloo99"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2021-10-07"},{"lineNumber":204,"author":{"gitId":"nwhloo99"},"content":"        return trimmedDescription;","lastModifiedDate":"2021-10-07"},{"lineNumber":205,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"tchiong":16,"nwhloo99":66,"-":124}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"Li-Lehao"},"content":"import java.util.List;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"YaleChen299"},"content":"import seedu.address.model.historystates.exceptions.NoHistoryStatesException;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"tchiong"},"content":"import seedu.address.model.schedule.Appointment;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"YaleChen299"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"Li-Lehao"},"content":"    Predicate\u003cAppointment\u003e PREDICATE_SHOW_ALL_APPOINTMENTS \u003d unused -\u003e true;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"NecroWolf28"},"content":"     * Replaces PlaceBook data with the data in {@code addressBook}.","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"nwhloo99"},"content":"    /** Returns the Schedule */","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"nwhloo99"},"content":"    ReadOnlySchedule getSchedule();","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"NecroWolf28"},"content":"     * Returns true if a person with the same identity as {@code person} exists in PlaceBook.","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"NecroWolf28"},"content":"     * The person must exist in PlaceBook.","lastModifiedDate":"2021-10-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"NecroWolf28"},"content":"     * {@code person} must not already exist in PlaceBook.","lastModifiedDate":"2021-10-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"NecroWolf28"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in PlaceBook.","lastModifiedDate":"2021-10-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"tchiong"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"tchiong"},"content":"     * Adds the given Appointment","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"tchiong"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"tchiong"},"content":"    void addAppointment(Appointment a);","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"tchiong"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"tchiong"},"content":"     * Removes the given Appointment","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"tchiong"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"tchiong"},"content":"    void deleteAppointment(Appointment a);","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"Li-Lehao"},"content":"    /** Returns an unmodifiable view of the filtered appointment list */","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"Li-Lehao"},"content":"    ObservableList\u003cAppointment\u003e getFilteredAppointmentList();","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"tchiong"},"content":"    /** Returns a sorted unmodifiable view of the filtered appointment list */","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"tchiong"},"content":"    void sortFilteredAppointmentList(String sortBy);","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"Li-Lehao"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"Li-Lehao"},"content":"     * Updates the filter of the filtered appointments list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"Li-Lehao"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"Li-Lehao"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"Li-Lehao"},"content":"    void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e predicate);","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"YaleChen299"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":120,"author":{"gitId":"Li-Lehao"},"content":"     * Returns the String representation of {@Code Appointment} that is related to the {@Code Person}.","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"YaleChen299"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":122,"author":{"gitId":"Li-Lehao"},"content":"     * @param client the person to search.","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"YaleChen299"},"content":"     * @return the String representation of the list of appointments related to the client.","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"YaleChen299"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":125,"author":{"gitId":"YaleChen299"},"content":"    String getRelatedAppointmentsAsString(Person client);","lastModifiedDate":"2021-10-20"},{"lineNumber":126,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"Li-Lehao"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"Li-Lehao"},"content":"     * Returns the String representation of {@Code Appointment} that only have this {@Code client} in its client list.","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"Li-Lehao"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"Li-Lehao"},"content":"     * @param client the person to search.","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"Li-Lehao"},"content":"     * @return the String representation of the list of appointments that only have this client in its client list.","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"Li-Lehao"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"Li-Lehao"},"content":"    String getAppointmentsThatOnlyHaveThisClientAsString(Person client);","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":135,"author":{"gitId":"Li-Lehao"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"Li-Lehao"},"content":"     * Replace the client in the client list of the appointments by a new edited client.","lastModifiedDate":"2021-10-26"},{"lineNumber":137,"author":{"gitId":"Li-Lehao"},"content":"     * @param personToEdit the previous client.","lastModifiedDate":"2021-10-26"},{"lineNumber":138,"author":{"gitId":"Li-Lehao"},"content":"     * @param editedPerson the new client that created when edit person information.","lastModifiedDate":"2021-10-26"},{"lineNumber":139,"author":{"gitId":"Li-Lehao"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":140,"author":{"gitId":"Li-Lehao"},"content":"    void updateEditedClientInAppointments(Person personToEdit, Person editedPerson);","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":142,"author":{"gitId":"Li-Lehao"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":143,"author":{"gitId":"Li-Lehao"},"content":"     * Remove the given person from the client list of the appointments,","lastModifiedDate":"2021-10-26"},{"lineNumber":144,"author":{"gitId":"Li-Lehao"},"content":"     * if the appointment has no client after the deletion, the appointment will be removed from schedule.","lastModifiedDate":"2021-10-26"},{"lineNumber":145,"author":{"gitId":"Li-Lehao"},"content":"     * @param personToDelete the given person to delete.","lastModifiedDate":"2021-10-26"},{"lineNumber":146,"author":{"gitId":"Li-Lehao"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":147,"author":{"gitId":"Li-Lehao"},"content":"    void removePersonFromAppointments(Person personToDelete);","lastModifiedDate":"2021-10-26"},{"lineNumber":148,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":149,"author":{"gitId":"Li-Lehao"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":150,"author":{"gitId":"Li-Lehao"},"content":"     * Check whether there are appointments that has time conflicts","lastModifiedDate":"2021-10-28"},{"lineNumber":151,"author":{"gitId":"Li-Lehao"},"content":"     * with the given appointment in the current appointment list.","lastModifiedDate":"2021-10-28"},{"lineNumber":152,"author":{"gitId":"Li-Lehao"},"content":"     * @param appointment The given appointment to check.","lastModifiedDate":"2021-10-28"},{"lineNumber":153,"author":{"gitId":"Li-Lehao"},"content":"     * @return A list of appointments, the appointments that has time conflicts","lastModifiedDate":"2021-10-28"},{"lineNumber":154,"author":{"gitId":"Li-Lehao"},"content":"     * with the given appointment.","lastModifiedDate":"2021-10-28"},{"lineNumber":155,"author":{"gitId":"Li-Lehao"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":156,"author":{"gitId":"Li-Lehao"},"content":"    List\u003cAppointment\u003e getClashingAppointments(Appointment appointment);","lastModifiedDate":"2021-10-28"},{"lineNumber":157,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":158,"author":{"gitId":"Li-Lehao"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":159,"author":{"gitId":"Li-Lehao"},"content":"     * Returns the String representation of the appointments that have time conflict with the","lastModifiedDate":"2021-10-28"},{"lineNumber":160,"author":{"gitId":"Li-Lehao"},"content":"     * given appointment.","lastModifiedDate":"2021-10-28"},{"lineNumber":161,"author":{"gitId":"Li-Lehao"},"content":"     * @param appointment The given appointment to check.","lastModifiedDate":"2021-10-28"},{"lineNumber":162,"author":{"gitId":"Li-Lehao"},"content":"     * @return The String representation of the appointments that have time conflict with the","lastModifiedDate":"2021-10-28"},{"lineNumber":163,"author":{"gitId":"Li-Lehao"},"content":"     * given appointment.","lastModifiedDate":"2021-10-28"},{"lineNumber":164,"author":{"gitId":"Li-Lehao"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":165,"author":{"gitId":"Li-Lehao"},"content":"    String getClashingAppointmentsAsString(Appointment appointment);","lastModifiedDate":"2021-10-28"},{"lineNumber":166,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":167,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":168,"author":{"gitId":"NecroWolf28"},"content":"     * Replaces the given appointment {@code target} with {@code editedAppointment}.","lastModifiedDate":"2021-10-29"},{"lineNumber":169,"author":{"gitId":"NecroWolf28"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-10-29"},{"lineNumber":170,"author":{"gitId":"NecroWolf28"},"content":"     * The appointment identity of {@code editedAppointment}","lastModifiedDate":"2021-10-29"},{"lineNumber":171,"author":{"gitId":"NecroWolf28"},"content":"     * must not be the same as another existing appointment in PlaceBook.","lastModifiedDate":"2021-10-29"},{"lineNumber":172,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":173,"author":{"gitId":"NecroWolf28"},"content":"    void setAppointment(Appointment appointmentToEdit, Appointment editedAppointment);","lastModifiedDate":"2021-10-29"},{"lineNumber":174,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":175,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":176,"author":{"gitId":"Li-Lehao"},"content":"     * Go back to the previous state before executing a certain command.","lastModifiedDate":"2021-10-29"},{"lineNumber":177,"author":{"gitId":"Li-Lehao"},"content":"     * @throws NoHistoryStatesException Throw exception if there is no previous state.","lastModifiedDate":"2021-10-29"},{"lineNumber":178,"author":{"gitId":"Li-Lehao"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":179,"author":{"gitId":"Li-Lehao"},"content":"    void undo() throws NoHistoryStatesException;","lastModifiedDate":"2021-10-29"},{"lineNumber":180,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":181,"author":{"gitId":"Li-Lehao"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":182,"author":{"gitId":"Li-Lehao"},"content":"     * Add the current state into the history states.","lastModifiedDate":"2021-10-29"},{"lineNumber":183,"author":{"gitId":"Li-Lehao"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":184,"author":{"gitId":"Li-Lehao"},"content":"    public void updateState();","lastModifiedDate":"2021-10-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Li-Lehao":63,"tchiong":14,"YaleChen299":8,"nwhloo99":4,"-":82,"NecroWolf28":14}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"Li-Lehao"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"YaleChen299"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":16,"author":{"gitId":"YaleChen299"},"content":"import seedu.address.model.historystates.HistoryStates;","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"YaleChen299"},"content":"import seedu.address.model.historystates.State;","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"YaleChen299"},"content":"import seedu.address.model.historystates.exceptions.NoHistoryStatesException;","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"tchiong"},"content":"import seedu.address.model.schedule.Appointment;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"Li-Lehao"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"Li-Lehao"},"content":"    private Schedule schedule;","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"Li-Lehao"},"content":"    private FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"Li-Lehao"},"content":"    private FilteredList\u003cAppointment\u003e filteredAppointments;","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"Li-Lehao"},"content":"    private final HistoryStates historyStates;","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"Li-Lehao"},"content":"     * Initializes a ModelManager with the given addressBook, userPrefs and schedule.","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"nwhloo99"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs, ReadOnlySchedule schedule) {","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"nwhloo99"},"content":"        this.schedule \u003d new Schedule(schedule);","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"nwhloo99"},"content":"        filteredAppointments \u003d new FilteredList\u003c\u003e(this.schedule.getSchedule());","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"Li-Lehao"},"content":"        this.historyStates \u003d new HistoryStates();","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"Li-Lehao"},"content":"        State originState \u003d new State(this.addressBook, this.schedule);","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"Li-Lehao"},"content":"        this.historyStates.addNewState(originState);","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"Li-Lehao"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"Li-Lehao"},"content":"     * Initializes a ModelManager with the given addressBook, userPrefs, schedule and history states.","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"Li-Lehao"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"Li-Lehao"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs,","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"Li-Lehao"},"content":"                        ReadOnlySchedule schedule, HistoryStates historyStates) {","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"Li-Lehao"},"content":"        super();","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"Li-Lehao"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"Li-Lehao"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-10-29"},{"lineNumber":64,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"Li-Lehao"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"Li-Lehao"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"Li-Lehao"},"content":"        this.schedule \u003d new Schedule(schedule);","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"Li-Lehao"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2021-10-29"},{"lineNumber":69,"author":{"gitId":"Li-Lehao"},"content":"        filteredAppointments \u003d new FilteredList\u003c\u003e(this.schedule.getSchedule());","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"Li-Lehao"},"content":"        this.historyStates \u003d historyStates;","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":74,"author":{"gitId":"nwhloo99"},"content":"        this(new AddressBook(), new UserPrefs(), new Schedule());","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"nwhloo99"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":125,"author":{"gitId":"nwhloo99"},"content":"    public ReadOnlySchedule getSchedule() {","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"nwhloo99"},"content":"        return schedule;","lastModifiedDate":"2021-10-13"},{"lineNumber":127,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":128,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":144,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":155,"author":{"gitId":"tchiong"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":156,"author":{"gitId":"tchiong"},"content":"    public void addAppointment(Appointment a) {","lastModifiedDate":"2021-10-07"},{"lineNumber":157,"author":{"gitId":"tchiong"},"content":"        requireNonNull(a);","lastModifiedDate":"2021-10-07"},{"lineNumber":158,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":159,"author":{"gitId":"nwhloo99"},"content":"        schedule.addAppointment(a);","lastModifiedDate":"2021-10-13"},{"lineNumber":160,"author":{"gitId":"tchiong"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":161,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":162,"author":{"gitId":"tchiong"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":163,"author":{"gitId":"tchiong"},"content":"    public void deleteAppointment(Appointment a) {","lastModifiedDate":"2021-10-07"},{"lineNumber":164,"author":{"gitId":"tchiong"},"content":"        requireNonNull(a);","lastModifiedDate":"2021-10-07"},{"lineNumber":165,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":166,"author":{"gitId":"nwhloo99"},"content":"        schedule.deleteAppointment(a);","lastModifiedDate":"2021-10-13"},{"lineNumber":167,"author":{"gitId":"tchiong"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":168,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":169,"author":{"gitId":"YaleChen299"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":170,"author":{"gitId":"YaleChen299"},"content":"    public void setAppointment(Appointment appointmentToEdit, Appointment editedAppointment) {","lastModifiedDate":"2021-10-29"},{"lineNumber":171,"author":{"gitId":"YaleChen299"},"content":"        requireAllNonNull(appointmentToEdit, editedAppointment);","lastModifiedDate":"2021-10-29"},{"lineNumber":172,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":173,"author":{"gitId":"YaleChen299"},"content":"        schedule.setAppointment(appointmentToEdit, editedAppointment);","lastModifiedDate":"2021-10-29"},{"lineNumber":174,"author":{"gitId":"YaleChen299"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":175,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":176,"author":{"gitId":"YaleChen299"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Query Operations \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":177,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":178,"author":{"gitId":"YaleChen299"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":179,"author":{"gitId":"YaleChen299"},"content":"     * Returns the String representation of {@Code Appointment} that is related to the {@Code Person}","lastModifiedDate":"2021-10-20"},{"lineNumber":180,"author":{"gitId":"YaleChen299"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":181,"author":{"gitId":"YaleChen299"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":182,"author":{"gitId":"YaleChen299"},"content":"    public String getRelatedAppointmentsAsString(Person client) {","lastModifiedDate":"2021-10-20"},{"lineNumber":183,"author":{"gitId":"YaleChen299"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-10-20"},{"lineNumber":184,"author":{"gitId":"YaleChen299"},"content":"        List\u003cAppointment\u003e relatedAppointment \u003d getRelatedAppointments(client);","lastModifiedDate":"2021-10-20"},{"lineNumber":185,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":186,"author":{"gitId":"YaleChen299"},"content":"        for (Appointment appointment : relatedAppointment) {","lastModifiedDate":"2021-10-20"},{"lineNumber":187,"author":{"gitId":"YaleChen299"},"content":"            stringBuilder.append(appointment + \"\\n\");","lastModifiedDate":"2021-10-20"},{"lineNumber":188,"author":{"gitId":"YaleChen299"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":189,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":190,"author":{"gitId":"YaleChen299"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2021-10-20"},{"lineNumber":191,"author":{"gitId":"YaleChen299"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":192,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":193,"author":{"gitId":"Li-Lehao"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":194,"author":{"gitId":"Li-Lehao"},"content":"    public String getAppointmentsThatOnlyHaveThisClientAsString(Person client) {","lastModifiedDate":"2021-10-25"},{"lineNumber":195,"author":{"gitId":"Li-Lehao"},"content":"        List\u003cAppointment\u003e appointmentsThatOnlyHaveThisClient \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-25"},{"lineNumber":196,"author":{"gitId":"Li-Lehao"},"content":"        for (Appointment appointment : getRelatedAppointments(client)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":197,"author":{"gitId":"Li-Lehao"},"content":"            if (appointment.isTheOnlyClient(client)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":198,"author":{"gitId":"Li-Lehao"},"content":"                appointmentsThatOnlyHaveThisClient.add(appointment);","lastModifiedDate":"2021-10-25"},{"lineNumber":199,"author":{"gitId":"Li-Lehao"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":200,"author":{"gitId":"Li-Lehao"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":201,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":202,"author":{"gitId":"Li-Lehao"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-10-25"},{"lineNumber":203,"author":{"gitId":"Li-Lehao"},"content":"        for (Appointment appointment : appointmentsThatOnlyHaveThisClient) {","lastModifiedDate":"2021-10-25"},{"lineNumber":204,"author":{"gitId":"Li-Lehao"},"content":"            stringBuilder.append(appointment + \"\\n\");","lastModifiedDate":"2021-10-25"},{"lineNumber":205,"author":{"gitId":"Li-Lehao"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":206,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":207,"author":{"gitId":"Li-Lehao"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2021-10-25"},{"lineNumber":208,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":209,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":210,"author":{"gitId":"Li-Lehao"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":211,"author":{"gitId":"Li-Lehao"},"content":"     * When a person is edited, update all the appointments in the appointment list that contains this person","lastModifiedDate":"2021-10-26"},{"lineNumber":212,"author":{"gitId":"Li-Lehao"},"content":"     * by replacing the {@Code personToEdit} with the new {@Code editedPerson} instance.","lastModifiedDate":"2021-10-26"},{"lineNumber":213,"author":{"gitId":"Li-Lehao"},"content":"     * @param personToEdit The person to be edited.","lastModifiedDate":"2021-10-26"},{"lineNumber":214,"author":{"gitId":"Li-Lehao"},"content":"     * @param editedPerson The new person instance created.","lastModifiedDate":"2021-10-26"},{"lineNumber":215,"author":{"gitId":"Li-Lehao"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":216,"author":{"gitId":"Li-Lehao"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":217,"author":{"gitId":"Li-Lehao"},"content":"    public void updateEditedClientInAppointments(Person personToEdit, Person editedPerson) {","lastModifiedDate":"2021-10-26"},{"lineNumber":218,"author":{"gitId":"Li-Lehao"},"content":"        List\u003cAppointment\u003e relatedAppointments \u003d getRelatedAppointments(personToEdit);","lastModifiedDate":"2021-10-26"},{"lineNumber":219,"author":{"gitId":"Li-Lehao"},"content":"        for (Appointment appointment : relatedAppointments) {","lastModifiedDate":"2021-10-26"},{"lineNumber":220,"author":{"gitId":"YaleChen299"},"content":"            appointment.setClient(personToEdit, editedPerson);","lastModifiedDate":"2021-10-29"},{"lineNumber":221,"author":{"gitId":"Li-Lehao"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":222,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":223,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":224,"author":{"gitId":"Li-Lehao"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":225,"author":{"gitId":"Li-Lehao"},"content":"     * Remove the given person from the client list of the appointments,","lastModifiedDate":"2021-10-26"},{"lineNumber":226,"author":{"gitId":"Li-Lehao"},"content":"     * if the appointment has no client after the deletion, the appointment will be removed from schedule.","lastModifiedDate":"2021-10-26"},{"lineNumber":227,"author":{"gitId":"Li-Lehao"},"content":"     * @param personToDelete the given person to delete.","lastModifiedDate":"2021-10-26"},{"lineNumber":228,"author":{"gitId":"Li-Lehao"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":229,"author":{"gitId":"Li-Lehao"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":230,"author":{"gitId":"Li-Lehao"},"content":"    public void removePersonFromAppointments(Person personToDelete) {","lastModifiedDate":"2021-10-26"},{"lineNumber":231,"author":{"gitId":"Li-Lehao"},"content":"        List\u003cAppointment\u003e relatedAppointments \u003d getRelatedAppointments(personToDelete);","lastModifiedDate":"2021-10-26"},{"lineNumber":232,"author":{"gitId":"Li-Lehao"},"content":"        for (Appointment appointment : relatedAppointments) {","lastModifiedDate":"2021-10-26"},{"lineNumber":233,"author":{"gitId":"Li-Lehao"},"content":"            appointment.removeClient(personToDelete);","lastModifiedDate":"2021-10-26"},{"lineNumber":234,"author":{"gitId":"Li-Lehao"},"content":"            if (appointment.isClientListEmpty()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":235,"author":{"gitId":"Li-Lehao"},"content":"                schedule.deleteAppointment(appointment);","lastModifiedDate":"2021-10-26"},{"lineNumber":236,"author":{"gitId":"Li-Lehao"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":237,"author":{"gitId":"Li-Lehao"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":238,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":239,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":240,"author":{"gitId":"YaleChen299"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":241,"author":{"gitId":"YaleChen299"},"content":"     * Returns the Observablelist of {@Code Appointment} that is related to the {@Code Person}","lastModifiedDate":"2021-10-20"},{"lineNumber":242,"author":{"gitId":"YaleChen299"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":243,"author":{"gitId":"YaleChen299"},"content":"    private List\u003cAppointment\u003e getRelatedAppointments(Person client) {","lastModifiedDate":"2021-10-20"},{"lineNumber":244,"author":{"gitId":"YaleChen299"},"content":"        return schedule.getRelatedAppointments(client);","lastModifiedDate":"2021-10-20"},{"lineNumber":245,"author":{"gitId":"YaleChen299"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":246,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":250,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":251,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":252,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":261,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":265,"author":{"gitId":"Li-Lehao"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Appointment List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":266,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":267,"author":{"gitId":"Li-Lehao"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":268,"author":{"gitId":"Li-Lehao"},"content":"     * Returns an unmodifiable view of the list of {@code Appointment} backed by the internal list of","lastModifiedDate":"2021-10-07"},{"lineNumber":269,"author":{"gitId":"Li-Lehao"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2021-10-07"},{"lineNumber":270,"author":{"gitId":"Li-Lehao"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":271,"author":{"gitId":"Li-Lehao"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":272,"author":{"gitId":"Li-Lehao"},"content":"    public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":273,"author":{"gitId":"Li-Lehao"},"content":"        return filteredAppointments;","lastModifiedDate":"2021-10-07"},{"lineNumber":274,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":275,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":276,"author":{"gitId":"tchiong"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":277,"author":{"gitId":"tchiong"},"content":"    public void sortFilteredAppointmentList(String sortBy) {","lastModifiedDate":"2021-10-20"},{"lineNumber":278,"author":{"gitId":"nwhloo99"},"content":"        if (sortBy.equals(\"Time\")) {","lastModifiedDate":"2021-10-28"},{"lineNumber":279,"author":{"gitId":"tchiong"},"content":"            schedule.sortAppointmentByTimePeriod();","lastModifiedDate":"2021-10-26"},{"lineNumber":280,"author":{"gitId":"tchiong"},"content":"        } else if (sortBy.equals(\"Description\")) {","lastModifiedDate":"2021-10-20"},{"lineNumber":281,"author":{"gitId":"tchiong"},"content":"            schedule.sortAppointmentByDescription();","lastModifiedDate":"2021-10-20"},{"lineNumber":282,"author":{"gitId":"tchiong"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":283,"author":{"gitId":"tchiong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":284,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":285,"author":{"gitId":"Li-Lehao"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":286,"author":{"gitId":"Li-Lehao"},"content":"    public void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e predicate) {","lastModifiedDate":"2021-10-07"},{"lineNumber":287,"author":{"gitId":"Li-Lehao"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-07"},{"lineNumber":288,"author":{"gitId":"Li-Lehao"},"content":"        filteredAppointments.setPredicate(predicate);","lastModifiedDate":"2021-10-07"},{"lineNumber":289,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":290,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":295,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":300,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":306,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":307,"author":{"gitId":"nwhloo99"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2021-10-13"},{"lineNumber":308,"author":{"gitId":"nwhloo99"},"content":"                \u0026\u0026 filteredAppointments.equals(other.filteredAppointments);","lastModifiedDate":"2021-10-13"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":310,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":311,"author":{"gitId":"Li-Lehao"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":312,"author":{"gitId":"Li-Lehao"},"content":"     * Check whether there are appointments that has time conflicts","lastModifiedDate":"2021-10-28"},{"lineNumber":313,"author":{"gitId":"Li-Lehao"},"content":"     * with the given appointment in the current appointment list.","lastModifiedDate":"2021-10-28"},{"lineNumber":314,"author":{"gitId":"Li-Lehao"},"content":"     * @param appointment The given appointment to check.","lastModifiedDate":"2021-10-28"},{"lineNumber":315,"author":{"gitId":"Li-Lehao"},"content":"     * @return A list of appointments, the appointments that has time conflicts","lastModifiedDate":"2021-10-28"},{"lineNumber":316,"author":{"gitId":"Li-Lehao"},"content":"     * with the given appointment.","lastModifiedDate":"2021-10-28"},{"lineNumber":317,"author":{"gitId":"Li-Lehao"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":318,"author":{"gitId":"Li-Lehao"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":319,"author":{"gitId":"Li-Lehao"},"content":"    public List\u003cAppointment\u003e getClashingAppointments(Appointment appointment) {","lastModifiedDate":"2021-10-28"},{"lineNumber":320,"author":{"gitId":"Li-Lehao"},"content":"        List\u003cAppointment\u003e clashingAppointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-28"},{"lineNumber":321,"author":{"gitId":"Li-Lehao"},"content":"        for (Appointment app : this.schedule) {","lastModifiedDate":"2021-10-28"},{"lineNumber":322,"author":{"gitId":"Li-Lehao"},"content":"            if (app.getTimePeriod().hasConflictWith(appointment.getTimePeriod())) {","lastModifiedDate":"2021-10-28"},{"lineNumber":323,"author":{"gitId":"Li-Lehao"},"content":"                clashingAppointments.add(app);","lastModifiedDate":"2021-10-28"},{"lineNumber":324,"author":{"gitId":"Li-Lehao"},"content":"            }","lastModifiedDate":"2021-10-28"},{"lineNumber":325,"author":{"gitId":"Li-Lehao"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":326,"author":{"gitId":"Li-Lehao"},"content":"        return clashingAppointments;","lastModifiedDate":"2021-10-28"},{"lineNumber":327,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":328,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":329,"author":{"gitId":"Li-Lehao"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":330,"author":{"gitId":"Li-Lehao"},"content":"     * Returns the String representation of the appointments that have time conflict with the","lastModifiedDate":"2021-10-28"},{"lineNumber":331,"author":{"gitId":"Li-Lehao"},"content":"     * given appointment.","lastModifiedDate":"2021-10-28"},{"lineNumber":332,"author":{"gitId":"Li-Lehao"},"content":"     * @param appointment The given appointment to check.","lastModifiedDate":"2021-10-28"},{"lineNumber":333,"author":{"gitId":"Li-Lehao"},"content":"     * @return The String representation of the appointments that have time conflict with the","lastModifiedDate":"2021-10-28"},{"lineNumber":334,"author":{"gitId":"Li-Lehao"},"content":"     * given appointment.","lastModifiedDate":"2021-10-28"},{"lineNumber":335,"author":{"gitId":"Li-Lehao"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":336,"author":{"gitId":"Li-Lehao"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":337,"author":{"gitId":"Li-Lehao"},"content":"    public String getClashingAppointmentsAsString(Appointment appointment) {","lastModifiedDate":"2021-10-28"},{"lineNumber":338,"author":{"gitId":"Li-Lehao"},"content":"        List\u003cAppointment\u003e clashingAppointments \u003d getClashingAppointments(appointment);","lastModifiedDate":"2021-10-28"},{"lineNumber":339,"author":{"gitId":"Li-Lehao"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-10-28"},{"lineNumber":340,"author":{"gitId":"Li-Lehao"},"content":"        for (Appointment app : clashingAppointments) {","lastModifiedDate":"2021-10-28"},{"lineNumber":341,"author":{"gitId":"Li-Lehao"},"content":"            stringBuilder.append(app + \"\\n\");","lastModifiedDate":"2021-10-28"},{"lineNumber":342,"author":{"gitId":"Li-Lehao"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":343,"author":{"gitId":"Li-Lehao"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2021-10-28"},{"lineNumber":344,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":345,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":346,"author":{"gitId":"Li-Lehao"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":347,"author":{"gitId":"Li-Lehao"},"content":"     * Go back to the previous state before executing a certain command.","lastModifiedDate":"2021-10-29"},{"lineNumber":348,"author":{"gitId":"Li-Lehao"},"content":"     * @throws NoHistoryStatesException Throw exception if there is no previous state.","lastModifiedDate":"2021-10-29"},{"lineNumber":349,"author":{"gitId":"Li-Lehao"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":350,"author":{"gitId":"Li-Lehao"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":351,"author":{"gitId":"Li-Lehao"},"content":"    public void undo() throws NoHistoryStatesException {","lastModifiedDate":"2021-10-29"},{"lineNumber":352,"author":{"gitId":"Li-Lehao"},"content":"        if (!this.historyStates.hasHistoryStates()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":353,"author":{"gitId":"Li-Lehao"},"content":"            throw new NoHistoryStatesException();","lastModifiedDate":"2021-10-29"},{"lineNumber":354,"author":{"gitId":"Li-Lehao"},"content":"        } else {","lastModifiedDate":"2021-10-29"},{"lineNumber":355,"author":{"gitId":"Li-Lehao"},"content":"            this.historyStates.undo();","lastModifiedDate":"2021-10-29"},{"lineNumber":356,"author":{"gitId":"Li-Lehao"},"content":"            State previousState \u003d this.historyStates.getCurrentState();","lastModifiedDate":"2021-10-29"},{"lineNumber":357,"author":{"gitId":"Li-Lehao"},"content":"            this.schedule \u003d previousState.getSchedule();","lastModifiedDate":"2021-10-29"},{"lineNumber":358,"author":{"gitId":"Li-Lehao"},"content":"            this.addressBook \u003d previousState.getAddressBook();","lastModifiedDate":"2021-10-29"},{"lineNumber":359,"author":{"gitId":"Li-Lehao"},"content":"            filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2021-10-29"},{"lineNumber":360,"author":{"gitId":"Li-Lehao"},"content":"            filteredAppointments \u003d new FilteredList\u003c\u003e(this.schedule.getSchedule());","lastModifiedDate":"2021-10-29"},{"lineNumber":361,"author":{"gitId":"Li-Lehao"},"content":"            System.out.println(this.addressBook.getPersonList().size() + \" \" + this.schedule.hashCode());","lastModifiedDate":"2021-10-29"},{"lineNumber":362,"author":{"gitId":"Li-Lehao"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":365,"author":{"gitId":"Li-Lehao"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":366,"author":{"gitId":"Li-Lehao"},"content":"     * Add the current state into the history states.","lastModifiedDate":"2021-10-29"},{"lineNumber":367,"author":{"gitId":"Li-Lehao"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":368,"author":{"gitId":"Li-Lehao"},"content":"    public void updateState() {","lastModifiedDate":"2021-10-29"},{"lineNumber":369,"author":{"gitId":"Li-Lehao"},"content":"        State stateToUpdate \u003d new State(this.addressBook, this.schedule);","lastModifiedDate":"2021-10-29"},{"lineNumber":370,"author":{"gitId":"Li-Lehao"},"content":"        this.historyStates.addNewState(stateToUpdate);","lastModifiedDate":"2021-10-29"},{"lineNumber":371,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Li-Lehao":148,"tchiong":19,"YaleChen299":43,"nwhloo99":15,"-":146,"NecroWolf28":1}},{"path":"src/main/java/seedu/address/model/ReadOnlySchedule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nwhloo99"},"content":"package seedu.address.model;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"nwhloo99"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.model.schedule.Appointment;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"nwhloo99"},"content":"public interface ReadOnlySchedule {","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"nwhloo99"},"content":"     * Returns an unmodifiable view of the appointments list.","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"nwhloo99"},"content":"     * This list will not contain any duplicate appointments.","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"nwhloo99"},"content":"    ObservableList\u003cAppointment\u003e getSchedule();","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"nwhloo99"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"nwhloo99":13}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"nwhloo99"},"content":"    private Path scheduleFilePath \u003d Paths.get(\"data\" , \"schedule.json\");","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"nwhloo99"},"content":"    public Path getScheduleFilePath() {","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"nwhloo99"},"content":"        return scheduleFilePath;","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"nwhloo99"},"content":"    public void setScheduleFilePath(Path scheduleFilePath) {","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"nwhloo99"},"content":"        requireNonNull(scheduleFilePath);","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"nwhloo99"},"content":"        this.scheduleFilePath \u003d scheduleFilePath;","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"nwhloo99"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath)","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"nwhloo99"},"content":"                \u0026\u0026 scheduleFilePath.equals(o.scheduleFilePath);","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"nwhloo99"},"content":"        return Objects.hash(guiSettings, addressBookFilePath, scheduleFilePath);","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"nwhloo99"},"content":"        sb.append(\"\\nLocal Person data file location : \" + addressBookFilePath);","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"nwhloo99"},"content":"        sb.append(\"\\nLocal Schedule data file location: \" + scheduleFilePath);","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nwhloo99":15,"-":84}},{"path":"src/main/java/seedu/address/model/historystates/HistoryStates.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YaleChen299"},"content":"package seedu.address.model.historystates;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"Li-Lehao"},"content":"import java.util.LinkedList;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"YaleChen299"},"content":"import seedu.address.model.historystates.exceptions.NoHistoryStatesException;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"Li-Lehao"},"content":"public class HistoryStates {","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"Li-Lehao"},"content":"    private LinkedList\u003cState\u003e historyStates;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"Li-Lehao"},"content":"    public HistoryStates() {","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"Li-Lehao"},"content":"        this.historyStates \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"Li-Lehao"},"content":"    public void addNewState(State state) {","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"Li-Lehao"},"content":"        this.historyStates.addLast(state);","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"Li-Lehao"},"content":"    public void undo() {","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"Li-Lehao"},"content":"        this.historyStates.removeLast();","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"Li-Lehao"},"content":"    public State getCurrentState() throws NoHistoryStatesException {","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"Li-Lehao"},"content":"        return this.historyStates.getLast();","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"Li-Lehao"},"content":"    public Boolean hasHistoryStates() {","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"Li-Lehao"},"content":"        return this.historyStates.size() \u003e 1;","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"Li-Lehao"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"Li-Lehao":27,"YaleChen299":2}},{"path":"src/main/java/seedu/address/model/historystates/State.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YaleChen299"},"content":"package seedu.address.model.historystates;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"Li-Lehao"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"Li-Lehao"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"Li-Lehao"},"content":"public class State {","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"Li-Lehao"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"Li-Lehao"},"content":"    private Schedule schedule;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"Li-Lehao"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"Li-Lehao"},"content":"     * A constructor to initialize the {@Code State} with the given {@Code AddressBook} and {@Code Schedule}.","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"Li-Lehao"},"content":"     * The given {@Code AddressBook} and {@Code Schedule} will be copied and store in this {@Code State}.","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"Li-Lehao"},"content":"     * @param addressBook The given {@Code AddressBook}.","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"Li-Lehao"},"content":"     * @param schedule The given {@Code Schedule}.","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"Li-Lehao"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"Li-Lehao"},"content":"    public State(AddressBook addressBook, Schedule schedule) {","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"Li-Lehao"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"Li-Lehao"},"content":"        this.schedule \u003d new Schedule(schedule);","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"Li-Lehao"},"content":"    public AddressBook getAddressBook() {","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"Li-Lehao"},"content":"        return new AddressBook(this.addressBook);","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"Li-Lehao"},"content":"    public Schedule getSchedule() {","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"Li-Lehao"},"content":"        return new Schedule(this.schedule);","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"Li-Lehao"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"Li-Lehao":27,"YaleChen299":1}},{"path":"src/main/java/seedu/address/model/historystates/exceptions/NoHistoryStatesException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YaleChen299"},"content":"package seedu.address.model.historystates.exceptions;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"Li-Lehao"},"content":"public class NoHistoryStatesException extends RuntimeException {","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"Li-Lehao"},"content":"    public NoHistoryStatesException(String message) {","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"Li-Lehao"},"content":"        super(message);","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"Li-Lehao"},"content":"    public NoHistoryStatesException() {","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"Li-Lehao"},"content":"        super();","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"Li-Lehao"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"Li-Lehao":10,"YaleChen299":1}},{"path":"src/main/java/seedu/address/model/person/PersonHasTagsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NecroWolf28"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"NecroWolf28"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"NecroWolf28"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"NecroWolf28"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"NecroWolf28"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"NecroWolf28"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"NecroWolf28"},"content":" * Tests that a {@code Person}\u0027s {@code Tags} matches any of the keywords given.","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"NecroWolf28"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"NecroWolf28"},"content":"public class PersonHasTagsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"NecroWolf28"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"NecroWolf28"},"content":"    public PersonHasTagsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"NecroWolf28"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"NecroWolf28"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"NecroWolf28"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"NecroWolf28"},"content":"        Tag[] tagArray \u003d new Tag[person.getTags().size()];","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"NecroWolf28"},"content":"        tagArray \u003d person.getTags().toArray(tagArray);","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"NecroWolf28"},"content":"        for (Tag tag : tagArray) {","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"NecroWolf28"},"content":"            String tagName \u003d tag.getTagName();","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"NecroWolf28"},"content":"            if (keywords.stream().anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(keyword, tagName))) {","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"NecroWolf28"},"content":"                return true;","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"NecroWolf28"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"NecroWolf28"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"NecroWolf28"},"content":"        return false;","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"NecroWolf28"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"NecroWolf28"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"NecroWolf28"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"NecroWolf28"},"content":"                || (other instanceof PersonHasTagsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"NecroWolf28"},"content":"                \u0026\u0026 keywords.equals(((PersonHasTagsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"NecroWolf28"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"NecroWolf28":39}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"Li-Lehao"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"Li-Lehao"},"content":"     * Checks whether this {@Code UniquePersonList} is empty.","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"Li-Lehao"},"content":"     * @return a boolean value indicting whether this {@Code UniquePersonList} is empty.","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"Li-Lehao"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"Li-Lehao"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"Li-Lehao"},"content":"        return this.internalList.isEmpty();","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":114,"author":{"gitId":"YaleChen299"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":115,"author":{"gitId":"YaleChen299"},"content":"    public String toString() {","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"YaleChen299"},"content":"        return internalList.stream().reduce(","lastModifiedDate":"2021-10-20"},{"lineNumber":117,"author":{"gitId":"YaleChen299"},"content":"            \"\", (names, person) -\u003e names + person.getName().fullName + \", \", String::concat);","lastModifiedDate":"2021-10-20"},{"lineNumber":118,"author":{"gitId":"YaleChen299"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Li-Lehao":7,"YaleChen299":6,"-":137}},{"path":"src/main/java/seedu/address/model/schedule/Appointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nwhloo99"},"content":"package seedu.address.model.schedule;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"nwhloo99"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"nwhloo99"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"nwhloo99"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"nwhloo99"},"content":"public class Appointment {","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"nwhloo99"},"content":"    private final UniquePersonList clients;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"nwhloo99"},"content":"    private final Address location;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"nwhloo99"},"content":"    private final TimePeriod timePeriod;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"nwhloo99"},"content":"    private String description;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"nwhloo99"},"content":"     * Creates an Appointment class with a specified time.","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"tchiong"},"content":"    public Appointment(UniquePersonList clients, Address location, TimePeriod timePeriod, String description) {","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"nwhloo99"},"content":"        this.clients \u003d clients;","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"nwhloo99"},"content":"        this.location \u003d location;","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"tchiong"},"content":"        this.timePeriod \u003d timePeriod;","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"nwhloo99"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"nwhloo99"},"content":"    public UniquePersonList getClients() {","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"nwhloo99"},"content":"        return clients;","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"nwhloo99"},"content":"    public Address getLocation() {","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"nwhloo99"},"content":"        return location;","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"tchiong"},"content":"    public TimePeriod getTimePeriod() {","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"tchiong"},"content":"        return timePeriod;","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"nwhloo99"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"nwhloo99"},"content":"        return description;","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"nwhloo99"},"content":"    public ObservableList\u003cPerson\u003e getClientList() {","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"nwhloo99"},"content":"        return clients.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"nwhloo99"},"content":"     * Creates a string representation of the start timing.","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"nwhloo99"},"content":"    public String getStartDateTimeString() {","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"nwhloo99"},"content":"        return this.timePeriod.getStartDateTimeString();","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"nwhloo99"},"content":"     * Creates a string representation of the end timing.","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"nwhloo99"},"content":"    public String getEndDateTimeString() {","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"nwhloo99"},"content":"        return this.timePeriod.getEndDateTimeString();","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"YaleChen299"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"YaleChen299"},"content":"     * Returns the urgency of this appointment.","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"YaleChen299"},"content":"     * Returns HIGH if appointment is in 2 days, MEDIUM if it is in a week and LOW otherwise","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"YaleChen299"},"content":"     * @return the urgency of this appointment.","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"YaleChen299"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"YaleChen299"},"content":"    public Urgency getUrgency() {","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"nwhloo99"},"content":"        if (LocalDateTime.now().plusDays(2).isAfter(timePeriod.getStartDateTime())) {","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"YaleChen299"},"content":"            return Urgency.HIGH;","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"nwhloo99"},"content":"        } else if (LocalDateTime.now().plusDays(8).isAfter(timePeriod.getStartDateTime())) {","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"YaleChen299"},"content":"            return Urgency.MEDIUM;","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"YaleChen299"},"content":"        } else {","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"YaleChen299"},"content":"            return Urgency.LOW;","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"YaleChen299"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"YaleChen299"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"YaleChen299"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"YaleChen299"},"content":"     * Checks if this appointment is related to the client.","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"YaleChen299"},"content":"     * @param person the client to check with.","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"YaleChen299"},"content":"     * @return true if the client is related and false otherwise.","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"YaleChen299"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"YaleChen299"},"content":"    public boolean hasClient(Person person) {","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"nwhloo99"},"content":"        return this.clients.contains(person);","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"YaleChen299"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"Li-Lehao"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"Li-Lehao"},"content":"     * Checks whether this {@Code Appointment}\u0027s client list is empty.","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"Li-Lehao"},"content":"     * @return A boolean value indicating whether the client list is empty.","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"Li-Lehao"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"Li-Lehao"},"content":"    public boolean isClientListEmpty() {","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"Li-Lehao"},"content":"        return this.clients.isEmpty();","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"Li-Lehao"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"Li-Lehao"},"content":"     * Remove a given person from the client list of this {@code Appointment}.","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"Li-Lehao"},"content":"     * @param personToRemove the given person to be removed.","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"Li-Lehao"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"Li-Lehao"},"content":"    public void removeClient(Person personToRemove) {","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"Li-Lehao"},"content":"        this.clients.remove(personToRemove);","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"Li-Lehao"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"Li-Lehao"},"content":"     * Add a given person to the client list of this {@Code Appointment}.","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"Li-Lehao"},"content":"     * @param personToAdd the given person to be added.","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"Li-Lehao"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"Li-Lehao"},"content":"    public void addClient(Person personToAdd) {","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"Li-Lehao"},"content":"        this.clients.add(personToAdd);","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":111,"author":{"gitId":"YaleChen299"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":112,"author":{"gitId":"YaleChen299"},"content":"     * Sets the Client in the client list to the Edited Client.","lastModifiedDate":"2021-10-29"},{"lineNumber":113,"author":{"gitId":"YaleChen299"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":114,"author":{"gitId":"YaleChen299"},"content":"     * @param personToEdit the client to be edited.","lastModifiedDate":"2021-10-29"},{"lineNumber":115,"author":{"gitId":"YaleChen299"},"content":"     * @param editedPerson the edited client.","lastModifiedDate":"2021-10-29"},{"lineNumber":116,"author":{"gitId":"YaleChen299"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":117,"author":{"gitId":"YaleChen299"},"content":"    public void setClient(Person personToEdit, Person editedPerson) {","lastModifiedDate":"2021-10-29"},{"lineNumber":118,"author":{"gitId":"YaleChen299"},"content":"        clients.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2021-10-29"},{"lineNumber":119,"author":{"gitId":"YaleChen299"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":120,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":121,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"nwhloo99"},"content":"     * Returns true if both Appointments have the same fields.","lastModifiedDate":"2021-10-06"},{"lineNumber":123,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":124,"author":{"gitId":"nwhloo99"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":125,"author":{"gitId":"nwhloo99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":126,"author":{"gitId":"nwhloo99"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-06"},{"lineNumber":127,"author":{"gitId":"nwhloo99"},"content":"            return true;","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":129,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":130,"author":{"gitId":"nwhloo99"},"content":"        if (!(other instanceof Appointment)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":131,"author":{"gitId":"nwhloo99"},"content":"            return false;","lastModifiedDate":"2021-10-06"},{"lineNumber":132,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":133,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":134,"author":{"gitId":"nwhloo99"},"content":"        Appointment otherApp \u003d (Appointment) other;","lastModifiedDate":"2021-10-06"},{"lineNumber":135,"author":{"gitId":"nwhloo99"},"content":"        return otherApp.getClients().equals(getClients())","lastModifiedDate":"2021-10-20"},{"lineNumber":136,"author":{"gitId":"nwhloo99"},"content":"                \u0026\u0026 otherApp.getLocation().equals(getLocation())","lastModifiedDate":"2021-10-06"},{"lineNumber":137,"author":{"gitId":"tchiong"},"content":"                \u0026\u0026 otherApp.getTimePeriod().equals(getTimePeriod())","lastModifiedDate":"2021-10-26"},{"lineNumber":138,"author":{"gitId":"tchiong"},"content":"                \u0026\u0026 otherApp.getDescription().equals(getDescription());","lastModifiedDate":"2021-10-26"},{"lineNumber":139,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":140,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":141,"author":{"gitId":"Li-Lehao"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":142,"author":{"gitId":"Li-Lehao"},"content":"     * Checks whether the given client is the only client in the client list of this {@Code Appointment}.","lastModifiedDate":"2021-10-26"},{"lineNumber":143,"author":{"gitId":"Li-Lehao"},"content":"     * @param client the given client.","lastModifiedDate":"2021-10-26"},{"lineNumber":144,"author":{"gitId":"Li-Lehao"},"content":"     * @return A boolean value indicating whether the given client is the only client.","lastModifiedDate":"2021-10-26"},{"lineNumber":145,"author":{"gitId":"Li-Lehao"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":146,"author":{"gitId":"Li-Lehao"},"content":"    public boolean isTheOnlyClient(Person client) {","lastModifiedDate":"2021-10-26"},{"lineNumber":147,"author":{"gitId":"Li-Lehao"},"content":"        return this.hasClient(client) \u0026\u0026 this.getClientList().size() \u003d\u003d 1;","lastModifiedDate":"2021-10-26"},{"lineNumber":148,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":149,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":150,"author":{"gitId":"nwhloo99"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":151,"author":{"gitId":"nwhloo99"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-06"},{"lineNumber":152,"author":{"gitId":"tchiong"},"content":"        return Objects.hash(clients, location, timePeriod, description);","lastModifiedDate":"2021-10-26"},{"lineNumber":153,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":154,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":155,"author":{"gitId":"nwhloo99"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":156,"author":{"gitId":"nwhloo99"},"content":"    public String toString() {","lastModifiedDate":"2021-10-06"},{"lineNumber":157,"author":{"gitId":"nwhloo99"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-06"},{"lineNumber":158,"author":{"gitId":"YaleChen299"},"content":"        builder.append(getDescription())","lastModifiedDate":"2021-10-20"},{"lineNumber":159,"author":{"gitId":"YaleChen299"},"content":"                .append(\"; Clients: \")","lastModifiedDate":"2021-10-20"},{"lineNumber":160,"author":{"gitId":"YaleChen299"},"content":"                .append(getClients())","lastModifiedDate":"2021-10-20"},{"lineNumber":161,"author":{"gitId":"nwhloo99"},"content":"                .append(\"; Location: \")","lastModifiedDate":"2021-10-06"},{"lineNumber":162,"author":{"gitId":"nwhloo99"},"content":"                .append(getLocation())","lastModifiedDate":"2021-10-06"},{"lineNumber":163,"author":{"gitId":"tchiong"},"content":"                .append(\"; Time Period: \")","lastModifiedDate":"2021-10-26"},{"lineNumber":164,"author":{"gitId":"tchiong"},"content":"                .append(getTimePeriod());","lastModifiedDate":"2021-10-26"},{"lineNumber":165,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":166,"author":{"gitId":"nwhloo99"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-06"},{"lineNumber":167,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":168,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":169,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":170,"author":{"gitId":"nwhloo99"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"tchiong":10,"Li-Lehao":32,"YaleChen299":35,"nwhloo99":91,"NecroWolf28":2}},{"path":"src/main/java/seedu/address/model/schedule/DescriptionContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YaleChen299"},"content":"package seedu.address.model.schedule;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"YaleChen299"},"content":"import java.util.List;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"YaleChen299"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"YaleChen299"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"YaleChen299"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"YaleChen299"},"content":" * Tests that a {@code Appointment}\u0027s {@code Description} matches any of the keywords given.","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"YaleChen299"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"YaleChen299"},"content":"public class DescriptionContainsKeywordsPredicate implements Predicate\u003cAppointment\u003e {","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"YaleChen299"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"YaleChen299"},"content":"    public DescriptionContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"YaleChen299"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"YaleChen299"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"YaleChen299"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"YaleChen299"},"content":"    public boolean test(Appointment appointment) {","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"YaleChen299"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"YaleChen299"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(appointment.getDescription(), keyword));","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"YaleChen299"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"YaleChen299"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"YaleChen299"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"YaleChen299"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"YaleChen299"},"content":"                || (other instanceof DescriptionContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"YaleChen299"},"content":"                \u0026\u0026 keywords.equals(((DescriptionContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"YaleChen299"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"YaleChen299":31}},{"path":"src/main/java/seedu/address/model/schedule/Schedule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tchiong"},"content":"package seedu.address.model.schedule;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"tchiong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"tchiong"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"tchiong"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"nwhloo99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"YaleChen299"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"tchiong"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"tchiong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.model.ReadOnlySchedule;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"YaleChen299"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"YaleChen299"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"tchiong"},"content":"import seedu.address.model.schedule.exceptions.AppointmentNotFoundException;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"tchiong"},"content":"import seedu.address.model.schedule.exceptions.DuplicateAppointmentException;","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"tchiong"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"tchiong"},"content":" * A list of Appointments that enforces uniqueness among appointments to be added","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"tchiong"},"content":" *","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"tchiong"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"tchiong"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"nwhloo99"},"content":"public class Schedule implements Iterable\u003cAppointment\u003e, ReadOnlySchedule {","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"tchiong"},"content":"    // Data Fields","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"tchiong"},"content":"    private final ObservableList\u003cAppointment\u003e appointmentList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"tchiong"},"content":"    private final ObservableList\u003cAppointment\u003e appointmentListUnModifiable \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"tchiong"},"content":"            FXCollections.unmodifiableObservableList(appointmentList);","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"nwhloo99"},"content":"    public Schedule() {};","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"nwhloo99"},"content":"     * Creates an Schedule using the Appointments in the {@code toBeCopied}","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"nwhloo99"},"content":"    public Schedule(ReadOnlySchedule toBeCopied) {","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"nwhloo99"},"content":"        this();","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"nwhloo99"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"nwhloo99"},"content":"     * Replaces the contents of the person list with {@code appointments}.","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"nwhloo99"},"content":"     * {@code appointments} must not contain duplicate persons.","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"nwhloo99"},"content":"    public void setAppointments(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"nwhloo99"},"content":"        this.appointmentList.setAll(appointments);","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"nwhloo99"},"content":"     * Resets the existing data of this {@code Schedule} with {@code newData}.","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"nwhloo99"},"content":"    public void resetData(ReadOnlySchedule newData) {","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"nwhloo99"},"content":"        requireNonNull(newData);","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"nwhloo99"},"content":"        setAppointments(newData.getSchedule());","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"tchiong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"tchiong"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"tchiong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"tchiong"},"content":"    public ObservableList\u003cAppointment\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"tchiong"},"content":"        return appointmentListUnModifiable;","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"tchiong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"tchiong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"tchiong"},"content":"     * Adds an Appointment to the list.","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"tchiong"},"content":"     * Appointment Must not already be in the list","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"tchiong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"nwhloo99"},"content":"    public void addAppointment(Appointment toAdd) {","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"tchiong"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"tchiong"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"tchiong"},"content":"            throw new DuplicateAppointmentException();","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"tchiong"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"tchiong"},"content":"        appointmentList.add(toAdd);","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"tchiong"},"content":"        appointmentList.sort(Comparator.comparing(Appointment::getDescription));","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"tchiong"},"content":"        appointmentList.sort(Comparator.comparing(Appointment::getTimePeriod));","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"tchiong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"tchiong"},"content":"    public void sortAppointmentByDescription() {","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"tchiong"},"content":"        appointmentList.sort(Comparator.comparing(Appointment::getDescription));","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"tchiong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"tchiong"},"content":"    public void sortAppointmentByTimePeriod() {","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"tchiong"},"content":"        appointmentList.sort(Comparator.comparing(Appointment::getTimePeriod));","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"tchiong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"tchiong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"tchiong"},"content":"     * Removes the equivalent Appointment from the list.","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"tchiong"},"content":"     * The Appointment must exist in the list.","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"tchiong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"nwhloo99"},"content":"    public void deleteAppointment(Appointment toRemove) {","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"tchiong"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"tchiong"},"content":"        if (!appointmentList.remove(toRemove)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"tchiong"},"content":"            throw new AppointmentNotFoundException();","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"tchiong"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"tchiong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"YaleChen299"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"YaleChen299"},"content":"     * Returns the list of {@Code Appointment} that is related to the {@Code Person}","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"YaleChen299"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"YaleChen299"},"content":"    public List\u003cAppointment\u003e getRelatedAppointments(Person client) {","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"YaleChen299"},"content":"        return appointmentListUnModifiable","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"YaleChen299"},"content":"                .stream()","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"YaleChen299"},"content":"                .parallel()","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"YaleChen299"},"content":"                .filter(appointment -\u003e appointment.hasClient(client))","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"YaleChen299"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"YaleChen299"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"tchiong"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"tchiong"},"content":"     * Check if appointmentList contains {@code Appointment}","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"tchiong"},"content":"     * @return boolean result","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"tchiong"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"tchiong"},"content":"    public boolean contains(Appointment toCheck) {","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"tchiong"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"tchiong"},"content":"        return appointmentList.contains(toCheck);","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"tchiong"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"tchiong"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"tchiong"},"content":"    public Iterator\u003cAppointment\u003e iterator() {","lastModifiedDate":"2021-10-06"},{"lineNumber":118,"author":{"gitId":"tchiong"},"content":"        return appointmentList.iterator();","lastModifiedDate":"2021-10-06"},{"lineNumber":119,"author":{"gitId":"tchiong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":120,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":121,"author":{"gitId":"tchiong"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"tchiong"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-06"},{"lineNumber":123,"author":{"gitId":"tchiong"},"content":"        return appointmentList.hashCode();","lastModifiedDate":"2021-10-06"},{"lineNumber":124,"author":{"gitId":"tchiong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":125,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":126,"author":{"gitId":"tchiong"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":127,"author":{"gitId":"tchiong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"tchiong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-06"},{"lineNumber":129,"author":{"gitId":"tchiong"},"content":"                || (other instanceof Schedule // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":130,"author":{"gitId":"tchiong"},"content":"                \u0026\u0026 appointmentList.equals(((Schedule) other).appointmentList));","lastModifiedDate":"2021-10-06"},{"lineNumber":131,"author":{"gitId":"tchiong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":132,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":133,"author":{"gitId":"nwhloo99"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":134,"author":{"gitId":"nwhloo99"},"content":"    public ObservableList\u003cAppointment\u003e getSchedule() {","lastModifiedDate":"2021-10-13"},{"lineNumber":135,"author":{"gitId":"nwhloo99"},"content":"        return appointmentList;","lastModifiedDate":"2021-10-13"},{"lineNumber":136,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":137,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":138,"author":{"gitId":"NecroWolf28"},"content":"    public void setAppointment(Appointment appointmentToEdit, Appointment editedAppointment) {","lastModifiedDate":"2021-10-29"},{"lineNumber":139,"author":{"gitId":"NecroWolf28"},"content":"        requireNonNull(appointmentToEdit);","lastModifiedDate":"2021-10-29"},{"lineNumber":140,"author":{"gitId":"NecroWolf28"},"content":"        requireNonNull(editedAppointment);","lastModifiedDate":"2021-10-29"},{"lineNumber":141,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":142,"author":{"gitId":"YaleChen299"},"content":"        int index \u003d appointmentList.indexOf(appointmentToEdit);","lastModifiedDate":"2021-10-29"},{"lineNumber":143,"author":{"gitId":"YaleChen299"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-29"},{"lineNumber":144,"author":{"gitId":"YaleChen299"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2021-10-29"},{"lineNumber":145,"author":{"gitId":"YaleChen299"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":146,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":147,"author":{"gitId":"YaleChen299"},"content":"        appointmentList.set(index, editedAppointment);","lastModifiedDate":"2021-10-29"},{"lineNumber":148,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":149,"author":{"gitId":"tchiong"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"tchiong":87,"YaleChen299":20,"nwhloo99":36,"NecroWolf28":6}},{"path":"src/main/java/seedu/address/model/schedule/TimePeriod.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Li-Lehao"},"content":"package seedu.address.model.schedule;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"Li-Lehao"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"Li-Lehao"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"Li-Lehao"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"nwhloo99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"Li-Lehao"},"content":"import seedu.address.model.schedule.exceptions.EndTimeBeforeStartTimeException;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"Li-Lehao"},"content":"public class TimePeriod implements Comparable\u003cTimePeriod\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"nwhloo99"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"Li-Lehao"},"content":"    /** The start date and time of this {@code TimePeriod}. */","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"Li-Lehao"},"content":"    private LocalDateTime startDateTime;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"Li-Lehao"},"content":"    /** The end date and time of this {@code TimePeriod}. */","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"Li-Lehao"},"content":"    private LocalDateTime endDateTime;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"Li-Lehao"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"Li-Lehao"},"content":"     * A public constructor to initialize the {@code TimePeriod} with startDateTime and endDateTime.","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"Li-Lehao"},"content":"     * @param startDateTime The given startDateTime.","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"Li-Lehao"},"content":"     * @param endDateTime The given endDateTIme.","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"Li-Lehao"},"content":"     * @throws EndTimeBeforeStartTimeException","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"Li-Lehao"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"Li-Lehao"},"content":"    public TimePeriod(LocalDateTime startDateTime, LocalDateTime endDateTime) throws EndTimeBeforeStartTimeException {","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"Li-Lehao"},"content":"        if (endDateTime.isAfter(startDateTime)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"Li-Lehao"},"content":"            this.startDateTime \u003d startDateTime;","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"Li-Lehao"},"content":"            this.endDateTime \u003d endDateTime;","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"Li-Lehao"},"content":"        } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"Li-Lehao"},"content":"            this.startDateTime \u003d startDateTime;","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"Li-Lehao"},"content":"            this.endDateTime \u003d startDateTime;","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"Li-Lehao"},"content":"            throw new EndTimeBeforeStartTimeException(\"EndDateTime has been set to startDateTime by default.\");","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"Li-Lehao"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"Li-Lehao"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"Li-Lehao"},"content":"     * A public constructor to initialize the {@code TimePeriod} with startDate, startTime, endDate, endTime.","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"Li-Lehao"},"content":"     * @param startDate The given startDate.","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"Li-Lehao"},"content":"     * @param startTime The given startTime.","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"Li-Lehao"},"content":"     * @param endDate The given endDate.","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"Li-Lehao"},"content":"     * @param endTime The given endTime.","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"Li-Lehao"},"content":"     * @throws EndTimeBeforeStartTimeException","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"Li-Lehao"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"Li-Lehao"},"content":"    public TimePeriod(LocalDate startDate, LocalTime startTime, LocalDate endDate, LocalTime endTime)","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"Li-Lehao"},"content":"            throws EndTimeBeforeStartTimeException {","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"Li-Lehao"},"content":"        LocalDateTime startDateTime \u003d LocalDateTime.of(","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"Li-Lehao"},"content":"                startDate.getYear(), startDate.getMonth(), startDate.getDayOfMonth(),","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"Li-Lehao"},"content":"                startTime.getHour(), startTime.getMinute()","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"Li-Lehao"},"content":"        );","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"Li-Lehao"},"content":"        LocalDateTime endDateTime \u003d LocalDateTime.of(","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"Li-Lehao"},"content":"                endDate.getYear(), endDate.getMonth(), endDate.getDayOfMonth(),","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"Li-Lehao"},"content":"                endTime.getHour(), endTime.getMinute()","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"Li-Lehao"},"content":"        );","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"Li-Lehao"},"content":"        new TimePeriod(startDateTime, endDateTime);","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"Li-Lehao"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"Li-Lehao"},"content":"     * A boolean method to check whether a moment is included in this {@code TimePeriod}.","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"Li-Lehao"},"content":"     * @param moment A LocalDateTime, the given moment.","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"Li-Lehao"},"content":"     * @return A boolean value indicating whether the moment is included.","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"Li-Lehao"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"Li-Lehao"},"content":"    public boolean containsMoment(LocalDateTime moment) {","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"nwhloo99"},"content":"        return (this.startDateTime.isBefore(moment) \u0026\u0026 this.endDateTime.isAfter(moment));","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"Li-Lehao"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"Li-Lehao"},"content":"     * A boolean method to check whether this {@code TimePeriod} has conflict with another {@code TimePeriod}.","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"Li-Lehao"},"content":"     * @param tp Another {@code TimePeriod}.","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"Li-Lehao"},"content":"     * @return A boolean value indicating whether the two {@TimePeriod} has conflicts.","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"Li-Lehao"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"Li-Lehao"},"content":"    public boolean hasConflictWith(TimePeriod tp) {","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"Li-Lehao"},"content":"        return this.containsMoment(tp.startDateTime) || this.containsMoment(tp.endDateTime)","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"nwhloo99"},"content":"                || tp.containsMoment(this.startDateTime) || tp.containsMoment(this.endDateTime)","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"nwhloo99"},"content":"                || (this.startDateTime.equals(tp.startDateTime) \u0026\u0026 this.endDateTime.equals(tp.endDateTime));","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"Li-Lehao"},"content":"    public void setStartDateTime(LocalDateTime newStartDateTime) throws EndTimeBeforeStartTimeException {","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"Li-Lehao"},"content":"        if (this.endDateTime.isAfter(newStartDateTime)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"Li-Lehao"},"content":"            this.startDateTime \u003d newStartDateTime;","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"Li-Lehao"},"content":"        } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"Li-Lehao"},"content":"            throw new EndTimeBeforeStartTimeException(\"The operation to set startDateTime was not executed.\");","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"Li-Lehao"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"Li-Lehao"},"content":"    public void setEndDateTime(LocalDateTime newEndDateTime) throws EndTimeBeforeStartTimeException {","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"Li-Lehao"},"content":"        if (this.startDateTime.isBefore(newEndDateTime)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"Li-Lehao"},"content":"            this.endDateTime \u003d newEndDateTime;","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"Li-Lehao"},"content":"        } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"Li-Lehao"},"content":"            throw new EndTimeBeforeStartTimeException(\"The operation to set endDateTime was not executed.\");","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"Li-Lehao"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"Li-Lehao"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":95,"author":{"gitId":"Li-Lehao"},"content":"     * Get the startDateTime of this {@Code TimePeriod}.","lastModifiedDate":"2021-10-29"},{"lineNumber":96,"author":{"gitId":"Li-Lehao"},"content":"     * @return A LocalDateTime, the startDateTime of this {@Code TimePeriod}.","lastModifiedDate":"2021-10-29"},{"lineNumber":97,"author":{"gitId":"Li-Lehao"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":98,"author":{"gitId":"Li-Lehao"},"content":"    public LocalDateTime getStartDateTime() {","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"Li-Lehao"},"content":"        return LocalDateTime.of(this.startDateTime.toLocalDate(), this.startDateTime.toLocalTime());","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"Li-Lehao"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":103,"author":{"gitId":"Li-Lehao"},"content":"     * Get the endDateTime of this {@Code TimePeriod}.","lastModifiedDate":"2021-10-29"},{"lineNumber":104,"author":{"gitId":"Li-Lehao"},"content":"     * @return Get the endDateTime of this {@Code TimePeriod}.","lastModifiedDate":"2021-10-29"},{"lineNumber":105,"author":{"gitId":"Li-Lehao"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":106,"author":{"gitId":"Li-Lehao"},"content":"    public LocalDateTime getEndDateTime() {","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"Li-Lehao"},"content":"        return LocalDateTime.of(this.endDateTime.toLocalDate(), this.endDateTime.toLocalTime());","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"nwhloo99"},"content":"     * Creates a string representation of the startDateTime using the formatter.","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"nwhloo99"},"content":"    public String getStartDateTimeString() {","lastModifiedDate":"2021-10-26"},{"lineNumber":114,"author":{"gitId":"nwhloo99"},"content":"        return this.startDateTime.format(formatter);","lastModifiedDate":"2021-10-26"},{"lineNumber":115,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":116,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":118,"author":{"gitId":"nwhloo99"},"content":"     * Creates a string representation of the endDateTime using the formatter.","lastModifiedDate":"2021-10-26"},{"lineNumber":119,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"nwhloo99"},"content":"    public String getEndDateTimeString() {","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"nwhloo99"},"content":"        return this.endDateTime.format(formatter);","lastModifiedDate":"2021-10-26"},{"lineNumber":122,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":124,"author":{"gitId":"Li-Lehao"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"Li-Lehao"},"content":"    public int compareTo(TimePeriod o) {","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"Li-Lehao"},"content":"        if (this.startDateTime.compareTo(o.startDateTime) \u003d\u003d 0) {","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"Li-Lehao"},"content":"            return this.endDateTime.compareTo(o.endDateTime);","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"Li-Lehao"},"content":"        } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"Li-Lehao"},"content":"            return this.startDateTime.compareTo(o.startDateTime);","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"Li-Lehao"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":133,"author":{"gitId":"tchiong"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":134,"author":{"gitId":"tchiong"},"content":"    public String toString() {","lastModifiedDate":"2021-10-26"},{"lineNumber":135,"author":{"gitId":"tchiong"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"tchiong"},"content":"        builder.append(\"Start Time: \")","lastModifiedDate":"2021-10-26"},{"lineNumber":137,"author":{"gitId":"nwhloo99"},"content":"               .append(getStartDateTime().format(formatter))","lastModifiedDate":"2021-10-26"},{"lineNumber":138,"author":{"gitId":"tchiong"},"content":"               .append(\"End Time: \")","lastModifiedDate":"2021-10-26"},{"lineNumber":139,"author":{"gitId":"nwhloo99"},"content":"               .append(getEndDateTime().format(formatter));","lastModifiedDate":"2021-10-26"},{"lineNumber":140,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"tchiong"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-26"},{"lineNumber":142,"author":{"gitId":"tchiong"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":143,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":144,"author":{"gitId":"nwhloo99"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":145,"author":{"gitId":"nwhloo99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-26"},{"lineNumber":146,"author":{"gitId":"nwhloo99"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-26"},{"lineNumber":147,"author":{"gitId":"nwhloo99"},"content":"            return true;","lastModifiedDate":"2021-10-26"},{"lineNumber":148,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":149,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":150,"author":{"gitId":"nwhloo99"},"content":"        if (!(other instanceof TimePeriod)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":151,"author":{"gitId":"nwhloo99"},"content":"            return false;","lastModifiedDate":"2021-10-26"},{"lineNumber":152,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":153,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":154,"author":{"gitId":"nwhloo99"},"content":"        TimePeriod otherTimePeriod \u003d (TimePeriod) other;","lastModifiedDate":"2021-10-26"},{"lineNumber":155,"author":{"gitId":"nwhloo99"},"content":"        return otherTimePeriod.startDateTime.equals(startDateTime)","lastModifiedDate":"2021-10-26"},{"lineNumber":156,"author":{"gitId":"nwhloo99"},"content":"                \u0026\u0026 otherTimePeriod.endDateTime.equals(endDateTime);","lastModifiedDate":"2021-10-26"},{"lineNumber":157,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":158,"author":{"gitId":"Li-Lehao"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"Li-Lehao":111,"tchiong":9,"nwhloo99":38}},{"path":"src/main/java/seedu/address/model/schedule/Urgency.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YaleChen299"},"content":"package seedu.address.model.schedule;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"YaleChen299"},"content":"public enum Urgency {","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"YaleChen299"},"content":"    HIGH, MEDIUM, LOW","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"YaleChen299":5}},{"path":"src/main/java/seedu/address/model/schedule/exceptions/AppointmentNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tchiong"},"content":"package seedu.address.model.schedule.exceptions;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"tchiong"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"tchiong"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"tchiong"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"tchiong"},"content":"public class AppointmentNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"tchiong":6}},{"path":"src/main/java/seedu/address/model/schedule/exceptions/DuplicateAppointmentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tchiong"},"content":"package seedu.address.model.schedule.exceptions;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"tchiong"},"content":"/**","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"tchiong"},"content":" * Signals that the operation will result in duplicate Appointments (Appointments are considered duplicates if they","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"tchiong"},"content":" * have the same identity).","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"tchiong"},"content":" */","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"tchiong"},"content":"public class DuplicateAppointmentException extends RuntimeException {","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"tchiong"},"content":"    public DuplicateAppointmentException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"tchiong"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"tchiong"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"tchiong"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"tchiong":11}},{"path":"src/main/java/seedu/address/model/schedule/exceptions/EndTimeBeforeStartTimeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Li-Lehao"},"content":"package seedu.address.model.schedule.exceptions;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"Li-Lehao"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"Li-Lehao"},"content":" * Signals that the operation will result in an invalid {@code TimePeriod}.","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"Li-Lehao"},"content":" * The endTime of the time period is before the startTime of the time period.","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"Li-Lehao"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"Li-Lehao"},"content":"public class EndTimeBeforeStartTimeException extends RuntimeException {","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"Li-Lehao"},"content":"    public EndTimeBeforeStartTimeException(String message) {","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"Li-Lehao"},"content":"        super(\"Not a valid time period: endDateTime is before startDateTime.\" + message);","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"Li-Lehao"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"Li-Lehao":11}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"NecroWolf28"},"content":"     * Returns the TagName.","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"NecroWolf28"},"content":"    public String getTagName() {","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"NecroWolf28"},"content":"        return tagName;","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":54,"NecroWolf28":7}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"YaleChen299"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"YaleChen299"},"content":"import seedu.address.model.ReadOnlySchedule;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"YaleChen299"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"YaleChen299"},"content":"import seedu.address.model.schedule.Appointment;","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"YaleChen299"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"YaleChen299"},"content":"import seedu.address.model.schedule.TimePeriod;","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"YaleChen299"},"content":"    private static UniquePersonList getFromSamplePersons(int... index) {","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"YaleChen299"},"content":"        UniquePersonList personList \u003d new UniquePersonList();","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"YaleChen299"},"content":"        for (int i : index) {","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"YaleChen299"},"content":"            personList.add(getSamplePersons()[i]);","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"YaleChen299"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"YaleChen299"},"content":"        return personList;","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"YaleChen299"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"YaleChen299"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"YaleChen299"},"content":"     * Returns the list of sample appointments","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"YaleChen299"},"content":"     * This depends on the above getSamplePersons() for the app the work correctly","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"YaleChen299"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"YaleChen299"},"content":"     * @return list of appointment","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"YaleChen299"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"YaleChen299"},"content":"    private static Appointment[] getSampleAppointment() {","lastModifiedDate":"2021-10-29"},{"lineNumber":64,"author":{"gitId":"YaleChen299"},"content":"        TimePeriod urgent \u003d","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"YaleChen299"},"content":"                new TimePeriod(LocalDateTime.now().plusHours(2), LocalDateTime.now().plusHours(4));","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"YaleChen299"},"content":"        TimePeriod medium \u003d","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"YaleChen299"},"content":"                new TimePeriod(LocalDateTime.now().plusDays(3), LocalDateTime.now().plusDays(3).plusHours(2));","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"YaleChen299"},"content":"        TimePeriod low \u003d","lastModifiedDate":"2021-10-29"},{"lineNumber":69,"author":{"gitId":"YaleChen299"},"content":"                new TimePeriod(LocalDateTime.now().plusDays(9), LocalDateTime.now().plusDays(9).plusHours(2));","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"YaleChen299"},"content":"        return new Appointment[] {","lastModifiedDate":"2021-10-29"},{"lineNumber":72,"author":{"gitId":"YaleChen299"},"content":"            new Appointment(getFromSamplePersons(0, 1, 2),","lastModifiedDate":"2021-10-29"},{"lineNumber":73,"author":{"gitId":"YaleChen299"},"content":"                    new Address(\"Vivo City\"), urgent, \"Team meeting\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":74,"author":{"gitId":"YaleChen299"},"content":"            new Appointment(getFromSamplePersons(5),","lastModifiedDate":"2021-10-29"},{"lineNumber":75,"author":{"gitId":"YaleChen299"},"content":"                    new Address(\"ABC Office\"), medium, \"Team meeting\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":76,"author":{"gitId":"YaleChen299"},"content":"            new Appointment(getFromSamplePersons(4),","lastModifiedDate":"2021-10-29"},{"lineNumber":77,"author":{"gitId":"YaleChen299"},"content":"                    new Address(\"Zoom\"), medium, \"Sales Update\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":78,"author":{"gitId":"YaleChen299"},"content":"            new Appointment(getFromSamplePersons(3, 4),","lastModifiedDate":"2021-10-29"},{"lineNumber":79,"author":{"gitId":"YaleChen299"},"content":"                    new Address(\"XYZ Company\"), low, \"Project meeting\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":80,"author":{"gitId":"YaleChen299"},"content":"            new Appointment(getFromSamplePersons(2, 4, 5),","lastModifiedDate":"2021-10-29"},{"lineNumber":81,"author":{"gitId":"YaleChen299"},"content":"                    new Address(\"XYZ School\"), low, \"Talk\"),","lastModifiedDate":"2021-10-29"},{"lineNumber":82,"author":{"gitId":"YaleChen299"},"content":"        };","lastModifiedDate":"2021-10-29"},{"lineNumber":83,"author":{"gitId":"YaleChen299"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":84,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":93,"author":{"gitId":"YaleChen299"},"content":"    public static ReadOnlySchedule getSampleSchedule() {","lastModifiedDate":"2021-10-29"},{"lineNumber":94,"author":{"gitId":"YaleChen299"},"content":"        Schedule sampleSch \u003d new Schedule();","lastModifiedDate":"2021-10-29"},{"lineNumber":95,"author":{"gitId":"YaleChen299"},"content":"        for (Appointment sampleAppointment : getSampleAppointment()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":96,"author":{"gitId":"YaleChen299"},"content":"            sampleSch.addAppointment(sampleAppointment);","lastModifiedDate":"2021-10-29"},{"lineNumber":97,"author":{"gitId":"YaleChen299"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":98,"author":{"gitId":"YaleChen299"},"content":"        return sampleSch;","lastModifiedDate":"2021-10-29"},{"lineNumber":99,"author":{"gitId":"YaleChen299"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":100,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"YaleChen299":50,"-":60}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedAppointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nwhloo99"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"nwhloo99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"nwhloo99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"nwhloo99"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"nwhloo99"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"nwhloo99"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.model.schedule.Appointment;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"tchiong"},"content":"import seedu.address.model.schedule.TimePeriod;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"nwhloo99"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"nwhloo99"},"content":" * Jackson-friendly version of {@link Appointment}.","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"nwhloo99"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"nwhloo99"},"content":"public class JsonAdaptedAppointment {","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"nwhloo99"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Appointment\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"nwhloo99"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Client list contains duplicate person(s).\";","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"nwhloo99"},"content":"    private final List\u003cJsonAdaptedPerson\u003e clients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"nwhloo99"},"content":"    private final String location;","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"nwhloo99"},"content":"    private final JsonAdaptedTimePeriod timePeriod;","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"nwhloo99"},"content":"    private final String description;","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"nwhloo99"},"content":"     * Constructs a {@code JsonAdaptedAppointment} with the given appointment details.","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"nwhloo99"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"nwhloo99"},"content":"    public JsonAdaptedAppointment(@JsonProperty(\"clients\") List\u003cJsonAdaptedPerson\u003e clients,","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"nwhloo99"},"content":"            @JsonProperty(\"location\") String location, @JsonProperty(\"timePeriod\") JsonAdaptedTimePeriod timePeriod,","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"tchiong"},"content":"            @JsonProperty(\"description\") String description) {","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"nwhloo99"},"content":"        this.clients.addAll(clients);","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"nwhloo99"},"content":"        this.location \u003d location;","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"tchiong"},"content":"        this.timePeriod \u003d timePeriod;","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"nwhloo99"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"nwhloo99"},"content":"     * Converts a given {@code Appointment} into this class for Jackson use.","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"nwhloo99"},"content":"    public JsonAdaptedAppointment(Appointment source) {","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"nwhloo99"},"content":"        clients.addAll(source.getClientList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"nwhloo99"},"content":"        location \u003d source.getLocation().toString();","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"nwhloo99"},"content":"        timePeriod \u003d new JsonAdaptedTimePeriod(source.getTimePeriod());","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"nwhloo99"},"content":"        description \u003d source.getDescription();","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"nwhloo99"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Appointment} object.","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"nwhloo99"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted appointment.","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"nwhloo99"},"content":"    public Appointment toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"nwhloo99"},"content":"        if (clients \u003d\u003d null) {","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"nwhloo99"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Person.class.getSimpleName()));","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"nwhloo99"},"content":"        final UniquePersonList modelClients \u003d createModelClient(this.clients);","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"nwhloo99"},"content":"        if (location \u003d\u003d null) {","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"nwhloo99"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"nwhloo99"},"content":"        if (!Address.isValidAddress(location)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"nwhloo99"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"nwhloo99"},"content":"        final Address modelLocation \u003d new Address(location);","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"tchiong"},"content":"        if (timePeriod \u003d\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"nwhloo99"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"nwhloo99"},"content":"                    TimePeriod.class.getSimpleName()));","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"nwhloo99"},"content":"        final TimePeriod modelTimePeriod \u003d timePeriod.toModelType();","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"nwhloo99"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"nwhloo99"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, String.class.getSimpleName()));","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"nwhloo99"},"content":"        final String modelDescription \u003d description;","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"tchiong"},"content":"        return new Appointment(modelClients, modelLocation, modelTimePeriod, modelDescription);","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"nwhloo99"},"content":"    private UniquePersonList createModelClient(List\u003cJsonAdaptedPerson\u003e clients) throws IllegalValueException {","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"nwhloo99"},"content":"        UniquePersonList modelClients \u003d new UniquePersonList();","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"nwhloo99"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : clients) {","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"nwhloo99"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"nwhloo99"},"content":"            if (modelClients.contains(person)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"nwhloo99"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"nwhloo99"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"nwhloo99"},"content":"            modelClients.add(person);","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"nwhloo99"},"content":"        return modelClients;","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"nwhloo99"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"tchiong":5,"nwhloo99":93}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTimePeriod.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nwhloo99"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"nwhloo99"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"nwhloo99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"nwhloo99"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"nwhloo99"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.model.schedule.TimePeriod;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"nwhloo99"},"content":"public class JsonAdaptedTimePeriod {","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"nwhloo99"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"TimePeriod\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"nwhloo99"},"content":"    private final String startDateTime;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"nwhloo99"},"content":"    private final String endDateTime;","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"nwhloo99"},"content":"     * Constructs a {@code JsonAdaptedTimePeriod} with the given start and end DateTime.","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"nwhloo99"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"nwhloo99"},"content":"    public JsonAdaptedTimePeriod(@JsonProperty(\"startDateTime\") String startDateTime,","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"nwhloo99"},"content":"             @JsonProperty(\"endDateTime\") String endDateTime) {","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"nwhloo99"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"nwhloo99"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"nwhloo99"},"content":"     * Converts a given {@code TimePeriod} into this class for Jackson use.","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"nwhloo99"},"content":"    public JsonAdaptedTimePeriod(TimePeriod source) {","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"nwhloo99"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"nwhloo99"},"content":"        this.startDateTime \u003d source.getStartDateTime().format(formatter);","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"nwhloo99"},"content":"        this.endDateTime \u003d source.getEndDateTime().format(formatter);","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"nwhloo99"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code TimePeriod} object.","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"nwhloo99"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted TimePeriod.","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"nwhloo99"},"content":"    public TimePeriod toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"nwhloo99"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"nwhloo99"},"content":"        if (startDateTime \u003d\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"nwhloo99"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"nwhloo99"},"content":"                    LocalDateTime.class.getSimpleName()));","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"nwhloo99"},"content":"        final LocalDateTime modelStartDateTime \u003d LocalDateTime.parse(startDateTime, formatter);","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"nwhloo99"},"content":"        if (endDateTime \u003d\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"nwhloo99"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"nwhloo99"},"content":"                    LocalDateTime.class.getSimpleName()));","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"nwhloo99"},"content":"        final LocalDateTime modelEndDateTime \u003d LocalDateTime.parse(endDateTime, formatter);","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"nwhloo99"},"content":"        return new TimePeriod(modelStartDateTime, modelEndDateTime);","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"nwhloo99"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"nwhloo99":60}},{"path":"src/main/java/seedu/address/storage/JsonScheduleStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nwhloo99"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"nwhloo99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"nwhloo99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"nwhloo99"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"nwhloo99"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"nwhloo99"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.model.ReadOnlySchedule;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"nwhloo99"},"content":"public class JsonScheduleStorage implements ScheduleStorage {","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"nwhloo99"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonScheduleStorage.class);","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"nwhloo99"},"content":"    private Path filePath;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"nwhloo99"},"content":"    public JsonScheduleStorage(Path filePath) {","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"nwhloo99"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"nwhloo99"},"content":"    public Path getScheduleFilePath() {","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"nwhloo99"},"content":"        return filePath;","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"nwhloo99"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"nwhloo99"},"content":"    public Optional\u003cReadOnlySchedule\u003e readSchedule() throws DataConversionException {","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"nwhloo99"},"content":"        return readSchedule(filePath);","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"nwhloo99"},"content":"     * Similar to {@link #readSchedule()}.","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"nwhloo99"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"nwhloo99"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"nwhloo99"},"content":"    public Optional\u003cReadOnlySchedule\u003e readSchedule(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"nwhloo99"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"nwhloo99"},"content":"        Optional\u003cJsonSerializableSchedule\u003e jsonSchedule \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"nwhloo99"},"content":"                filePath, JsonSerializableSchedule.class);","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"nwhloo99"},"content":"        if (!jsonSchedule.isPresent()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"nwhloo99"},"content":"            return Optional.empty();","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"nwhloo99"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"nwhloo99"},"content":"            return Optional.of(jsonSchedule.get().toModelType());","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"nwhloo99"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"nwhloo99"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"nwhloo99"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"nwhloo99"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"nwhloo99"},"content":"    public void saveSchedule(ReadOnlySchedule schedule) throws IOException {","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"nwhloo99"},"content":"        saveSchedule(schedule, filePath);","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"nwhloo99"},"content":"     * Similar to {@link #saveSchedule(ReadOnlySchedule)}.","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"nwhloo99"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"nwhloo99"},"content":"    public void saveSchedule(ReadOnlySchedule schedule, Path filePath) throws IOException {","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"nwhloo99"},"content":"        requireNonNull(schedule);","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"nwhloo99"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"nwhloo99"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"tchiong"},"content":"        logger.info(\"Saved to \" + filePath);","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"nwhloo99"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableSchedule(schedule), filePath);","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"nwhloo99"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"tchiong":1,"nwhloo99":76}},{"path":"src/main/java/seedu/address/storage/JsonSerializableSchedule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nwhloo99"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"nwhloo99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"nwhloo99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"nwhloo99"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"nwhloo99"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"nwhloo99"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"nwhloo99"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.model.ReadOnlySchedule;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.model.schedule.Appointment;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"nwhloo99"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"nwhloo99"},"content":" * An Immutable Schedule that is serializable to JSON format.","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"nwhloo99"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"nwhloo99"},"content":"@JsonRootName(value \u003d \"schedule\")","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"nwhloo99"},"content":"public class JsonSerializableSchedule {","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"nwhloo99"},"content":"    public static final String MESSAGE_DUPLICATE_APPOINTMENT \u003d \"Schedule contains duplicate appointment(s).\";","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"nwhloo99"},"content":"    private final List\u003cJsonAdaptedAppointment\u003e appointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"nwhloo99"},"content":"     * Constructs a {@code JsonSerializableSchedule} with the given appointments.","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"nwhloo99"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"nwhloo99"},"content":"    public JsonSerializableSchedule(@JsonProperty(\"appointments\") List\u003cJsonAdaptedAppointment\u003e appointments) {","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"nwhloo99"},"content":"        this.appointments.addAll(appointments);","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"tchiong"},"content":"     * Converts a given {@code ReadOnlySchedule} into this class for Jackson use.","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"nwhloo99"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableSchedule}.","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"nwhloo99"},"content":"    public JsonSerializableSchedule(ReadOnlySchedule source) {","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"nwhloo99"},"content":"        appointments.addAll(source.getSchedule().stream().map(JsonAdaptedAppointment::new)","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"nwhloo99"},"content":"                    .collect(Collectors.toList()));","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"nwhloo99"},"content":"     * Converts this address book into the model\u0027s {@code Schedule} object.","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"nwhloo99"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"nwhloo99"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"nwhloo99"},"content":"    public Schedule toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"nwhloo99"},"content":"        Schedule schedule \u003d new Schedule();","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"nwhloo99"},"content":"        for (JsonAdaptedAppointment jsonAdaptedSchedule : appointments) {","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"nwhloo99"},"content":"            Appointment appointment \u003d jsonAdaptedSchedule.toModelType();","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"nwhloo99"},"content":"            if (schedule.contains(appointment)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"nwhloo99"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_APPOINTMENT);","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"nwhloo99"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"nwhloo99"},"content":"            schedule.addAppointment(appointment);","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"nwhloo99"},"content":"        return schedule;","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"nwhloo99"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"tchiong":1,"nwhloo99":59}},{"path":"src/main/java/seedu/address/storage/ScheduleStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nwhloo99"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"nwhloo99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"nwhloo99"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"nwhloo99"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.model.ReadOnlySchedule;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"nwhloo99"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"nwhloo99"},"content":" * Represents a storage for {@link seedu.address.model.schedule.Schedule}.","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"nwhloo99"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"nwhloo99"},"content":"public interface ScheduleStorage {","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"nwhloo99"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"nwhloo99"},"content":"    Path getScheduleFilePath();","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"nwhloo99"},"content":"     * Returns AddressBook data as a {@link ReadOnlyAddressBook}.","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"nwhloo99"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"nwhloo99"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"nwhloo99"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"nwhloo99"},"content":"    Optional\u003cReadOnlySchedule\u003e readSchedule() throws DataConversionException, IOException;","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"nwhloo99"},"content":"     * @see #getScheduleFilePath()","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"nwhloo99"},"content":"    Optional\u003cReadOnlySchedule\u003e readSchedule(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"nwhloo99"},"content":"     * Saves the given {@link ReadOnlyAddressBook} to the storage.","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"nwhloo99"},"content":"     * @param schedule cannot be null.","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"nwhloo99"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"nwhloo99"},"content":"    void saveSchedule(ReadOnlySchedule schedule) throws IOException;","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"nwhloo99"},"content":"     * @see #saveSchedule(ReadOnlySchedule)","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"nwhloo99"},"content":"    void saveSchedule(ReadOnlySchedule schedule, Path filePath) throws IOException;","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"nwhloo99"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"nwhloo99":46}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.model.ReadOnlySchedule;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"nwhloo99"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage, ScheduleStorage {","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":33,"author":{"gitId":"nwhloo99"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"nwhloo99"},"content":"    Path getScheduleFilePath();","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"nwhloo99"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"nwhloo99"},"content":"    Optional\u003cReadOnlySchedule\u003e readSchedule() throws DataConversionException, IOException;","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"nwhloo99"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"nwhloo99"},"content":"    void saveSchedule(ReadOnlySchedule schedule) throws IOException;","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"nwhloo99":10,"-":31}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.model.ReadOnlySchedule;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":23,"author":{"gitId":"nwhloo99"},"content":"    private ScheduleStorage scheduleStorage;","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"nwhloo99"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"nwhloo99"},"content":"     * and {@code ScheduleStorage}.","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"nwhloo99"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage,","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"nwhloo99"},"content":"            ScheduleStorage scheduleStorage) {","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"nwhloo99"},"content":"        this.scheduleStorage \u003d scheduleStorage;","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"nwhloo99"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Schedule methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"nwhloo99"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"nwhloo99"},"content":"    public Path getScheduleFilePath() {","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"nwhloo99"},"content":"        return scheduleStorage.getScheduleFilePath();","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"nwhloo99"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"nwhloo99"},"content":"    public Optional\u003cReadOnlySchedule\u003e readSchedule() throws DataConversionException, IOException {","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"nwhloo99"},"content":"        return readSchedule(scheduleStorage.getScheduleFilePath());","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"nwhloo99"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"nwhloo99"},"content":"    public Optional\u003cReadOnlySchedule\u003e readSchedule(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"nwhloo99"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"nwhloo99"},"content":"        return scheduleStorage.readSchedule(filePath);","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"nwhloo99"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":103,"author":{"gitId":"nwhloo99"},"content":"    public void saveSchedule(ReadOnlySchedule schedule) throws IOException {","lastModifiedDate":"2021-10-13"},{"lineNumber":104,"author":{"gitId":"nwhloo99"},"content":"        saveSchedule(schedule, scheduleStorage.getScheduleFilePath());","lastModifiedDate":"2021-10-13"},{"lineNumber":105,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"nwhloo99"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"nwhloo99"},"content":"    public void saveSchedule(ReadOnlySchedule schedule, Path filePath) throws IOException {","lastModifiedDate":"2021-10-13"},{"lineNumber":109,"author":{"gitId":"nwhloo99"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"nwhloo99"},"content":"        scheduleStorage.saveSchedule(schedule, filePath);","lastModifiedDate":"2021-10-13"},{"lineNumber":111,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nwhloo99":35,"-":77}},{"path":"src/main/java/seedu/address/ui/AppointmentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YaleChen299"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"YaleChen299"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"YaleChen299"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"YaleChen299"},"content":"import javafx.scene.control.TitledPane;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"YaleChen299"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"YaleChen299"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"YaleChen299"},"content":"import javafx.scene.layout.GridPane;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"YaleChen299"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"YaleChen299"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"YaleChen299"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"YaleChen299"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"YaleChen299"},"content":"import seedu.address.model.schedule.Appointment;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"YaleChen299"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"YaleChen299"},"content":" * An UI component that displays information of a {@code Appointment}.","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"YaleChen299"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"YaleChen299"},"content":"public class AppointmentCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"YaleChen299"},"content":"    private static final String FXML \u003d \"AppointmentListCard.fxml\";","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"YaleChen299"},"content":"    private static final BackgroundFill RED \u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"YaleChen299"},"content":"            new BackgroundFill(Color.RED.deriveColor(0, 1, 1, 0.1), null, null);","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"YaleChen299"},"content":"    private static final BackgroundFill YELLOW \u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"YaleChen299"},"content":"            new BackgroundFill(Color.ORANGE.deriveColor(0, 1, 1, 0.12), null, null);","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"YaleChen299"},"content":"    private static final BackgroundFill GREEN \u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"YaleChen299"},"content":"            new BackgroundFill(Color.GREEN.deriveColor(0, 1, 1, 0.12), null, null);","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"YaleChen299"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"YaleChen299"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"YaleChen299"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"YaleChen299"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"YaleChen299"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"YaleChen299"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"YaleChen299"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"YaleChen299"},"content":"    public final Appointment appointment;","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"YaleChen299"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"YaleChen299"},"content":"    private HBox appointmentCardPane;","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"YaleChen299"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"YaleChen299"},"content":"    private GridPane appointmentColorPane;","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"YaleChen299"},"content":"    @FXML","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"YaleChen299"},"content":"    private Label description;","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"YaleChen299"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"YaleChen299"},"content":"    private Label id;","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"YaleChen299"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"YaleChen299"},"content":"    private TitledPane clientsPane;","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"YaleChen299"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"YaleChen299"},"content":"    private Label address;","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"YaleChen299"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"YaleChen299"},"content":"    private Label startDate;","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"YaleChen299"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"YaleChen299"},"content":"    private Label endDate;","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"YaleChen299"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"YaleChen299"},"content":"     * Creates a {@code AppointmentCard} with the given {@code Appointment} and index to display.","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"YaleChen299"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"YaleChen299"},"content":"    public AppointmentCard(Appointment appointment, int displayedIndex) {","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"YaleChen299"},"content":"        super(FXML);","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"YaleChen299"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"YaleChen299"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"YaleChen299"},"content":"        description.setText(appointment.getDescription());","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"YaleChen299"},"content":"        address.setText(appointment.getLocation().value);","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"YaleChen299"},"content":"        startDate.setText(appointment.getStartDateTimeString()); // Changed from date.setText","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"YaleChen299"},"content":"        endDate.setText(appointment.getEndDateTimeString());","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"YaleChen299"},"content":"        UniquePersonList clients \u003d appointment.getClients();","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"YaleChen299"},"content":"        PersonListPanel clientsDetail \u003d new PersonListPanel(clients.asUnmodifiableObservableList());","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"YaleChen299"},"content":"        String clientNames \u003d clients.toString();","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"YaleChen299"},"content":"        clientsPane.setText(clientNames);","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"YaleChen299"},"content":"        clientsPane.setContent(clientsDetail.getRoot());","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"YaleChen299"},"content":"        this.setUrgencyDisplay();","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"YaleChen299"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"YaleChen299"},"content":"    private void setUrgencyDisplay() {","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"YaleChen299"},"content":"        switch (appointment.getUrgency()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"YaleChen299"},"content":"        case HIGH:","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"YaleChen299"},"content":"            appointmentColorPane.setBackground(new Background(RED));","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"YaleChen299"},"content":"            break;","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"YaleChen299"},"content":"        case MEDIUM:","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"YaleChen299"},"content":"            appointmentColorPane.setBackground(new Background(YELLOW));","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"YaleChen299"},"content":"            break;","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"YaleChen299"},"content":"        case LOW:","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"YaleChen299"},"content":"            appointmentColorPane.setBackground(new Background(GREEN));","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"YaleChen299"},"content":"            break;","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"YaleChen299"},"content":"        default:","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"YaleChen299"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"YaleChen299"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"YaleChen299"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"YaleChen299"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"YaleChen299"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"YaleChen299"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"YaleChen299"},"content":"            return true;","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"YaleChen299"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"YaleChen299"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"YaleChen299"},"content":"        if (!(other instanceof AppointmentCard)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"YaleChen299"},"content":"            return false;","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"YaleChen299"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"YaleChen299"},"content":"        // state check","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"YaleChen299"},"content":"        AppointmentCard card \u003d (AppointmentCard) other;","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"YaleChen299"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"YaleChen299"},"content":"                \u0026\u0026 clientsPane.equals(card.clientsPane);","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"YaleChen299"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"YaleChen299":109,"nwhloo99":1}},{"path":"src/main/java/seedu/address/ui/AppointmentListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YaleChen299"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"YaleChen299"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"YaleChen299"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"YaleChen299"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"YaleChen299"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"YaleChen299"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"YaleChen299"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"YaleChen299"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"YaleChen299"},"content":"import seedu.address.model.schedule.Appointment;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"YaleChen299"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"YaleChen299"},"content":" * Panel containing the list of appointments.","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"YaleChen299"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"YaleChen299"},"content":"public class AppointmentListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"YaleChen299"},"content":"    private static final String FXML \u003d \"AppointmentListPanel.fxml\";","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"YaleChen299"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(AppointmentListPanel.class);","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"YaleChen299"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"YaleChen299"},"content":"    private ListView\u003cAppointment\u003e appointmentListView;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"YaleChen299"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"YaleChen299"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"YaleChen299"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"YaleChen299"},"content":"    public AppointmentListPanel(ObservableList\u003cAppointment\u003e appointmentList) {","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"YaleChen299"},"content":"        super(FXML);","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"YaleChen299"},"content":"        appointmentListView.setItems(appointmentList);","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"YaleChen299"},"content":"        appointmentListView.setCellFactory(listView -\u003e new AppointmentListViewCell());","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"YaleChen299"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"YaleChen299"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"YaleChen299"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"YaleChen299"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"YaleChen299"},"content":"    class AppointmentListViewCell extends ListCell\u003cAppointment\u003e {","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"YaleChen299"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"YaleChen299"},"content":"        protected void updateItem(Appointment appointment, boolean empty) {","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"YaleChen299"},"content":"            super.updateItem(appointment, empty);","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"YaleChen299"},"content":"            if (empty || appointment \u003d\u003d null) {","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"YaleChen299"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"YaleChen299"},"content":"                setText(null);","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"YaleChen299"},"content":"            } else {","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"YaleChen299"},"content":"                setGraphic(new AppointmentCard(appointment, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"YaleChen299"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"YaleChen299"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"YaleChen299"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"YaleChen299":49}},{"path":"src/main/java/seedu/address/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"YaleChen299"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"YaleChen299"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"YaleChen299"},"content":"    private final CommandHistory history;","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":35,"author":{"gitId":"YaleChen299"},"content":"        this.history \u003d new CommandHistory();","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":50,"author":{"gitId":"YaleChen299"},"content":"            history.addCommand(commandText);","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"         * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"YaleChen299"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":91,"author":{"gitId":"YaleChen299"},"content":"     * Gets the user input history and display to the text field.","lastModifiedDate":"2021-10-28"},{"lineNumber":92,"author":{"gitId":"YaleChen299"},"content":"     * Sets the caret position to the last position.","lastModifiedDate":"2021-10-28"},{"lineNumber":93,"author":{"gitId":"YaleChen299"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":94,"author":{"gitId":"YaleChen299"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":95,"author":{"gitId":"YaleChen299"},"content":"    private void handleTextFieldKeyPressed(KeyEvent event) {","lastModifiedDate":"2021-10-28"},{"lineNumber":96,"author":{"gitId":"YaleChen299"},"content":"        if (event.getCode() \u003d\u003d KeyCode.UP) {","lastModifiedDate":"2021-10-28"},{"lineNumber":97,"author":{"gitId":"YaleChen299"},"content":"            commandTextField.setText(history.getLastInput());","lastModifiedDate":"2021-10-28"},{"lineNumber":98,"author":{"gitId":"YaleChen299"},"content":"            commandTextField.positionCaret(commandTextField.getLength());","lastModifiedDate":"2021-10-28"},{"lineNumber":99,"author":{"gitId":"YaleChen299"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":100,"author":{"gitId":"YaleChen299"},"content":"        if (event.getCode() \u003d\u003d KeyCode.DOWN) {","lastModifiedDate":"2021-10-28"},{"lineNumber":101,"author":{"gitId":"YaleChen299"},"content":"            commandTextField.setText(history.getNextInput());","lastModifiedDate":"2021-10-28"},{"lineNumber":102,"author":{"gitId":"YaleChen299"},"content":"            commandTextField.positionCaret(commandTextField.getLength());","lastModifiedDate":"2021-10-28"},{"lineNumber":103,"author":{"gitId":"YaleChen299"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":104,"author":{"gitId":"YaleChen299"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"YaleChen299":20,"-":85}},{"path":"src/main/java/seedu/address/ui/CommandHistory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YaleChen299"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"YaleChen299"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"YaleChen299"},"content":"import java.util.List;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"YaleChen299"},"content":"public class CommandHistory {","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"YaleChen299"},"content":"    private final List\u003cString\u003e history;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"YaleChen299"},"content":"    private int historyIndex;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"YaleChen299"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"YaleChen299"},"content":"     * Constructs the CommandHistory Class","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"YaleChen299"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"YaleChen299"},"content":"    public CommandHistory() {","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"YaleChen299"},"content":"        this.history \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"YaleChen299"},"content":"        this.historyIndex \u003d 0;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"YaleChen299"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"YaleChen299"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"YaleChen299"},"content":"     * Adds the command to the history","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"YaleChen299"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"YaleChen299"},"content":"    public void addCommand(String commandString) {","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"YaleChen299"},"content":"        history.add(commandString);","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"YaleChen299"},"content":"        historyIndex \u003d history.size();","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"YaleChen299"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"YaleChen299"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"YaleChen299"},"content":"     * Gets the last user input in the history of this instance.","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"YaleChen299"},"content":"     * return the first input if there is no more last history.","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"YaleChen299"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"YaleChen299"},"content":"     * @return a string of user input history","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"YaleChen299"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"YaleChen299"},"content":"    public String getLastInput() {","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"YaleChen299"},"content":"        try {","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"YaleChen299"},"content":"            historyIndex \u003d Math.max(historyIndex - 1, 0);","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"YaleChen299"},"content":"            return history.get(historyIndex);","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"YaleChen299"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"YaleChen299"},"content":"            return \"\";","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"YaleChen299"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"YaleChen299"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"YaleChen299"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"YaleChen299"},"content":"     * Gets the next user input in the history of this instance.","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"YaleChen299"},"content":"     * return an empty string if there is no more next history.","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"YaleChen299"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"YaleChen299"},"content":"     * @return a string of user input history","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"YaleChen299"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"YaleChen299"},"content":"    public String getNextInput() {","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"YaleChen299"},"content":"        try {","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"YaleChen299"},"content":"            String nextInput \u003d history.get(historyIndex + 1);","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"YaleChen299"},"content":"            historyIndex \u003d Math.min(historyIndex + 1, history.size() - 1);","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"YaleChen299"},"content":"            return nextInput;","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"YaleChen299"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"YaleChen299"},"content":"            return \"\";","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"YaleChen299"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"YaleChen299"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"YaleChen299":57}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"nwhloo99"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s1-cs2103t-t12-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"nwhloo99":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"YaleChen299"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"YaleChen299"},"content":"    private AppointmentListPanel appointmentListPanel;","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"YaleChen299"},"content":"    private ThemeManager themeManager;","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"YaleChen299"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"YaleChen299"},"content":"    private StackPane appointmentListPanelPlaceholder;","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"YaleChen299"},"content":"    @FXML","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"YaleChen299"},"content":"    private Button themeButton;","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"YaleChen299"},"content":"        themeManager \u003d new ThemeManager();","lastModifiedDate":"2021-10-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"YaleChen299"},"content":"        appointmentListPanel \u003d new AppointmentListPanel(logic.getFilteredAppointmentList());","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"YaleChen299"},"content":"        appointmentListPanelPlaceholder.getChildren().add(appointmentListPanel.getRoot());","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"YaleChen299"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":164,"author":{"gitId":"YaleChen299"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2021-10-29"},{"lineNumber":165,"author":{"gitId":"YaleChen299"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":166,"author":{"gitId":"YaleChen299"},"content":"    @FXML","lastModifiedDate":"2021-10-29"},{"lineNumber":167,"author":{"gitId":"YaleChen299"},"content":"    public void handleThemeChange() {","lastModifiedDate":"2021-10-29"},{"lineNumber":168,"author":{"gitId":"YaleChen299"},"content":"        themeManager.changeTheme(primaryStage, themeButton);","lastModifiedDate":"2021-10-29"},{"lineNumber":169,"author":{"gitId":"YaleChen299"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":170,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"Li-Lehao"},"content":"            if (commandResult.isUndo()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":211,"author":{"gitId":"Li-Lehao"},"content":"                fillInnerParts();","lastModifiedDate":"2021-10-29"},{"lineNumber":212,"author":{"gitId":"Li-Lehao"},"content":"            }","lastModifiedDate":"2021-10-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Li-Lehao":3,"YaleChen299":21,"-":196}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"YaleChen299"},"content":"     * Creates a {@code PersonCard} with the given {@code Person} and index to display.","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"YaleChen299":1,"-":76}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"YaleChen299"},"content":"    private static final double cellHeight \u003d 110;","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"YaleChen299"},"content":"        personListView.setPrefHeight(cellHeight * personList.size());","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"YaleChen299":2,"-":49}},{"path":"src/main/java/seedu/address/ui/ThemeManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YaleChen299"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"YaleChen299"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"YaleChen299"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"YaleChen299"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"YaleChen299"},"content":"public class ThemeManager {","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"YaleChen299"},"content":"    private static final double size \u003d 30;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"YaleChen299"},"content":"    private enum Theme { LIGHT, DARK }","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"YaleChen299"},"content":"    private Theme currentTheme;","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"YaleChen299"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"YaleChen299"},"content":"     * Constructs ThemeManager","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"YaleChen299"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"YaleChen299"},"content":"    public ThemeManager() {","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"YaleChen299"},"content":"        currentTheme \u003d Theme.LIGHT;","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"YaleChen299"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"YaleChen299"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"YaleChen299"},"content":"     * Changes the current theme.","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"YaleChen299"},"content":"     *","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"YaleChen299"},"content":"     * @param primaryStage the primary stage","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"YaleChen299"},"content":"     * @param themeButton the theme button","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"YaleChen299"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"YaleChen299"},"content":"    public void changeTheme(Stage primaryStage, Button themeButton) {","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"YaleChen299"},"content":"        switch (currentTheme) {","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"YaleChen299"},"content":"        case DARK:","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"YaleChen299"},"content":"            primaryStage.getScene().getStylesheets().remove(\"view/DarkTheme.css\");","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"YaleChen299"},"content":"            primaryStage.getScene().getStylesheets().add(\"view/LightTheme.css\");","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"YaleChen299"},"content":"            ImageView sun \u003d new ImageView(\"images/sun.png\");","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"YaleChen299"},"content":"            sun.setFitHeight(size);","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"YaleChen299"},"content":"            sun.setFitWidth(size);","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"YaleChen299"},"content":"            themeButton.setGraphic(sun);","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"YaleChen299"},"content":"            currentTheme \u003d Theme.LIGHT;","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"YaleChen299"},"content":"            break;","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"YaleChen299"},"content":"        case LIGHT:","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"YaleChen299"},"content":"            primaryStage.getScene().getStylesheets().remove(\"view/LightTheme.css\");","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"YaleChen299"},"content":"            primaryStage.getScene().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"YaleChen299"},"content":"            ImageView moon \u003d new ImageView(\"images/moon.png\");","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"YaleChen299"},"content":"            moon.setFitHeight(size);","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"YaleChen299"},"content":"            moon.setFitWidth(size);","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"YaleChen299"},"content":"            themeButton.setGraphic(moon);","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"YaleChen299"},"content":"            currentTheme \u003d Theme.DARK;","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"YaleChen299"},"content":"            break;","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"YaleChen299"},"content":"        default:","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"YaleChen299"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"YaleChen299"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"YaleChen299":49}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"YaleChen299"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"YaleChen299"},"content":"import javafx.scene.control.ButtonType;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":25,"author":{"gitId":"YaleChen299"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/placebook.png\";","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":91,"author":{"gitId":"YaleChen299"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"YaleChen299"},"content":"     * Shows a confirmation dialog to confirm the deletion of an object.","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"YaleChen299"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"YaleChen299"},"content":"    public static boolean showDeleteDialogAndWait(String contentText) {","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"YaleChen299"},"content":"        final Alert alert \u003d new Alert(AlertType.CONFIRMATION);","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"YaleChen299"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"YaleChen299"},"content":"        // TODO: to be adjust later, can try alert.setDialogPane();","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"YaleChen299"},"content":"        alert.setHeight(500);","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"YaleChen299"},"content":"        alert.setTitle(\"Confirmation Dialog\");","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"YaleChen299"},"content":"        alert.setHeaderText(\"Are you sure you want to delete?\");","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"YaleChen299"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"YaleChen299"},"content":"        Optional\u003cButtonType\u003e result \u003d alert.showAndWait();","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"YaleChen299"},"content":"        return result.orElseGet(() -\u003e ButtonType.CANCEL) \u003d\u003d ButtonType.OK;","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"YaleChen299"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"YaleChen299":19,"-":88}},{"path":"src/main/resources/view/AppointmentListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YaleChen299"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"YaleChen299"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"YaleChen299"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"YaleChen299"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"YaleChen299"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"YaleChen299"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"YaleChen299"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"YaleChen299"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"YaleChen299"},"content":"\u003c?import javafx.scene.control.TitledPane?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"YaleChen299"},"content":"\u003cHBox id\u003d\"appointmentCardPane\" fx:id\u003d\"appointmentCardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"YaleChen299"},"content":"    \u003cGridPane fx:id\u003d\"appointmentColorPane\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"YaleChen299"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"YaleChen299"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"YaleChen299"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"YaleChen299"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"YaleChen299"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"YaleChen299"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"15\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"YaleChen299"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"YaleChen299"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"YaleChen299"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"YaleChen299"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"YaleChen299"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"YaleChen299"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"YaleChen299"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"YaleChen299"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"YaleChen299"},"content":"                \u003cLabel fx:id\u003d\"description\" text\u003d\"\\$description\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"YaleChen299"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"YaleChen299"},"content":"            \u003cTitledPane fx:id\u003d\"clientsPane\" styleClass\u003d\"titled_pane\" expanded\u003d\"false\" maxHeight\u003d\"400\"/\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"YaleChen299"},"content":"            \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"YaleChen299"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"YaleChen299"},"content":"                \u003cLabel fx:id\u003d\"startDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$date\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"YaleChen299"},"content":"                \u003cLabel styleClass\u003d\"cell_big_label\" text\u003d\"  ~  \" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"YaleChen299"},"content":"                \u003cLabel fx:id\u003d\"endDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$time\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"YaleChen299"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"YaleChen299"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"YaleChen299"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"YaleChen299"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"YaleChen299":41}},{"path":"src/main/resources/view/AppointmentListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YaleChen299"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"YaleChen299"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"YaleChen299"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"YaleChen299"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"YaleChen299"},"content":"    \u003cListView fx:id\u003d\"appointmentListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"YaleChen299"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"YaleChen299":8}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2018-04-01"},{"lineNumber":7,"author":{"gitId":"YaleChen299"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onKeyPressed\u003d\"#handleTextFieldKeyPressed\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\"/\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"YaleChen299":1,"-":8}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"YaleChen299"},"content":"    -fx-background-color: black;","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"YaleChen299"},"content":"    background-color: black; /* Used in the default.html file */","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"YaleChen299"},"content":".list-cell:empty {","lastModifiedDate":"2021-10-29"},{"lineNumber":111,"author":{"gitId":"YaleChen299"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2021-10-29"},{"lineNumber":112,"author":{"gitId":"YaleChen299"},"content":"    -fx-background: #383838;","lastModifiedDate":"2021-10-29"},{"lineNumber":113,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":114,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":150,"author":{"gitId":"YaleChen299"},"content":".titled_pane {","lastModifiedDate":"2021-10-08"},{"lineNumber":151,"author":{"gitId":"YaleChen299"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-08"},{"lineNumber":152,"author":{"gitId":"YaleChen299"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2021-10-08"},{"lineNumber":153,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-08"},{"lineNumber":154,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":155,"author":{"gitId":"YaleChen299"},"content":".titled_pane \u003e .title {","lastModifiedDate":"2021-10-08"},{"lineNumber":156,"author":{"gitId":"YaleChen299"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2021-10-08"},{"lineNumber":157,"author":{"gitId":"YaleChen299"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2021-10-08"},{"lineNumber":158,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-08"},{"lineNumber":159,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":160,"author":{"gitId":"YaleChen299"},"content":".titled_pane \u003e *.content  {","lastModifiedDate":"2021-10-08"},{"lineNumber":161,"author":{"gitId":"YaleChen299"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2021-10-08"},{"lineNumber":162,"author":{"gitId":"YaleChen299"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2021-10-08"},{"lineNumber":163,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-08"},{"lineNumber":164,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":284,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":305,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":307,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":317,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":321,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":323,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":325,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":327,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":329,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"YaleChen299"},"content":"#appointmentCardPane {","lastModifiedDate":"2021-10-08"},{"lineNumber":335,"author":{"gitId":"YaleChen299"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-08"},{"lineNumber":336,"author":{"gitId":"YaleChen299"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2021-10-08"},{"lineNumber":337,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-08"},{"lineNumber":338,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":339,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":342,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":344,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":353,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":355,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":357,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":362,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":364,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":367,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":369,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":371,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":376,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":377,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":378,"author":{"gitId":"YaleChen299"},"content":"#themeButton {","lastModifiedDate":"2021-10-29"},{"lineNumber":379,"author":{"gitId":"YaleChen299"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2021-10-29"},{"lineNumber":380,"author":{"gitId":"YaleChen299"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2021-10-29"},{"lineNumber":381,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"YaleChen299":32,"-":349}},{"path":"src/main/resources/view/LightTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YaleChen299"},"content":"* {","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"YaleChen299"},"content":"    -grey4: #798EA0;","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"YaleChen299"},"content":"    -grey3: #D8DEE9;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"YaleChen299"},"content":"    -grey2: #E5E9F0;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"YaleChen299"},"content":"    -grey1: #ECEFF4;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"YaleChen299"},"content":"    -frost1: #cadeef;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"YaleChen299"},"content":"    -frost2: #0784b5;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"YaleChen299"},"content":"    -frost3: #81A1C1;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"YaleChen299"},"content":"    -frost4: #5E81AC;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"YaleChen299"},"content":"    -night: #2E3440;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"YaleChen299"},"content":".background {","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"YaleChen299"},"content":"    -fx-background-color: derive(-frost4, 20%);","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"YaleChen299"},"content":"    background-color: -frost4; /* Used in the default.html file */","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"YaleChen299"},"content":".label {","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"YaleChen299"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"YaleChen299"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"YaleChen299"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"YaleChen299"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"YaleChen299"},"content":".label-bright {","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"YaleChen299"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"YaleChen299"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"YaleChen299"},"content":"    -fx-text-fill: -night;","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"YaleChen299"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"YaleChen299"},"content":".label-header {","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"YaleChen299"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"YaleChen299"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"YaleChen299"},"content":"    -fx-text-fill: -night;","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"YaleChen299"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"YaleChen299"},"content":".text-field {","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"YaleChen299"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"YaleChen299"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"YaleChen299"},"content":".tab-pane {","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"YaleChen299"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"YaleChen299"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"YaleChen299"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"YaleChen299"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"YaleChen299"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"YaleChen299"},"content":".table-view {","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"YaleChen299"},"content":"    -fx-base: -grey1;","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"YaleChen299"},"content":"    -fx-control-inner-background: -frost4;","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"YaleChen299"},"content":"    -fx-background-color: -frost4;","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"YaleChen299"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"YaleChen299"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"YaleChen299"},"content":"    -fx-padding: 5;","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"YaleChen299"},"content":".table-view .column-header-background {","lastModifiedDate":"2021-10-29"},{"lineNumber":64,"author":{"gitId":"YaleChen299"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"YaleChen299"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"YaleChen299"},"content":"    -fx-size: 35;","lastModifiedDate":"2021-10-29"},{"lineNumber":69,"author":{"gitId":"YaleChen299"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"YaleChen299"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"YaleChen299"},"content":"    -fx-border-color:","lastModifiedDate":"2021-10-29"},{"lineNumber":72,"author":{"gitId":"YaleChen299"},"content":"        transparent","lastModifiedDate":"2021-10-29"},{"lineNumber":73,"author":{"gitId":"YaleChen299"},"content":"        transparent","lastModifiedDate":"2021-10-29"},{"lineNumber":74,"author":{"gitId":"YaleChen299"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2021-10-29"},{"lineNumber":75,"author":{"gitId":"YaleChen299"},"content":"        transparent;","lastModifiedDate":"2021-10-29"},{"lineNumber":76,"author":{"gitId":"YaleChen299"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2021-10-29"},{"lineNumber":77,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":78,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":79,"author":{"gitId":"YaleChen299"},"content":".table-view .column-header .label {","lastModifiedDate":"2021-10-29"},{"lineNumber":80,"author":{"gitId":"YaleChen299"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2021-10-29"},{"lineNumber":81,"author":{"gitId":"YaleChen299"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-10-29"},{"lineNumber":82,"author":{"gitId":"YaleChen299"},"content":"    -fx-text-fill: -night;","lastModifiedDate":"2021-10-29"},{"lineNumber":83,"author":{"gitId":"YaleChen299"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2021-10-29"},{"lineNumber":84,"author":{"gitId":"YaleChen299"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2021-10-29"},{"lineNumber":85,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":86,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":87,"author":{"gitId":"YaleChen299"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2021-10-29"},{"lineNumber":88,"author":{"gitId":"YaleChen299"},"content":"    -fx-background-color: derive(-frost1, 50%);","lastModifiedDate":"2021-10-29"},{"lineNumber":89,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":90,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":91,"author":{"gitId":"YaleChen299"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2021-10-29"},{"lineNumber":92,"author":{"gitId":"YaleChen299"},"content":"    -fx-background-color: derive(-grey1, 20%);","lastModifiedDate":"2021-10-29"},{"lineNumber":93,"author":{"gitId":"YaleChen299"},"content":"    -fx-border-color: transparent transparent transparent -grey3;","lastModifiedDate":"2021-10-29"},{"lineNumber":94,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":95,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":96,"author":{"gitId":"YaleChen299"},"content":".split-pane {","lastModifiedDate":"2021-10-29"},{"lineNumber":97,"author":{"gitId":"YaleChen299"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2021-10-29"},{"lineNumber":98,"author":{"gitId":"YaleChen299"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-10-29"},{"lineNumber":99,"author":{"gitId":"YaleChen299"},"content":"    -fx-background-color: derive(-grey1, 20%);","lastModifiedDate":"2021-10-29"},{"lineNumber":100,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":101,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":102,"author":{"gitId":"YaleChen299"},"content":".list-view {","lastModifiedDate":"2021-10-29"},{"lineNumber":103,"author":{"gitId":"YaleChen299"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2021-10-29"},{"lineNumber":104,"author":{"gitId":"YaleChen299"},"content":"    -fx-padding: 0;","lastModifiedDate":"2021-10-29"},{"lineNumber":105,"author":{"gitId":"YaleChen299"},"content":"    -fx-background-color: -grey1;","lastModifiedDate":"2021-10-29"},{"lineNumber":106,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":107,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":108,"author":{"gitId":"YaleChen299"},"content":".list-cell {","lastModifiedDate":"2021-10-29"},{"lineNumber":109,"author":{"gitId":"YaleChen299"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2021-10-29"},{"lineNumber":110,"author":{"gitId":"YaleChen299"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2021-10-29"},{"lineNumber":111,"author":{"gitId":"YaleChen299"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2021-10-29"},{"lineNumber":112,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":113,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":114,"author":{"gitId":"YaleChen299"},"content":".list-cell:filled:even {","lastModifiedDate":"2021-10-29"},{"lineNumber":115,"author":{"gitId":"YaleChen299"},"content":"    -fx-background-color: -grey3;","lastModifiedDate":"2021-10-29"},{"lineNumber":116,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":117,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":118,"author":{"gitId":"YaleChen299"},"content":".list-cell:filled:odd {","lastModifiedDate":"2021-10-29"},{"lineNumber":119,"author":{"gitId":"YaleChen299"},"content":"    -fx-background-color: -grey1;","lastModifiedDate":"2021-10-29"},{"lineNumber":120,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":121,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":122,"author":{"gitId":"YaleChen299"},"content":".list-cell:empty {","lastModifiedDate":"2021-10-29"},{"lineNumber":123,"author":{"gitId":"YaleChen299"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2021-10-29"},{"lineNumber":124,"author":{"gitId":"YaleChen299"},"content":"    -fx-background: -grey4;","lastModifiedDate":"2021-10-29"},{"lineNumber":125,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":126,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":127,"author":{"gitId":"YaleChen299"},"content":".list-cell:filled:selected {","lastModifiedDate":"2021-10-29"},{"lineNumber":128,"author":{"gitId":"YaleChen299"},"content":"    -fx-background-color: derive(-frost1, 30%);","lastModifiedDate":"2021-10-29"},{"lineNumber":129,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":130,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":131,"author":{"gitId":"YaleChen299"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2021-10-29"},{"lineNumber":132,"author":{"gitId":"YaleChen299"},"content":"    -fx-border-color: -frost4;","lastModifiedDate":"2021-10-29"},{"lineNumber":133,"author":{"gitId":"YaleChen299"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2021-10-29"},{"lineNumber":134,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":135,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":136,"author":{"gitId":"YaleChen299"},"content":".list-cell:filled:selected #appointmentCardPane {","lastModifiedDate":"2021-10-29"},{"lineNumber":137,"author":{"gitId":"YaleChen299"},"content":"    -fx-border-color: -frost4;","lastModifiedDate":"2021-10-29"},{"lineNumber":138,"author":{"gitId":"YaleChen299"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2021-10-29"},{"lineNumber":139,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":140,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":141,"author":{"gitId":"YaleChen299"},"content":".list-cell .label {","lastModifiedDate":"2021-10-29"},{"lineNumber":142,"author":{"gitId":"YaleChen299"},"content":"    -fx-text-fill: -night;","lastModifiedDate":"2021-10-29"},{"lineNumber":143,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":144,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":145,"author":{"gitId":"YaleChen299"},"content":".cell_big_label {","lastModifiedDate":"2021-10-29"},{"lineNumber":146,"author":{"gitId":"YaleChen299"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-10-29"},{"lineNumber":147,"author":{"gitId":"YaleChen299"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2021-10-29"},{"lineNumber":148,"author":{"gitId":"YaleChen299"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2021-10-29"},{"lineNumber":149,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":150,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":151,"author":{"gitId":"YaleChen299"},"content":".cell_small_label {","lastModifiedDate":"2021-10-29"},{"lineNumber":152,"author":{"gitId":"YaleChen299"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-10-29"},{"lineNumber":153,"author":{"gitId":"YaleChen299"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2021-10-29"},{"lineNumber":154,"author":{"gitId":"YaleChen299"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2021-10-29"},{"lineNumber":155,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":156,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":157,"author":{"gitId":"YaleChen299"},"content":".stack-pane {","lastModifiedDate":"2021-10-29"},{"lineNumber":158,"author":{"gitId":"YaleChen299"},"content":"     -fx-background-color: derive(-grey2, 20%);","lastModifiedDate":"2021-10-29"},{"lineNumber":159,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":160,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":161,"author":{"gitId":"YaleChen299"},"content":".pane-with-border {","lastModifiedDate":"2021-10-29"},{"lineNumber":162,"author":{"gitId":"YaleChen299"},"content":"     -fx-background-color: derive(-grey1, 20%);","lastModifiedDate":"2021-10-29"},{"lineNumber":163,"author":{"gitId":"YaleChen299"},"content":"     -fx-border-color: derive(-grey1, 10%);","lastModifiedDate":"2021-10-29"},{"lineNumber":164,"author":{"gitId":"YaleChen299"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2021-10-29"},{"lineNumber":165,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":166,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":167,"author":{"gitId":"YaleChen299"},"content":".titled_pane {","lastModifiedDate":"2021-10-29"},{"lineNumber":168,"author":{"gitId":"YaleChen299"},"content":"    -fx-text-fill: -night;","lastModifiedDate":"2021-10-29"},{"lineNumber":169,"author":{"gitId":"YaleChen299"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2021-10-29"},{"lineNumber":170,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":171,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":172,"author":{"gitId":"YaleChen299"},"content":".titled_pane \u003e .title {","lastModifiedDate":"2021-10-29"},{"lineNumber":173,"author":{"gitId":"YaleChen299"},"content":"    -fx-background-color: derive(-grey1, 20%);","lastModifiedDate":"2021-10-29"},{"lineNumber":174,"author":{"gitId":"YaleChen299"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2021-10-29"},{"lineNumber":175,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":176,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":177,"author":{"gitId":"YaleChen299"},"content":".titled_pane \u003e *.content  {","lastModifiedDate":"2021-10-29"},{"lineNumber":178,"author":{"gitId":"YaleChen299"},"content":"    -fx-background-color: derive(-grey1, 20%);","lastModifiedDate":"2021-10-29"},{"lineNumber":179,"author":{"gitId":"YaleChen299"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2021-10-29"},{"lineNumber":180,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":181,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":182,"author":{"gitId":"YaleChen299"},"content":".status-bar {","lastModifiedDate":"2021-10-29"},{"lineNumber":183,"author":{"gitId":"YaleChen299"},"content":"    -fx-background-color: -grey3;","lastModifiedDate":"2021-10-29"},{"lineNumber":184,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":185,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":186,"author":{"gitId":"YaleChen299"},"content":".result-display {","lastModifiedDate":"2021-10-29"},{"lineNumber":187,"author":{"gitId":"YaleChen299"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-29"},{"lineNumber":188,"author":{"gitId":"YaleChen299"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-10-29"},{"lineNumber":189,"author":{"gitId":"YaleChen299"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2021-10-29"},{"lineNumber":190,"author":{"gitId":"YaleChen299"},"content":"    -fx-text-fill: -night;","lastModifiedDate":"2021-10-29"},{"lineNumber":191,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":192,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":193,"author":{"gitId":"YaleChen299"},"content":".result-display .label {","lastModifiedDate":"2021-10-29"},{"lineNumber":194,"author":{"gitId":"YaleChen299"},"content":"    -fx-text-fill: -night !important;","lastModifiedDate":"2021-10-29"},{"lineNumber":195,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":196,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":197,"author":{"gitId":"YaleChen299"},"content":".status-bar .label {","lastModifiedDate":"2021-10-29"},{"lineNumber":198,"author":{"gitId":"YaleChen299"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-10-29"},{"lineNumber":199,"author":{"gitId":"YaleChen299"},"content":"    -fx-text-fill: -night;","lastModifiedDate":"2021-10-29"},{"lineNumber":200,"author":{"gitId":"YaleChen299"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2021-10-29"},{"lineNumber":201,"author":{"gitId":"YaleChen299"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2021-10-29"},{"lineNumber":202,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":203,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":204,"author":{"gitId":"YaleChen299"},"content":".status-bar-with-border {","lastModifiedDate":"2021-10-29"},{"lineNumber":205,"author":{"gitId":"YaleChen299"},"content":"    -fx-background-color: derive(-grey1, 30%);","lastModifiedDate":"2021-10-29"},{"lineNumber":206,"author":{"gitId":"YaleChen299"},"content":"    -fx-border-color: derive(-grey1, 25%);","lastModifiedDate":"2021-10-29"},{"lineNumber":207,"author":{"gitId":"YaleChen299"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2021-10-29"},{"lineNumber":208,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":209,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":210,"author":{"gitId":"YaleChen299"},"content":".status-bar-with-border .label {","lastModifiedDate":"2021-10-29"},{"lineNumber":211,"author":{"gitId":"YaleChen299"},"content":"    -fx-text-fill: -night;","lastModifiedDate":"2021-10-29"},{"lineNumber":212,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":213,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":214,"author":{"gitId":"YaleChen299"},"content":".grid-pane {","lastModifiedDate":"2021-10-29"},{"lineNumber":215,"author":{"gitId":"YaleChen299"},"content":"    -fx-background-color: derive(-grey1, 30%);","lastModifiedDate":"2021-10-29"},{"lineNumber":216,"author":{"gitId":"YaleChen299"},"content":"    -fx-border-color: derive(-grey1, 30%);","lastModifiedDate":"2021-10-29"},{"lineNumber":217,"author":{"gitId":"YaleChen299"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2021-10-29"},{"lineNumber":218,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":219,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":220,"author":{"gitId":"YaleChen299"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2021-10-29"},{"lineNumber":221,"author":{"gitId":"YaleChen299"},"content":"    -fx-background-color: derive(-grey1, 30%);","lastModifiedDate":"2021-10-29"},{"lineNumber":222,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":223,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":224,"author":{"gitId":"YaleChen299"},"content":".context-menu {","lastModifiedDate":"2021-10-29"},{"lineNumber":225,"author":{"gitId":"YaleChen299"},"content":"    -fx-background-color: -grey1;","lastModifiedDate":"2021-10-29"},{"lineNumber":226,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":227,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":228,"author":{"gitId":"YaleChen299"},"content":".context-menu .label {","lastModifiedDate":"2021-10-29"},{"lineNumber":229,"author":{"gitId":"YaleChen299"},"content":"    -fx-text-fill: -night;","lastModifiedDate":"2021-10-29"},{"lineNumber":230,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":231,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":232,"author":{"gitId":"YaleChen299"},"content":".context-menu .label :focused {","lastModifiedDate":"2021-10-29"},{"lineNumber":233,"author":{"gitId":"YaleChen299"},"content":"    -fx-text-fill: -grey1;","lastModifiedDate":"2021-10-29"},{"lineNumber":234,"author":{"gitId":"YaleChen299"},"content":"    -fx-background-color: -grey4;","lastModifiedDate":"2021-10-29"},{"lineNumber":235,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":236,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":237,"author":{"gitId":"YaleChen299"},"content":".menu-bar {","lastModifiedDate":"2021-10-29"},{"lineNumber":238,"author":{"gitId":"YaleChen299"},"content":"    -fx-background-color: -grey3;","lastModifiedDate":"2021-10-29"},{"lineNumber":239,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":240,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":241,"author":{"gitId":"YaleChen299"},"content":".menu-bar .label {","lastModifiedDate":"2021-10-29"},{"lineNumber":242,"author":{"gitId":"YaleChen299"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2021-10-29"},{"lineNumber":243,"author":{"gitId":"YaleChen299"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-10-29"},{"lineNumber":244,"author":{"gitId":"YaleChen299"},"content":"    -fx-text-fill: -night;","lastModifiedDate":"2021-10-29"},{"lineNumber":245,"author":{"gitId":"YaleChen299"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2021-10-29"},{"lineNumber":246,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":247,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":248,"author":{"gitId":"YaleChen299"},"content":".menu .left-container {","lastModifiedDate":"2021-10-29"},{"lineNumber":249,"author":{"gitId":"YaleChen299"},"content":"    -fx-background-color: -night;","lastModifiedDate":"2021-10-29"},{"lineNumber":250,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":251,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":252,"author":{"gitId":"YaleChen299"},"content":"/*","lastModifiedDate":"2021-10-29"},{"lineNumber":253,"author":{"gitId":"YaleChen299"},"content":" * Metro style Push Button","lastModifiedDate":"2021-10-29"},{"lineNumber":254,"author":{"gitId":"YaleChen299"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2021-10-29"},{"lineNumber":255,"author":{"gitId":"YaleChen299"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2021-10-29"},{"lineNumber":256,"author":{"gitId":"YaleChen299"},"content":" */","lastModifiedDate":"2021-10-29"},{"lineNumber":257,"author":{"gitId":"YaleChen299"},"content":".button {","lastModifiedDate":"2021-10-29"},{"lineNumber":258,"author":{"gitId":"YaleChen299"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2021-10-29"},{"lineNumber":259,"author":{"gitId":"YaleChen299"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2021-10-29"},{"lineNumber":260,"author":{"gitId":"YaleChen299"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2021-10-29"},{"lineNumber":261,"author":{"gitId":"YaleChen299"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2021-10-29"},{"lineNumber":262,"author":{"gitId":"YaleChen299"},"content":"    -fx-background-color: -grey1;","lastModifiedDate":"2021-10-29"},{"lineNumber":263,"author":{"gitId":"YaleChen299"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-10-29"},{"lineNumber":264,"author":{"gitId":"YaleChen299"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2021-10-29"},{"lineNumber":265,"author":{"gitId":"YaleChen299"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2021-10-29"},{"lineNumber":266,"author":{"gitId":"YaleChen299"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2021-10-29"},{"lineNumber":267,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":268,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":269,"author":{"gitId":"YaleChen299"},"content":".button:hover {","lastModifiedDate":"2021-10-29"},{"lineNumber":270,"author":{"gitId":"YaleChen299"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2021-10-29"},{"lineNumber":271,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":272,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":273,"author":{"gitId":"YaleChen299"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2021-10-29"},{"lineNumber":274,"author":{"gitId":"YaleChen299"},"content":"  -fx-background-color: -night;","lastModifiedDate":"2021-10-29"},{"lineNumber":275,"author":{"gitId":"YaleChen299"},"content":"  -fx-text-fill: -grey1;","lastModifiedDate":"2021-10-29"},{"lineNumber":276,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":277,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":278,"author":{"gitId":"YaleChen299"},"content":".button:focused {","lastModifiedDate":"2021-10-29"},{"lineNumber":279,"author":{"gitId":"YaleChen299"},"content":"    -fx-border-color: -night, -night;","lastModifiedDate":"2021-10-29"},{"lineNumber":280,"author":{"gitId":"YaleChen299"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2021-10-29"},{"lineNumber":281,"author":{"gitId":"YaleChen299"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2021-10-29"},{"lineNumber":282,"author":{"gitId":"YaleChen299"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2021-10-29"},{"lineNumber":283,"author":{"gitId":"YaleChen299"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2021-10-29"},{"lineNumber":284,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":285,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":286,"author":{"gitId":"YaleChen299"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2021-10-29"},{"lineNumber":287,"author":{"gitId":"YaleChen299"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2021-10-29"},{"lineNumber":288,"author":{"gitId":"YaleChen299"},"content":"    -fx-background-color: -grey1;","lastModifiedDate":"2021-10-29"},{"lineNumber":289,"author":{"gitId":"YaleChen299"},"content":"    -fx-text-fill: -night;","lastModifiedDate":"2021-10-29"},{"lineNumber":290,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":291,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":292,"author":{"gitId":"YaleChen299"},"content":".button:default {","lastModifiedDate":"2021-10-29"},{"lineNumber":293,"author":{"gitId":"YaleChen299"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2021-10-29"},{"lineNumber":294,"author":{"gitId":"YaleChen299"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2021-10-29"},{"lineNumber":295,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":296,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":297,"author":{"gitId":"YaleChen299"},"content":".button:default:hover {","lastModifiedDate":"2021-10-29"},{"lineNumber":298,"author":{"gitId":"YaleChen299"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2021-10-29"},{"lineNumber":299,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":300,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":301,"author":{"gitId":"YaleChen299"},"content":".dialog-pane {","lastModifiedDate":"2021-10-29"},{"lineNumber":302,"author":{"gitId":"YaleChen299"},"content":"    -fx-background-color: -grey1;","lastModifiedDate":"2021-10-29"},{"lineNumber":303,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":304,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":305,"author":{"gitId":"YaleChen299"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2021-10-29"},{"lineNumber":306,"author":{"gitId":"YaleChen299"},"content":"    -fx-background-color: -grey1;","lastModifiedDate":"2021-10-29"},{"lineNumber":307,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":308,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":309,"author":{"gitId":"YaleChen299"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2021-10-29"},{"lineNumber":310,"author":{"gitId":"YaleChen299"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2021-10-29"},{"lineNumber":311,"author":{"gitId":"YaleChen299"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2021-10-29"},{"lineNumber":312,"author":{"gitId":"YaleChen299"},"content":"    -fx-text-fill: -night;","lastModifiedDate":"2021-10-29"},{"lineNumber":313,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":314,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":315,"author":{"gitId":"YaleChen299"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2021-10-29"},{"lineNumber":316,"author":{"gitId":"YaleChen299"},"content":"    -fx-background-color: derive(-grey1, 25%);","lastModifiedDate":"2021-10-29"},{"lineNumber":317,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":318,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":319,"author":{"gitId":"YaleChen299"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2021-10-29"},{"lineNumber":320,"author":{"gitId":"YaleChen299"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2021-10-29"},{"lineNumber":321,"author":{"gitId":"YaleChen299"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2021-10-29"},{"lineNumber":322,"author":{"gitId":"YaleChen299"},"content":"    -fx-fill: -night;","lastModifiedDate":"2021-10-29"},{"lineNumber":323,"author":{"gitId":"YaleChen299"},"content":"    -fx-text-fill: -night;","lastModifiedDate":"2021-10-29"},{"lineNumber":324,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":325,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":326,"author":{"gitId":"YaleChen299"},"content":".scroll-bar {","lastModifiedDate":"2021-10-29"},{"lineNumber":327,"author":{"gitId":"YaleChen299"},"content":"    -fx-background-color: derive(-grey4, 10%);","lastModifiedDate":"2021-10-29"},{"lineNumber":328,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":329,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":330,"author":{"gitId":"YaleChen299"},"content":".scroll-bar .thumb {","lastModifiedDate":"2021-10-29"},{"lineNumber":331,"author":{"gitId":"YaleChen299"},"content":"    -fx-background-color: derive(-grey4, 40%);","lastModifiedDate":"2021-10-29"},{"lineNumber":332,"author":{"gitId":"YaleChen299"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2021-10-29"},{"lineNumber":333,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":334,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":335,"author":{"gitId":"YaleChen299"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2021-10-29"},{"lineNumber":336,"author":{"gitId":"YaleChen299"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-29"},{"lineNumber":337,"author":{"gitId":"YaleChen299"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2021-10-29"},{"lineNumber":338,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":339,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":340,"author":{"gitId":"YaleChen299"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2021-10-29"},{"lineNumber":341,"author":{"gitId":"YaleChen299"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2021-10-29"},{"lineNumber":342,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":343,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":344,"author":{"gitId":"YaleChen299"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2021-10-29"},{"lineNumber":345,"author":{"gitId":"YaleChen299"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2021-10-29"},{"lineNumber":346,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":347,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":348,"author":{"gitId":"YaleChen299"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2021-10-29"},{"lineNumber":349,"author":{"gitId":"YaleChen299"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2021-10-29"},{"lineNumber":350,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":351,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":352,"author":{"gitId":"YaleChen299"},"content":"#cardPane {","lastModifiedDate":"2021-10-29"},{"lineNumber":353,"author":{"gitId":"YaleChen299"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-29"},{"lineNumber":354,"author":{"gitId":"YaleChen299"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2021-10-29"},{"lineNumber":355,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":356,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":357,"author":{"gitId":"YaleChen299"},"content":"#appointmentCardPane {","lastModifiedDate":"2021-10-29"},{"lineNumber":358,"author":{"gitId":"YaleChen299"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-29"},{"lineNumber":359,"author":{"gitId":"YaleChen299"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2021-10-29"},{"lineNumber":360,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":361,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":362,"author":{"gitId":"YaleChen299"},"content":"#commandTypeLabel {","lastModifiedDate":"2021-10-29"},{"lineNumber":363,"author":{"gitId":"YaleChen299"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2021-10-29"},{"lineNumber":364,"author":{"gitId":"YaleChen299"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2021-10-29"},{"lineNumber":365,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":366,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":367,"author":{"gitId":"YaleChen299"},"content":"#commandTextField {","lastModifiedDate":"2021-10-29"},{"lineNumber":368,"author":{"gitId":"YaleChen299"},"content":"    -fx-background-color: transparent -grey1 transparent -grey1;","lastModifiedDate":"2021-10-29"},{"lineNumber":369,"author":{"gitId":"YaleChen299"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2021-10-29"},{"lineNumber":370,"author":{"gitId":"YaleChen299"},"content":"    -fx-border-color: -grey4 -grey4 #383838 -grey4;","lastModifiedDate":"2021-10-29"},{"lineNumber":371,"author":{"gitId":"YaleChen299"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2021-10-29"},{"lineNumber":372,"author":{"gitId":"YaleChen299"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-10-29"},{"lineNumber":373,"author":{"gitId":"YaleChen299"},"content":"    -fx-font-family: \"Open Sans\";","lastModifiedDate":"2021-10-29"},{"lineNumber":374,"author":{"gitId":"YaleChen299"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2021-10-29"},{"lineNumber":375,"author":{"gitId":"YaleChen299"},"content":"    -fx-text-fill: -night;","lastModifiedDate":"2021-10-29"},{"lineNumber":376,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":377,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":378,"author":{"gitId":"YaleChen299"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2021-10-29"},{"lineNumber":379,"author":{"gitId":"YaleChen299"},"content":"    -fx-effect: innershadow(gaussian, -night, 10, 0, 0, 0);","lastModifiedDate":"2021-10-29"},{"lineNumber":380,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":381,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":382,"author":{"gitId":"YaleChen299"},"content":"#resultDisplay .content {","lastModifiedDate":"2021-10-29"},{"lineNumber":383,"author":{"gitId":"YaleChen299"},"content":"    -fx-background-color: transparent, -frost1, transparent, -frost1;","lastModifiedDate":"2021-10-29"},{"lineNumber":384,"author":{"gitId":"YaleChen299"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2021-10-29"},{"lineNumber":385,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":386,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":387,"author":{"gitId":"YaleChen299"},"content":"#tags {","lastModifiedDate":"2021-10-29"},{"lineNumber":388,"author":{"gitId":"YaleChen299"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2021-10-29"},{"lineNumber":389,"author":{"gitId":"YaleChen299"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2021-10-29"},{"lineNumber":390,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":391,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":392,"author":{"gitId":"YaleChen299"},"content":"#tags .label {","lastModifiedDate":"2021-10-29"},{"lineNumber":393,"author":{"gitId":"YaleChen299"},"content":"    -fx-text-fill: -grey1;","lastModifiedDate":"2021-10-29"},{"lineNumber":394,"author":{"gitId":"YaleChen299"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2021-10-29"},{"lineNumber":395,"author":{"gitId":"YaleChen299"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2021-10-29"},{"lineNumber":396,"author":{"gitId":"YaleChen299"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2021-10-29"},{"lineNumber":397,"author":{"gitId":"YaleChen299"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2021-10-29"},{"lineNumber":398,"author":{"gitId":"YaleChen299"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2021-10-29"},{"lineNumber":399,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":400,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":401,"author":{"gitId":"YaleChen299"},"content":"#themeButton {","lastModifiedDate":"2021-10-29"},{"lineNumber":402,"author":{"gitId":"YaleChen299"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2021-10-29"},{"lineNumber":403,"author":{"gitId":"YaleChen299"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2021-10-29"},{"lineNumber":404,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"YaleChen299":404}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"YaleChen299"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"YaleChen299"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"YaleChen299"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"YaleChen299"},"content":"         title\u003d\" PlaceBook -- manage your contacts and appointments in one place\" minWidth\u003d\"700\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"YaleChen299"},"content":"    \u003cImage url\u003d\"@/images/placebook.png\" /\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"YaleChen299"},"content":"        \u003cURL value\u003d\"@LightTheme.css\" /\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":30,"author":{"gitId":"YaleChen299"},"content":"        \u003cHBox\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"YaleChen299"},"content":"          \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"              \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"              \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"YaleChen299"},"content":"          \u003cButton styleClass\u003d\"themeButton\" fx:id\u003d\"themeButton\" onAction\u003d\"#handleThemeChange\" mnemonicParsing\u003d\"false\" prefHeight\u003d\"34.0\" prefWidth\u003d\"34.0\"\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"YaleChen299"},"content":"            \u003cgraphic\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"YaleChen299"},"content":"              \u003cImageView fitHeight\u003d\"30\" fitWidth\u003d\"30\"\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"YaleChen299"},"content":"                \u003cImage url\u003d\"@/images/sun.png\"/\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"YaleChen299"},"content":"              \u003c/ImageView\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"YaleChen299"},"content":"            \u003c/graphic\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"YaleChen299"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"YaleChen299"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"YaleChen299"},"content":"        \u003cVBox minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"YaleChen299"},"content":"          \u003cHBox VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"YaleChen299"},"content":"            \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":53,"author":{"gitId":"YaleChen299"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"5\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":55,"author":{"gitId":"YaleChen299"},"content":"              \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"YaleChen299"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"YaleChen299"},"content":"            \u003cVBox fx:id\u003d\"appointmentList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"YaleChen299"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"YaleChen299"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"YaleChen299"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"YaleChen299"},"content":"              \u003cStackPane fx:id\u003d\"appointmentListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"YaleChen299"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"YaleChen299"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"YaleChen299"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"YaleChen299"},"content":"                   minHeight\u003d\"120\" prefHeight\u003d\"120\" \u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":74,"author":{"gitId":"YaleChen299"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":76,"author":{"gitId":"YaleChen299"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":78,"author":{"gitId":"YaleChen299"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"YaleChen299":35,"-":49}},{"path":"src/test/data/JsonSerializableScheduleTest/duplicateAppointmentSchedule.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tchiong"},"content":"{","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"tchiong"},"content":"  \"appointments\" : [ {","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"tchiong"},"content":"    \"clients\" : [ {","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"tchiong"},"content":"      \"name\" : \"Alice Pauline\",","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"tchiong"},"content":"      \"phone\" : \"94351253\",","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"tchiong"},"content":"      \"email\" : \"alice@example.com\",","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"tchiong"},"content":"      \"address\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"tchiong"},"content":"      \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"tchiong"},"content":"    } ],","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"tchiong"},"content":"    \"location\" : \"369 Tanjong Rhu\",","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"nwhloo99"},"content":"    \"timePeriod\" : {","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"nwhloo99"},"content":"      \"startDateTime\" : \"25-12-2021 1000\",","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"nwhloo99"},"content":"      \"endDateTime\" : \"25-12-2021 1100\"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"nwhloo99"},"content":"    },","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"nwhloo99"},"content":"    \"description\" : \"Talk about sales\"","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"tchiong"},"content":"  }, {","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"tchiong"},"content":"    \"clients\" : [ {","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"tchiong"},"content":"      \"name\" : \"Alice Pauline\",","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"tchiong"},"content":"      \"phone\" : \"94351253\",","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"tchiong"},"content":"      \"email\" : \"alice@example.com\",","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"tchiong"},"content":"      \"address\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"tchiong"},"content":"      \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"tchiong"},"content":"    } ],","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"tchiong"},"content":"    \"location\" : \"369 Tanjong Rhu\",","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"nwhloo99"},"content":"    \"timePeriod\" : {","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"nwhloo99"},"content":"      \"startDateTime\" : \"25-12-2021 1000\",","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"nwhloo99"},"content":"      \"endDateTime\" : \"25-12-2021 1100\"","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"nwhloo99"},"content":"    },","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"nwhloo99"},"content":"    \"description\" : \"Talk about sales\"","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"tchiong"},"content":"  } ]","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"tchiong"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"tchiong":21,"nwhloo99":10}},{"path":"src/test/data/JsonSerializableScheduleTest/typicalAppointmentSchedule.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tchiong"},"content":"{","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"tchiong"},"content":"  \"appointments\" : [ {","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"tchiong"},"content":"    \"clients\" : [ {","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"tchiong"},"content":"      \"name\" : \"Alice Pauline\",","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"tchiong"},"content":"      \"phone\" : \"94351253\",","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"tchiong"},"content":"      \"email\" : \"alice@example.com\",","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"tchiong"},"content":"      \"address\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"tchiong"},"content":"      \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"tchiong"},"content":"    } ],","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"tchiong"},"content":"    \"location\" : \"369 Tanjong Rhu\",","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"nwhloo99"},"content":"    \"timePeriod\" : {","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"nwhloo99"},"content":"      \"startDateTime\" : \"25-12-2021 1000\",","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"nwhloo99"},"content":"      \"endDateTime\" : \"25-12-2021 1100\"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"nwhloo99"},"content":"    },","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"nwhloo99"},"content":"    \"description\" : \"Talk about sales\"","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"tchiong"},"content":"  }, {","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"tchiong"},"content":"    \"clients\" : [ {","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"tchiong"},"content":"      \"name\" : \"Carl Kurz\",","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"tchiong"},"content":"      \"phone\" : \"95352563\",","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"tchiong"},"content":"      \"email\" : \"heinz@example.com\",","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"tchiong"},"content":"      \"address\" : \"wall street\",","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"tchiong"},"content":"      \"tagged\" : [ ]","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"tchiong"},"content":"    } ],","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"tchiong"},"content":"    \"location\" : \"vivocity\",","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"nwhloo99"},"content":"    \"timePeriod\" : {","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"nwhloo99"},"content":"      \"startDateTime\" : \"25-12-2021 1000\",","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"nwhloo99"},"content":"      \"endDateTime\" : \"25-12-2021 1100\"","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"nwhloo99"},"content":"    },","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"nwhloo99"},"content":"    \"description\" : \"Halloween Sales\"","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"tchiong"},"content":"  } ]","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"tchiong"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"tchiong":21,"nwhloo99":10}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"YaleChen299"},"content":"        assertNotNull(AppUtil.getImage(\"/images/placebook.png\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"YaleChen299":1,"-":35}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.storage.JsonScheduleStorage;","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"nwhloo99"},"content":"        JsonScheduleStorage scheduleStorage \u003d new JsonScheduleStorage(temporaryFolder.resolve(\"schedule.json\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"nwhloo99"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, scheduleStorage);","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"nwhloo99"},"content":"        JsonScheduleStorage scheduleStorage \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"nwhloo99"},"content":"                new JsonScheduleStorage(temporaryFolder.resolve(\"ioExceptionSchedule.json\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"nwhloo99"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, scheduleStorage);","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"nwhloo99"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getSchedule());","lastModifiedDate":"2021-10-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"nwhloo99":7,"-":159}},{"path":"src/test/java/seedu/address/logic/commands/AddAppCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tchiong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"tchiong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"tchiong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"tchiong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"tchiong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"tchiong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"tchiong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"Li-Lehao"},"content":"import java.util.List;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"tchiong"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"tchiong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"tchiong"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"tchiong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"tchiong"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"tchiong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"tchiong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"tchiong"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"tchiong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"tchiong"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"tchiong"},"content":"import seedu.address.model.ReadOnlySchedule;","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"tchiong"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"tchiong"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"tchiong"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"tchiong"},"content":"import seedu.address.model.schedule.Appointment;","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"tchiong"},"content":"import seedu.address.model.schedule.TimePeriod;","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"tchiong"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"tchiong"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"tchiong"},"content":"public class AddAppCommandTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"tchiong"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"tchiong"},"content":"    public void constructor_nullAppointment_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"tchiong"},"content":"        assertThrows(NullPointerException.class, ()","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"tchiong"},"content":"            -\u003e new AddAppCommand(null, null, null, null));","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"tchiong"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"tchiong"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"nwhloo99"},"content":"    public void execute_validAppointmentSinglePerson_returnSuccess() throws Exception {","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"nwhloo99"},"content":"        ArrayList\u003cIndex\u003e indexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"nwhloo99"},"content":"        indexes.add(Index.fromZeroBased(0));","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"tchiong"},"content":"        ModelStubAcceptingAppointmentAdded modelStub \u003d new ModelStubAcceptingAppointmentAdded();","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"tchiong"},"content":"        Appointment validAppointment \u003d new AppointmentBuilder().build();","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"tchiong"},"content":"        modelStub.addPerson(new PersonBuilder().withName(\"ALICE\").build());","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"tchiong"},"content":"        CommandResult commandResult \u003d new AddAppCommand(","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"nwhloo99"},"content":"                indexes,","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"tchiong"},"content":"                new Address(\"vivocity\"),","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"nwhloo99"},"content":"                new TimePeriod(LocalDateTime.of(2021, 12, 25, 21, 30),","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"nwhloo99"},"content":"                        LocalDateTime.of(2021, 12, 25, 22, 30)),","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"tchiong"},"content":"                \"Halloween Sales\").execute(modelStub);","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"tchiong"},"content":"        assertEquals(String.format(AddAppCommand.MESSAGE_SUCCESS, validAppointment), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"tchiong"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"nwhloo99"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"nwhloo99"},"content":"    public void execute_validAppointmentTwoPerson_returnSuccess() throws Exception {","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"nwhloo99"},"content":"        ArrayList\u003cIndex\u003e indexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"nwhloo99"},"content":"        indexes.add(Index.fromZeroBased(0));","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"nwhloo99"},"content":"        indexes.add(Index.fromZeroBased(1));","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"nwhloo99"},"content":"        ModelStubAcceptingAppointmentAdded modelStub \u003d new ModelStubAcceptingAppointmentAdded();","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"nwhloo99"},"content":"        Appointment validAppointment \u003d new AppointmentBuilder().addClient(\"BOB\").build();","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"nwhloo99"},"content":"        modelStub.addPerson(new PersonBuilder().withName(\"ALICE\").build());","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"nwhloo99"},"content":"        modelStub.addPerson(new PersonBuilder().withName(\"BOB\").build());","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"nwhloo99"},"content":"        CommandResult commandResult \u003d new AddAppCommand(","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"nwhloo99"},"content":"                indexes,","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"nwhloo99"},"content":"                new Address(\"vivocity\"),","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"nwhloo99"},"content":"                new TimePeriod(LocalDateTime.of(2021, 12, 25, 21, 30),","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"nwhloo99"},"content":"                        LocalDateTime.of(2021, 12, 25, 22, 30)),","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"nwhloo99"},"content":"                \"Halloween Sales\").execute(modelStub);","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"nwhloo99"},"content":"        assertEquals(String.format(AddAppCommand.MESSAGE_SUCCESS, validAppointment), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"tchiong"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"tchiong"},"content":"    public void execute_invalidAppointment_returnInvalid() {","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"nwhloo99"},"content":"        ArrayList\u003cIndex\u003e indexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"nwhloo99"},"content":"        indexes.add(Index.fromZeroBased(2));","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"tchiong"},"content":"        ModelStubAcceptingAppointmentAdded modelStub \u003d new ModelStubAcceptingAppointmentAdded();","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"tchiong"},"content":"        modelStub.addPerson(new PersonBuilder().withName(\"ALICE\").build());","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"tchiong"},"content":"        Command commandResult \u003d new AddAppCommand(","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"nwhloo99"},"content":"                indexes,","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"tchiong"},"content":"                new Address(\"vivocity\"),","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"tchiong"},"content":"                new TimePeriod(LocalDateTime.of(2021, 1, 1, 10, 0),","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"tchiong"},"content":"                        LocalDateTime.of(2021, 1, 2, 10, 0)),","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"tchiong"},"content":"                \"Halloween Sales\");","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"tchiong"},"content":"        assertThrows(CommandException.class, ()","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"tchiong"},"content":"            -\u003e commandResult.execute(modelStub));","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"tchiong"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"nwhloo99"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"nwhloo99"},"content":"    public void execute_duplicatePerson_returnInvalid() {","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"nwhloo99"},"content":"        ArrayList\u003cIndex\u003e indexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"nwhloo99"},"content":"        indexes.add(Index.fromZeroBased(0));","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"nwhloo99"},"content":"        indexes.add(Index.fromZeroBased(0));","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"nwhloo99"},"content":"        ModelStubAcceptingAppointmentAdded modelStub \u003d new ModelStubAcceptingAppointmentAdded();","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"nwhloo99"},"content":"        modelStub.addPerson(new PersonBuilder().withName(\"ALICE\").build());","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"nwhloo99"},"content":"        modelStub.addPerson(new PersonBuilder().withName(\"BOB\").build());","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"nwhloo99"},"content":"        Command commandResult \u003d new AddAppCommand(","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"nwhloo99"},"content":"                indexes,","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"nwhloo99"},"content":"                new Address(\"vivocity\"),","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"tchiong"},"content":"                new TimePeriod(LocalDateTime.of(2021, 1, 1, 10, 0),","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"tchiong"},"content":"                        LocalDateTime.of(2021, 1, 2, 10, 0)),","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"nwhloo99"},"content":"                \"Halloween Sales\");","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"nwhloo99"},"content":"        assertThrows(CommandException.class, ()","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"nwhloo99"},"content":"            -\u003e commandResult.execute(modelStub));","lastModifiedDate":"2021-10-23"},{"lineNumber":111,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":112,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":113,"author":{"gitId":"tchiong"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":114,"author":{"gitId":"tchiong"},"content":"    public void execute_duplicateAppointmentTime_returnInvalid() {","lastModifiedDate":"2021-10-26"},{"lineNumber":115,"author":{"gitId":"tchiong"},"content":"        ArrayList\u003cIndex\u003e indexOne \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":116,"author":{"gitId":"tchiong"},"content":"        indexOne.add(Index.fromZeroBased(0));","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"tchiong"},"content":"        ArrayList\u003cIndex\u003e indexTwo \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":118,"author":{"gitId":"tchiong"},"content":"        indexTwo.add(Index.fromZeroBased(1));","lastModifiedDate":"2021-10-26"},{"lineNumber":119,"author":{"gitId":"tchiong"},"content":"        ModelStubAcceptingAppointmentAdded modelTester \u003d new ModelStubAcceptingAppointmentAdded();","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"tchiong"},"content":"        modelTester.addPerson(new PersonBuilder().withName(\"ALICE\").build());","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"tchiong"},"content":"        modelTester.addPerson(new PersonBuilder().withName(\"BOB\").build());","lastModifiedDate":"2021-10-26"},{"lineNumber":122,"author":{"gitId":"tchiong"},"content":"        Command initialCommand \u003d new AddAppCommand(","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"tchiong"},"content":"                indexOne,","lastModifiedDate":"2021-10-26"},{"lineNumber":124,"author":{"gitId":"tchiong"},"content":"                new Address(\"vivocity\"),","lastModifiedDate":"2021-10-26"},{"lineNumber":125,"author":{"gitId":"tchiong"},"content":"                new TimePeriod(LocalDateTime.of(2021, 1, 1, 10, 0),","lastModifiedDate":"2021-10-26"},{"lineNumber":126,"author":{"gitId":"tchiong"},"content":"                        LocalDateTime.of(2021, 1, 2, 10, 0)),","lastModifiedDate":"2021-10-26"},{"lineNumber":127,"author":{"gitId":"tchiong"},"content":"                \"Halloween Sales\");","lastModifiedDate":"2021-10-26"},{"lineNumber":128,"author":{"gitId":"tchiong"},"content":"        Command commandResult \u003d new AddAppCommand(","lastModifiedDate":"2021-10-26"},{"lineNumber":129,"author":{"gitId":"tchiong"},"content":"                indexTwo,","lastModifiedDate":"2021-10-26"},{"lineNumber":130,"author":{"gitId":"tchiong"},"content":"                new Address(\"vivocity\"),","lastModifiedDate":"2021-10-26"},{"lineNumber":131,"author":{"gitId":"tchiong"},"content":"                new TimePeriod(LocalDateTime.of(2021, 1, 1, 10, 0),","lastModifiedDate":"2021-10-26"},{"lineNumber":132,"author":{"gitId":"tchiong"},"content":"                        LocalDateTime.of(2021, 1, 2, 10, 0)),","lastModifiedDate":"2021-10-26"},{"lineNumber":133,"author":{"gitId":"tchiong"},"content":"                \"Halloween Sales\");","lastModifiedDate":"2021-10-26"},{"lineNumber":134,"author":{"gitId":"tchiong"},"content":"        try {","lastModifiedDate":"2021-10-26"},{"lineNumber":135,"author":{"gitId":"tchiong"},"content":"            initialCommand.execute(modelTester);","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"tchiong"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":137,"author":{"gitId":"tchiong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":138,"author":{"gitId":"tchiong"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":139,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":140,"author":{"gitId":"tchiong"},"content":"        assertThrows(CommandException.class, ()","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"tchiong"},"content":"            -\u003e commandResult.execute(modelTester));","lastModifiedDate":"2021-10-26"},{"lineNumber":142,"author":{"gitId":"tchiong"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":143,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":144,"author":{"gitId":"nwhloo99"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":145,"author":{"gitId":"nwhloo99"},"content":"    public void execute_conflictingAppointmentTime_returnInvalid() {","lastModifiedDate":"2021-10-26"},{"lineNumber":146,"author":{"gitId":"nwhloo99"},"content":"        ArrayList\u003cIndex\u003e indexOne \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":147,"author":{"gitId":"nwhloo99"},"content":"        indexOne.add(Index.fromZeroBased(0));","lastModifiedDate":"2021-10-26"},{"lineNumber":148,"author":{"gitId":"nwhloo99"},"content":"        ArrayList\u003cIndex\u003e indexTwo \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":149,"author":{"gitId":"nwhloo99"},"content":"        indexTwo.add(Index.fromZeroBased(1));","lastModifiedDate":"2021-10-26"},{"lineNumber":150,"author":{"gitId":"nwhloo99"},"content":"        ModelStubAcceptingAppointmentAdded modelTester \u003d new ModelStubAcceptingAppointmentAdded();","lastModifiedDate":"2021-10-26"},{"lineNumber":151,"author":{"gitId":"nwhloo99"},"content":"        modelTester.addPerson(new PersonBuilder().withName(\"ALICE\").build());","lastModifiedDate":"2021-10-26"},{"lineNumber":152,"author":{"gitId":"nwhloo99"},"content":"        modelTester.addPerson(new PersonBuilder().withName(\"BOB\").build());","lastModifiedDate":"2021-10-26"},{"lineNumber":153,"author":{"gitId":"nwhloo99"},"content":"        Command initialCommand \u003d new AddAppCommand(","lastModifiedDate":"2021-10-26"},{"lineNumber":154,"author":{"gitId":"nwhloo99"},"content":"                indexOne,","lastModifiedDate":"2021-10-26"},{"lineNumber":155,"author":{"gitId":"nwhloo99"},"content":"                new Address(\"vivocity\"),","lastModifiedDate":"2021-10-26"},{"lineNumber":156,"author":{"gitId":"nwhloo99"},"content":"                new TimePeriod(LocalDateTime.of(2021, 1, 1, 10, 0),","lastModifiedDate":"2021-10-26"},{"lineNumber":157,"author":{"gitId":"nwhloo99"},"content":"                        LocalDateTime.of(2021, 1, 1, 12, 0)),","lastModifiedDate":"2021-10-26"},{"lineNumber":158,"author":{"gitId":"nwhloo99"},"content":"                \"Halloween Sales\");","lastModifiedDate":"2021-10-26"},{"lineNumber":159,"author":{"gitId":"nwhloo99"},"content":"        Command commandResult \u003d new AddAppCommand(","lastModifiedDate":"2021-10-26"},{"lineNumber":160,"author":{"gitId":"nwhloo99"},"content":"                indexTwo,","lastModifiedDate":"2021-10-26"},{"lineNumber":161,"author":{"gitId":"nwhloo99"},"content":"                new Address(\"vivocity\"),","lastModifiedDate":"2021-10-26"},{"lineNumber":162,"author":{"gitId":"nwhloo99"},"content":"                new TimePeriod(LocalDateTime.of(2021, 1, 1, 11, 0),","lastModifiedDate":"2021-10-26"},{"lineNumber":163,"author":{"gitId":"nwhloo99"},"content":"                        LocalDateTime.of(2021, 1, 1, 13, 0)),","lastModifiedDate":"2021-10-26"},{"lineNumber":164,"author":{"gitId":"nwhloo99"},"content":"                \"Halloween Sales\");","lastModifiedDate":"2021-10-26"},{"lineNumber":165,"author":{"gitId":"nwhloo99"},"content":"        try {","lastModifiedDate":"2021-10-26"},{"lineNumber":166,"author":{"gitId":"nwhloo99"},"content":"            initialCommand.execute(modelTester);","lastModifiedDate":"2021-10-26"},{"lineNumber":167,"author":{"gitId":"nwhloo99"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":168,"author":{"gitId":"nwhloo99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":169,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":170,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":171,"author":{"gitId":"nwhloo99"},"content":"        assertThrows(CommandException.class, ()","lastModifiedDate":"2021-10-26"},{"lineNumber":172,"author":{"gitId":"nwhloo99"},"content":"            -\u003e commandResult.execute(modelTester));","lastModifiedDate":"2021-10-26"},{"lineNumber":173,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":174,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":175,"author":{"gitId":"tchiong"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2021-10-13"},{"lineNumber":176,"author":{"gitId":"tchiong"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":177,"author":{"gitId":"tchiong"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-13"},{"lineNumber":178,"author":{"gitId":"tchiong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":179,"author":{"gitId":"tchiong"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":180,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":181,"author":{"gitId":"tchiong"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":182,"author":{"gitId":"tchiong"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-10-13"},{"lineNumber":183,"author":{"gitId":"tchiong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":184,"author":{"gitId":"tchiong"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":185,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":186,"author":{"gitId":"tchiong"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":187,"author":{"gitId":"tchiong"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-10-13"},{"lineNumber":188,"author":{"gitId":"tchiong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":189,"author":{"gitId":"tchiong"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":190,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":191,"author":{"gitId":"tchiong"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":192,"author":{"gitId":"tchiong"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-10-13"},{"lineNumber":193,"author":{"gitId":"tchiong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":194,"author":{"gitId":"tchiong"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":195,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":196,"author":{"gitId":"tchiong"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":197,"author":{"gitId":"tchiong"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2021-10-13"},{"lineNumber":198,"author":{"gitId":"tchiong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":199,"author":{"gitId":"tchiong"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":200,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":201,"author":{"gitId":"tchiong"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":202,"author":{"gitId":"tchiong"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-10-13"},{"lineNumber":203,"author":{"gitId":"tchiong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":204,"author":{"gitId":"tchiong"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":205,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":206,"author":{"gitId":"tchiong"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":207,"author":{"gitId":"tchiong"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2021-10-13"},{"lineNumber":208,"author":{"gitId":"tchiong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":209,"author":{"gitId":"tchiong"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":210,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":211,"author":{"gitId":"tchiong"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":212,"author":{"gitId":"tchiong"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2021-10-13"},{"lineNumber":213,"author":{"gitId":"tchiong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":214,"author":{"gitId":"tchiong"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":215,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":216,"author":{"gitId":"tchiong"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":217,"author":{"gitId":"tchiong"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-13"},{"lineNumber":218,"author":{"gitId":"tchiong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":219,"author":{"gitId":"tchiong"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":220,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":221,"author":{"gitId":"tchiong"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":222,"author":{"gitId":"tchiong"},"content":"        public ReadOnlySchedule getSchedule() {","lastModifiedDate":"2021-10-14"},{"lineNumber":223,"author":{"gitId":"tchiong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":224,"author":{"gitId":"tchiong"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":225,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":226,"author":{"gitId":"tchiong"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":227,"author":{"gitId":"tchiong"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2021-10-13"},{"lineNumber":228,"author":{"gitId":"tchiong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":229,"author":{"gitId":"tchiong"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":230,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":231,"author":{"gitId":"tchiong"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":232,"author":{"gitId":"tchiong"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2021-10-13"},{"lineNumber":233,"author":{"gitId":"tchiong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":234,"author":{"gitId":"tchiong"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":235,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":236,"author":{"gitId":"tchiong"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":237,"author":{"gitId":"tchiong"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2021-10-13"},{"lineNumber":238,"author":{"gitId":"tchiong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":239,"author":{"gitId":"tchiong"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":240,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":241,"author":{"gitId":"tchiong"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":242,"author":{"gitId":"tchiong"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2021-10-13"},{"lineNumber":243,"author":{"gitId":"tchiong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":244,"author":{"gitId":"tchiong"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":245,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":246,"author":{"gitId":"tchiong"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":247,"author":{"gitId":"tchiong"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-13"},{"lineNumber":248,"author":{"gitId":"tchiong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":249,"author":{"gitId":"tchiong"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":250,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":251,"author":{"gitId":"tchiong"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":252,"author":{"gitId":"tchiong"},"content":"        public void addAppointment(Appointment a) {","lastModifiedDate":"2021-10-13"},{"lineNumber":253,"author":{"gitId":"tchiong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":254,"author":{"gitId":"tchiong"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":255,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":256,"author":{"gitId":"tchiong"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":257,"author":{"gitId":"tchiong"},"content":"        public void deleteAppointment(Appointment a) {","lastModifiedDate":"2021-10-13"},{"lineNumber":258,"author":{"gitId":"tchiong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":259,"author":{"gitId":"tchiong"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":260,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":261,"author":{"gitId":"tchiong"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":262,"author":{"gitId":"tchiong"},"content":"        public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2021-10-13"},{"lineNumber":263,"author":{"gitId":"tchiong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":264,"author":{"gitId":"tchiong"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":265,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":266,"author":{"gitId":"tchiong"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":267,"author":{"gitId":"tchiong"},"content":"        public void sortFilteredAppointmentList(String sortBy) {","lastModifiedDate":"2021-10-20"},{"lineNumber":268,"author":{"gitId":"tchiong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":269,"author":{"gitId":"tchiong"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":270,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":271,"author":{"gitId":"tchiong"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":272,"author":{"gitId":"tchiong"},"content":"        public void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e predicate) {","lastModifiedDate":"2021-10-13"},{"lineNumber":273,"author":{"gitId":"tchiong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":274,"author":{"gitId":"tchiong"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":275,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":276,"author":{"gitId":"YaleChen299"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":277,"author":{"gitId":"YaleChen299"},"content":"        public String getRelatedAppointmentsAsString(Person client) {","lastModifiedDate":"2021-10-20"},{"lineNumber":278,"author":{"gitId":"YaleChen299"},"content":"            return \"\";","lastModifiedDate":"2021-10-20"},{"lineNumber":279,"author":{"gitId":"YaleChen299"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":280,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":281,"author":{"gitId":"Li-Lehao"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":282,"author":{"gitId":"Li-Lehao"},"content":"        public String getAppointmentsThatOnlyHaveThisClientAsString(Person client) {","lastModifiedDate":"2021-10-25"},{"lineNumber":283,"author":{"gitId":"Li-Lehao"},"content":"            return \"\";","lastModifiedDate":"2021-10-25"},{"lineNumber":284,"author":{"gitId":"Li-Lehao"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":285,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":286,"author":{"gitId":"Li-Lehao"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":287,"author":{"gitId":"Li-Lehao"},"content":"        public void updateEditedClientInAppointments(Person personToEdit, Person editedPerson) {","lastModifiedDate":"2021-10-26"},{"lineNumber":288,"author":{"gitId":"Li-Lehao"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":289,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":290,"author":{"gitId":"Li-Lehao"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":291,"author":{"gitId":"Li-Lehao"},"content":"        public void removePersonFromAppointments(Person personToDelete) {","lastModifiedDate":"2021-10-26"},{"lineNumber":292,"author":{"gitId":"Li-Lehao"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":293,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":294,"author":{"gitId":"Li-Lehao"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":295,"author":{"gitId":"Li-Lehao"},"content":"        public List\u003cAppointment\u003e getClashingAppointments(Appointment appointment) {","lastModifiedDate":"2021-10-28"},{"lineNumber":296,"author":{"gitId":"Li-Lehao"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-28"},{"lineNumber":297,"author":{"gitId":"Li-Lehao"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":298,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":299,"author":{"gitId":"Li-Lehao"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":300,"author":{"gitId":"Li-Lehao"},"content":"        public String getClashingAppointmentsAsString(Appointment appointment) {","lastModifiedDate":"2021-10-28"},{"lineNumber":301,"author":{"gitId":"Li-Lehao"},"content":"            return \"\";","lastModifiedDate":"2021-10-28"},{"lineNumber":302,"author":{"gitId":"Li-Lehao"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":303,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":304,"author":{"gitId":"NecroWolf28"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":305,"author":{"gitId":"NecroWolf28"},"content":"        public void setAppointment(Appointment appointmentToEdit, Appointment editedAppointment) {","lastModifiedDate":"2021-10-29"},{"lineNumber":306,"author":{"gitId":"NecroWolf28"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":307,"author":{"gitId":"NecroWolf28"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":308,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":309,"author":{"gitId":"Li-Lehao"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":310,"author":{"gitId":"Li-Lehao"},"content":"        public void updateState() {","lastModifiedDate":"2021-10-29"},{"lineNumber":311,"author":{"gitId":"Li-Lehao"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":312,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":313,"author":{"gitId":"Li-Lehao"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":314,"author":{"gitId":"Li-Lehao"},"content":"        public void undo() {","lastModifiedDate":"2021-10-29"},{"lineNumber":315,"author":{"gitId":"Li-Lehao"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":316,"author":{"gitId":"tchiong"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":317,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":318,"author":{"gitId":"tchiong"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":319,"author":{"gitId":"tchiong"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2021-10-13"},{"lineNumber":320,"author":{"gitId":"tchiong"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":321,"author":{"gitId":"tchiong"},"content":"    private class ModelStubAcceptingAppointmentAdded extends AddAppCommandTest.ModelStub {","lastModifiedDate":"2021-10-13"},{"lineNumber":322,"author":{"gitId":"tchiong"},"content":"        final ObservableList\u003cAppointment\u003e appointmentAdded \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-26"},{"lineNumber":323,"author":{"gitId":"tchiong"},"content":"        final ObservableList\u003cPerson\u003e personsAdded \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-13"},{"lineNumber":324,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":325,"author":{"gitId":"tchiong"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":326,"author":{"gitId":"tchiong"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2021-10-13"},{"lineNumber":327,"author":{"gitId":"tchiong"},"content":"            requireNonNull(person);","lastModifiedDate":"2021-10-13"},{"lineNumber":328,"author":{"gitId":"tchiong"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2021-10-13"},{"lineNumber":329,"author":{"gitId":"tchiong"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":330,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":331,"author":{"gitId":"tchiong"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":332,"author":{"gitId":"tchiong"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2021-10-13"},{"lineNumber":333,"author":{"gitId":"tchiong"},"content":"            requireNonNull(person);","lastModifiedDate":"2021-10-13"},{"lineNumber":334,"author":{"gitId":"tchiong"},"content":"            personsAdded.add(person);","lastModifiedDate":"2021-10-13"},{"lineNumber":335,"author":{"gitId":"tchiong"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":336,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":337,"author":{"gitId":"tchiong"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":338,"author":{"gitId":"tchiong"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2021-10-13"},{"lineNumber":339,"author":{"gitId":"tchiong"},"content":"            return personsAdded;","lastModifiedDate":"2021-10-13"},{"lineNumber":340,"author":{"gitId":"tchiong"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":341,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":342,"author":{"gitId":"tchiong"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":343,"author":{"gitId":"tchiong"},"content":"        public void addAppointment(Appointment a) {","lastModifiedDate":"2021-10-13"},{"lineNumber":344,"author":{"gitId":"tchiong"},"content":"            requireNonNull(a);","lastModifiedDate":"2021-10-13"},{"lineNumber":345,"author":{"gitId":"tchiong"},"content":"            appointmentAdded.add(a);","lastModifiedDate":"2021-10-13"},{"lineNumber":346,"author":{"gitId":"tchiong"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":347,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":348,"author":{"gitId":"tchiong"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":349,"author":{"gitId":"tchiong"},"content":"        public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2021-10-26"},{"lineNumber":350,"author":{"gitId":"tchiong"},"content":"            return appointmentAdded;","lastModifiedDate":"2021-10-26"},{"lineNumber":351,"author":{"gitId":"tchiong"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":352,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":353,"author":{"gitId":"tchiong"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":354,"author":{"gitId":"tchiong"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-13"},{"lineNumber":355,"author":{"gitId":"tchiong"},"content":"            return new AddressBook();","lastModifiedDate":"2021-10-13"},{"lineNumber":356,"author":{"gitId":"tchiong"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":357,"author":{"gitId":"tchiong"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":358,"author":{"gitId":"tchiong"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"tchiong":238,"Li-Lehao":31,"YaleChen299":5,"nwhloo99":79,"NecroWolf28":5}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"nwhloo99"},"content":"import static seedu.address.testutil.TypicalAppointment.getTypicalSchedule;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"nwhloo99"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalSchedule());","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"nwhloo99"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getSchedule());","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"nwhloo99":3,"-":43}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"Li-Lehao"},"content":"import java.util.List;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.model.ReadOnlySchedule;","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"tchiong"},"content":"import seedu.address.model.schedule.Appointment;","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"nwhloo99"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":131,"author":{"gitId":"nwhloo99"},"content":"        public ReadOnlySchedule getSchedule() {","lastModifiedDate":"2021-10-13"},{"lineNumber":132,"author":{"gitId":"nwhloo99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":133,"author":{"gitId":"nwhloo99"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":134,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":160,"author":{"gitId":"tchiong"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":161,"author":{"gitId":"tchiong"},"content":"        public void addAppointment(Appointment a) {","lastModifiedDate":"2021-10-07"},{"lineNumber":162,"author":{"gitId":"tchiong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":163,"author":{"gitId":"tchiong"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":164,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":165,"author":{"gitId":"tchiong"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":166,"author":{"gitId":"tchiong"},"content":"        public void deleteAppointment(Appointment a) {","lastModifiedDate":"2021-10-07"},{"lineNumber":167,"author":{"gitId":"tchiong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":168,"author":{"gitId":"tchiong"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":169,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":170,"author":{"gitId":"Li-Lehao"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":171,"author":{"gitId":"Li-Lehao"},"content":"        public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":172,"author":{"gitId":"Li-Lehao"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":173,"author":{"gitId":"Li-Lehao"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":174,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":175,"author":{"gitId":"tchiong"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":176,"author":{"gitId":"tchiong"},"content":"        public void sortFilteredAppointmentList(String sortBy) {","lastModifiedDate":"2021-10-20"},{"lineNumber":177,"author":{"gitId":"tchiong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":178,"author":{"gitId":"tchiong"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":179,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":180,"author":{"gitId":"Li-Lehao"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":181,"author":{"gitId":"Li-Lehao"},"content":"        public void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e predicate) {","lastModifiedDate":"2021-10-07"},{"lineNumber":182,"author":{"gitId":"Li-Lehao"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":183,"author":{"gitId":"Li-Lehao"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":184,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":185,"author":{"gitId":"YaleChen299"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":186,"author":{"gitId":"YaleChen299"},"content":"        public String getRelatedAppointmentsAsString(Person client) {","lastModifiedDate":"2021-10-20"},{"lineNumber":187,"author":{"gitId":"YaleChen299"},"content":"            return \"\";","lastModifiedDate":"2021-10-20"},{"lineNumber":188,"author":{"gitId":"YaleChen299"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":189,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":190,"author":{"gitId":"Li-Lehao"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":191,"author":{"gitId":"Li-Lehao"},"content":"        public String getAppointmentsThatOnlyHaveThisClientAsString(Person client) {","lastModifiedDate":"2021-10-25"},{"lineNumber":192,"author":{"gitId":"Li-Lehao"},"content":"            return \"\";","lastModifiedDate":"2021-10-25"},{"lineNumber":193,"author":{"gitId":"Li-Lehao"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":194,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":195,"author":{"gitId":"Li-Lehao"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":196,"author":{"gitId":"Li-Lehao"},"content":"        public void updateEditedClientInAppointments(Person personToEdit, Person editedPerson) {","lastModifiedDate":"2021-10-26"},{"lineNumber":197,"author":{"gitId":"Li-Lehao"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":198,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":199,"author":{"gitId":"Li-Lehao"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":200,"author":{"gitId":"Li-Lehao"},"content":"        public void removePersonFromAppointments(Person personToDelete) {","lastModifiedDate":"2021-10-26"},{"lineNumber":201,"author":{"gitId":"Li-Lehao"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":202,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":203,"author":{"gitId":"Li-Lehao"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":204,"author":{"gitId":"Li-Lehao"},"content":"        public List\u003cAppointment\u003e getClashingAppointments(Appointment appointment) {","lastModifiedDate":"2021-10-28"},{"lineNumber":205,"author":{"gitId":"Li-Lehao"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-28"},{"lineNumber":206,"author":{"gitId":"Li-Lehao"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":207,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":208,"author":{"gitId":"Li-Lehao"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":209,"author":{"gitId":"Li-Lehao"},"content":"        public String getClashingAppointmentsAsString(Appointment appointment) {","lastModifiedDate":"2021-10-28"},{"lineNumber":210,"author":{"gitId":"Li-Lehao"},"content":"            return \"\";","lastModifiedDate":"2021-10-28"},{"lineNumber":211,"author":{"gitId":"Li-Lehao"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":212,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":213,"author":{"gitId":"NecroWolf28"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":214,"author":{"gitId":"NecroWolf28"},"content":"        public void setAppointment(Appointment appointmentToEdit, Appointment editedAppointment) {","lastModifiedDate":"2021-10-29"},{"lineNumber":215,"author":{"gitId":"NecroWolf28"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-29"},{"lineNumber":216,"author":{"gitId":"NecroWolf28"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":217,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":218,"author":{"gitId":"Li-Lehao"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":219,"author":{"gitId":"Li-Lehao"},"content":"        public void updateState() {","lastModifiedDate":"2021-10-29"},{"lineNumber":220,"author":{"gitId":"Li-Lehao"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":221,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":222,"author":{"gitId":"Li-Lehao"},"content":"        @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":223,"author":{"gitId":"Li-Lehao"},"content":"        public void undo() {","lastModifiedDate":"2021-10-29"},{"lineNumber":224,"author":{"gitId":"Li-Lehao"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":247,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"Li-Lehao":41,"tchiong":16,"YaleChen299":5,"nwhloo99":8,"-":194,"NecroWolf28":5}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"nwhloo99"},"content":"import static seedu.address.testutil.TypicalAppointment.getTypicalSchedule;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"nwhloo99"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalSchedule());","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"nwhloo99"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalSchedule());","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"nwhloo99":3,"-":30}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"Li-Lehao"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false, false)));","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"Li-Lehao"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false, false)));","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"Li-Lehao"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true, false)));","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"Li-Lehao"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false, false).hashCode());","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"Li-Lehao"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true, false).hashCode());","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"Li-Lehao":5,"-":49}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"NecroWolf28"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"nwhloo99"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"NecroWolf28"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"NecroWolf28"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.model.schedule.TimePeriod;","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"NecroWolf28"},"content":"    public static final LocalDate VALID_DATE \u003d LocalDate.parse(\"12-12-2021\",","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"NecroWolf28"},"content":"            DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"NecroWolf28"},"content":"    public static final LocalTime VALID_TIME \u003d LocalTime.parse(\"1400\", DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"nwhloo99"},"content":"    public static final TimePeriod VALID_TIME_PERIOD \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"nwhloo99"},"content":"            new TimePeriod(LocalDateTime.of(2021, 12, 14, 10, 00),","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"nwhloo99"},"content":"                    LocalDateTime.of(2021, 12, 14, 11, 00));","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Li-Lehao":1,"nwhloo99":5,"-":127,"NecroWolf28":7}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"nwhloo99"},"content":"import static seedu.address.testutil.TypicalAppointment.getTypicalSchedule;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"nwhloo99"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalSchedule());","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"YaleChen299"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getSchedule());","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"YaleChen299"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getSchedule());","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"YaleChen299":2,"nwhloo99":2,"-":104}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":16,"author":{"gitId":"Li-Lehao"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"Li-Lehao"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"Li-Lehao"},"content":"import seedu.address.model.schedule.Appointment;","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"Li-Lehao"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"Li-Lehao"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"Li-Lehao"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":40,"author":{"gitId":"Li-Lehao"},"content":"    private UniquePersonList editTestPersonList \u003d new UniquePersonList();","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"Li-Lehao"},"content":"    private Model model;","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"Li-Lehao"},"content":"    private AddressBook testAddressbook;","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"Li-Lehao"},"content":"    private Schedule testSchedule;","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"Li-Lehao"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"Li-Lehao"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"Li-Lehao"},"content":"        Person client1 \u003d new PersonBuilder().withName(\"Client1\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"Li-Lehao"},"content":"        Person client2 \u003d new PersonBuilder().withName(\"Client2\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"Li-Lehao"},"content":"        testAddressbook \u003d new AddressBookBuilder().build();","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"Li-Lehao"},"content":"        testAddressbook.addPerson(client1);","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"Li-Lehao"},"content":"        testAddressbook.addPerson(client2);","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"Li-Lehao"},"content":"        Appointment appointment1 \u003d new AppointmentBuilder().addClient(client1).build();","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"Li-Lehao"},"content":"        Appointment appointment2 \u003d new AppointmentBuilder().addClient(client1).addClient(client2).build();","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"Li-Lehao"},"content":"        testSchedule \u003d new Schedule();","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"Li-Lehao"},"content":"        testSchedule.addAppointment(appointment1);","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"Li-Lehao"},"content":"        testSchedule.addAppointment(appointment2);","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"Li-Lehao"},"content":"        model \u003d new ModelManager(testAddressbook, new UserPrefs(), testSchedule);","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"Li-Lehao"},"content":"        System.out.println(model.getFilteredAppointmentList().get(0));","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"Li-Lehao"},"content":"        System.out.println(model.getFilteredAppointmentList().get(1));","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"nwhloo99"},"content":"        Model expectedModel \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"Li-Lehao"},"content":"                new ModelManager(testAddressbook, new UserPrefs(), testSchedule);","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"Li-Lehao"},"content":"        Person personToEdit \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":79,"author":{"gitId":"Li-Lehao"},"content":"        expectedModel.updateEditedClientInAppointments(personToEdit, editedPerson);","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"Li-Lehao"},"content":"        System.out.println(model.equals(expectedModel));","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"nwhloo99"},"content":"        Model expectedModel \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"nwhloo99"},"content":"                new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(), model.getSchedule());","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"nwhloo99"},"content":"        Model expectedModel \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":115,"author":{"gitId":"nwhloo99"},"content":"                new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(), model.getSchedule());","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"nwhloo99"},"content":"        Model expectedModel \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":132,"author":{"gitId":"nwhloo99"},"content":"                new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(), model.getSchedule());","lastModifiedDate":"2021-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"Li-Lehao":36,"nwhloo99":7,"-":167}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"Li-Lehao"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false);","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Li-Lehao":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"nwhloo99"},"content":"import static seedu.address.testutil.TypicalAppointment.getTypicalSchedule;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"nwhloo99"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalSchedule());","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"nwhloo99"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalSchedule());","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"nwhloo99":3,"-":81}},{"path":"src/test/java/seedu/address/logic/commands/FindTagsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"NecroWolf28"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"NecroWolf28"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"NecroWolf28"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"NecroWolf28"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"NecroWolf28"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"NecroWolf28"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"NecroWolf28"},"content":"import static seedu.address.testutil.TypicalAppointment.getTypicalSchedule;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"NecroWolf28"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"NecroWolf28"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"NecroWolf28"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"NecroWolf28"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"NecroWolf28"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"NecroWolf28"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"NecroWolf28"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"NecroWolf28"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"NecroWolf28"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"NecroWolf28"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"NecroWolf28"},"content":"import seedu.address.model.person.PersonHasTagsPredicate;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"NecroWolf28"},"content":"public class FindTagsCommandTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"NecroWolf28"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalSchedule());","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"NecroWolf28"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalSchedule());","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"NecroWolf28"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"NecroWolf28"},"content":"    public void equals() {","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"NecroWolf28"},"content":"        PersonHasTagsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"NecroWolf28"},"content":"                new PersonHasTagsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"NecroWolf28"},"content":"        PersonHasTagsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"NecroWolf28"},"content":"                new PersonHasTagsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"NecroWolf28"},"content":"        FindTagsCommand findFirstCommand \u003d new FindTagsCommand(firstPredicate);","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"NecroWolf28"},"content":"        FindTagsCommand findSecondCommand \u003d new FindTagsCommand(secondPredicate);","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"NecroWolf28"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"NecroWolf28"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"NecroWolf28"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"NecroWolf28"},"content":"        FindTagsCommand findFirstCommandCopy \u003d new FindTagsCommand(firstPredicate);","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"NecroWolf28"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"NecroWolf28"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"NecroWolf28"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"NecroWolf28"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"NecroWolf28"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"NecroWolf28"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"NecroWolf28"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"NecroWolf28"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"NecroWolf28"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"NecroWolf28"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"NecroWolf28"},"content":"        PersonHasTagsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"NecroWolf28"},"content":"        FindTagsCommand command \u003d new FindTagsCommand(predicate);","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"NecroWolf28"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"NecroWolf28"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"NecroWolf28"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"NecroWolf28"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"NecroWolf28"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"NecroWolf28"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"NecroWolf28"},"content":"        PersonHasTagsPredicate predicate \u003d preparePredicate(\"friends\");","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"NecroWolf28"},"content":"        FindTagsCommand command \u003d new FindTagsCommand(predicate);","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"NecroWolf28"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"NecroWolf28"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"NecroWolf28"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"NecroWolf28"},"content":"     * Parses {@code userInput} into a {@code PersonHasTagsPredicate}.","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"NecroWolf28"},"content":"    private PersonHasTagsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"NecroWolf28"},"content":"        return new PersonHasTagsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"NecroWolf28"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"NecroWolf28":81}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"Li-Lehao"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false, false);","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Li-Lehao":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/ListAppCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Li-Lehao"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"Li-Lehao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"Li-Lehao"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"Li-Lehao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"Li-Lehao"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"Li-Lehao"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"Li-Lehao"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"Li-Lehao"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"Li-Lehao"},"content":"import seedu.address.testutil.TypicalAppointment;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"Li-Lehao"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"Li-Lehao"},"content":"class ListAppCommandTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"Li-Lehao"},"content":"    private Model model;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"Li-Lehao"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"Li-Lehao"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"Li-Lehao"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"nwhloo99"},"content":"        AddressBook addressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"nwhloo99"},"content":"        Schedule schedule \u003d TypicalAppointment.getTypicalSchedule();","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"nwhloo99"},"content":"        model \u003d new ModelManager(addressBook, new UserPrefs(), schedule);","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"nwhloo99"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getSchedule());","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"Li-Lehao"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"Li-Lehao"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"tchiong"},"content":"        assertCommandSuccess(new ListAppCommand(\"\"), model, ListAppCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"Li-Lehao"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"Li-Lehao"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"Li-Lehao"},"content":"        model.updateFilteredAppointmentList(x -\u003e false);","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"tchiong"},"content":"        assertCommandSuccess(new ListAppCommand(\"\"), model, ListAppCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"Li-Lehao"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"Li-Lehao":32,"tchiong":2,"nwhloo99":5}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"nwhloo99"},"content":"import static seedu.address.testutil.TypicalAppointment.getTypicalSchedule;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"nwhloo99"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalSchedule());","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"nwhloo99"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getSchedule());","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"nwhloo99":3,"-":37}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"nwhloo99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"nwhloo99"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"nwhloo99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"nwhloo99"},"content":"    private static final String INVALID_DATE \u003d \"2021-30\";","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"nwhloo99"},"content":"    private static final String INVALID_TIME \u003d \"10\";","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"nwhloo99"},"content":"    private static final String VALID_DATE \u003d \"04-10-2021\";","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"nwhloo99"},"content":"    private static final String VALID_TIME \u003d \"1430\";","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"nwhloo99"},"content":"    private static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"nwhloo99"},"content":"    private static final DateTimeFormatter TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":205,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":206,"author":{"gitId":"nwhloo99"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":207,"author":{"gitId":"nwhloo99"},"content":"    public void parseDate_validValueWithoutWhitespace_returnsLocalDate() throws Exception {","lastModifiedDate":"2021-10-07"},{"lineNumber":208,"author":{"gitId":"nwhloo99"},"content":"        LocalDate expectedDate \u003d LocalDate.parse(VALID_DATE, DATE_FORMATTER);","lastModifiedDate":"2021-10-07"},{"lineNumber":209,"author":{"gitId":"nwhloo99"},"content":"        assertEquals(expectedDate, ParserUtil.parseDate(VALID_DATE));","lastModifiedDate":"2021-10-07"},{"lineNumber":210,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":211,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":212,"author":{"gitId":"nwhloo99"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":213,"author":{"gitId":"nwhloo99"},"content":"    public void parseDate_invalidDate_throwsParseException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":214,"author":{"gitId":"nwhloo99"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDate(INVALID_DATE));","lastModifiedDate":"2021-10-23"},{"lineNumber":215,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":216,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":217,"author":{"gitId":"nwhloo99"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":218,"author":{"gitId":"nwhloo99"},"content":"    public void parseDate_null_throwsDateTimeParseException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":219,"author":{"gitId":"nwhloo99"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDate(null));","lastModifiedDate":"2021-10-23"},{"lineNumber":220,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":221,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":222,"author":{"gitId":"nwhloo99"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":223,"author":{"gitId":"nwhloo99"},"content":"    public void parseTime_validValueWithoutWhitespace_returnsLocalTime() throws Exception {","lastModifiedDate":"2021-10-07"},{"lineNumber":224,"author":{"gitId":"nwhloo99"},"content":"        LocalTime expectedTime \u003d LocalTime.parse(VALID_TIME, TIME_FORMATTER);","lastModifiedDate":"2021-10-07"},{"lineNumber":225,"author":{"gitId":"nwhloo99"},"content":"        assertEquals(expectedTime, ParserUtil.parseTime(VALID_TIME));","lastModifiedDate":"2021-10-07"},{"lineNumber":226,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":227,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":228,"author":{"gitId":"nwhloo99"},"content":"    @Test public void parseTime_invalidTime_throwsParseException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":229,"author":{"gitId":"nwhloo99"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTime(INVALID_TIME));","lastModifiedDate":"2021-10-23"},{"lineNumber":230,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":231,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":232,"author":{"gitId":"nwhloo99"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":233,"author":{"gitId":"nwhloo99"},"content":"    public void parseTime_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":234,"author":{"gitId":"nwhloo99"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTime(null));","lastModifiedDate":"2021-10-23"},{"lineNumber":235,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"nwhloo99":40,"-":196}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"Li-Lehao"},"content":"import seedu.address.model.schedule.Appointment;","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"Li-Lehao"},"content":"        private final ObservableList\u003cAppointment\u003e appointments \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"Li-Lehao":2,"-":102}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"nwhloo99"},"content":"import static seedu.address.testutil.TypicalAppointment.getTypicalSchedule;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":101,"author":{"gitId":"nwhloo99"},"content":"        Schedule schedule \u003d getTypicalSchedule();","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"nwhloo99"},"content":"        Schedule differentSchedule \u003d new Schedule();","lastModifiedDate":"2021-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"nwhloo99"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs, schedule);","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"nwhloo99"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs, schedule);","lastModifiedDate":"2021-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"nwhloo99"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs, schedule)));","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":126,"author":{"gitId":"nwhloo99"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs, schedule)));","lastModifiedDate":"2021-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":134,"author":{"gitId":"nwhloo99"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs, schedule)));","lastModifiedDate":"2021-10-13"},{"lineNumber":135,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":136,"author":{"gitId":"nwhloo99"},"content":"        // different schedule -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":137,"author":{"gitId":"nwhloo99"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs, differentSchedule)));","lastModifiedDate":"2021-10-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"nwhloo99":12,"-":127}},{"path":"src/test/java/seedu/address/model/person/PersonHasTagsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"NecroWolf28"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"NecroWolf28"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"NecroWolf28"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"NecroWolf28"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"NecroWolf28"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"NecroWolf28"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"NecroWolf28"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"NecroWolf28"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"NecroWolf28"},"content":"public class PersonHasTagsPredicateTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"NecroWolf28"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"NecroWolf28"},"content":"    public void equals() {","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"NecroWolf28"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"NecroWolf28"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"NecroWolf28"},"content":"        PersonHasTagsPredicate firstPredicate \u003d new PersonHasTagsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"NecroWolf28"},"content":"        PersonHasTagsPredicate secondPredicate \u003d new PersonHasTagsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"NecroWolf28"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"NecroWolf28"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"NecroWolf28"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"NecroWolf28"},"content":"        PersonHasTagsPredicate firstPredicateCopy \u003d new PersonHasTagsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"NecroWolf28"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"NecroWolf28"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"NecroWolf28"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"NecroWolf28"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"NecroWolf28"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"NecroWolf28"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"NecroWolf28"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"NecroWolf28"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"NecroWolf28"},"content":"    public void test_personContainsTags_returnsTrue() {","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"NecroWolf28"},"content":"        // One keyword","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"NecroWolf28"},"content":"        PersonHasTagsPredicate predicate \u003d new PersonHasTagsPredicate(Collections.singletonList(\"friends\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"NecroWolf28"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice\").withTags(\"friends\").build()));","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"NecroWolf28"},"content":"        // Multiple keywords","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"NecroWolf28"},"content":"        predicate \u003d new PersonHasTagsPredicate(Arrays.asList(\"friends\", \"colleagues\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"NecroWolf28"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice\").withTags(\"friends\", \"colleagues\").build()));","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"NecroWolf28"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"NecroWolf28"},"content":"        predicate \u003d new PersonHasTagsPredicate(Arrays.asList(\"friends\", \"family\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"NecroWolf28"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice\").withTags(\"friends\").build()));","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"NecroWolf28"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"NecroWolf28"},"content":"        predicate \u003d new PersonHasTagsPredicate(Arrays.asList(\"friENds\", \"coLleagUes\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"NecroWolf28"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice\").withTags(\"friends\", \"colleagues\").build()));","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"NecroWolf28"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"NecroWolf28"},"content":"    public void test_personDoesNotContainTags_returnsFalse() {","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"NecroWolf28"},"content":"        // Zero keywords","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"NecroWolf28"},"content":"        PersonHasTagsPredicate predicate \u003d new PersonHasTagsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"NecroWolf28"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"NecroWolf28"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"NecroWolf28"},"content":"        predicate \u003d new PersonHasTagsPredicate(Arrays.asList(\"friends\", \"colleagues\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"NecroWolf28"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withTags(\"client\").build()));","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"NecroWolf28"},"content":"        // Keywords match name, but does not match tags","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"NecroWolf28"},"content":"        predicate \u003d new PersonHasTagsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"NecroWolf28"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").withTags(\"friends\").build()));","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"NecroWolf28"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"NecroWolf28":74}},{"path":"src/test/java/seedu/address/model/schedule/AppointmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nwhloo99"},"content":"package seedu.address.model.schedule;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"nwhloo99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"nwhloo99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"nwhloo99"},"content":"import static seedu.address.testutil.TypicalAppointment.ALICE_APPOINTMENT;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"nwhloo99"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"tchiong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"nwhloo99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"nwhloo99"},"content":"public class AppointmentTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"nwhloo99"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"nwhloo99"},"content":"    public void equals() {","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"nwhloo99"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"nwhloo99"},"content":"        assertTrue(ALICE_APPOINTMENT.equals(ALICE_APPOINTMENT));","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"nwhloo99"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"nwhloo99"},"content":"        assertFalse(ALICE_APPOINTMENT.equals(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"nwhloo99"},"content":"        UniquePersonList testClients \u003d new UniquePersonList();","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"nwhloo99"},"content":"        testClients.add(ALICE);","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"nwhloo99"},"content":"        // same attributes, different object","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"nwhloo99"},"content":"        Appointment similarAliceAppointment \u003d new Appointment(testClients,","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"nwhloo99"},"content":"                new Address(\"369 Tanjong Rhu\"),","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"nwhloo99"},"content":"                new TimePeriod(LocalDateTime.of(2021, 12, 25, 10, 00),","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"nwhloo99"},"content":"                        LocalDateTime.of(2021, 12, 25, 11, 00)),","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"nwhloo99"},"content":"                \"Talk about sales\");","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"nwhloo99"},"content":"        assertTrue(ALICE_APPOINTMENT.equals(similarAliceAppointment));","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"nwhloo99"},"content":"        // same client, different attributes","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"nwhloo99"},"content":"        Appointment editedAliceAppointment \u003d new Appointment(testClients,","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"nwhloo99"},"content":"                new Address(\"369 Geylang Street\"),","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"tchiong"},"content":"                new TimePeriod(LocalDateTime.of(2021, 12, 25, 21, 30),","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"tchiong"},"content":"                        LocalDateTime.of(2021, 12, 25, 22, 30)),","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"tchiong"},"content":"                \"Talk about sales\");","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"nwhloo99"},"content":"        assertFalse(ALICE_APPOINTMENT.equals(editedAliceAppointment));","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"nwhloo99"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"tchiong":4,"nwhloo99":40}},{"path":"src/test/java/seedu/address/model/schedule/DescriptionContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"YaleChen299"},"content":"package seedu.address.model.schedule;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"YaleChen299"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"YaleChen299"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"YaleChen299"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"YaleChen299"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"YaleChen299"},"content":"import java.util.List;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"YaleChen299"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"YaleChen299"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"YaleChen299"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"YaleChen299"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"YaleChen299"},"content":"class DescriptionContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"YaleChen299"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"YaleChen299"},"content":"    void equals() {","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"YaleChen299"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"YaleChen299"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"YaleChen299"},"content":"        DescriptionContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"YaleChen299"},"content":"                new DescriptionContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"YaleChen299"},"content":"        DescriptionContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"YaleChen299"},"content":"                new DescriptionContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"YaleChen299"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"YaleChen299"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"YaleChen299"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"YaleChen299"},"content":"        DescriptionContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"YaleChen299"},"content":"                new DescriptionContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"YaleChen299"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"YaleChen299"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"YaleChen299"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"YaleChen299"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"YaleChen299"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"YaleChen299"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"YaleChen299"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"YaleChen299"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"YaleChen299"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"YaleChen299"},"content":"    void test_descriptionContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"YaleChen299"},"content":"        // One keyword","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"YaleChen299"},"content":"        DescriptionContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"YaleChen299"},"content":"                new DescriptionContainsKeywordsPredicate(Collections.singletonList(\"meeting\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"YaleChen299"},"content":"        assertTrue(predicate.test(new AppointmentBuilder().withDescription(\"zoom meeting\").build()));","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"YaleChen299"},"content":"        // Multiple keywords","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"YaleChen299"},"content":"        predicate \u003d new DescriptionContainsKeywordsPredicate(Arrays.asList(\"zoom\", \"meeting\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"YaleChen299"},"content":"        assertTrue(predicate.test(new AppointmentBuilder().withDescription(\"zoom meeting\").build()));","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"YaleChen299"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"YaleChen299"},"content":"        predicate \u003d new DescriptionContainsKeywordsPredicate(Arrays.asList(\"zoom\", \"meeting\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"YaleChen299"},"content":"        assertTrue(predicate.test(new AppointmentBuilder().withDescription(\"zoom\").build()));","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"YaleChen299"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"YaleChen299"},"content":"        predicate \u003d new DescriptionContainsKeywordsPredicate(Arrays.asList(\"zoOm\", \"mEetIng\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"YaleChen299"},"content":"        assertTrue(predicate.test(new AppointmentBuilder().withDescription(\"Zoom Meeting\").build()));","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"YaleChen299"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"YaleChen299"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"YaleChen299"},"content":"    public void test_descriptionDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"YaleChen299"},"content":"        // Zero keywords","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"YaleChen299"},"content":"        DescriptionContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"YaleChen299"},"content":"                new DescriptionContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"YaleChen299"},"content":"        assertFalse(predicate.test(new AppointmentBuilder().withDescription(\"zoom meeting\").build()));","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"YaleChen299"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"YaleChen299"},"content":"        predicate \u003d new DescriptionContainsKeywordsPredicate(Arrays.asList(\"Conference\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"YaleChen299"},"content":"        assertFalse(predicate.test(new AppointmentBuilder().withDescription(\"zoom meeting\").build()));","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"YaleChen299"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"YaleChen299"},"content":"        // Keywords match person\u0027s name, address, date, time, but does not match description","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"YaleChen299"},"content":"        Person mockClient \u003d new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"YaleChen299"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build();","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"YaleChen299"},"content":"        predicate \u003d new DescriptionContainsKeywordsPredicate(Arrays","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"YaleChen299"},"content":"                .asList(\"12345\", \"Alice\", \"alice@email.com\", \"Main\", \"Street\", \"Building\", \"15-12-2020\", \"2103\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"YaleChen299"},"content":"        assertFalse(predicate.test(new AppointmentBuilder().withDescription(\"meeting\").withClient(mockClient)","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"nwhloo99"},"content":"                .withLocation(\"Main Building\").withTimePeriod(\"25-12-2021 1000\", \"25-12-2021 1100\").build()));","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"YaleChen299"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"YaleChen299"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"YaleChen299":85,"nwhloo99":1}},{"path":"src/test/java/seedu/address/model/schedule/ScheduleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tchiong"},"content":"package seedu.address.model.schedule;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"tchiong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"tchiong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"tchiong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"tchiong"},"content":"import static seedu.address.testutil.TypicalAppointment.ALICE_APPOINTMENT;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"tchiong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"tchiong"},"content":"import seedu.address.model.schedule.exceptions.AppointmentNotFoundException;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"tchiong"},"content":"import seedu.address.model.schedule.exceptions.DuplicateAppointmentException;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"tchiong"},"content":"public class ScheduleTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"tchiong"},"content":"    private final Schedule schedule \u003d new Schedule();","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"tchiong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"tchiong"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"nwhloo99"},"content":"        assertThrows(NullPointerException.class, () -\u003e schedule.addAppointment(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"tchiong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"tchiong"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"tchiong"},"content":"    public void add_unique_existingAppointment() {","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"nwhloo99"},"content":"        schedule.addAppointment(ALICE_APPOINTMENT);","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"tchiong"},"content":"        assertTrue(schedule.contains(ALICE_APPOINTMENT));","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"tchiong"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"tchiong"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"tchiong"},"content":"    public void add_duplicate_existingAppointment() {","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"tchiong"},"content":"        schedule.addAppointment(ALICE_APPOINTMENT);","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"tchiong"},"content":"        assertThrows(DuplicateAppointmentException.class, () -\u003e schedule.addAppointment(ALICE_APPOINTMENT));","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"tchiong"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"tchiong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"tchiong"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"nwhloo99"},"content":"        assertThrows(NullPointerException.class, () -\u003e schedule.deleteAppointment(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"tchiong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"tchiong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"nwhloo99"},"content":"    public void remove_appointmentDoesNotExist_throwsAppointmentNotFoundException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"nwhloo99"},"content":"        assertThrows(AppointmentNotFoundException.class, () -\u003e schedule.deleteAppointment(ALICE_APPOINTMENT));","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"tchiong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"tchiong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"nwhloo99"},"content":"    public void remove_existingAppointment_removesAppointment() {","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"nwhloo99"},"content":"        schedule.addAppointment(ALICE_APPOINTMENT);","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"nwhloo99"},"content":"        schedule.deleteAppointment(ALICE_APPOINTMENT);","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"tchiong"},"content":"        Schedule expectedSchedule \u003d new Schedule();","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"tchiong"},"content":"        assertEquals(expectedSchedule, schedule);","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"tchiong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"tchiong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"tchiong"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"tchiong"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"tchiong"},"content":"            -\u003e schedule.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"tchiong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"tchiong"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"tchiong":48,"nwhloo99":8}},{"path":"src/test/java/seedu/address/model/schedule/TimePeriodTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Li-Lehao"},"content":"package seedu.address.model.schedule;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"Li-Lehao"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"Li-Lehao"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"Li-Lehao"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"Li-Lehao"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"Li-Lehao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"Li-Lehao"},"content":"import seedu.address.model.schedule.exceptions.EndTimeBeforeStartTimeException;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"Li-Lehao"},"content":"public class TimePeriodTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"Li-Lehao"},"content":"    private static final LocalDateTime TEST_MOMENT1 \u003d LocalDateTime.of(2021, 01, 01, 00, 00);","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"Li-Lehao"},"content":"    private static final LocalDateTime TEST_MOMENT2 \u003d LocalDateTime.of(2021, 01, 01, 23, 59);","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"Li-Lehao"},"content":"    private static final LocalDateTime TEST_MOMENT3 \u003d LocalDateTime.of(2021, 01, 02, 00, 00);","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"Li-Lehao"},"content":"    private static final LocalDateTime TEST_MOMENT4 \u003d LocalDateTime.of(2021, 01, 02, 23, 59);","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"Li-Lehao"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"Li-Lehao"},"content":"    public void timePeriod_endDateTimeIsBeforeStartDateTime_throwsException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"Li-Lehao"},"content":"        assertThrows(EndTimeBeforeStartTimeException.class, () -\u003e new TimePeriod(TEST_MOMENT2, TEST_MOMENT1));","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"Li-Lehao"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"Li-Lehao"},"content":"    public void getStartDateTime_returnsCorrectStartDateTime() {","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"Li-Lehao"},"content":"        TimePeriod tp \u003d new TimePeriod(TEST_MOMENT1, TEST_MOMENT2);","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"Li-Lehao"},"content":"        assertTrue(TEST_MOMENT1.equals(tp.getStartDateTime()));","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"Li-Lehao"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"Li-Lehao"},"content":"    public void getEndDateTime_returnsCorrectEndDateTime() {","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"Li-Lehao"},"content":"        TimePeriod tp \u003d new TimePeriod(TEST_MOMENT1, TEST_MOMENT2);","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"Li-Lehao"},"content":"        assertTrue(TEST_MOMENT2.equals(tp.getEndDateTime()));","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"Li-Lehao"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"Li-Lehao"},"content":"    public void setStartDateTime_newStartDateTimeBeforeEndDateTime_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"Li-Lehao"},"content":"        TimePeriod tp \u003d new TimePeriod(TEST_MOMENT2, TEST_MOMENT3);","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"Li-Lehao"},"content":"        tp.setStartDateTime(TEST_MOMENT1);","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"Li-Lehao"},"content":"        assertTrue(TEST_MOMENT1.equals(tp.getStartDateTime()));","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"Li-Lehao"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"Li-Lehao"},"content":"    public void setStartDateTime_newStartDateTimeAfterEndDateTime_throwsException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"Li-Lehao"},"content":"        TimePeriod tp \u003d new TimePeriod(TEST_MOMENT2, TEST_MOMENT3);","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"Li-Lehao"},"content":"        assertThrows(EndTimeBeforeStartTimeException.class, () -\u003e tp.setStartDateTime(TEST_MOMENT4));","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"Li-Lehao"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"Li-Lehao"},"content":"    public void setEndDateTime_newEndDateTimeAfterStartDateTime_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"Li-Lehao"},"content":"        TimePeriod tp \u003d new TimePeriod(TEST_MOMENT2, TEST_MOMENT3);","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"Li-Lehao"},"content":"        tp.setEndDateTime(TEST_MOMENT4);","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"Li-Lehao"},"content":"        assertTrue(TEST_MOMENT4.equals(tp.getEndDateTime()));","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"Li-Lehao"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"Li-Lehao"},"content":"    public void setEndDateTime_newEndDateTimeBeforeStartDateTime_throwsException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"Li-Lehao"},"content":"        TimePeriod tp \u003d new TimePeriod(TEST_MOMENT2, TEST_MOMENT3);","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"Li-Lehao"},"content":"        assertThrows(EndTimeBeforeStartTimeException.class, () -\u003e tp.setEndDateTime(TEST_MOMENT1));","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"Li-Lehao"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"Li-Lehao"},"content":"    public void hasConflictWith_overlapCase1_returnsTrue() {","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"Li-Lehao"},"content":"        TimePeriod tp1 \u003d new TimePeriod(TEST_MOMENT1, TEST_MOMENT3);","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"Li-Lehao"},"content":"        TimePeriod tp2 \u003d new TimePeriod(TEST_MOMENT2, TEST_MOMENT4);","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"Li-Lehao"},"content":"        assertTrue(tp1.hasConflictWith(tp2));","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"Li-Lehao"},"content":"        assertTrue(tp2.hasConflictWith(tp1));","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"Li-Lehao"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"Li-Lehao"},"content":"    public void hasConflictWith_overlapCase2_returnsTrue() {","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"Li-Lehao"},"content":"        TimePeriod tp1 \u003d new TimePeriod(TEST_MOMENT2, TEST_MOMENT3);","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"Li-Lehao"},"content":"        TimePeriod tp2 \u003d new TimePeriod(TEST_MOMENT1, TEST_MOMENT4);","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"Li-Lehao"},"content":"        assertTrue(tp1.hasConflictWith(tp2));","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"Li-Lehao"},"content":"        assertTrue(tp2.hasConflictWith(tp1));","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"Li-Lehao"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"Li-Lehao"},"content":"    public void hasConflictWith_overlapAtOnlyOnePoint_returnsFalse() {","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"Li-Lehao"},"content":"        TimePeriod tp1 \u003d new TimePeriod(TEST_MOMENT2, TEST_MOMENT3);","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"Li-Lehao"},"content":"        TimePeriod tp2 \u003d new TimePeriod(TEST_MOMENT3, TEST_MOMENT4);","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"Li-Lehao"},"content":"        assertFalse(tp1.hasConflictWith(tp2));","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"Li-Lehao"},"content":"        assertFalse(tp2.hasConflictWith(tp1));","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"Li-Lehao"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"Li-Lehao"},"content":"    public void hasConflictWith_noOverlap_returnsFalse() {","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"Li-Lehao"},"content":"        TimePeriod tp1 \u003d new TimePeriod(TEST_MOMENT1, TEST_MOMENT2);","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"Li-Lehao"},"content":"        TimePeriod tp2 \u003d new TimePeriod(TEST_MOMENT3, TEST_MOMENT4);","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"Li-Lehao"},"content":"        assertFalse(tp1.hasConflictWith(tp2));","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"Li-Lehao"},"content":"        assertFalse(tp2.hasConflictWith(tp1));","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"Li-Lehao"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"Li-Lehao":93}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedAppointmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tchiong"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"tchiong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"tchiong"},"content":"import static seedu.address.storage.JsonAdaptedAppointment.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"tchiong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"tchiong"},"content":"import static seedu.address.testutil.TypicalAppointment.ALICE_APPOINTMENT;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"nwhloo99"},"content":"import static seedu.address.testutil.TypicalAppointment.ALICE_CARL_APPOINTMENT;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"tchiong"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"nwhloo99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"nwhloo99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"tchiong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"tchiong"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"tchiong"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.model.schedule.TimePeriod;","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"tchiong"},"content":"public class JsonAdaptedAppointmentTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"tchiong"},"content":"    private static final String INVALID_LOCATION \u003d null;","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"nwhloo99"},"content":"    private static final TimePeriod INVALID_TIME_PERIOD \u003d null;","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"nwhloo99"},"content":"    private static final JsonAdaptedTimePeriod INVALID_JSON_TIME_PERIOD \u003d null;","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"tchiong"},"content":"    private static final String INVALID_DESC \u003d null;","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"tchiong"},"content":"    private static final String VALID_LOCATION \u003d \"vivocity\";","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"nwhloo99"},"content":"    private static final TimePeriod VALID_TIME_PERIOD \u003d ALICE_APPOINTMENT.getTimePeriod();","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"nwhloo99"},"content":"    private static final JsonAdaptedTimePeriod VALID_JSON_TIME_PERIOD \u003d new JsonAdaptedTimePeriod(VALID_TIME_PERIOD);","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"tchiong"},"content":"    private static final String VALID_DESC \u003d \"Testing\";","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"tchiong"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"nwhloo99"},"content":"    public void toModelType_validSinglePersonAppointmentDetails_returnsAppointment() throws Exception {","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"nwhloo99"},"content":"        JsonAdaptedAppointment appointment \u003d new JsonAdaptedAppointment(ALICE_APPOINTMENT);","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"nwhloo99"},"content":"        assertEquals(ALICE_APPOINTMENT, appointment.toModelType());","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"nwhloo99"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"nwhloo99"},"content":"    public void toModelType_validMultiplePersonAppointmentDetails_returnsAppointment() throws Exception {","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"nwhloo99"},"content":"        JsonAdaptedAppointment appointment \u003d new JsonAdaptedAppointment(ALICE_CARL_APPOINTMENT);","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"nwhloo99"},"content":"        assertEquals(ALICE_CARL_APPOINTMENT, appointment.toModelType());","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"tchiong"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"tchiong"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"tchiong"},"content":"    public void toModelType_invalidLocation_returnsAppointment() {","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"tchiong"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(ALICE);","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"nwhloo99"},"content":"        List\u003cJsonAdaptedPerson\u003e clients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"nwhloo99"},"content":"        clients.add(person);","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"tchiong"},"content":"        JsonAdaptedAppointment appointment \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"tchiong"},"content":"                new JsonAdaptedAppointment(","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"nwhloo99"},"content":"                        clients,","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"nwhloo99"},"content":"                        INVALID_LOCATION, VALID_JSON_TIME_PERIOD, VALID_DESC);","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"tchiong"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"tchiong"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, appointment::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"tchiong"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"tchiong"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"tchiong"},"content":"    public void toModelType_invalidTimePeriod_returnsAppointment() {","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"tchiong"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(ALICE);","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"nwhloo99"},"content":"        List\u003cJsonAdaptedPerson\u003e clients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"nwhloo99"},"content":"        clients.add(person);","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"tchiong"},"content":"        JsonAdaptedAppointment appointment \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"tchiong"},"content":"                new JsonAdaptedAppointment(","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"nwhloo99"},"content":"                        clients,","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"nwhloo99"},"content":"                        VALID_LOCATION, INVALID_JSON_TIME_PERIOD, VALID_DESC);","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"nwhloo99"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, TimePeriod.class.getSimpleName());","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"tchiong"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, appointment::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"tchiong"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"tchiong"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"tchiong"},"content":"    public void toModelType_invalidDesc_returnsAppointment() {","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"tchiong"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(ALICE);","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"nwhloo99"},"content":"        List\u003cJsonAdaptedPerson\u003e clients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"nwhloo99"},"content":"        clients.add(person);","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"tchiong"},"content":"        JsonAdaptedAppointment appointment \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"tchiong"},"content":"                new JsonAdaptedAppointment(","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"nwhloo99"},"content":"                        clients,","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"nwhloo99"},"content":"                        VALID_LOCATION, VALID_JSON_TIME_PERIOD, INVALID_DESC);","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"tchiong"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, String.class.getSimpleName());","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"tchiong"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, appointment::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"tchiong"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"tchiong"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"tchiong":50,"nwhloo99":30}},{"path":"src/test/java/seedu/address/storage/JsonSerializableScheduleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tchiong"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"tchiong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"tchiong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"tchiong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"tchiong"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"tchiong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"tchiong"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"tchiong"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"tchiong"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"tchiong"},"content":"import seedu.address.testutil.TypicalAppointment;","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"tchiong"},"content":"public class JsonSerializableScheduleTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"tchiong"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableScheduleTest\");","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"tchiong"},"content":"    private static final Path TYPICAL_APPOINTMENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalAppointmentSchedule.json\");","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"tchiong"},"content":"    private static final Path DUPLICATE_APPOINTMENT_FILE \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"tchiong"},"content":"            TEST_DATA_FOLDER.resolve(\"duplicateAppointmentSchedule.json\");","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"tchiong"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"tchiong"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"tchiong"},"content":"        JsonSerializableSchedule dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_APPOINTMENT_FILE,","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"tchiong"},"content":"                JsonSerializableSchedule.class).get();","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"tchiong"},"content":"        Schedule scheduleFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"tchiong"},"content":"        Schedule typicalSchedule \u003d TypicalAppointment.getTypicalSchedule();","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"tchiong"},"content":"        assertEquals(typicalSchedule, scheduleFromFile);","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"tchiong"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"tchiong"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"tchiong"},"content":"    public void toModelType_duplicateAppointment_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"tchiong"},"content":"        JsonSerializableSchedule dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_APPOINTMENT_FILE,","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"tchiong"},"content":"                JsonSerializableSchedule.class).get();","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"tchiong"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableSchedule.MESSAGE_DUPLICATE_APPOINTMENT,","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"tchiong"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"tchiong"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"tchiong"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"tchiong":40}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"nwhloo99"},"content":"import static seedu.address.testutil.TypicalAppointment.getTypicalSchedule;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.model.ReadOnlySchedule;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":32,"author":{"gitId":"nwhloo99"},"content":"        JsonScheduleStorage scheduleStorage \u003d new JsonScheduleStorage(getTempFilePath(\"sched\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"nwhloo99"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage, scheduleStorage);","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"nwhloo99"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"nwhloo99"},"content":"    public void scheduleReadSave() throws Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"nwhloo99"},"content":"        Schedule original \u003d getTypicalSchedule();","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"nwhloo99"},"content":"        storageManager.saveSchedule(original);","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"nwhloo99"},"content":"        ReadOnlySchedule retrieved \u003d storageManager.readSchedule().get();","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"nwhloo99"},"content":"        assertEquals(original, new Schedule(retrieved));","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"nwhloo99"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"nwhloo99"},"content":"    public void getStorageFilePath() {","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"nwhloo99"},"content":"        assertNotNull(storageManager.getScheduleFilePath());","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nwhloo99":18,"-":67}},{"path":"src/test/java/seedu/address/testutil/AppointmentBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Li-Lehao"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"tchiong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Li-Lehao"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"Li-Lehao"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"Li-Lehao"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"Li-Lehao"},"content":"import seedu.address.model.schedule.Appointment;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"tchiong"},"content":"import seedu.address.model.schedule.TimePeriod;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"Li-Lehao"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"Li-Lehao"},"content":" * A utility class to help with building Appointment Objects.","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"Li-Lehao"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"Li-Lehao"},"content":"public class AppointmentBuilder {","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"Li-Lehao"},"content":"    private static final String DEFAULT_CLIENT \u003d \"ALICE\";","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"Li-Lehao"},"content":"    private static final String DEFAULT_LOCATION \u003d \"vivocity\";","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"Li-Lehao"},"content":"    private static final String DEFAULT_DESCRIPTION \u003d \"Halloween Sales\";","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"nwhloo99"},"content":"    private UniquePersonList clients;","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"Li-Lehao"},"content":"    private Address location;","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"tchiong"},"content":"    private TimePeriod timePeriod;","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"Li-Lehao"},"content":"    private String description;","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"Li-Lehao"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"Li-Lehao"},"content":"     * Creates a {@code} AppointmentBuilder with the default details.","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"Li-Lehao"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"Li-Lehao"},"content":"    public AppointmentBuilder() {","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"nwhloo99"},"content":"        UniquePersonList clients \u003d new UniquePersonList();","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"nwhloo99"},"content":"        clients.add(new PersonBuilder().withName(DEFAULT_CLIENT).build());","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"nwhloo99"},"content":"        this.clients \u003d clients;","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"Li-Lehao"},"content":"        this.location \u003d new Address(DEFAULT_LOCATION);","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"tchiong"},"content":"        this.timePeriod \u003d new TimePeriod(LocalDateTime.of(2021, 12, 25, 21, 30),","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"tchiong"},"content":"                LocalDateTime.of(2021, 12, 25, 22, 30));","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"Li-Lehao"},"content":"        this.description \u003d DEFAULT_DESCRIPTION;","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"Li-Lehao"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"Li-Lehao"},"content":"     * Initializes the AppointmentBuilder with the data of {@code appointmentToCopy}.","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"Li-Lehao"},"content":"     * @param appointmentToCopy The given appointment to copy.","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"Li-Lehao"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"Li-Lehao"},"content":"    public AppointmentBuilder(Appointment appointmentToCopy) {","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"nwhloo99"},"content":"        this.clients \u003d appointmentToCopy.getClients();","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"Li-Lehao"},"content":"        this.location \u003d appointmentToCopy.getLocation();","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"tchiong"},"content":"        this.timePeriod \u003d appointmentToCopy.getTimePeriod();","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"Li-Lehao"},"content":"        this.description \u003d appointmentToCopy.getDescription();","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"Li-Lehao"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"nwhloo99"},"content":"     * Sets the {@code clients} of the {@code Appointment} that we are building.","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"Li-Lehao"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"Li-Lehao"},"content":"    public AppointmentBuilder withClient(Person client) {","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"nwhloo99"},"content":"        UniquePersonList clients \u003d new UniquePersonList();","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"nwhloo99"},"content":"        clients.add(client);","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"nwhloo99"},"content":"        this.clients \u003d clients;","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"Li-Lehao"},"content":"        return this;","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"Li-Lehao"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"nwhloo99"},"content":"     * Sets the {@code clients} of the {@code Appointment} that we are building.","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"Li-Lehao"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"Li-Lehao"},"content":"    public AppointmentBuilder withClient(String clientName) {","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"nwhloo99"},"content":"        UniquePersonList clients \u003d new UniquePersonList();","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"nwhloo99"},"content":"        clients.add(new PersonBuilder().withName(clientName).build());","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"nwhloo99"},"content":"        this.clients \u003d clients;","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"Li-Lehao"},"content":"        return this;","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"nwhloo99"},"content":"     * Adds a {@code Person} to the {@code clients} of the {@code Appointment} that we are building.","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"nwhloo99"},"content":"    public AppointmentBuilder addClient(Person client) {","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"nwhloo99"},"content":"        this.clients.add(client);","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"nwhloo99"},"content":"        return this;","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"nwhloo99"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"nwhloo99"},"content":"     * Adds a {@code Person} to the {@code clients} of the {@code Appointment} that we are building.","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"nwhloo99"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"nwhloo99"},"content":"    public AppointmentBuilder addClient(String clientName) {","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"nwhloo99"},"content":"        this.clients.add(new PersonBuilder().withName(clientName).build());","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"nwhloo99"},"content":"        return this;","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"nwhloo99"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"Li-Lehao"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"Li-Lehao"},"content":"     * Sets the {@code location} of the {@code Appointment} that we are building.","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"Li-Lehao"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"Li-Lehao"},"content":"    public AppointmentBuilder withLocation(String location) {","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"Li-Lehao"},"content":"        this.location \u003d new Address(location);","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"Li-Lehao"},"content":"        return this;","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"Li-Lehao"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"tchiong"},"content":"     * Sets the {@code TimePeriod} of the {@code Appointment} that we are building.","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"Li-Lehao"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"tchiong"},"content":"    public AppointmentBuilder withTimePeriod(TimePeriod timePeriod) {","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"tchiong"},"content":"        this.timePeriod \u003d timePeriod;","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"Li-Lehao"},"content":"        return this;","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"Li-Lehao"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"tchiong"},"content":"     * Sets the {@code TimePeriod} of the {@code Appointment} that we are building.","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"Li-Lehao"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":104,"author":{"gitId":"tchiong"},"content":"    public AppointmentBuilder withTimePeriod(String startTime, String endTime) {","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"nwhloo99"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"tchiong"},"content":"        this.timePeriod \u003d new TimePeriod(LocalDateTime.parse(startTime, formatter),","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"tchiong"},"content":"                LocalDateTime.parse(endTime, formatter));","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"Li-Lehao"},"content":"        return this;","lastModifiedDate":"2021-10-13"},{"lineNumber":109,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":111,"author":{"gitId":"tchiong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"Li-Lehao"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"Li-Lehao"},"content":"     * Sets the {@code description} of the {@code Appointment} that we are building.","lastModifiedDate":"2021-10-13"},{"lineNumber":114,"author":{"gitId":"Li-Lehao"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":115,"author":{"gitId":"Li-Lehao"},"content":"    public AppointmentBuilder withDescription(String description) {","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"Li-Lehao"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"Li-Lehao"},"content":"        return this;","lastModifiedDate":"2021-10-13"},{"lineNumber":118,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":119,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"Li-Lehao"},"content":"    public Appointment build() {","lastModifiedDate":"2021-10-13"},{"lineNumber":121,"author":{"gitId":"tchiong"},"content":"        return new Appointment(clients, location, timePeriod, description);","lastModifiedDate":"2021-10-26"},{"lineNumber":122,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":123,"author":{"gitId":"Li-Lehao"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"Li-Lehao":77,"tchiong":15,"nwhloo99":31}},{"path":"src/test/java/seedu/address/testutil/TypicalAppointment.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"nwhloo99"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"nwhloo99"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"nwhloo99"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"Li-Lehao"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"Li-Lehao"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"Li-Lehao"},"content":"import java.util.List;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.model.schedule.Appointment;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"nwhloo99"},"content":"import seedu.address.model.schedule.Schedule;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"nwhloo99"},"content":"public class TypicalAppointment {","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"Li-Lehao"},"content":"    public static final Appointment ALICE_APPOINTMENT \u003d new AppointmentBuilder()","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"Li-Lehao"},"content":"            .withClient(ALICE)","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"Li-Lehao"},"content":"            .withLocation(\"369 Tanjong Rhu\")","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"nwhloo99"},"content":"            .withTimePeriod(\"25-12-2021 1000\", \"25-12-2021 1100\")","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"nwhloo99"},"content":"            .withDescription(\"Talk about sales\")","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"nwhloo99"},"content":"            .build();","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"nwhloo99"},"content":"    public static final Appointment ALICE_CARL_APPOINTMENT \u003d new AppointmentBuilder()","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"nwhloo99"},"content":"            .withClient(ALICE)","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"nwhloo99"},"content":"            .addClient(CARL)","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"nwhloo99"},"content":"            .withLocation(\"369 Tanjong Rhu\")","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"nwhloo99"},"content":"            .withTimePeriod(\"25-12-2021 1000\", \"25-12-2021 1100\")","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"Li-Lehao"},"content":"            .withDescription(\"Talk about sales\")","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"Li-Lehao"},"content":"            .build();","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"nwhloo99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"Li-Lehao"},"content":"    public static final Appointment CARL_APPOINTMENT \u003d new AppointmentBuilder()","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"Li-Lehao"},"content":"            .withClient(CARL)","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"Li-Lehao"},"content":"            .withLocation(\"vivocity\")","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"nwhloo99"},"content":"            .withTimePeriod(\"25-12-2021 1000\", \"25-12-2021 1100\")","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"Li-Lehao"},"content":"            .withDescription(\"Halloween Sales\")","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"Li-Lehao"},"content":"            .build();","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"Li-Lehao"},"content":"    public static List\u003cAppointment\u003e getTypicalAppointments() {","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"Li-Lehao"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE_APPOINTMENT, CARL_APPOINTMENT));","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"nwhloo99"},"content":"    public static Schedule getTypicalSchedule() {","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"nwhloo99"},"content":"        Schedule schedule \u003d new Schedule();","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"Li-Lehao"},"content":"        for (Appointment appointment : getTypicalAppointments()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"nwhloo99"},"content":"            schedule.addAppointment(appointment);","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"Li-Lehao"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"nwhloo99"},"content":"        return schedule;","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"Li-Lehao"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"nwhloo99"},"content":"    public static Schedule getTypicalSchedule(Schedule schedule) {","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"Li-Lehao"},"content":"        for (Appointment appointment : getTypicalAppointments()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"nwhloo99"},"content":"            schedule.addAppointment(appointment);","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"Li-Lehao"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"nwhloo99"},"content":"        return schedule;","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"Li-Lehao"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"nwhloo99"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"Li-Lehao":25,"nwhloo99":29}}]
